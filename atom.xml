<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ZkeqのCoding日志</title>
  
  <subtitle>Python Java Html 都在学</subtitle>
  <link href="https://coding.maylove.pub/atom.xml" rel="self"/>
  
  <link href="https://coding.maylove.pub/"/>
  <updated>2021-12-21T07:13:02.968Z</updated>
  <id>https://coding.maylove.pub/</id>
  
  <author>
    <name>Zkeq</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>杂类笔记存放地址</title>
    <link href="https://coding.maylove.pub/2021/8ecda819e940/"/>
    <id>https://coding.maylove.pub/2021/8ecda819e940/</id>
    <published>2021-12-19T16:41:01.000Z</published>
    <updated>2021-12-21T07:13:02.968Z</updated>
    
    <content type="html"><![CDATA[<h3 id="算法每日一题地址"><a href="#算法每日一题地址" class="headerlink" title="算法每日一题地址:"></a>算法每日一题地址:</h3><table><thead><tr><th>ID</th><th align="left">日期</th><th>标签</th><th>状态</th><th>笔记地址</th></tr></thead><tbody><tr><td>No.0001</td><td align="left">2021.12.18</td><td>TIMES</td><td>DONE</td><td><a href="https://www.yuque.com/docs/share/b7fdace2-a192-49b6-bc08-2459a3e1a6e4">2021.12.18 1. 两数之和 · 语雀 (yuque.com)</a></td></tr><tr><td>No.0002</td><td align="left">2021.12.18</td><td>DAYS</td><td>DONE</td><td><a href="https://www.yuque.com/docs/share/7e06ddd3-10c0-434d-a243-76cf1ce2871b">2021.12.18 419. 甲板上的战舰 · 语雀 (yuque.com)</a></td></tr><tr><td>No.0003</td><td align="left">2021.12.19</td><td>DYAS</td><td>DONE</td><td><a href="https://www.yuque.com/docs/share/a5f083dc-2162-47b1-a1c8-4907b0ad7996">2021.12.19 997. 找到小镇的法官 · 语雀 (yuque.com)</a></td></tr><tr><td>No.0004</td><td align="left">2021.12.20</td><td>OFFER</td><td>DONE</td><td><a href="https://www.yuque.com/docs/share/f6eb8b7e-58d0-416f-9a02-a9c9641662ff">2021.12.20 剑指 Offer 09. 用两个栈实现队列 · 语雀 (yuque.com)</a></td></tr><tr><td>No.0005</td><td align="left">2021.12.20</td><td>OFFER</td><td>DONE</td><td><a href="https://www.yuque.com/docs/share/3e689b98-ea8c-43dc-a445-a3f05d9a51b1">2021.12.20 剑指 Offer 30. 包含min函数的栈 · 语雀 (yuque.com)</a></td></tr><tr><td>No.0006</td><td align="left">2021.12.20</td><td>DAYS</td><td>TODO</td><td><a href="https://www.yuque.com/docs/share/8e510a01-98f9-475e-9aad-797ecf2a9d3e">2021.12.20 475. 供暖器 · 语雀 (yuque.com)</a></td></tr><tr><td>No.0007</td><td align="left">2021.12.21</td><td>DAYS</td><td>TODO</td><td><a href="https://www.yuque.com/docs/share/a2e4a20f-1f04-4042-ae08-9b7975428c16">2021.12.21 1154. 一年中的第几天 · 语雀 (yuque.com)</a></td></tr><tr><td>No.0008</td><td align="left">2021.12.21</td><td>OFFER</td><td>DONE</td><td><a href="https://www.yuque.com/docs/share/c61cbbbe-4f29-4e13-b5fb-bd7259364451">2021.12.21 剑指 Offer 24. 反转链表 · 语雀 (yuque.com)</a></td></tr><tr><td>No.0009</td><td align="left">2021.12.21</td><td>OFFER</td><td>TODO</td><td><a href="https://www.yuque.com/docs/share/c1ac1a88-0dd3-47bd-a557-6000c4e638fc">2021.12.21 剑指 Offer 06. 从尾到头打印链表 · 语雀 (yuque.com)</a></td></tr><tr><td>No.0010</td><td align="left">2021.12.21</td><td>OFFER</td><td>TODO</td><td><a href="https://www.yuque.com/docs/share/de34dfe7-05d0-4285-8137-a752f5a5d1e9">2021.12.21 剑指 Offer 35. 复杂链表的复制 · 语雀 (yuque.com)</a></td></tr></tbody></table><h3 id="算法正序做题笔记地址"><a href="#算法正序做题笔记地址" class="headerlink" title="算法正序做题笔记地址:"></a>算法正序做题笔记地址:</h3><p><a href="https://www.yuque.com/docs/share/b7fdace2-a192-49b6-bc08-2459a3e1a6e4">正向做题笔记 · 语雀 (yuque.com)</a></p><h3 id="C语言基础讲义地址"><a href="#C语言基础讲义地址" class="headerlink" title="C语言基础讲义地址:"></a>C语言基础讲义地址:</h3><p><a href="https://pdf.zkeq.xyz/?file=https://public-zkeq.oss-cn-beijing.aliyuncs.com/cpp.pdf">cpp.pdf (zkeq.xyz)</a></p><h3 id="Java基础知识库地址"><a href="#Java基础知识库地址" class="headerlink" title="Java基础知识库地址:"></a>Java基础知识库地址:</h3><p><a href="https://javadocs.zkeq.xyz/#/">Java基础知识库 (zkeq.xyz)</a></p><h3 id="C-基础知识库地址-简陋"><a href="#C-基础知识库地址-简陋" class="headerlink" title="C++基础知识库地址:(简陋)"></a>C++基础知识库地址:(简陋)</h3><p><a href="https://cpp.zkeq.xyz/#/">C++ 基础知识库 (zkeq.xyz)</a></p><h3 id="提问的智慧"><a href="#提问的智慧" class="headerlink" title="提问的智慧:"></a>提问的智慧:</h3><p><a href="https://questions-zh.vercel.app/#/">提问的智慧(中文版) (questions-zh.vercel.app)</a></p><p><a href="https://questions.zkeq.xyz/#/">提问的智慧(中文版) (zkeq.xyz)</a></p><p><a href="https://questions.learnonly.xyz/#/">提问的智慧(中文版) (learnonly.xyz)</a></p><p><a href="https://questions.maylove.pub/#/">提问的智慧(中文版) (maylove.pub)</a></p>]]></content>
    
    
    <summary type="html">本文存放奇奇怪怪的杂乱知识..</summary>
    
    
    
    <category term="笔记" scheme="https://coding.maylove.pub/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="笔记" scheme="https://coding.maylove.pub/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>c++ vs中C语言嵌套汇编</title>
    <link href="https://coding.maylove.pub/2021/40f63595d656/"/>
    <id>https://coding.maylove.pub/2021/40f63595d656/</id>
    <published>2021-12-19T16:24:19.000Z</published>
    <updated>2021-12-19T16:29:57.144Z</updated>
    
    <content type="html"><![CDATA[<p>vs 中c语言嵌套汇编</p><p><code>本节代码自己没有执行过...2022vs编辑器好像不允许64位汇编. :(</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//定义整型变量a, b, c</span></span><br><span class="line"><span class="keyword">int</span> a=<span class="number">3</span>;</span><br><span class="line"><span class="keyword">int</span> b=<span class="number">4</span>;</span><br><span class="line"><span class="keyword">int</span> c=;</span><br><span class="line"><span class="comment">// 调试时设置断点,断点的意义在于使程序运行至断点时停止,使其可以人为停止</span></span><br><span class="line">__asm</span><br><span class="line">&#123;</span><br><span class="line">mov a, <span class="number">3</span><span class="comment">//3的值放在a对应内存的位置</span></span><br><span class="line">mov b, <span class="number">4</span><span class="comment">//4的值放在b对应内存的位置</span></span><br><span class="line">mov eax, a<span class="comment">//把a内存的值放在eax寄存器</span></span><br><span class="line">add eax, b<span class="comment">//eax和b相加，结果放在eax</span></span><br><span class="line">mov c, eax<span class="comment">//eax的值放在c中</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, c);<span class="comment">//把c的值输出</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;<span class="comment">//成功完成</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本节课主要学习了&lt;br&gt;vs中C语言嵌套汇编(无实操)</summary>
    
    
    
    <category term="cpp" scheme="https://coding.maylove.pub/categories/cpp/"/>
    
    
    <category term="基础语法" scheme="https://coding.maylove.pub/tags/%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>c++ 寄存器 缓存 cpu 内存之间的关系</title>
    <link href="https://coding.maylove.pub/2021/48b65b917532/"/>
    <id>https://coding.maylove.pub/2021/48b65b917532/</id>
    <published>2021-12-19T16:24:10.000Z</published>
    <updated>2021-12-19T16:29:10.464Z</updated>
    
    <content type="html"><![CDATA[<h3 id="CPU内部结构与寄存器-了解"><a href="#CPU内部结构与寄存器-了解" class="headerlink" title="CPU内部结构与寄存器(了解)"></a>CPU内部结构与寄存器(了解)</h3><p>cpu  &gt;  寄存器  &gt;  缓存  &gt;  内存</p><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-12-19/3.png" alt="1"></p><h4 id="64位和32位系统区别"><a href="#64位和32位系统区别" class="headerlink" title="64位和32位系统区别"></a>64位和32位系统区别</h4><ul><li><p>寄存器是CPU内部最基本的存储单元</p></li><li><p>CPU对外是通过总线(地址、控制、数据)来和外部设备交互的，总线的宽度是8位，同时CPU的寄存器也是8位，那么这个CPU就叫8位CPU</p></li><li><p>如果总线是32位，寄存器也是32位的，那么这个CPU就是32位CPU</p></li><li><p>有一种CPU内部的寄存器是32位的，但总线是16位，准32为CPU</p></li><li><p>所有的64位CPU兼容32位的指令，32位要兼容16位的指令，所以在64位的CPU上是可以识别32位的指令</p></li><li><p>在64位的CPU构架上运行了64位的软件操作系统，那么这个系统是64位</p></li><li><p>在64位的CPU构架上，运行了32位的软件操作系统，那么这个系统就是32位</p></li><li><p>64位的软件不能运行在32位的CPU之上</p></li></ul><h4 id="寄存器名字-了解"><a href="#寄存器名字-了解" class="headerlink" title="寄存器名字(了解)"></a>寄存器名字(了解)</h4><table><thead><tr><th><strong>8****位</strong></th><th><strong>16****位</strong></th><th><strong>32****位</strong></th><th><strong>64****位</strong></th></tr></thead><tbody><tr><td>A</td><td>AX</td><td>EAX</td><td>RAX</td></tr><tr><td>B</td><td>BX</td><td>EBX</td><td>RBX</td></tr><tr><td>C</td><td>CX</td><td>ECX</td><td>RCX</td></tr><tr><td>D</td><td>DX</td><td>EDX</td><td>RDX</td></tr></tbody></table><h4 id="寄存器、缓存、内存三者关系"><a href="#寄存器、缓存、内存三者关系" class="headerlink" title="寄存器、缓存、内存三者关系"></a>寄存器、缓存、内存三者关系</h4><p>按与CPU远近来分，离得最近的是寄存器，然后缓存(CPU缓存)，最后内存。</p><p>CPU计算时，先预先把要用的数据从硬盘读到内存，然后再把即将要用的数据读到寄存器。于是 CPU&lt;—&gt;寄存器&lt;—&gt;内存，这就是它们之间的信息交换。</p><p>那为什么有缓存呢？因为如果经常操作内存中的同一址地的数据，就会影响速度。于是就在寄存器与内存之间设置一个缓存。</p><p>因为从缓存提取的速度远高于内存。当然缓存的价格肯定远远高于内存，不然的话，机器里就没有内存的存在。</p><p>由此可以看出，从远近来看：CPU〈—〉寄存器〈—&gt; 缓存 &lt;—&gt; 内存。</p>]]></content>
    
    
    <summary type="html">本节课主要学习了&lt;br&gt;寄存器 缓存 cpu 内存之间的关系</summary>
    
    
    
    <category term="cpp" scheme="https://coding.maylove.pub/categories/cpp/"/>
    
    
    <category term="基础语法" scheme="https://coding.maylove.pub/tags/%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>c++ system库函数</title>
    <link href="https://coding.maylove.pub/2021/4d7d0f316eef/"/>
    <id>https://coding.maylove.pub/2021/4d7d0f316eef/</id>
    <published>2021-12-19T16:24:02.000Z</published>
    <updated>2021-12-19T16:31:10.322Z</updated>
    
    <content type="html"><![CDATA[<h3 id="system-库函数"><a href="#system-库函数" class="headerlink" title="system 库函数"></a>system 库函数</h3><h5 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h5><ul><li>在程序中启动另一个程序</li><li><code>参数</code>：要的是待启动程序的路径名</li><li>win平台写路径的时候 用 <code>//</code> 或者 <code>\</code></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">c<span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="comment">//syetem启动程序，如果这个程序系统可以找到，不用加路径，</span></span><br><span class="line">        <span class="comment">//如果环境变量找不到，需要加路径</span></span><br><span class="line">        <span class="comment">//windows路径以\\  或 /</span></span><br><span class="line">        <span class="comment">//system(&quot;mspaint&quot;);//启动画图板</span></span><br><span class="line">        <span class="comment">//system(&quot;C:\\Users\\Administrator\\Desktop\\c++13\\hello.exe&quot;);</span></span><br><span class="line">        <span class="built_in">system</span>(<span class="string">&quot;C:/Users/Administrator/Desktop/c++13/hello.exe&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;hello worldfbahfoahfoooooooooooooooooooooo\n&quot;</span>);<span class="comment">//打印到终端</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="详解"><a href="#详解" class="headerlink" title="详解"></a>详解</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">system</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *command)</span></span>;</span><br><span class="line">功能：在已经运行的程序中执行另外一个外部程序</span><br><span class="line">参数：外部可执行程序名字</span><br><span class="line">返回值：</span><br><span class="line">成功：<span class="number">0</span></span><br><span class="line">失败：任意数字</span><br></pre></td></tr></table></figure><h4 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//system(&quot;calc&quot;); //windows平台 (注意/是转义字符)</span></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;ls&quot;</span>); <span class="comment">//Linux平台, 需要头文件#include &lt;stdlib.h&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="自己尝试代码"><a href="#自己尝试代码" class="headerlink" title="自己尝试代码"></a>自己尝试代码</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdint.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;d://cpp//hello.exe&quot;</span>); <span class="comment">//启动上一个编译的程序</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;hello world\n&quot;</span>); <span class="comment">//打印到终端</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本节课主要学习了&lt;br&gt;system库函数</summary>
    
    
    
    <category term="cpp" scheme="https://coding.maylove.pub/categories/cpp/"/>
    
    
    <category term="基础语法" scheme="https://coding.maylove.pub/tags/%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>c++ hello world程序的解释</title>
    <link href="https://coding.maylove.pub/2021/83b0b2b0e559/"/>
    <id>https://coding.maylove.pub/2021/83b0b2b0e559/</id>
    <published>2021-12-19T16:23:53.000Z</published>
    <updated>2021-12-19T16:38:54.307Z</updated>
    
    <content type="html"><![CDATA[<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//# 预处理指令，在预编译时处理</span></span><br><span class="line"><span class="comment">//#include &lt;stdio.h&gt; 包含stdio.h文件  stdio.h类似于菜单</span></span><br><span class="line"><span class="comment">// 两个斜杠是注释</span></span><br><span class="line"><span class="comment">//符号与（）结和 代表这个是一个函数</span></span><br><span class="line"><span class="comment">//main() main函数也叫主函数 整个程序中仅且只有一个main函数，程序从main函数</span></span><br><span class="line"><span class="comment">//开始执行</span></span><br><span class="line"><span class="comment">//int  代表main函数结束之后的返回值类型</span></span><br><span class="line"><span class="comment">//return  结束这个函数，然后返回值，返回值的类型和函数定义时返回值类型一致</span></span><br><span class="line"><span class="comment">//&#123;&#125;里面的是函数体，所有需要执行的代码必须写在&#123;&#125;中</span></span><br><span class="line"><span class="comment">//每一条代码必须以分号；结尾</span></span><br><span class="line"><span class="comment">//printf是一个库函数，printf +（）就是函数调用,括号里面是传入的参数</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>   # C语言可以不写<span class="keyword">int</span>,但c++一定要写</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;hello world\n&quot;</span>); <span class="comment">//打印到终端</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h3><ol><li>include头文件包含<ul><li> #include的意思是头文件包含，#include &lt;stdio.h&gt;代表包含stdio.h这个头文件</li><li> 使用C语言库函数需要提前包含库函数对应的头文件，如这里使用了printf()函数，需要包含stdio.h头文件</li><li>可以通过man 3 printf查看printf所需的头文件<h4 id="include-lt-gt-与-include-“”的区别："><a href="#include-lt-gt-与-include-“”的区别：" class="headerlink" title="#include&lt; &gt; 与 #include “”的区别："></a>#include&lt; &gt; 与 #include “”的区别：</h4><ul><li> &lt; &gt; 表示系统直接按系统指定的目录检索</li><li> “” 表示系统先在 “” 指定的路径(没写路径代表当前路径)查找头文件，如果找不到，再按系统指定的目录检索<br>stdio.h是在操作系统的系统目录下：<br><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-12-19/1.png" alt="1"></li></ul></li></ul></li><li>main函数<ul><li>一个完整的C语言程序，是由一个、且只能有一个main()函数(又称主函数，必须有)和若干个其他函数结合而成（可选）。</li><li> main函数是C语言程序的入口，程序是从main函数开始执行。</li></ul></li><li>{} 括号，程序体和代码块<ul><li> {}叫代码块，一个代码块内部可以有一条或者多条语句</li><li> C语言每句可执行代码都是”<strong>;</strong>“分号结尾</li><li> 所有的#开头的行，都代表预编译指令，预编译指令行结尾是没有分号的</li><li> 所有的可执行语句必须是在代码块里面</li></ul></li><li>注释<ul><li><code>//</code>叫行注释，注释的内容编译器是忽略的，注释主要的作用是在代码中加一些说明和解释，这样有利于代码的阅读</li><li> <code>/**/</code>叫块注释</li><li> 块注释是C语言标准的注释方法</li><li> 行注释是从C++语言借鉴过来的</li></ul></li><li>printf函数<ul><li>printf是C语言库函数，功能是向标准输出设备输出一个字符串</li><li>printf(“hello world\n”);//\n的意思是回车换行</li></ul></li><li>return语句<ul><li>return代表函数执行完毕，返回return代表函数的终止</li><li>如果main定义的时候前面是int，那么return后面就需要写一个整数；如果main定义的时候前面是void，那么return后面什么也不需要写</li><li>在main函数中return 0代表程序执行成功，return -1代表程序执行失败</li><li>int main()和void main()在C语言中是一样的，但C++只接受int main这种定义方式</li></ul></li></ol>]]></content>
    
    
    <summary type="html">本节课主要学习了&lt;br&gt;hello world程序的解释</summary>
    
    
    
    <category term="cpp" scheme="https://coding.maylove.pub/categories/cpp/"/>
    
    
    <category term="基础语法" scheme="https://coding.maylove.pub/tags/%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>c++ hello world</title>
    <link href="https://coding.maylove.pub/2021/b045900428db/"/>
    <id>https://coding.maylove.pub/2021/b045900428db/</id>
    <published>2021-12-19T16:23:42.000Z</published>
    <updated>2021-12-19T16:27:02.748Z</updated>
    
    <content type="html"><![CDATA[<h3 id="c语言的编译步骤"><a href="#c语言的编译步骤" class="headerlink" title="c语言的编译步骤"></a>c语言的编译步骤</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc 编译  hello.c -o 生成的目标(可执行文件)名字为 world</span><br></pre></td></tr></table></figure><h4 id="预处理"><a href="#预处理" class="headerlink" title="预处理"></a><code>预处理</code></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -E hello.c -o hello.i</span><br></pre></td></tr></table></figure><p><code>带#的语句就是预处理指令，预处理指令在预处理的时候处理了</code></p><ul><li><p>头文件展开： <code>#include &lt;stdio.h&gt;</code> 包含文件<code>stdio.h</code>（<strong>预处理时将stdio.h 文件拷贝至预处理文件中</strong>）</p></li><li><p>删除注释： 注释有两种方法： <code>//</code>  <code>/* */</code></p></li><li><p>宏替换： <code>#define</code> 代表是声明一个宏，在预处理时会将宏给<code>替代</code> (预处理的时候就会替换)</p></li><li><p>预处理时  <strong>不会检查语法错误</strong></p></li><li><p>条件编译： 条件不成立： <code>#if 0 -&gt; #endif</code>   条件成立 <code>#if 1 -&gt; #endif</code> </p><ul><li>c语言中 <code>0表示不成立</code> <code>1表示成立</code></li></ul></li><li><p>宏定义展开、头文件展开、条件编译等，同时将代码中的注释删除，这里并不会检查语法</p></li></ul><h4 id="编译"><a href="#编译" class="headerlink" title="编译"></a><code>编译</code></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -S hello.i -o hello.s</span><br></pre></td></tr></table></figure><ul><li>将<strong>预处理文件</strong>编译生成<strong>汇编文件</strong>     <strong>检查语法错误</strong></li><li>检查语法，将预处理后文件编译生成汇编文件</li></ul><h4 id="汇编"><a href="#汇编" class="headerlink" title="汇编"></a><code>汇编</code></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -c hello.s -o hello.o</span><br></pre></td></tr></table></figure><ul><li><h4 id="汇编文件编译生成二进制文件-o"><a href="#汇编文件编译生成二进制文件-o" class="headerlink" title="汇编文件编译生成二进制文件.o"></a>汇编文件编译生成二进制文件.o</h4></li><li><p>将汇编文件生成目标文件(二进制文件)</p></li></ul><h4 id="链接"><a href="#链接" class="headerlink" title="链接"></a><code>链接</code></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc    hello.o -o hello</span><br></pre></td></tr></table></figure><ul><li>设置<strong>运行环境</strong>，<strong>堆栈</strong>等，<strong>链接其他库</strong></li><li>C语言写的程序是需要依赖各种库的，所以编译之后还需要把库链接到最终的可执行程序中去</li></ul><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-12-19/2.png" alt="1"></p><table><thead><tr><th><strong>选项</strong></th><th><strong>含义</strong></th></tr></thead><tbody><tr><td>-E</td><td>只进行预处理</td></tr><tr><td>-S(大写)</td><td>只进行预处理和编译</td></tr><tr><td>-c(小写)</td><td>只进行预处理、编译和汇编</td></tr><tr><td>-o file</td><td>指定生成的输出文件名为 file</td></tr></tbody></table><table><thead><tr><th><strong>文件后缀</strong></th><th><strong>含义</strong></th></tr></thead><tbody><tr><td>.c</td><td>C 语言文件</td></tr><tr><td>.i</td><td>预处理后的 C 语言文件</td></tr><tr><td>.s</td><td>编译后的汇编文件</td></tr><tr><td>.o</td><td>编译后的目标文件</td></tr></tbody></table><h4 id="一步编译"><a href="#一步编译" class="headerlink" title="一步编译"></a>一步编译</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc hello.c -o demo（还是经过：预处理、编译、汇编、链接的过程）：</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本节课主要学习了&lt;br&gt;C语言的基础入门</summary>
    
    
    
    <category term="cpp" scheme="https://coding.maylove.pub/categories/cpp/"/>
    
    
    <category term="基础语法" scheme="https://coding.maylove.pub/tags/%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 完美嵌入Typora导出的html文件</title>
    <link href="https://coding.maylove.pub/2021/96ff12669990/"/>
    <id>https://coding.maylove.pub/2021/96ff12669990/</id>
    <published>2021-12-13T17:00:50.000Z</published>
    <updated>2021-12-13T17:21:20.034Z</updated>
    
    <content type="html"><![CDATA[<h3 id="步骤如下"><a href="#步骤如下" class="headerlink" title="步骤如下"></a>步骤如下</h3><ol><li>首先新建一个<code>.md</code>文件</li><li>像平时一样填写标头</li><li>内容填入如下</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span></span></span><br><span class="line"><span class="tag"><span class="attr">name</span>=<span class="string">&quot;web&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">width</span>=<span class="string">&quot;100%&quot;</span> </span></span><br><span class="line"><span class="tag"><span class="attr">frameborder</span>=<span class="string">0height</span>=<span class="string">&quot;100%&quot;</span> </span></span><br><span class="line"><span class="tag"><span class="attr">src</span>=<span class="string">&quot;\html\Hexo-搭建博客保姆式教程.html&quot;</span> </span></span><br><span class="line"><span class="tag"><span class="attr">id</span>=<span class="string">&quot;web&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">onload</span>=<span class="string">&quot;this.height=web.document.body.scrollHeight+20&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span></span></span><br><span class="line"><span class="tag"><span class="attr">language</span>=<span class="string">&quot;javascript&quot;</span>&gt;</span><span class="javascript"><span class="keyword">if</span>(<span class="built_in">window</span>.parent.length&gt;<span class="number">0</span>)&#123;<span class="built_in">window</span>.parent.document.all.newtest.style.height=<span class="built_in">document</span>.body.scrollHeight;&#125;</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li><p>将html文件放在<code>/source/html</code>文件夹中</p></li><li><p>并<code>填写Html文件的标头</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">layout:</span> <span class="literal">false</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure></li><li><p>预览或部署即可.</p></li></ol><h3 id="其他笔记"><a href="#其他笔记" class="headerlink" title="其他笔记"></a>其他笔记</h3><ol><li>使用手机开启热点的时候,此手机的局域网ip可以在连接此热点的设备上查看 DNS 服务器.其地址即为宿主机局域网ip地址</li><li>在写笔记的时候,记得要在敏感标签前加 转义字符<code>\</code></li><li>可以在md文件正文添加css引入标签…会被渲染出来..但是不推荐..感觉好乱,不过在某个页面需要黑白的时候,可以试下哦</li><li>记得尽快完成<code>docsify</code>笔记!!</li><li>永远保持理性.</li></ol>]]></content>
    
    
    <summary type="html">在编写文档的时候摸索出来的技巧</summary>
    
    
    
    <category term="CMD" scheme="https://coding.maylove.pub/categories/CMD/"/>
    
    
    <category term="笔记" scheme="https://coding.maylove.pub/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>使用 Hexo 搭建博客 保姆式教程</title>
    <link href="https://coding.maylove.pub/2021/e1513f10aa48/"/>
    <id>https://coding.maylove.pub/2021/e1513f10aa48/</id>
    <published>2021-12-13T14:32:34.000Z</published>
    <updated>2021-12-14T02:03:15.472Z</updated>
    
    <content type="html"><![CDATA[<h3 id="查看纯享版-Hexo建站保姆式教程-maylove-pub"><a href="#查看纯享版-Hexo建站保姆式教程-maylove-pub" class="headerlink" title="查看纯享版: Hexo建站保姆式教程 (maylove.pub)"></a>查看纯享版: <a href="https://coding.maylove.pub/html/Hexo-%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%BF%9D%E5%A7%86%E5%BC%8F%E6%95%99%E7%A8%8B.html">Hexo建站保姆式教程 (maylove.pub)</a></h3><iframename="web"width="100%" frameborder=0 height="100%" src="\html\Hexo-搭建博客保姆式教程.html" id="web"onload="this.height=web.document.body.scrollHeight+20"></iframe><scriptlanguage="javascript">if(window.parent.length>0){window.parent.document.all.newtest.style.height=document.body.scrollHeight;}</script>]]></content>
    
    
    <summary type="html">这篇文章是自己使用Hexo这几个月自己总结出来的教程</summary>
    
    
    
    <category term="CMD" scheme="https://coding.maylove.pub/categories/CMD/"/>
    
    
    <category term="笔记" scheme="https://coding.maylove.pub/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Python 百度贴吧爬虫</title>
    <link href="https://coding.maylove.pub/2021/a479961a4ae9/"/>
    <id>https://coding.maylove.pub/2021/a479961a4ae9/</id>
    <published>2021-11-30T07:28:19.000Z</published>
    <updated>2021-12-11T16:35:14.533Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-11-30/2.png" alt="1"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Tieba</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, name</span>):</span></span><br><span class="line">        self.url = <span class="string">&#x27;https://tieba.baidu.com/f?kw=&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(name)</span><br><span class="line">        self.heardes = &#123;</span><br><span class="line">            <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/4.0 (compatible; MSIE 5.00; Windows 98)&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_data</span>(<span class="params">self, url</span>):</span></span><br><span class="line">        response = requests.get(url, headers=self.heardes)</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;temp.html&quot;</span>, <span class="string">&quot;wb&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(response.content)</span><br><span class="line">        <span class="keyword">return</span> response.content</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse_data</span>(<span class="params">self, data</span>):</span></span><br><span class="line">        <span class="comment"># 创建element对象</span></span><br><span class="line">        <span class="comment"># data = data.decode().replace(&quot;&lt;!--&quot;, &quot;&quot;)</span></span><br><span class="line">        html = etree.HTML(data)</span><br><span class="line">        el_list = html.xpath(<span class="string">&#x27;//li[@class=&quot; j_thread_list clearfix thread_item_box&quot;]/div/div[2]/div[1]/div[1]/a&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">len</span>(el_list))</span><br><span class="line"></span><br><span class="line">        data_list = []</span><br><span class="line">        <span class="keyword">for</span> el <span class="keyword">in</span> el_list:</span><br><span class="line">            temp = &#123;&#125;</span><br><span class="line">            temp[<span class="string">&#x27;title&#x27;</span>] = el.xpath(<span class="string">&quot;./text()&quot;</span>)[<span class="number">0</span>]</span><br><span class="line">            temp[<span class="string">&#x27;link&#x27;</span>] = <span class="string">&#x27;https://tieba.baidu.com&#x27;</span> + el.xpath(<span class="string">&quot;./@href&quot;</span>)[<span class="number">0</span>]</span><br><span class="line">            data_list.append(temp)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 获取下一页url</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            next_url = <span class="string">&#x27;https:&#x27;</span> + html.xpath(<span class="string">&#x27;//a[contains(text(),&quot;下一页&gt;&quot;)]/@href&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            next_url = <span class="literal">None</span></span><br><span class="line">        <span class="keyword">return</span> data_list, next_url</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">save_data</span>(<span class="params">self, data_list</span>):</span></span><br><span class="line">        <span class="keyword">for</span> data <span class="keyword">in</span> data_list:</span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;temp.json&quot;</span>, <span class="string">&quot;a+&quot;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">                data_temp = json.dumps(data, ensure_ascii=<span class="literal">False</span>)</span><br><span class="line">                <span class="built_in">print</span>(data_temp)</span><br><span class="line">                f.write(data_temp)</span><br><span class="line">            <span class="comment">#     f.write(data)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="comment"># url</span></span><br><span class="line">        <span class="comment"># hearders</span></span><br><span class="line">        next_url = self.url</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            <span class="comment"># 发送请求,获取响应</span></span><br><span class="line">            data = self.get_data(self.url)</span><br><span class="line">            <span class="comment"># 从相应中提取数据(数据和翻页用的url)</span></span><br><span class="line">            data_list, next_url = self.parse_data(data)</span><br><span class="line"></span><br><span class="line">            self.save_data(data_list)</span><br><span class="line"></span><br><span class="line">            <span class="built_in">print</span>(next_url)</span><br><span class="line">            <span class="comment"># 判断是否终结</span></span><br><span class="line">            <span class="keyword">if</span> next_url == <span class="literal">None</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    tieba = Tieba(<span class="string">&quot;华东理工大学吧&quot;</span>)</span><br><span class="line">    tieba.run()</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本节课主要学习了&lt;br&gt;如何发送请求获取网页响应以及解析网页.</summary>
    
    
    
    <category term="编程练习" scheme="https://coding.maylove.pub/categories/%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/"/>
    
    
    <category term="Python" scheme="https://coding.maylove.pub/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>笔记|使用WSL安装Linux系统并搭建本地局域网网盘</title>
    <link href="https://coding.maylove.pub/2021/861b10ea3685/"/>
    <id>https://coding.maylove.pub/2021/861b10ea3685/</id>
    <published>2021-11-26T14:56:25.000Z</published>
    <updated>2021-11-27T04:46:38.368Z</updated>
    
    <content type="html"><![CDATA[<h4 id="事情起因"><a href="#事情起因" class="headerlink" title="事情起因"></a>事情起因</h4><ul><li>发现自己的win11已经安装了一个wsl,就想折腾一下..</li><li>但是明明zfile有win版的,为啥还要多此一举呢?<ul><li><code>害, 就是瞎折腾呗....</code></li></ul></li></ul><h4 id="安装软件"><a href="#安装软件" class="headerlink" title="安装软件"></a>安装软件</h4><ol><li>应用商店搜索WSL选择安装的系统</li><li>安装zfile: <a href="https://docs.zfile.vip/">https://docs.zfile.vip</a></li><li>安装之后发现只能通过虚拟机ip在本机访问</li><li>但是想要实现其他设备访问网盘的需求,于是需要 <code>端口转发</code></li></ol><h4 id="liunx-zfile常用命令"><a href="#liunx-zfile常用命令" class="headerlink" title="liunx zfile常用命令"></a>liunx zfile常用命令</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">~/zfile/bin/start.sh       # 启动项目</span><br><span class="line">~/zfile/bin/stop.sh        # 停止项目</span><br><span class="line">~/zfile/bin/restart.sh     # 重启项目</span><br></pre></td></tr></table></figure><h4 id="Powershell设置端口转发"><a href="#Powershell设置端口转发" class="headerlink" title="Powershell设置端口转发"></a>Powershell设置端口转发</h4><h5 id="liunx查看ip"><a href="#liunx查看ip" class="headerlink" title="liunx查看ip"></a>liunx查看ip</h5><ol><li><code>ip a</code></li><li>记录下虚拟机的ip以及对应的端口</li></ol><h5 id="设置端口转发"><a href="#设置端口转发" class="headerlink" title="设置端口转发"></a>设置端口转发</h5><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh interface portproxy add v4tov4 listenport=<span class="number">81</span> listenaddress=<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span> connectport=<span class="number">8080</span> connectaddress=<span class="number">172</span>.<span class="number">19</span>.<span class="number">235</span>.<span class="number">47</span> protocol=tcp</span><br></pre></td></tr></table></figure><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh interface portproxy add v4tov4 listenport=【宿主机windows平台监听端口】 listenaddress=<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span> connectport=【wsl2平台监听端口】 connectaddress=【wsl2平台ip】protocol=tcp</span><br></pre></td></tr></table></figure><h5 id="查看转发状态"><a href="#查看转发状态" class="headerlink" title="查看转发状态"></a>查看转发状态</h5><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh interface portproxy show all</span><br></pre></td></tr></table></figure><h5 id="删除端口转发"><a href="#删除端口转发" class="headerlink" title="删除端口转发"></a>删除端口转发</h5><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh interface portproxy delete v4tov4 listenport=【宿主机windows平台监听端口】 listenaddress=<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span></span><br></pre></td></tr></table></figure><p>可以了.</p>]]></content>
    
    
    <summary type="html">使用win11的wsl功能安装了linux系统ubuntn.&lt;br&gt;实现在win11下使用linux系统搭建的本地网盘来访问Windows的文件看电影的需求。</summary>
    
    
    
    <category term="CMD" scheme="https://coding.maylove.pub/categories/CMD/"/>
    
    
    <category term="笔记" scheme="https://coding.maylove.pub/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Java HelloWorld 案例</title>
    <link href="https://coding.maylove.pub/2021/747651b2c4dd/"/>
    <id>https://coding.maylove.pub/2021/747651b2c4dd/</id>
    <published>2021-11-22T08:46:44.000Z</published>
    <updated>2021-11-22T08:50:58.288Z</updated>
    
    <content type="html"><![CDATA[<h3 id="编写程序"><a href="#编写程序" class="headerlink" title="编写程序"></a>编写程序</h3><p>创建并打开<code>HelloWorld.java</code>并书写以下内容</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorld</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;Hello World&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="编译并运行程序"><a href="#编译并运行程序" class="headerlink" title="编译并运行程序"></a>编译并运行程序</h4><ol><li><strong>进入文件根目录</strong></li><li> <code>javac HelloWorld.java</code></li><li><code>java HelloWorld</code></li></ol><h4 id="输出结果"><a href="#输出结果" class="headerlink" title="输出结果"></a>输出结果</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hello World</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本节课主要学习了&lt;br&gt;Java HelloWorld 案例的书写和运行</summary>
    
    
    
    <category term="Java" scheme="https://coding.maylove.pub/categories/Java/"/>
    
    
    <category term="编程练习" scheme="https://coding.maylove.pub/tags/%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Python 实战爬虫分析案例(自用)</title>
    <link href="https://coding.maylove.pub/2021/e0cd99104e32/"/>
    <id>https://coding.maylove.pub/2021/e0cd99104e32/</id>
    <published>2021-11-21T04:04:09.000Z</published>
    <updated>2021-12-13T17:04:44.972Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-11-21/carbon_night_owl.png" alt="1"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"><span class="comment"># 引入json库</span></span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="comment"># 引入正则库,字符串搜索</span></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="comment"># 引入提取网页的xpath库</span></span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">write</span>(<span class="params">path, data</span>):</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(path, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        _data = json.dumps(data, ensure_ascii=<span class="literal">False</span>)</span><br><span class="line">        f.write(_data)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 先定义一个列表,作为第一层列表使用.(后面还有排序,去重什么的)</span></span><br><span class="line">list_end = []</span><br><span class="line"><span class="comment"># 这里进入一个循环,即为html的文件名 *.html ,左等右不等</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">48</span>):</span><br><span class="line">    <span class="comment"># 定义html的文件路径</span></span><br><span class="line">    path = <span class="string">&#x27;data/%s.html&#x27;</span> % i</span><br><span class="line">    <span class="comment"># 以utf-8的格式打开html文件</span></span><br><span class="line">    f = <span class="built_in">open</span>(path, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    <span class="comment"># 读取html文件</span></span><br><span class="line">    st = f.read()</span><br><span class="line">    <span class="comment"># 将html文件加载到etree中并赋值,之后可使用xpath操作</span></span><br><span class="line">    html = etree.HTML(st)</span><br><span class="line">    <span class="comment"># 定义一个临时列表</span></span><br><span class="line">    all_list = []</span><br><span class="line">    <span class="comment"># 获取 题目id,非字符串,为一个element对象</span></span><br><span class="line">    _<span class="built_in">id</span> = html.xpath(<span class="string">&#x27;/html/body/div[2]/div[2]/div/table/tbody/tr&#x27;</span>)</span><br><span class="line">    <span class="comment"># 获取 标题和答案(这里放在一起写了,因为分开写合并的时候逻辑很混乱,很麻烦)</span></span><br><span class="line">    title = html.xpath(<span class="string">&#x27;//*//font&#x27;</span>)</span><br><span class="line">    <span class="comment"># 定义两个变量为接下来的循环做铺垫</span></span><br><span class="line">    a = <span class="number">0</span></span><br><span class="line">    <span class="comment"># 为分隔符做准备</span></span><br><span class="line">    c = <span class="string">&#x27;、&#x27;</span></span><br><span class="line">    <span class="comment"># 以id的长度进行循环 id 和 title的值都为个数 *4...,因为id有空集(下文会去除)</span></span><br><span class="line">    <span class="comment"># print(len(_id))</span></span><br><span class="line">    <span class="comment"># print(len(title))</span></span><br><span class="line">    <span class="keyword">for</span> index <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(_<span class="built_in">id</span>)):</span><br><span class="line">        <span class="comment"># 每次循环a的值+1(下面会有),即为遍历title,</span></span><br><span class="line">        new_title = title[a]</span><br><span class="line">        <span class="comment"># 判断title是标题还是选项(因为标题全部都含有顿号....本来想用数字判断..写的太长逻辑没接上....</span></span><br><span class="line">        <span class="comment"># 所以这就要求选项中不可含有顿号,否则会被识别成标题,这之后的所以选项都会乱掉的....</span></span><br><span class="line">        <span class="comment"># 嘻嘻后来我找到方法了.....折腾了很长时间)</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;、&#x27;</span> <span class="keyword">in</span> new_title.text <span class="keyword">and</span> <span class="built_in">bool</span>(re.search(<span class="string">r&#x27;\d&#x27;</span>, new_title.text)):</span><br><span class="line">            <span class="comment"># print(c)</span></span><br><span class="line">            <span class="comment"># 判断是否含有题号,有则删除题号</span></span><br><span class="line">            c = c.split(sep=<span class="string">&#x27;、&#x27;</span>, maxsplit=-<span class="number">1</span>)</span><br><span class="line">            <span class="comment"># 如果首项有为数字则为题号</span></span><br><span class="line">            <span class="keyword">if</span> c[<span class="number">0</span>].isdigit():</span><br><span class="line">                <span class="comment"># 删除首项</span></span><br><span class="line">                c.remove(c[<span class="number">0</span>])</span><br><span class="line">                <span class="comment"># 再恢复原来的状态</span></span><br><span class="line">                <span class="comment"># print(c)</span></span><br><span class="line">                c = <span class="string">&#x27;、&#x27;</span>.join(c)</span><br><span class="line">                <span class="comment"># print(c)</span></span><br><span class="line">            <span class="comment"># 是标题的话就传入列表中,为什么这样写呢?</span></span><br><span class="line">            <span class="comment"># 是因为这是从第二个循环开始写的</span></span><br><span class="line">            <span class="comment"># 因为标题进入1次,选项要进入4次</span></span><br><span class="line">            <span class="comment"># 而我们只需要保存一次就行了</span></span><br><span class="line">            <span class="comment"># 所以我们就是第一次循环的时候,保存一个0的值,</span></span><br><span class="line">            <span class="comment"># 第二次循环到标题才会保存接下来赋予的标题和选项的值</span></span><br><span class="line">            all_list.append(c)</span><br><span class="line">            <span class="comment"># print(all_list)</span></span><br><span class="line">            <span class="comment"># 这就是赋予标题的值</span></span><br><span class="line">            <span class="comment"># 这个text是因为 上面说过了,这个new_titile并不是一个字符串,而是一个对象类型</span></span><br><span class="line">            c = new_title.text</span><br><span class="line">        <span class="comment"># 判断不是标题的时候执行逻辑</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="comment"># 判断是否是标题中是否单独存在数字或者顿号,如果有就提示</span></span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">bool</span>(re.search(<span class="string">r&#x27;\d&#x27;</span>, new_title.text)) <span class="keyword">or</span> <span class="string">&#x27;、&#x27;</span> <span class="keyword">in</span> new_title.text:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;请确认这不是标题 || &#x27;</span>, new_title.text)</span><br><span class="line">            <span class="comment"># 这里就是单竖杠将标题和选项隔开,然后选项之间是双竖杠隔开</span></span><br><span class="line">            c += <span class="string">&#x27;|&#x27;</span> + new_title.text</span><br><span class="line">            <span class="comment"># 因为标题会由很多的空格和换行符,这里要全部去掉(&#x27;、&#x27;不要去,前面用到了)</span></span><br><span class="line">            <span class="comment"># print(c)</span></span><br><span class="line">            c = c.replace(<span class="string">&#x27;\n&#x27;</span>, <span class="string">&#x27;&#x27;</span>).replace(<span class="string">&#x27;\r&#x27;</span>, <span class="string">&#x27;&#x27;</span>).replace(<span class="string">&#x27;\t&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        <span class="comment"># # print(new_title)</span></span><br><span class="line">        <span class="comment"># 将a的值+1,也就是遍历的过程</span></span><br><span class="line">        a += <span class="number">1</span></span><br><span class="line">    <span class="comment"># # print(all_list)</span></span><br><span class="line">    <span class="comment"># 将上面赋予列表的第一个没有意义的&#x27;第一个列表&#x27;去掉</span></span><br><span class="line">    all_list.remove(all_list[<span class="number">0</span>])</span><br><span class="line">    <span class="comment"># 因为这时候标题只剩了99个了,也就是最后一个标题没有获取到</span></span><br><span class="line">    <span class="comment"># 然后这里就是再加一个没有用的东西,用于和选项合并的时候不会报错</span></span><br><span class="line">    <span class="comment"># 后面加了判断,就是后面如果发现这个东西,就进入下一次循环</span></span><br><span class="line">    <span class="comment"># 这条数据就废弃了,但是因为数据有很多条,就是样本足够多的话,肯定可以再找到相同的数据的</span></span><br><span class="line">    all_list.append(<span class="string">&#x27;##$%#%$#%$#$@$$%^#%$@#%$!#^$%$#^%&#x27;</span>)</span><br><span class="line">    <span class="comment"># print(all_list)</span></span><br><span class="line">    <span class="comment"># 以上为标题和选项</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 以下为id的获取</span></span><br><span class="line">    <span class="comment"># 再次给a赋值为0,再次进行循环(a是老工具人了hh)</span></span><br><span class="line">    a = <span class="number">0</span></span><br><span class="line">    <span class="comment"># 再定义一个临时列表(好像这是第三个了....)</span></span><br><span class="line">    list_temp = []</span><br><span class="line">    <span class="comment"># 再循环一遍id的长度....</span></span><br><span class="line">    <span class="keyword">for</span> index <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(_<span class="built_in">id</span>)):</span><br><span class="line">        <span class="comment"># 获取到id</span></span><br><span class="line">        <span class="comment"># 因为range是从1开始的,但我们取列表需要从0开始,所以用a(好像可以直接循环,但是那时候我没写.)</span></span><br><span class="line">        <span class="comment"># 这个获取到的东西是 &#123;&#x27;id&#x27;: &#x27;topicid_XXXXXXX&#x27;&#125; 或者为 &#123;&#125;</span></span><br><span class="line">        id_num = <span class="built_in">dict</span>(_<span class="built_in">id</span>[a].attrib)</span><br><span class="line">        <span class="comment"># 将获取到的东西传入临时列表,准备做去除空集处理</span></span><br><span class="line">        list_temp.append(id_num)</span><br><span class="line">        <span class="comment"># 遍历</span></span><br><span class="line">        a += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 以下为去除空集 用emd的原因是我认为快到end了但是感觉还没到...</span></span><br><span class="line">    list_emd = []</span><br><span class="line">    <span class="comment"># 即为对上面的临时列表进行循环</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> list_temp:</span><br><span class="line">        <span class="comment"># 去除标题的所有空id集合,使其总数为100</span></span><br><span class="line">        <span class="comment"># print(x)</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">bool</span>(x):</span><br><span class="line">            <span class="comment"># print(x)</span></span><br><span class="line">            <span class="comment"># 去除空元素</span></span><br><span class="line">            list_emd.append(x)</span><br><span class="line">    <span class="comment"># print(len(list_emd))</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 再循环,这时循环的是去掉空集之后的标题,即为100</span></span><br><span class="line">    <span class="keyword">for</span> index <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(list_emd)):</span><br><span class="line">        <span class="comment"># print(index)</span></span><br><span class="line">        <span class="comment"># 将题目与选项合并后的东西传入emd中...即为列表套字典(格式需要)</span></span><br><span class="line">        list_emd[index][<span class="string">&#x27;question_txt&#x27;</span>] = all_list[index]</span><br><span class="line">        <span class="comment"># 添加占位符, 方便手动输入答案</span></span><br><span class="line">        list_emd[index][<span class="string">&#x27;answer&#x27;</span>] = <span class="string">&#x27;正确答案填在此&#x27;</span></span><br><span class="line">        list_emd[index][<span class="string">&#x27;answer_check_1&#x27;</span>] = <span class="string">&#x27;检验成员1的答案&#x27;</span></span><br><span class="line">        list_emd[index][<span class="string">&#x27;answer_check_2&#x27;</span>] = <span class="string">&#x27;检验成员2的答案&#x27;</span></span><br><span class="line">        list_emd[index][<span class="string">&#x27;answer_check_3&#x27;</span>] = <span class="string">&#x27;检验成员3的答案&#x27;</span></span><br><span class="line">        list_emd[index][<span class="string">&#x27;answer_check_4&#x27;</span>] = <span class="string">&#x27;检验成员4的答案&#x27;</span></span><br><span class="line">        list_emd[index][<span class="string">&#x27;answer_check_5&#x27;</span>] = <span class="string">&#x27;检验成员5的答案&#x27;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 没啥用,就是好看,做个提示而已(跟原来格式保持一致....)(但是没啥用)</span></span><br><span class="line">        list_emd[index][<span class="string">&#x27;answer_txt&#x27;</span>] = <span class="string">&#x27;使用说明：将正确答案填入answer的引号中就可，多选不用间隔，示例 *A* *ABCD*&#x27;</span></span><br><span class="line">        list_emd[index][<span class="string">&#x27;id&#x27;</span>] = <span class="string">&#x27;3&#x27;</span></span><br><span class="line">        <span class="keyword">del</span> list_emd[index][<span class="string">&#x27;id&#x27;</span>]</span><br><span class="line">    <span class="comment"># print(len(list_emd))</span></span><br><span class="line">    <span class="comment"># 将每次循环html文件得到的内容传入列表中,即为列表套列表套字典..</span></span><br><span class="line">    list_end.append(list_emd)</span><br><span class="line"></span><br><span class="line"><span class="comment"># print(list_end)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># new_list = sorted(all_list, key=(lambda r: r[&#x27;id&#x27;]))</span></span><br><span class="line"><span class="comment"># 将列表套列表套字典转换为列表套字典</span></span><br><span class="line">list_end = <span class="built_in">sum</span>(list_end, [])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 去重</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">deletedup</span>(<span class="params">li</span>):</span></span><br><span class="line">    <span class="comment"># 定义一个集合</span></span><br><span class="line">    seen = <span class="built_in">set</span>()</span><br><span class="line">    <span class="comment"># 定义空集</span></span><br><span class="line">    new_list_2 = []</span><br><span class="line">    <span class="built_in">print</span>(li)</span><br><span class="line">    <span class="comment"># 对于传入的参数进行循环处理</span></span><br><span class="line">    <span class="keyword">for</span> d <span class="keyword">in</span> li:</span><br><span class="line">        <span class="comment"># 即为利用id来去重</span></span><br><span class="line">        <span class="comment"># d1 = d[&#x27;id&#x27;]</span></span><br><span class="line">        d2 = d[<span class="string">&#x27;question_txt&#x27;</span>]</span><br><span class="line">        <span class="comment"># 这里就是上文所说的去掉</span></span><br><span class="line">        str1 = d[<span class="string">&#x27;question_txt&#x27;</span>]</span><br><span class="line">        <span class="comment"># 其实也不是去掉,就是进入下一个循环,就是不传.</span></span><br><span class="line">        <span class="keyword">if</span> str1 == <span class="string">&#x27;##$%#%$#%$#$@$$%^#%$@#%$!#^$%$#^%&#x27;</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="comment"># print(d1)</span></span><br><span class="line">        <span class="comment"># print(seen)</span></span><br><span class="line">        <span class="comment"># 如果没有这个元素才传入,有就不传</span></span><br><span class="line">        <span class="keyword">if</span> d2 <span class="keyword">not</span> <span class="keyword">in</span> seen:</span><br><span class="line">            <span class="comment"># print(d1)</span></span><br><span class="line">            <span class="comment"># 传入元素</span></span><br><span class="line">            new_list_2.append(d)</span><br><span class="line">            <span class="comment"># 传入集合中,是不是集合意义不大,因为不同页面的题号不同,所有肯定不一样</span></span><br><span class="line">            seen.add(d2)</span><br><span class="line">    <span class="comment"># 返回去重之后的列表</span></span><br><span class="line">    <span class="keyword">return</span> new_list_2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 入口函数</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># 对于得到的列表去重</span></span><br><span class="line">    list_tools = deletedup(list_end)</span><br><span class="line">    <span class="comment"># 打印信息,完成任务,下一步去格式化就好啦!</span></span><br><span class="line">    <span class="comment"># print(new_list_2)</span></span><br><span class="line">    <span class="comment"># new_list = sorted(list_tools, key=lambda r: r[&#x27;id&#x27;])</span></span><br><span class="line">    <span class="built_in">print</span>(list_tools)</span><br><span class="line">    <span class="comment"># 打印警告信息和统计信息</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;总计:&#x27;</span>, <span class="built_in">len</span>(list_tools), <span class="string">&#x27;条数据&#x27;</span>, <span class="string">&#x27;\n注意:请划到顶部确认那些东西是不是标题!!!!&#x27;</span>)</span><br><span class="line">    out_result = write(<span class="string">&#x27;result.json&#x27;</span>, list_tools)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;是否成功写入result.json文件:&#x27;</span>, out_result)</span><br><span class="line">    </span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">河南宗教脚本爬虫分析自动化脚本.</summary>
    
    
    
    <category term="Python" scheme="https://coding.maylove.pub/categories/Python/"/>
    
    
    <category term="实战案例" scheme="https://coding.maylove.pub/tags/%E5%AE%9E%E6%88%98%E6%A1%88%E4%BE%8B/"/>
    
  </entry>
  
  <entry>
    <title>Java 创建学习知识库</title>
    <link href="https://coding.maylove.pub/2021/f4e13f654cb7/"/>
    <id>https://coding.maylove.pub/2021/f4e13f654cb7/</id>
    <published>2021-11-16T16:20:44.000Z</published>
    <updated>2021-11-22T08:45:46.702Z</updated>
    
    <content type="html"><![CDATA[<h3 id="文档地址"><a href="#文档地址" class="headerlink" title="文档地址"></a>文档地址</h3><ul><li><a href="https://javadocs.zkeq.xyz/">https://javadocs.zkeq.xyz</a></li></ul><h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h3><ul><li>方便自己日后学习</li><li>本页面仅记录自己写的代码, 知识库中存在的不再重复…</li></ul><blockquote><p><strong>还是要多把精力放在文化课上哈…</strong></p></blockquote>]]></content>
    
    
    <summary type="html">为了方便自己的学习,创建了一个</summary>
    
    
    
    <category term="Java" scheme="https://coding.maylove.pub/categories/Java/"/>
    
    
    <category term="知识库" scheme="https://coding.maylove.pub/tags/%E7%9F%A5%E8%AF%86%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>Python 线程</title>
    <link href="https://coding.maylove.pub/2021/fcde66a536a1/"/>
    <id>https://coding.maylove.pub/2021/fcde66a536a1/</id>
    <published>2021-11-13T14:53:13.000Z</published>
    <updated>2021-11-13T14:54:38.649Z</updated>
    
    <content type="html"><![CDATA[<h3 id="线程"><a href="#线程" class="headerlink" title="线程"></a>线程</h3><blockquote><p>Python学累了,想学Java html js vue Tailwindcss 小程序  c4d ae pr 了.</p></blockquote><h4 id="什么是线程"><a href="#什么是线程" class="headerlink" title="什么是线程"></a>什么是线程</h4><ul><li>进程吸收资源</li><li>传递给线程执行业务逻辑</li></ul><h4 id="线程与进程的关系"><a href="#线程与进程的关系" class="headerlink" title="线程与进程的关系"></a>线程与进程的关系</h4><ul><li>吃饭获得能量和营养(进程), 之后大脑执行逻辑(线程)</li><li>进程提供线程执行程序的前置要求,线程在重组的资源配备下,去执行程序</li></ul><h4 id="多线程"><a href="#多线程" class="headerlink" title="多线程"></a>多线程</h4><ul><li>开启一个浏览器后,从浏览器(主进程)中创建出多个线程来开启多个页面</li></ul><h4 id="多线程的执行方式"><a href="#多线程的执行方式" class="headerlink" title="多线程的执行方式"></a>多线程的执行方式</h4><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-11-13/1.jpg" alt="1"></p><blockquote><h5 id="一、什么是线程"><a href="#一、什么是线程" class="headerlink" title="一、什么是线程"></a>一、什么是线程</h5><p>线程（Thread）是操作系统最小的执行单元，进程至少由一个线程组成。如何调度进程和线程，完全由操作系统决定，程序自己不能决定什么时候执行，执行多长时间。有些进程还不止同时干一件事，比如微信，它可以同时进行语音、发文字、浏览信息等事情。</p><p>简单理解：在一个进程内部，要同时干多件事，就需要同时运行多个“子任务”，我们把进程内的这些“子任务”称为线程。</p><h5 id="二、怎样的任务算一个线程"><a href="#二、怎样的任务算一个线程" class="headerlink" title="二、怎样的任务算一个线程"></a>二、怎样的任务算一个线程</h5><p>进程被运行后算是一个线程，进程是不运行的，线程才会运行，而一个进程有多个线程就涉及到进程有多少可以被cpu单独调用的模块，这个调用的模块可以通过手动创建线程来建立。</p><h5 id="三、在python中如何创建线程"><a href="#三、在python中如何创建线程" class="headerlink" title="三、在python中如何创建线程"></a>三、在python中如何创建线程</h5><ul><li><p>使用的模块：<code>threading</code></p></li><li><p>创建的方法：<code>threading.Thread(…)</code></p></li></ul><p>代码如下：</p><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-11-13/2.jpg" alt="2"></p></blockquote>]]></content>
    
    
    <summary type="html">本节课主要学习了&lt;br&gt;线程的基础知识</summary>
    
    
    
    <category term="Python" scheme="https://coding.maylove.pub/categories/Python/"/>
    
    
    <category term="进程与线程" scheme="https://coding.maylove.pub/tags/%E8%BF%9B%E7%A8%8B%E4%B8%8E%E7%BA%BF%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Python 进程</title>
    <link href="https://coding.maylove.pub/2021/eab0079965df/"/>
    <id>https://coding.maylove.pub/2021/eab0079965df/</id>
    <published>2021-11-13T14:53:04.000Z</published>
    <updated>2021-11-13T14:54:04.541Z</updated>
    
    <content type="html"><![CDATA[<h3 id="进程"><a href="#进程" class="headerlink" title="进程"></a>进程</h3><h4 id="什么是进程"><a href="#什么是进程" class="headerlink" title="什么是进程"></a>什么是进程</h4><ul><li>进程就是程序执行的载体</li></ul><h4 id="进程在生活中的应用"><a href="#进程在生活中的应用" class="headerlink" title="进程在生活中的应用"></a>进程在生活中的应用</h4><ul><li>我们打开的每个<code>软件 游戏,</code>执行的<code>每一个python脚本</code>都是<strong>启动一个进程</strong></li><li>软件(游戏, 脚本) == 进程</li></ul><h4 id="进程的口粮"><a href="#进程的口粮" class="headerlink" title="进程的口粮"></a>进程的口粮</h4><ul><li>每一个进程像人一样需要吃饭,他的粮食就是:内存和cpu</li></ul><h4 id="多进程"><a href="#多进程" class="headerlink" title="多进程"></a>多进程</h4><ul><li>主进程创建子进程</li><li>父进程创建子进程</li></ul><h4 id="多进程的执行方式"><a href="#多进程的执行方式" class="headerlink" title="多进程的执行方式"></a>多进程的执行方式</h4><ul><li>cpu分配空余核心给进程</li></ul>]]></content>
    
    
    <summary type="html">本节课主要学习了&lt;br&gt;进程的基础知识</summary>
    
    
    
    <category term="Python" scheme="https://coding.maylove.pub/categories/Python/"/>
    
    
    <category term="进程与线程" scheme="https://coding.maylove.pub/tags/%E8%BF%9B%E7%A8%8B%E4%B8%8E%E7%BA%BF%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Python 阶段编程练习(二十三)</title>
    <link href="https://coding.maylove.pub/2021/66e0909bf3d4/"/>
    <id>https://coding.maylove.pub/2021/66e0909bf3d4/</id>
    <published>2021-11-11T18:10:13.000Z</published>
    <updated>2021-11-11T18:47:53.791Z</updated>
    
    <content type="html"><![CDATA[<p>作业案例1</p><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-11-11/1.png" alt="1"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">   学生信息库</span></span><br><span class="line"><span class="string">   1: 将学生信息存入一个json文件中， 添加读与写json的函数</span></span><br><span class="line"><span class="string">   2: 我们要将用户添加修改和删除的行为记录到日志中，添加与修改都用info代表</span></span><br><span class="line"><span class="string">      而delete将要用warn警告来提示</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NotArgError</span>(<span class="params">Exception</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, message</span>):</span></span><br><span class="line">        self.message = message</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MissPathError</span>(<span class="params">Exception</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, message</span>):</span></span><br><span class="line">        self.message = message</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FormatError</span>(<span class="params">Exception</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, message</span>):</span></span><br><span class="line">        self.message = message</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">StudentInfo</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, students_path, log_path</span>):</span></span><br><span class="line">        self.students_path = students_path</span><br><span class="line">        self.log_path = log_path</span><br><span class="line">        self.log = self.__log()</span><br><span class="line"></span><br><span class="line">        self.__init_path()</span><br><span class="line">        self.__read()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__log</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">if</span> os.path.exists(self.log_path):</span><br><span class="line">            mode = <span class="string">&#x27;a&#x27;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            mode = <span class="string">&#x27;w&#x27;</span></span><br><span class="line">        logging.basicConfig(</span><br><span class="line">            level=logging.DEBUG,</span><br><span class="line">            <span class="built_in">format</span>=<span class="string">&#x27;%(asctime)s-%(filename)s-%(lineno)d-%(levelname)s-%(message)s&#x27;</span>,</span><br><span class="line">            filename=self.log_path,</span><br><span class="line">            filemode=mode</span><br><span class="line">        )</span><br><span class="line">        <span class="keyword">return</span> logging</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init_path</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(self.students_path):</span><br><span class="line">            <span class="keyword">raise</span> MissPathError(<span class="string">&#x27;没有相关的地址文件 %s&#x27;</span> % self.students_path)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.isfile(self.students_path):</span><br><span class="line">            <span class="keyword">raise</span> TypeError(<span class="string">&#x27;当前的studentspath不是一个文件&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> self.students_path.endswith(<span class="string">&#x27;.json&#x27;</span>):</span><br><span class="line">            <span class="keyword">raise</span> FormatError(<span class="string">&#x27;当前不是一个json文件&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__read</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(self.students_path, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                data = f.read()</span><br><span class="line">            <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                <span class="keyword">raise</span> e</span><br><span class="line">        self.students = json.loads(data)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__save</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(self.students_path, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            json_data = json.dumps(self.students)</span><br><span class="line">            f.write(json_data)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_by_id</span>(<span class="params">self, student_id</span>):</span></span><br><span class="line">        <span class="keyword">return</span> self.students.get(student_id)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_all_students</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">for</span> id_, value <span class="keyword">in</span> self.students.items():</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;学号：&#123;&#125;, 姓名:&#123;&#125;, 年龄:&#123;&#125;, 性别:&#123;&#125;, 班级:&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(</span><br><span class="line">                id_, value[<span class="string">&#x27;name&#x27;</span>], value[<span class="string">&#x27;age&#x27;</span>], value[<span class="string">&#x27;sex&#x27;</span>], value[<span class="string">&#x27;class_number&#x27;</span>]</span><br><span class="line">            ))</span><br><span class="line">        <span class="keyword">return</span> self.students</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add</span>(<span class="params">self, **student</span>):</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            self.check_user_info(**student)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">raise</span> e</span><br><span class="line">        self.__add(**student)</span><br><span class="line">        self.__save()</span><br><span class="line">        self.__read()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">adds</span>(<span class="params">self, new_students</span>):</span></span><br><span class="line">        <span class="keyword">for</span> student <span class="keyword">in</span> new_students:</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                self.check_user_info(**student)</span><br><span class="line">            <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                <span class="built_in">print</span>(e, student.get(<span class="string">&#x27;name&#x27;</span>))</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            self.__add(**student)</span><br><span class="line">        self.__save()</span><br><span class="line">        self.__read()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__add</span>(<span class="params">self, **student</span>):</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(self.students) == <span class="number">0</span>:</span><br><span class="line">            new_id = <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            keys = <span class="built_in">list</span>(self.students.keys())</span><br><span class="line">            _keys = []</span><br><span class="line">            <span class="keyword">for</span> item <span class="keyword">in</span> keys:</span><br><span class="line">                _keys.append(<span class="built_in">int</span>(item))</span><br><span class="line">            new_id = <span class="built_in">max</span>(_keys) + <span class="number">1</span></span><br><span class="line">        self.students[new_id] = student</span><br><span class="line">        self.log.info(<span class="string">&#x27;学生%s被注册了&#x27;</span> % student[<span class="string">&#x27;name&#x27;</span>])</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete</span>(<span class="params">self, student_id</span>):</span></span><br><span class="line">        <span class="keyword">if</span> student_id <span class="keyword">not</span> <span class="keyword">in</span> self.students:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; 并不存在&#x27;</span>.<span class="built_in">format</span>(student_id))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            user_info = self.students.pop(student_id)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;学号是&#123;&#125;, &#123;&#125;同学的信息已经被删除了&#x27;</span>.<span class="built_in">format</span>(student_id, user_info[<span class="string">&#x27;name&#x27;</span>]))</span><br><span class="line">            self.log.warning(<span class="string">&#x27;学号是&#123;&#125;, &#123;&#125;同学的信息已经被删除了&#x27;</span>.<span class="built_in">format</span>(student_id, user_info[<span class="string">&#x27;name&#x27;</span>]))</span><br><span class="line">        self.__save()</span><br><span class="line">        self.__read()</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">deletes</span>(<span class="params">self, ids</span>):</span></span><br><span class="line">        <span class="keyword">for</span> id_ <span class="keyword">in</span> ids:</span><br><span class="line">            <span class="keyword">if</span> id_ <span class="keyword">not</span> <span class="keyword">in</span> self.students:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;id_&#125;</span> 不存在学生库中&#x27;</span>)</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            student_info = self.students.pop(id_)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&#x27;学号<span class="subst">&#123;id_&#125;</span> 学生<span class="subst">&#123;student_info[<span class="string">&quot;name&quot;</span>]&#125;</span> 已被移除&#x27;</span>)</span><br><span class="line">            self.log.warning(<span class="string">f&#x27;学号<span class="subst">&#123;id_&#125;</span> 学生<span class="subst">&#123;student_info[<span class="string">&quot;name&quot;</span>]&#125;</span> 已被移除&#x27;</span>)</span><br><span class="line">        self.__save()</span><br><span class="line">        self.__read()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update</span>(<span class="params">self, student_id, **kwargs</span>):</span></span><br><span class="line">        <span class="keyword">if</span> student_id <span class="keyword">not</span> <span class="keyword">in</span> self.students:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;并不存在这个学号:&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(student_id))</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            self.check_user_info(**kwargs)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">raise</span> e</span><br><span class="line"></span><br><span class="line">        self.students[student_id] = kwargs</span><br><span class="line">        self.__save()</span><br><span class="line">        self.__read()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;同学信息更新完毕&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">updates</span>(<span class="params">self, update_students</span>):</span></span><br><span class="line">        <span class="keyword">for</span> student <span class="keyword">in</span> update_students:</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                id_ = <span class="built_in">list</span>(student.keys())[<span class="number">0</span>]</span><br><span class="line">            <span class="keyword">except</span> IndexError <span class="keyword">as</span> e:</span><br><span class="line">                <span class="built_in">print</span>(e)</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">if</span> id_ <span class="keyword">not</span> <span class="keyword">in</span> self.students:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&#x27;学号<span class="subst">&#123;id_&#125;</span> 不存在&#x27;</span>)</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            user_info = student[id_]</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                self.check_user_info(**user_info)</span><br><span class="line">            <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                <span class="built_in">print</span>(e)</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            self.students[id_] = user_info</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;所有用户信息更新完成&#x27;</span>)</span><br><span class="line">        self.__save()</span><br><span class="line">        self.__read()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">search_users</span>(<span class="params">self, **kwargs</span>):</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">assert</span> <span class="built_in">len</span>(kwargs) == <span class="number">1</span>, <span class="string">&#x27;参数数量传递错误&#x27;</span></span><br><span class="line"></span><br><span class="line">        values = <span class="built_in">list</span>(self.students.values())</span><br><span class="line">        key = <span class="literal">None</span></span><br><span class="line">        value = <span class="literal">None</span></span><br><span class="line">        result = []</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;name&#x27;</span> <span class="keyword">in</span> kwargs:</span><br><span class="line">            key = <span class="string">&#x27;name&#x27;</span></span><br><span class="line">            value = kwargs[key]</span><br><span class="line">        <span class="keyword">elif</span> <span class="string">&#x27;sex&#x27;</span> <span class="keyword">in</span> kwargs:</span><br><span class="line">            key = <span class="string">&#x27;sex&#x27;</span></span><br><span class="line">            value = kwargs[<span class="string">&#x27;sex&#x27;</span>]</span><br><span class="line">        <span class="keyword">elif</span> <span class="string">&#x27;class_number&#x27;</span> <span class="keyword">in</span> kwargs:</span><br><span class="line">            key = <span class="string">&#x27;class_number&#x27;</span></span><br><span class="line">            value = kwargs[key]</span><br><span class="line">        <span class="keyword">elif</span> <span class="string">&#x27;age&#x27;</span> <span class="keyword">in</span> kwargs:</span><br><span class="line">            key = <span class="string">&#x27;age&#x27;</span></span><br><span class="line">            value = kwargs[key]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">raise</span> NotArgError(<span class="string">&#x27;没有发现搜索的关键字&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> user <span class="keyword">in</span> values:  <span class="comment"># [&#123;name, sex, age, class_number&#125;, &#123;&#125;]</span></span><br><span class="line">            <span class="keyword">if</span> value <span class="keyword">in</span> user[key]:</span><br><span class="line">                result.append(user)</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">check_user_info</span>(<span class="params">self, **kwargs</span>):</span></span><br><span class="line">        <span class="keyword">assert</span> <span class="built_in">len</span>(kwargs) == <span class="number">4</span>, <span class="string">&#x27;参数必须是4个&#x27;</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;name&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> kwargs:</span><br><span class="line">            <span class="keyword">raise</span> NotArgError(<span class="string">&#x27;没有发现学生姓名参数&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;age&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> kwargs:</span><br><span class="line">            <span class="keyword">raise</span> NotArgError(<span class="string">&#x27;缺少学生年龄参数&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;sex&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> kwargs:</span><br><span class="line">            <span class="keyword">raise</span> NotArgError(<span class="string">&#x27;缺少学生性别参数&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;class_number&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> kwargs:</span><br><span class="line">            <span class="keyword">raise</span> NotArgError(<span class="string">&#x27;缺少学生班级参数&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        name_value = kwargs[<span class="string">&#x27;name&#x27;</span>]  <span class="comment"># type(name_value)</span></span><br><span class="line">        age_value = kwargs[<span class="string">&#x27;age&#x27;</span>]</span><br><span class="line">        sex_value = kwargs[<span class="string">&#x27;sex&#x27;</span>]</span><br><span class="line">        class_number_value = kwargs[<span class="string">&#x27;class_number&#x27;</span>]</span><br><span class="line">        <span class="comment"># isinstace(对比的数据, 目标类型） isinstance(1, str)</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">isinstance</span>(name_value, <span class="built_in">str</span>):</span><br><span class="line">            <span class="keyword">raise</span> TypeError(<span class="string">&#x27;name应该是字符串类型&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">isinstance</span>(age_value, <span class="built_in">int</span>):</span><br><span class="line">            <span class="keyword">raise</span> TypeError(<span class="string">&#x27;age 应该是整型&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">isinstance</span>(sex_value, <span class="built_in">str</span>):</span><br><span class="line">            <span class="keyword">raise</span> TypeError(<span class="string">&#x27;sex应该是字符串类型&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">isinstance</span>(class_number_value, <span class="built_in">str</span>):</span><br><span class="line">            <span class="keyword">raise</span> TypeError(<span class="string">&#x27;class_number应该是字符串类型&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">students = &#123;</span><br><span class="line">    <span class="number">1</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;dewei&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;age&#x27;</span>: <span class="number">33</span>,</span><br><span class="line">        <span class="string">&#x27;class_number&#x27;</span>: <span class="string">&#x27;A&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;sex&#x27;</span>: <span class="string">&#x27;boy&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="number">2</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;小慕&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;age&#x27;</span>: <span class="number">10</span>,</span><br><span class="line">        <span class="string">&#x27;class_number&#x27;</span>: <span class="string">&#x27;B&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;sex&#x27;</span>: <span class="string">&#x27;boy&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="number">3</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;小曼&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;age&#x27;</span>: <span class="number">18</span>,</span><br><span class="line">        <span class="string">&#x27;class_number&#x27;</span>: <span class="string">&#x27;A&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;sex&#x27;</span>: <span class="string">&#x27;girl&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="number">4</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;小高&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;age&#x27;</span>: <span class="number">18</span>,</span><br><span class="line">        <span class="string">&#x27;class_number&#x27;</span>: <span class="string">&#x27;C&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;sex&#x27;</span>: <span class="string">&#x27;boy&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="number">5</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;小云&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;age&#x27;</span>: <span class="number">18</span>,</span><br><span class="line">        <span class="string">&#x27;class_number&#x27;</span>: <span class="string">&#x27;B&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;sex&#x27;</span>: <span class="string">&#x27;girl&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    student_info = StudentInfo(<span class="string">&#x27;students.json&#x27;</span>)</span><br><span class="line">    user = student_info.get_by_id(<span class="number">1</span>)</span><br><span class="line">    student_info.add(name=<span class="string">&#x27;dewei&#x27;</span>, age=<span class="number">34</span>, class_number=<span class="string">&#x27;A&#x27;</span>, sex=<span class="string">&#x27;boy&#x27;</span>)</span><br><span class="line">    users = [</span><br><span class="line">        &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;xiaoming&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">17</span>, <span class="string">&#x27;class_number&#x27;</span>: <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;sex&#x27;</span>: <span class="string">&#x27;boy&#x27;</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;xiaohong&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">18</span>, <span class="string">&#x27;class_number&#x27;</span>: <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;sex&#x27;</span>: <span class="string">&#x27;girl&#x27;</span>&#125;</span><br><span class="line">    ]</span><br><span class="line">    student_info.adds(users)</span><br><span class="line">    student_info.get_all_students()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;------&#x27;</span>)</span><br><span class="line">    student_info.deletes([<span class="number">7</span>, <span class="number">8</span>])</span><br><span class="line">    student_info.get_all_students()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;-------&#x27;</span>)</span><br><span class="line">    student_info.updates([</span><br><span class="line">        &#123;<span class="number">1</span>: &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;dewei.zhang&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">18</span>, <span class="string">&#x27;class_number&#x27;</span>: <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;sex&#x27;</span>: <span class="string">&#x27;boy&#x27;</span>&#125;&#125;,</span><br><span class="line">        &#123;<span class="number">2</span>: &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;小慕同学&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">18</span>, <span class="string">&#x27;class_number&#x27;</span>: <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;sex&#x27;</span>: <span class="string">&#x27;boy&#x27;</span>&#125;&#125;</span><br><span class="line">    ])</span><br><span class="line">    student_info.get_all_students()</span><br><span class="line">    result = student_info.search_users(name=<span class="string">&#x27;d&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(result)</span><br><span class="line">    result = student_info.search_users(name=<span class="string">&#x27;小&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(result)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;------&#x27;</span>)</span><br><span class="line">    result = student_info.search_users(name=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(result)</span><br><span class="line">    result = student_info.search_users(name=<span class="string">&#x27;小&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(result)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;-----&#x27;</span>)</span><br><span class="line">    result = student_info.search_users (name=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(result)</span><br></pre></td></tr></table></figure><h3 id="作业"><a href="#作业" class="headerlink" title="作业"></a>作业</h3><blockquote><p>亲爱的朋友们，经过这一阶段的学习，大家已经掌握了在Python中如何进行函数的定义与调用、文件基本操作、模块化思想······，也熟悉了Python中一些基本的内置函数和方法的运用，接下来让我们动手实践下——编写“数字猜猜猜”小游戏。</p></blockquote><h5 id="题目要求："><a href="#题目要求：" class="headerlink" title="题目要求："></a>题目要求：</h5><p><em>根据现实生活中的猜数字游戏的游戏规则，运用Python语言模拟实现猜数字游戏的的基本功能，请学员们参考真实的猜数字游戏规则和如下的程序运行效果图进行代码编写，以实现“数字猜猜猜”小游戏的基本功能。游戏规则介绍如下：</em></p><p>玩家根据提示进行数字区间起始位置和终止位置的输入</p><ol><li>依据 1 中输入的数字区间，产生该区间内一个随机数，用于进行猜测比对的终值</li><li>提示用户输入所猜测的数字，与 2 中产生的随机数字进行比对，并将相应的信息写入指定的日志文件（日志文件名称：record.txt；日志文件路径：与.py文件处于同一级目录）</li><li>依据 3 中的比对结果。若两者不等，打印友好提示，重复 3、4 步骤；若两者相等，则退出该函数，执行下列语句</li><li>当猜测的值不在指定区间内时，不需要统计次数和记录</li><li>打印如效果图所示，用以提示游戏结束的信息</li></ol><h5 id="运行效果图"><a href="#运行效果图" class="headerlink" title="运行效果图:"></a>运行效果图:</h5><ol><li><p>成功运行效果图：</p><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-11-11/2.jpg" alt="2"></p></li><li><p>输入区间起始值和区间终止值相等效果图：</p><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-11-11/3.jpg" alt="3"></p></li><li><p>输入区间起始值大于区间终止值效果图：</p><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-11-11/4.jpg" alt="4"></p></li><li><p>输入区间起始值和终止值为非数字字符效果图：</p><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-11-11/5.jpg" alt="5"></p></li></ol><h5 id="代码-不想写了-包括上面那个-都不是我写的-好累-好困-去睡了-回头再看"><a href="#代码-不想写了-包括上面那个-都不是我写的-好累-好困-去睡了-回头再看" class="headerlink" title="代码(不想写了,包括上面那个..都不是我写的, 好累 好困 去睡了  回头再看)"></a>代码(不想写了,包括上面那个..都不是我写的, 好累 好困 去睡了  回头再看)</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time     : 2021/8/27 21:38</span></span><br><span class="line"><span class="comment"># @Author   : InsaneLoafer</span></span><br><span class="line"><span class="comment"># @File     : mooc_test.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">init_log</span>(<span class="params">path</span>):</span></span><br><span class="line">    <span class="keyword">if</span> os.path.exists(path):</span><br><span class="line">        mode = <span class="string">&#x27;a&#x27;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        mode = <span class="string">&#x27;w&#x27;</span></span><br><span class="line">    logging.basicConfig(</span><br><span class="line">        level=logging.INFO,</span><br><span class="line">        <span class="built_in">format</span>=<span class="string">&#x27;%(asctime)s %(filename)s %(lineno)d %(message)s&#x27;</span>,</span><br><span class="line">        filename=path,</span><br><span class="line">        filemode=mode</span><br><span class="line">    )</span><br><span class="line">    <span class="keyword">return</span> logging</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">guess_number</span>():</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;********************欢迎进入数字踩踩踩游戏********************&#x27;</span>)</span><br><span class="line">    start = <span class="built_in">input</span>(<span class="string">&#x27;数字区间起始值：&#x27;</span>)</span><br><span class="line">    end = <span class="built_in">input</span>(<span class="string">&#x27;数字区间终止值：&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> start.isdigit() <span class="keyword">or</span> <span class="keyword">not</span> end.isdigit():</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;您输入的区间数字为非数字字符！！请重新启动程序。&#x27;</span>)</span><br><span class="line">        exit()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        start = <span class="built_in">int</span>(start)</span><br><span class="line">        end = <span class="built_in">int</span>(end)</span><br><span class="line">        count = <span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span> start == end:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;您输入的区间数字相同！！请重新启动程序。&#x27;</span>)</span><br><span class="line">            exit()</span><br><span class="line">        <span class="keyword">elif</span> start &gt; end:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;您输入的区间数字大小有误！！请重新启动程序。&#x27;</span>)</span><br><span class="line">            exit()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;所产生的的随机数字区间为：[&#123;&#125;, &#123;&#125;]&#x27;</span>.<span class="built_in">format</span>(start, end))</span><br><span class="line">            random_number = random.randint(start, end)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">                count += <span class="number">1</span></span><br><span class="line">                number = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请继续输入您猜测的数字：&#x27;</span>))</span><br><span class="line">                <span class="keyword">if</span> number <span class="keyword">not</span> <span class="keyword">in</span> <span class="built_in">range</span>(start,end+<span class="number">1</span>):</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&#x27;对不起您输入的数字未在指定区间内！！！&#x27;</span>)</span><br><span class="line">                    <span class="keyword">continue</span></span><br><span class="line">                <span class="keyword">elif</span> number &gt; random_number:</span><br><span class="line">                    init_log(<span class="string">&#x27;record.txt&#x27;</span>)</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&#x27;*********&#x27;</span>)</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&#x27;Higher than the anwser&#x27;</span>)</span><br><span class="line">                    <span class="keyword">continue</span></span><br><span class="line">                <span class="keyword">elif</span> number &lt; random_number:</span><br><span class="line">                    init_log(<span class="string">&#x27;record.txt&#x27;</span>)</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&#x27;*********&#x27;</span>)</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&#x27;Lower than the anwser&#x27;</span>)</span><br><span class="line">                    <span class="keyword">continue</span></span><br><span class="line">                <span class="keyword">elif</span> number == random_number:</span><br><span class="line">                    init_log(<span class="string">&#x27;record.txt&#x27;</span>)</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&#x27;*********&#x27;</span>)</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&#x27;恭喜你！只用了&#123;&#125;次就赢得了游戏&#x27;</span>.<span class="built_in">format</span>(count))</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    guess_number()</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">利用前面所学知识&lt;br&gt;完成自己的任务。</summary>
    
    
    
    <category term="Python" scheme="https://coding.maylove.pub/categories/Python/"/>
    
    
    <category term="编程练习" scheme="https://coding.maylove.pub/tags/%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/"/>
    
    <category term="高级函数" scheme="https://coding.maylove.pub/tags/%E9%AB%98%E7%BA%A7%E5%87%BD%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>Python 阶段编程练习(二十二)</title>
    <link href="https://coding.maylove.pub/2021/7e327a21dfc3/"/>
    <id>https://coding.maylove.pub/2021/7e327a21dfc3/</id>
    <published>2021-11-11T18:10:05.000Z</published>
    <updated>2021-11-11T18:48:07.091Z</updated>
    
    <content type="html"><![CDATA[<h3 id="编程练习"><a href="#编程练习" class="headerlink" title="编程练习"></a>编程练习</h3><blockquote><p>请运用reduce函数，计算20的阶乘，并于终端打印计算结果（如下）</p><p>‘2432902008176640000’</p></blockquote><h5 id="任务"><a href="#任务" class="headerlink" title="任务"></a>任务</h5><ol><li>定义use_reduce函数</li><li>函数体内：实现某个数值的阶乘</li></ol><h5 id="任务提示"><a href="#任务提示" class="headerlink" title="任务提示"></a>任务提示</h5><ol><li>结合list和range函数实现1-20(包含20）的数值即list(range(1,21))</li><li>20的阶乘为<code>1*2*3*4*5*...*20</code>(角标星星)</li></ol><h5 id="初始代码"><a href="#初始代码" class="headerlink" title="初始代码"></a>初始代码</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 从functools 中导入reduce函数</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">use_reduce</span>(<span class="params">x, y</span>):</span></span><br><span class="line">    <span class="comment"># 使用result接收两个数的乘积</span></span><br><span class="line">    result =</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># 使用data接收一个1-20的数值</span></span><br><span class="line">    data =</span><br><span class="line">    <span class="comment"># 调用use_reduce函数传入data</span></span><br><span class="line">    result = reduce()</span><br></pre></td></tr></table></figure><h5 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> reduce</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">use_reduce</span>(<span class="params">data</span>):</span></span><br><span class="line">    <span class="comment"># 使用result接收reduce实现20的阶乘</span></span><br><span class="line">    result = reduce(<span class="keyword">lambda</span> m, n: m*n, data)</span><br><span class="line">    <span class="built_in">print</span>(result)</span><br><span class="line">    <span class="comment"># 测试该功能</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># 使用data接收一个1-20的数值</span></span><br><span class="line">    data = <span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">1</span>,<span class="number">21</span>))</span><br><span class="line">    <span class="comment"># 调用use_reduce函数传入data</span></span><br><span class="line">    result = use_reduce(data)</span><br><span class="line">    </span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">利用前面所学知识&lt;br&gt;完成自己的任务。</summary>
    
    
    
    <category term="Python" scheme="https://coding.maylove.pub/categories/Python/"/>
    
    
    <category term="编程练习" scheme="https://coding.maylove.pub/tags/%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/"/>
    
    <category term="高级函数" scheme="https://coding.maylove.pub/tags/%E9%AB%98%E7%BA%A7%E5%87%BD%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>Python 阶段编程练习(二十一)</title>
    <link href="https://coding.maylove.pub/2021/c5a00c2fe360/"/>
    <id>https://coding.maylove.pub/2021/c5a00c2fe360/</id>
    <published>2021-11-11T18:09:42.000Z</published>
    <updated>2021-11-11T18:48:12.904Z</updated>
    
    <content type="html"><![CDATA[<h3 id="编程练习"><a href="#编程练习" class="headerlink" title="编程练习"></a>编程练习</h3><blockquote><p>使用map函数，求元组 (2,4,6,8,10,12)中各个元素的5次方</p></blockquote><h4 id="任务"><a href="#任务" class="headerlink" title="任务"></a>任务</h4><ol><li>pow_five函数体内：计算元素的5次方</li><li>调用pow_five函数传入data，使用result接收</li></ol><h4 id="任务提示"><a href="#任务提示" class="headerlink" title="任务提示"></a>任务提示</h4><ol><li>pow(x,y) 方法返回 x的y次方的值</li><li>计算结果：(32, 1024, 7776, 32768, 100000, 248832)</li></ol><h4 id="初始代码"><a href="#初始代码" class="headerlink" title="初始代码"></a>初始代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pow_five</span>(<span class="params">data</span>):</span></span><br><span class="line">    <span class="comment"># 计算元素的5次方</span></span><br><span class="line">    result =</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    data = (<span class="number">2</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">10</span>,<span class="number">12</span>)</span><br><span class="line">    <span class="comment"># 调用pow_five函数传入data，使用result接收</span></span><br><span class="line">    result = <span class="built_in">map</span>()</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">tuple</span>(result))</span><br></pre></td></tr></table></figure><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pow_five</span>(<span class="params">data</span>):</span></span><br><span class="line">    <span class="comment"># 计算元素的5次方</span></span><br><span class="line">    result = <span class="built_in">map</span>(<span class="keyword">lambda</span> n: <span class="built_in">pow</span>(n, <span class="number">5</span>), data)</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    data = (<span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">12</span>)</span><br><span class="line">    <span class="comment"># 调用pow_five函数传入data，使用result接收</span></span><br><span class="line">    result = pow_five(data)</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">tuple</span>(result))</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">利用前面所学知识&lt;br&gt;完成自己的任务。</summary>
    
    
    
    <category term="Python" scheme="https://coding.maylove.pub/categories/Python/"/>
    
    
    <category term="编程练习" scheme="https://coding.maylove.pub/tags/%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/"/>
    
    <category term="高级函数" scheme="https://coding.maylove.pub/tags/%E9%AB%98%E7%BA%A7%E5%87%BD%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>Python 阶段编程练习(二十)</title>
    <link href="https://coding.maylove.pub/2021/6f44a47c4b51/"/>
    <id>https://coding.maylove.pub/2021/6f44a47c4b51/</id>
    <published>2021-11-11T18:09:27.000Z</published>
    <updated>2021-11-11T18:48:20.517Z</updated>
    
    <content type="html"><![CDATA[<h3 id="编程练习"><a href="#编程练习" class="headerlink" title="编程练习"></a>编程练习</h3><blockquote><p>使用filter函数，求0-50以内（包括50）的偶数<br>[0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44,46, 48, 50]</p></blockquote><h4 id="任务"><a href="#任务" class="headerlink" title="任务"></a>任务</h4><ol><li>定义use_filter函数</li><li>函数体内：实现过滤偶数值的功能</li></ol><h4 id="任务提示"><a href="#任务提示" class="headerlink" title="任务提示"></a>任务提示</h4><ul><li>使用变量data接收0-50（包含50）的数字，即list(range(51))</li></ul><h4 id="原始代码"><a href="#原始代码" class="headerlink" title="原始代码"></a>原始代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">use_filter</span>(<span class="params">data</span>):</span></span><br><span class="line">    <span class="comment"># 使用result接收filter过滤偶数值的功能</span></span><br><span class="line">    result =</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># 使用data接收0-50的数值</span></span><br><span class="line">    data =</span><br><span class="line">    <span class="comment"># 调用use_filter函数传入data,使用result变量接收</span></span><br><span class="line">    result =</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">list</span>(result))</span><br></pre></td></tr></table></figure><h4 id="代码提交区"><a href="#代码提交区" class="headerlink" title="代码提交区"></a>代码提交区</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">use_filter</span>(<span class="params">data</span>):</span></span><br><span class="line">    <span class="comment"># 使用result接收filter过滤偶数值的功能</span></span><br><span class="line">    result = <span class="built_in">filter</span>(<span class="keyword">lambda</span> n:n%<span class="number">2</span> == <span class="number">0</span>,data)</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># 使用data接收0-50的数值</span></span><br><span class="line">    data = <span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">51</span>))</span><br><span class="line">    <span class="comment"># 调用use_filter函数传入data,使用result变量接收</span></span><br><span class="line">    result = use_filter(data)</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">list</span>(result))</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">利用前面所学知识&lt;br&gt;完成自己的任务。</summary>
    
    
    
    <category term="Python" scheme="https://coding.maylove.pub/categories/Python/"/>
    
    
    <category term="编程练习" scheme="https://coding.maylove.pub/tags/%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/"/>
    
    <category term="高级函数" scheme="https://coding.maylove.pub/tags/%E9%AB%98%E7%BA%A7%E5%87%BD%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>Python Python中的高级函数(魔法函数)</title>
    <link href="https://coding.maylove.pub/2021/ef7d290da2cb/"/>
    <id>https://coding.maylove.pub/2021/ef7d290da2cb/</id>
    <published>2021-11-11T18:08:36.000Z</published>
    <updated>2021-11-11T18:16:34.368Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Python中的高级函数-魔法函数"><a href="#Python中的高级函数-魔法函数" class="headerlink" title="Python中的高级函数(魔法函数)"></a>Python中的高级函数(魔法函数)</h3><ul><li>filter(内置函数)</li><li>map(内置函数)</li><li>reduce(曾经是内置函数)</li></ul><h4 id="filter"><a href="#filter" class="headerlink" title="filter"></a><code>filter</code></h4><h5 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h5><ul><li>对循环根据过滤条件进行过滤</li></ul><h5 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h5><ul><li><code>filter(func, list)</code></li></ul><h5 id="参数介绍"><a href="#参数介绍" class="headerlink" title="参数介绍"></a>参数介绍</h5><ul><li><code>func</code>: 对list每个item进行条件过滤的定义</li><li><code>list</code> : 需要过滤的列表</li></ul><h5 id="举例"><a href="#举例" class="headerlink" title="举例"></a>举例</h5><ul><li><code>res = filter(lambda x:x &gt; 1, [0,1,2])</code></li></ul><h5 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h5><ul><li><code>&lt;filter at 0x4f3af70&gt; -&gt; [1,2]</code></li></ul><hr><h4 id="map"><a href="#map" class="headerlink" title="map"></a><code>map</code></h4><h5 id="功能-1"><a href="#功能-1" class="headerlink" title="功能"></a>功能</h5><ul><li>对列表中的每个成员<code>是否满足条件</code>返回对应的<strong>True</strong>与<strong>False</strong></li></ul><h5 id="用法-1"><a href="#用法-1" class="headerlink" title="用法"></a>用法</h5><ul><li><code>map(func, list)</code></li></ul><h5 id="参数介绍-1"><a href="#参数介绍-1" class="headerlink" title="参数介绍"></a>参数介绍</h5><ul><li><code>func</code>: 对List每个item进行条件满足的判断</li><li><code>list</code>: 需要过滤的列表</li></ul><h5 id="举例-1"><a href="#举例-1" class="headerlink" title="举例"></a>举例</h5><ul><li><code>res = map(lambda x:x &gt; 1, [0,1,2])</code></li></ul><h5 id="返回值-1"><a href="#返回值-1" class="headerlink" title="返回值"></a>返回值</h5><ul><li><code>&lt;map at 0x4f3af70&gt; -&gt; [False, False, True]</code></li></ul><hr><h4 id="reduce"><a href="#reduce" class="headerlink" title="reduce"></a><code>reduce</code></h4><h5 id="功能-2"><a href="#功能-2" class="headerlink" title="功能"></a>功能</h5><ul><li>对循环前后两个数据进行累加</li></ul><h5 id="用法-2"><a href="#用法-2" class="headerlink" title="用法"></a>用法</h5><ul><li><code>reduce(func, list)</code></li></ul><h5 id="参数介绍-2"><a href="#参数介绍-2" class="headerlink" title="参数介绍"></a>参数介绍</h5><ul><li><code>func</code> : 对 数据累加的函数</li><li><code>list</code> : 需要处理的列表</li></ul><h5 id="举例-2"><a href="#举例-2" class="headerlink" title="举例"></a>举例</h5><ul><li><code>res = reduce(lambda x,y: x + y, [0,1,2])</code></li></ul><h5 id="返回值-2"><a href="#返回值-2" class="headerlink" title="返回值"></a>返回值</h5><ul><li>数字  <code>-&gt;</code> 3</li></ul><h5 id="reduce的导入"><a href="#reduce的导入" class="headerlink" title="reduce的导入"></a>reduce的导入</h5><ul><li><code>from functools import reduce</code></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> reduce</span><br><span class="line"></span><br><span class="line">frunts = [<span class="string">&#x27;apple&#x27;</span>, <span class="string">&#x27;banana&#x27;</span>, <span class="string">&#x27;orange&#x27;</span>]</span><br><span class="line"></span><br><span class="line">result = <span class="built_in">filter</span>(<span class="keyword">lambda</span> x: <span class="string">&#x27;e&#x27;</span> <span class="keyword">in</span> x, frunts)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>(result))</span><br><span class="line"><span class="built_in">print</span>(frunts)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">filter_func</span>(<span class="params">item</span>):</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;e&#x27;</span> <span class="keyword">in</span> item:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;--------&#x27;</span>)</span><br><span class="line">filter_result = <span class="built_in">filter</span>(filter_func, frunts)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>(filter_result))</span><br><span class="line"></span><br><span class="line">map_result = <span class="built_in">map</span>(filter_func, frunts)  <span class="comment"># &gt; all</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>(map_result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">reduce_result = reduce(<span class="keyword">lambda</span> x, y: x + y, [<span class="number">2</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">100</span>])</span><br><span class="line"><span class="built_in">print</span>(reduce_result)</span><br><span class="line"></span><br><span class="line">reduce_result_str = reduce(<span class="keyword">lambda</span> x, y: x + y, frunts)</span><br><span class="line"><span class="built_in">print</span>(reduce_result_str)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本节课主要学习了&lt;br&gt;3个 Python中的高级函数(魔法函数) 分别是 filter,map,reduce</summary>
    
    
    
    <category term="Python" scheme="https://coding.maylove.pub/categories/Python/"/>
    
    
    <category term="常用函数" scheme="https://coding.maylove.pub/tags/%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/"/>
    
    <category term="高级函数" scheme="https://coding.maylove.pub/tags/%E9%AB%98%E7%BA%A7%E5%87%BD%E6%95%B0/"/>
    
  </entry>
  
</feed>
