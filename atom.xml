<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ZkeqのCoding日志</title>
  
  <subtitle>Python Java Html 都在学</subtitle>
  <link href="https://code.maylove.pub/atom.xml" rel="self"/>
  
  <link href="https://code.maylove.pub/"/>
  <updated>2021-10-04T12:57:29.253Z</updated>
  <id>https://code.maylove.pub/</id>
  
  <author>
    <name>Zkeq</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Python 集合的isdisjoint函数</title>
    <link href="https://code.maylove.pub/00310efa09de/"/>
    <id>https://code.maylove.pub/00310efa09de/</id>
    <published>2021-10-04T12:52:13.000Z</published>
    <updated>2021-10-04T12:57:29.253Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="集合的isdisjoint函数"><a href="#集合的isdisjoint函数" class="headerlink" title="集合的isdisjoint函数"></a>集合的isdisjoint函数</h3><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li>判断两个<code>集合</code>是否包含<strong>相同的元素</strong> , 如果<strong>没有</strong>返回<code>True</code> , 否则返回<code>False</code></li><li><code>没有</code>才返回<strong>True</strong></li></ul><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><ul><li><code>a_set.isdisjoint(b_set)</code></li></ul><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><ul><li><code>b_set</code> : 与当前集合用来判断的集合</li></ul><h4 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h4><ul><li>返回一个<strong>布尔值</strong><code>True</code>或<code>False</code></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">company_not_allow = &#123;<span class="string">&#x27;女&#x27;</span>, <span class="string">&#x27;喝酒&#x27;</span>, <span class="string">&#x27;抽烟&#x27;</span>, <span class="string">&#x27;睡懒觉&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line">one_player = &#123;<span class="string">&#x27;男&#x27;</span>, <span class="string">&#x27;跑步&#x27;</span>, <span class="string">&#x27;朝气&#x27;</span>, <span class="string">&#x27;喝酒&#x27;</span>&#125;</span><br><span class="line">two_player = &#123;<span class="string">&#x27;女&#x27;</span>, <span class="string">&#x27;生活规律&#x27;</span>, <span class="string">&#x27;跆拳道&#x27;</span>&#125;</span><br><span class="line">three_player = &#123;<span class="string">&#x27;男&#x27;</span>, <span class="string">&#x27;太极拳&#x27;</span>&#125;</span><br><span class="line">four_player = &#123;<span class="string">&#x27;男&#x27;</span>, <span class="string">&#x27;空手道&#x27;</span>, <span class="string">&#x27;年轻&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(company_not_allow.isdisjoint(one_player))</span><br><span class="line"><span class="built_in">print</span>(company_not_allow.isdisjoint(two_player))</span><br><span class="line"><span class="built_in">print</span>(company_not_allow.isdisjoint(three_player))</span><br><span class="line"><span class="built_in">print</span>(company_not_allow.isdisjoint(four_player))</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本节课主要学习了:&lt;br&gt;isdisjoint函数&lt;br&gt;判断两个元素是否包含相同元素</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="集合" scheme="https://code.maylove.pub/tags/%E9%9B%86%E5%90%88/"/>
    
  </entry>
  
  <entry>
    <title>Python 集合的并集--union函数</title>
    <link href="https://code.maylove.pub/e8a9c829e273/"/>
    <id>https://code.maylove.pub/e8a9c829e273/</id>
    <published>2021-10-04T12:52:03.000Z</published>
    <updated>2021-10-04T12:55:53.440Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="集合的并集–union函数"><a href="#集合的并集–union函数" class="headerlink" title="集合的并集–union函数"></a>集合的并集–<code>union函数</code></h3><h4 id="什么是并集"><a href="#什么是并集" class="headerlink" title="什么是并集"></a>什么是并集</h4><ul><li><code>a , b 两个集合</code>中所有的<strong>元素</strong>(去除重复)即为a与b的<code>并集</code></li><li><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-10-4/1.png" alt="1"></li></ul><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li>返回<strong>多个集合</strong>的<code>并集</code>,即包含了<strong>所有集合</strong>的元素,<strong>重复的元素</strong><code>只会出现一次</code></li></ul><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><ul><li>a_set.union(b_set…)</li></ul><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><ul><li><code>b_set...</code>: 与<code>当前集合</code>对比的<strong>1或多个集合</strong></li></ul><h4 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h4><ul><li>返回<strong>原始集合</strong>与<strong>对比集合</strong>的<code>并集</code></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">a_school = [<span class="string">&#x27;周五半天&#x27;</span>, <span class="string">&#x27;免费周末培训&#x27;</span>, <span class="string">&#x27;周五休息&#x27;</span>]</span><br><span class="line">b_school = [<span class="string">&#x27;放学时间从6点改为5点&#x27;</span>, <span class="string">&#x27;作业少留点&#x27;</span>, <span class="string">&#x27;换舒服的座椅&#x27;</span>]</span><br><span class="line">c_school = [<span class="string">&#x27;作业少留点&#x27;</span>, <span class="string">&#x27;周五半天&#x27;</span>, <span class="string">&#x27;伙食改善&#x27;</span>]</span><br><span class="line"></span><br><span class="line">a_set = <span class="built_in">set</span>(a_school)</span><br><span class="line">b_set = <span class="built_in">set</span>(b_school)</span><br><span class="line">c_set = <span class="built_in">set</span>(c_school)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(a_set)</span><br><span class="line"><span class="built_in">print</span>(b_set)</span><br><span class="line"><span class="built_in">print</span>(c_set)</span><br><span class="line"></span><br><span class="line"><span class="comment"># help_date = a_set.union(b_set, c_set)</span></span><br><span class="line">help_date = a_set.union(b_school, c_school)</span><br><span class="line"><span class="built_in">print</span>(help_date)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(help_date))</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本节课主要学习了:&lt;br&gt;union函数&lt;br&gt;并集的使用方法</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="集合" scheme="https://code.maylove.pub/tags/%E9%9B%86%E5%90%88/"/>
    
  </entry>
  
  <entry>
    <title>Python 集合的交集--intersection函数</title>
    <link href="https://code.maylove.pub/accc6957dd99/"/>
    <id>https://code.maylove.pub/accc6957dd99/</id>
    <published>2021-10-04T12:51:48.000Z</published>
    <updated>2021-10-04T12:55:18.674Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="集合的交集–intersection函数"><a href="#集合的交集–intersection函数" class="headerlink" title="集合的交集–intersection函数"></a>集合的交集–<code>intersection函数</code></h3><h4 id="什么是交集"><a href="#什么是交集" class="headerlink" title="什么是交集"></a>什么是交集</h4><ul><li>a , b两个集合分别拥有的<code>相同</code>的元素集 , 称为a与b的交集</li><li><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-10-4/1.png" alt="1"></li></ul><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li>返回<strong>两个或更多集合</strong>中<code>都包含</code>的元素,即交集</li></ul><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><ul><li><code>a_set.intersection(b_set...)</code></li></ul><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><p><code>b_set...</code>:  与当前集合对比的<strong>1或多个集合</strong></p><h4 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h4><ul><li>返回<strong>原始集合</strong>与<strong>对比集合</strong>的<code>交集</code></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">a = [<span class="string">&#x27;dewei&#x27;</span>, <span class="string">&#x27;xiaomu&#x27;</span>, <span class="string">&#x27;xiaohua&#x27;</span>, <span class="string">&#x27;xiaoguo&#x27;</span>]</span><br><span class="line">b = [<span class="string">&#x27;xiaohua&#x27;</span>, <span class="string">&#x27;dewei&#x27;</span>, <span class="string">&#x27;xiaoman&#x27;</span>, <span class="string">&#x27;xiaolin&#x27;</span>]</span><br><span class="line">c = [<span class="string">&#x27;xiaoguang&#x27;</span>, <span class="string">&#x27;xiaobai&#x27;</span>, <span class="string">&#x27;dewei&#x27;</span>, <span class="string">&#x27;xiaoyuan&#x27;</span>]</span><br><span class="line"></span><br><span class="line">a_set = <span class="built_in">set</span>(a)</span><br><span class="line">b_set = <span class="built_in">set</span>(b)</span><br><span class="line">c_set = <span class="built_in">set</span>(c)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(a_set, b_set, c_set)</span><br><span class="line"></span><br><span class="line">result = a_set.intersection(b_set, c_set)</span><br><span class="line">xiaotou = <span class="built_in">list</span>(result)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; 是 这个小偷&#x27;</span>.<span class="built_in">format</span>(xiaotou[<span class="number">0</span>]))</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本节课主要学习了:&lt;br&gt;intersection函数&lt;br&gt;交集的使用方法</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="集合" scheme="https://code.maylove.pub/tags/%E9%9B%86%E5%90%88/"/>
    
  </entry>
  
  <entry>
    <title>Python 集合的差集--difference函数</title>
    <link href="https://code.maylove.pub/bb2cff969079/"/>
    <id>https://code.maylove.pub/bb2cff969079/</id>
    <published>2021-10-04T12:51:28.000Z</published>
    <updated>2021-10-04T12:54:42.045Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="集合的差集–difference函数"><a href="#集合的差集–difference函数" class="headerlink" title="集合的差集–difference函数"></a>集合的差集–<code>difference函数</code></h3><h4 id="什么是差集"><a href="#什么是差集" class="headerlink" title="什么是差集"></a>什么是差集</h4><ul><li>a, b两个集合 , 由所有属于a且不属于b的元素组成的集合叫做a与b的差集</li><li><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-10-4/1.png" alt="1"></li></ul><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li><code>返回集合的差集</code> , 即<strong>返回的集合元素</strong><code>包含在第一个集合中</code>, 但<code>不包含在第二个集合</code>(方法的参数)中</li></ul><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><ul><li><code>a_set.difference(b_set)</code></li></ul><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><ul><li><code>b_set</code> : 当前集合<strong>需要对比的集合</strong></li></ul><h4 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h4><ul><li><strong>返回</strong><code>原始集合</code>于<code>对比集合</code>的<code>差集</code></li><li>(即a_set与b_set的差集)</li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">drivers = [<span class="string">&#x27;dewei&#x27;</span>, <span class="string">&#x27;xiaomu&#x27;</span>, <span class="string">&#x27;xiaoming&#x27;</span>, <span class="string">&#x27;xiaoman&#x27;</span>]</span><br><span class="line">testers = [<span class="string">&#x27;xiaomu&#x27;</span>, <span class="string">&#x27;xiaoman&#x27;</span>, <span class="string">&#x27;xiaogang&#x27;</span>, <span class="string">&#x27;xiaotao&#x27;</span>]</span><br><span class="line"></span><br><span class="line">driver_set = <span class="built_in">set</span>(drivers)</span><br><span class="line">test_set = <span class="built_in">set</span>(testers)</span><br><span class="line"></span><br><span class="line">sample_drives = driver_set.difference(test_set)</span><br><span class="line"><span class="built_in">print</span>(sample_drives)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本节课主要学习了:&lt;br&gt;difference函数&lt;br&gt;差集的使用方法</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="集合" scheme="https://code.maylove.pub/tags/%E9%9B%86%E5%90%88/"/>
    
  </entry>
  
  <entry>
    <title>Python 集合的增删改</title>
    <link href="https://code.maylove.pub/697e4a85a0ab/"/>
    <id>https://code.maylove.pub/697e4a85a0ab/</id>
    <published>2021-10-04T12:51:06.000Z</published>
    <updated>2021-10-04T12:53:28.797Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="集合的增删改"><a href="#集合的增删改" class="headerlink" title="集合的增删改"></a>集合的增删改</h3><h4 id="集合的add函数"><a href="#集合的add函数" class="headerlink" title="集合的add函数"></a>集合的<code>add函数</code></h4><h5 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h5><ul><li>用于集合中<code>添加一个元素</code>,如果集合中<strong>已存在该元素</strong>则该元素<strong>不执行</strong></li></ul><h5 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h5><ul><li><code>set.add(item)</code></li></ul><h5 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h5><ul><li><code>item</code> : 要<strong>添加到集合中的元素</strong></li></ul><h5 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h5><ul><li>无返回值</li></ul><hr><h4 id="集合的update函数"><a href="#集合的update函数" class="headerlink" title="集合的update函数"></a>集合的update函数</h4><h5 id="功能-1"><a href="#功能-1" class="headerlink" title="功能"></a>功能</h5><ul><li>加入一个<code>新的集合(或列表, 元组, 字符串)</code>, 如新集合内的元素在原集合中<strong>存在则无视</strong></li></ul><h5 id="用法-1"><a href="#用法-1" class="headerlink" title="用法"></a>用法</h5><ul><li><code>set.update(iterable)</code></li><li>传入字符串的时候会被拆开….</li></ul><h5 id="参数-1"><a href="#参数-1" class="headerlink" title="参数"></a>参数</h5><ul><li><code>iterable</code> : 集合,列表元组字符串</li></ul><h5 id="返回值-1"><a href="#返回值-1" class="headerlink" title="返回值"></a>返回值</h5><ul><li><code>无</code>返回值 , <strong>直接作用于原集合</strong></li></ul><hr><h4 id="集合的remove函数"><a href="#集合的remove函数" class="headerlink" title="集合的remove函数"></a>集合的remove函数</h4><h5 id="功能-2"><a href="#功能-2" class="headerlink" title="功能"></a>功能</h5><ul><li>将集合中的某个元素<code>删除</code> , 如元素<code>不存在</code>将会<strong>报错</strong></li></ul><h5 id="用法-2"><a href="#用法-2" class="headerlink" title="用法"></a>用法</h5><ul><li>set.remove(item)  #   注意是元素不是索引</li></ul><h5 id="参数-2"><a href="#参数-2" class="headerlink" title="参数"></a>参数</h5><ul><li><code>item</code> : 当前集合中的<strong>一个元素</strong></li></ul><h5 id="返回值-2"><a href="#返回值-2" class="headerlink" title="返回值"></a>返回值</h5><ul><li><strong>无返回值</strong> , 直接作用于<strong>原集合</strong></li></ul><hr><h4 id="集合的clear函数"><a href="#集合的clear函数" class="headerlink" title="集合的clear函数"></a>集合的clear函数</h4><h5 id="功能-3"><a href="#功能-3" class="headerlink" title="功能"></a>功能</h5><ul><li>清空<strong>当前集合</strong>中的<code>所有元素</code></li></ul><h5 id="用法-3"><a href="#用法-3" class="headerlink" title="用法"></a>用法</h5><ul><li><code>set.clear()</code></li></ul><h5 id="参数-3"><a href="#参数-3" class="headerlink" title="参数"></a>参数</h5><ul><li><code>无</code></li></ul><h5 id="返回值-3"><a href="#返回值-3" class="headerlink" title="返回值"></a>返回值</h5><ul><li><code>无返回值</code> , 直接作用于<strong>原集合</strong></li></ul><hr><h4 id="用del删除集合"><a href="#用del删除集合" class="headerlink" title="用del删除集合"></a>用del删除集合</h4><ul><li>只能直接删除集合对象自身</li></ul><hr><h4 id="重要说明"><a href="#重要说明" class="headerlink" title="重要说明"></a>重要说明</h4><ul><li>集合无法通过索引获取元素</li><li>集合无获取元素的任何方法</li><li>集合只是用来处理列表或元组的一种临时类型 , 它不适合存储于运输</li></ul><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">a_list = [<span class="string">&#x27;python&#x27;</span>, <span class="string">&#x27;django&#x27;</span>, <span class="string">&#x27;django&#x27;</span>, <span class="string">&#x27;flask&#x27;</span>]</span><br><span class="line"></span><br><span class="line">a_set = <span class="built_in">set</span>()</span><br><span class="line"></span><br><span class="line">a_set.add(a_list[<span class="number">0</span>])</span><br><span class="line">a_set.add(a_list[<span class="number">1</span>])</span><br><span class="line">a_set.add(a_list[<span class="number">2</span>])</span><br><span class="line">a_set.add(a_list[-<span class="number">1</span>])</span><br><span class="line"><span class="built_in">print</span>(a_set)</span><br><span class="line"></span><br><span class="line">a_set.add(<span class="literal">True</span>)</span><br><span class="line">a_set.add(<span class="literal">None</span>)</span><br><span class="line"><span class="built_in">print</span>(a_set)</span><br><span class="line"></span><br><span class="line">a_tuple = (<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>)</span><br><span class="line">a_set.update(a_tuple)</span><br><span class="line"><span class="built_in">print</span>(a_set)</span><br><span class="line">a_set.update(<span class="string">&#x27;python&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(a_set)</span><br><span class="line"></span><br><span class="line">a_set.remove(<span class="string">&#x27;python&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(a_set)</span><br><span class="line"></span><br><span class="line">a_set.clear()</span><br><span class="line"><span class="built_in">print</span>(a_set)</span><br><span class="line"><span class="keyword">del</span> a_set</span><br><span class="line"></span><br><span class="line"><span class="comment"># a_set.remove(&#x27;flask&#x27;)</span></span><br><span class="line"><span class="comment"># print(a_set)</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本节课主要学习了:&lt;br&gt;集合的add,update,remove,clear函数&lt;br&gt;和del的注意事项</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="集合" scheme="https://code.maylove.pub/tags/%E9%9B%86%E5%90%88/"/>
    
  </entry>
  
  <entry>
    <title>Python 初识集合</title>
    <link href="https://code.maylove.pub/65bbd4967d97/"/>
    <id>https://code.maylove.pub/65bbd4967d97/</id>
    <published>2021-10-04T12:46:30.000Z</published>
    <updated>2021-10-04T12:50:32.693Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="初识集合"><a href="#初识集合" class="headerlink" title="初识集合"></a>初识集合</h3><h4 id="什么是集合"><a href="#什么是集合" class="headerlink" title="什么是集合"></a>什么是集合</h4><ul><li><code>集合(set)</code>是一个无序的不重复元素序列</li><li>常用来对两个列表进行交并差的处理</li><li>集合与列表一样, 支持所有的数据类型(<strong>所有不可变的数据类型</strong>)</li></ul><h4 id="集合与列表的区别"><a href="#集合与列表的区别" class="headerlink" title="集合与列表的区别"></a>集合与列表的区别</h4><table><thead><tr><th align="center">功能</th><th align="center">列表</th><th align="center">集合</th></tr></thead><tbody><tr><td align="center">顺序</td><td align="center">有序</td><td align="center">无序</td></tr><tr><td align="center">内容</td><td align="center">可重复</td><td align="center">不可重复</td></tr><tr><td align="center">功能</td><td align="center">用于数据的使用</td><td align="center">用于数据的交集并集差集的获取</td></tr><tr><td align="center">索引</td><td align="center">有索引</td><td align="center">无索引</td></tr><tr><td align="center">符号</td><td align="center">[] [1,2,3]</td><td align="center">{} {1,2,3}</td></tr></tbody></table><h4 id="集合的创建方法"><a href="#集合的创建方法" class="headerlink" title="集合的创建方法"></a>集合的创建方法</h4><ul><li>通过<code>set函数</code>来创建集合,<code>不能使用&#123;&#125;</code> 来创建<strong>空集合</strong></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">a = <span class="built_in">set</span>()</span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(a))</span><br><span class="line"></span><br><span class="line">b = <span class="built_in">set</span>([<span class="string">&#x27;python&#x27;</span>, <span class="string">&#x27;django&#x27;</span>, <span class="string">&#x27;flask&#x27;</span>])</span><br><span class="line"><span class="built_in">print</span>(b)</span><br><span class="line"></span><br><span class="line">c = &#123;(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>), <span class="string">&#x27;123&#x27;</span>, <span class="number">1</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(c)</span><br><span class="line"></span><br><span class="line">d = &#123;&#125;</span><br><span class="line"><span class="built_in">print</span>(d, <span class="built_in">type</span>(d))</span><br><span class="line"></span><br><span class="line">a_list = [<span class="string">&#x27;python&#x27;</span>, <span class="string">&#x27;django&#x27;</span>, <span class="string">&#x27;python&#x27;</span>, <span class="string">&#x27;flask&#x27;</span>]</span><br><span class="line">b_set = <span class="built_in">set</span>(a_list)</span><br><span class="line"><span class="built_in">print</span>(b_set)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本节课主要学习了:&lt;br&gt;集合的定义以及与列表的区别&lt;br&gt;和创建方法的注意事项</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="集合" scheme="https://code.maylove.pub/tags/%E9%9B%86%E5%90%88/"/>
    
  </entry>
  
  <entry>
    <title>Python 所有数据类型与布尔值的关系</title>
    <link href="https://code.maylove.pub/e614b7c29c00/"/>
    <id>https://code.maylove.pub/e614b7c29c00/</id>
    <published>2021-10-04T00:46:07.000Z</published>
    <updated>2021-10-04T01:06:00.199Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="所有数据类型与布尔值的关系"><a href="#所有数据类型与布尔值的关系" class="headerlink" title="所有数据类型与布尔值的关系"></a>所有数据类型与布尔值的关系</h3><ul><li>字符串, 数字, 列表, 元组, 字典, 空类型 与 布尔值 的关系总结</li></ul><h4 id="明确两点"><a href="#明确两点" class="headerlink" title="明确两点"></a>明确两点</h4><ol><li>每一种数据类型,自身的值都有表示True与False</li><li>not对于一切结果取反</li><li>非0 非空都为True 其他都为False</li></ol><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-10-3/4.jpg" alt="4"></p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">a_1 = <span class="number">1</span></span><br><span class="line">a_2 = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bool</span>(a_1))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bool</span>(a_2))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bool</span>(<span class="keyword">not</span> a_1))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bool</span>(<span class="keyword">not</span> a_2))</span><br><span class="line"></span><br><span class="line">b_1 = <span class="string">&#x27;1&#x27;</span></span><br><span class="line">b_2 = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;----------&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bool</span>(b_1))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bool</span>(b_2))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bool</span>(<span class="keyword">not</span> b_1))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bool</span>(<span class="keyword">not</span> b_2))</span><br><span class="line"></span><br><span class="line">c_1 = <span class="literal">True</span></span><br><span class="line">c_2 = <span class="literal">False</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;-----------&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(c_1)</span><br><span class="line"><span class="built_in">print</span>(c_2)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="keyword">not</span> c_1)</span><br><span class="line"><span class="built_in">print</span>(<span class="keyword">not</span> c_2)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本节课主要学习了:&lt;br&gt;所有数据类型与布尔值的关系</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="字典" scheme="https://code.maylove.pub/tags/%E5%AD%97%E5%85%B8/"/>
    
  </entry>
  
  <entry>
    <title>Python 字典中的末尾删除函数--popitem</title>
    <link href="https://code.maylove.pub/ee4436b63343/"/>
    <id>https://code.maylove.pub/ee4436b63343/</id>
    <published>2021-10-04T00:45:46.000Z</published>
    <updated>2021-10-04T01:05:37.568Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="字典中的末尾删除函数–popitem"><a href="#字典中的末尾删除函数–popitem" class="headerlink" title="字典中的末尾删除函数–popitem"></a>字典中的末尾删除函数–<code>popitem</code></h3><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li>删除当前字典<code>末尾一组键值对</code>并将其返回</li></ul><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><ul><li><code>dict.popitem()</code>  –  无需传参</li><li><code>&gt;&gt; 返回被删除的键值对,用元组包裹 0索引是key, 1索引是value</code></li></ul><h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><ul><li>如字典为空,则直接报错</li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">students = &#123;<span class="string">&#x27;dewei&#x27;</span>: <span class="string">&#x27;到&#x27;</span>, <span class="string">&#x27;xiaomu&#x27;</span>: <span class="string">&#x27;在&#x27;</span>, <span class="string">&#x27;xiaoyun&#x27;</span>: <span class="string">&#x27;在呢&#x27;</span>, <span class="string">&#x27;xiaogao&#x27;</span>: <span class="string">&#x27;在&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;xiaogao 在吗&#x27;</span>)</span><br><span class="line">xiaogao = students.popitem()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125;喊&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(xiaogao[<span class="number">0</span>], xiaogao[<span class="number">1</span>]))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;xiaoyun 在吗&#x27;</span>)</span><br><span class="line">xiaoyun = students.popitem()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125;喊&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(xiaoyun[<span class="number">0</span>], xiaoyun[<span class="number">1</span>]))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;xiaomu 在吗&#x27;</span>)</span><br><span class="line">xiaomu = students.popitem()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125;喊&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(xiaomu[<span class="number">0</span>], xiaomu[<span class="number">1</span>]))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;dewei在吗&#x27;</span>)</span><br><span class="line">dewei = students.popitem()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125;喊&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(dewei[<span class="number">0</span>], dewei[<span class="number">1</span>]))</span><br><span class="line"><span class="built_in">print</span>(students)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本节课主要学习了:&lt;br&gt;popitem的用法和注意事项</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="字典" scheme="https://code.maylove.pub/tags/%E5%AD%97%E5%85%B8/"/>
    
  </entry>
  
  <entry>
    <title>Python 字典中的成员判断</title>
    <link href="https://code.maylove.pub/69524697f433/"/>
    <id>https://code.maylove.pub/69524697f433/</id>
    <published>2021-10-04T00:45:25.000Z</published>
    <updated>2021-10-04T01:05:02.585Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="字典中的成员判断"><a href="#字典中的成员判断" class="headerlink" title="字典中的成员判断"></a>字典中的成员判断</h3><h4 id="in-与-not-in在字典中的用法"><a href="#in-与-not-in在字典中的用法" class="headerlink" title="in 与 not in在字典中的用法"></a><code>in</code> 与 <code>not in</code>在字典中的用法</h4><ul><li>只能判断<code>key</code>是否存在</li></ul><h4 id="get用于判断成员存在"><a href="#get用于判断成员存在" class="headerlink" title="get用于判断成员存在"></a><code>get</code>用于判断成员存在</h4><ul><li><code>bool(test_dict.get(&#39;name&#39;))</code></li><li>字典中的类型可能为<code>False类型</code>…<strong>有待商榷</strong></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">default_dict = &#123;<span class="string">&#x27;a&#x27;</span>: <span class="literal">None</span>, <span class="string">&#x27;b&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;c&#x27;</span>: <span class="number">0</span>, <span class="string">&#x27;d&#x27;</span>: <span class="string">&#x27;&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;a&#x27;</span> <span class="keyword">in</span> default_dict)</span><br><span class="line"><span class="built_in">print</span>(default_dict[<span class="string">&#x27;a&#x27;</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bool</span>(default_dict.get(<span class="string">&#x27;a&#x27;</span>)))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bool</span>(default_dict.get(<span class="string">&#x27;b&#x27;</span>)))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;f&#x27;</span> <span class="keyword">in</span> default_dict)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;f&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> default_dict)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本节课主要学习了:&lt;br&gt;in 与 not in&lt;br&gt;[]以及get的用法</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="字典" scheme="https://code.maylove.pub/tags/%E5%AD%97%E5%85%B8/"/>
    
  </entry>
  
  <entry>
    <title>Python 字典的复制--copy函数</title>
    <link href="https://code.maylove.pub/87bad7ab2468/"/>
    <id>https://code.maylove.pub/87bad7ab2468/</id>
    <published>2021-10-04T00:45:10.000Z</published>
    <updated>2021-10-04T01:16:19.031Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="字典的复制–copy函数"><a href="#字典的复制–copy函数" class="headerlink" title="字典的复制–copy函数"></a>字典的复制–copy函数</h3><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li>将当前字典复制一个新的字典</li></ul><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><ul><li><code>dict.copy()</code>  -&gt; 该函数<strong>无参数</strong>, 返回一个一模一样的<code>内存地址不同的字典</code><ul><li>!= 可以判断两个成员是否相同</li></ul></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">fruits = &#123;</span><br><span class="line">    <span class="string">&#x27;apple&#x27;</span>: <span class="number">30</span>,</span><br><span class="line">    <span class="string">&#x27;banana&#x27;</span>: <span class="number">50</span>,</span><br><span class="line">    <span class="string">&#x27;pear&#x27;</span>: <span class="number">100</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">real_fruits = fruits.copy()</span><br><span class="line">fruits[<span class="string">&#x27;apple&#x27;</span>] = <span class="number">60</span></span><br><span class="line"><span class="built_in">print</span>(real_fruits)</span><br><span class="line"></span><br><span class="line">real_fruits[<span class="string">&#x27;orange&#x27;</span>] = <span class="number">50</span></span><br><span class="line">real_fruits.update(&#123;<span class="string">&#x27;cherry&#x27;</span>: <span class="number">100</span>&#125;)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(real_fruits)</span><br><span class="line"><span class="comment"># print(fruits)</span></span><br><span class="line">real_fruits[<span class="string">&#x27;apple&#x27;</span>] = real_fruits[<span class="string">&#x27;apple&#x27;</span>] - <span class="number">5</span></span><br><span class="line"><span class="built_in">print</span>(real_fruits)</span><br><span class="line">real_fruits[<span class="string">&#x27;pear&#x27;</span>] -= <span class="number">3</span></span><br><span class="line"><span class="built_in">print</span>(real_fruits)</span><br><span class="line"></span><br><span class="line">real_fruits.clear()</span><br><span class="line"><span class="built_in">print</span>(real_fruits)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;第二天......&#x27;</span>)</span><br><span class="line">real_fruits = fruits.copy()</span><br><span class="line"><span class="built_in">print</span>(real_fruits)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本节课主要学习了:&lt;br&gt;copy函数的功能和用法</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="字典" scheme="https://code.maylove.pub/tags/%E5%AD%97%E5%85%B8/"/>
    
  </entry>
  
  <entry>
    <title>Python 字典的删除</title>
    <link href="https://code.maylove.pub/ea97ba53d454/"/>
    <id>https://code.maylove.pub/ea97ba53d454/</id>
    <published>2021-10-04T00:44:49.000Z</published>
    <updated>2021-10-04T01:03:48.447Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="字典的删除"><a href="#字典的删除" class="headerlink" title="字典的删除"></a>字典的删除</h3><h4 id="clear函数"><a href="#clear函数" class="headerlink" title="clear函数"></a>clear函数</h4><h5 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h5><ul><li>清空当前字典中所有数据</li></ul><h5 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h5><ul><li><code>dict.clear()</code>  -&gt; <strong>无参数</strong>,<strong>无返回值</strong></li></ul><h4 id="pop函数的功能与用法"><a href="#pop函数的功能与用法" class="headerlink" title="pop函数的功能与用法"></a>pop函数的功能与用法</h4><h5 id="功能-1"><a href="#功能-1" class="headerlink" title="功能"></a>功能</h5><ul><li><strong>删除</strong>字典中<code>指定的key</code>,并<strong>将其结果返回</strong>,如果<strong>key不存在则报错</strong></li></ul><h5 id="用法-1"><a href="#用法-1" class="headerlink" title="用法"></a>用法</h5><ul><li>dict.pop(key)  –  key 希望被删掉的键</li><li><code>&gt;&gt;返回这个key对应的值(value)</code></li></ul><h4 id="del-在字典中的用法"><a href="#del-在字典中的用法" class="headerlink" title="del 在字典中的用法"></a>del 在字典中的用法</h4><ul><li>```python<br>my_dict = {‘name’: ‘dewei’, ‘age’: 33}del my_dict[‘name’]<br>print(my_dict)<blockquote><blockquote><p>{‘age’: 33}</p></blockquote></blockquote>del my_dict<br>print(my_dict) -&gt; 报错 , 整个字典对象已被删除<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#### 代码</span><br><span class="line"></span><br><span class="line">```python</span><br><span class="line"># coding:utf-8</span><br><span class="line"></span><br><span class="line">projects = &#123;</span><br><span class="line">    &#x27;ipad&#x27;: &#123;&#x27;name&#x27;: &#x27;ipad&#x27;, &#x27;price&#x27;: 2200, &#x27;decs&#x27;: &#x27;平板电脑&#x27;&#125;,</span><br><span class="line">    &#x27;iphone&#x27;: &#123;&#x27;name&#x27;: &#x27;iphone&#x27;, &#x27;price&#x27;: 3000, &#x27;desc&#x27;: &#x27;智能手机&#x27;&#125;,</span><br><span class="line">    &#x27;pc&#x27;: &#123;&#x27;name&#x27;: &#x27;pc&#x27;, &#x27;price&#x27;: 5000, &#x27;desc&#x27;: &#x27;台式电脑&#x27;&#125;,</span><br><span class="line">    &#x27;mac&#x27;: &#123;&#x27;name&#x27;: &#x27;mac&#x27;, &#x27;price&#x27;: 8000, &#x27;desc&#x27;: &#x27;平板电脑&#x27;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">print(projects.keys())</span><br><span class="line"></span><br><span class="line">print(&#x27;一个中学生购买了&#123;&#125;,价格是&#123;&#125;&#x27;.format(projects[&#x27;pc&#x27;][&#x27;name&#x27;], projects[&#x27;pc&#x27;][&#x27;price&#x27;]))</span><br><span class="line">projects.pop(&#x27;pc&#x27;)</span><br><span class="line">print(projects.keys())</span><br><span class="line"></span><br><span class="line">result = projects.pop(&#x27;mac&#x27;)</span><br><span class="line">print(&#x27;一个程序员购买了&#123;&#125;,它的价格是&#123;&#125;&#x27;.format(result[&#x27;name&#x27;], result[&#x27;price&#x27;]))</span><br><span class="line">print(projects.keys())</span><br><span class="line"></span><br><span class="line">print(&#x27;&#123;&#125; 和 &#123;&#125; 都被卖出了, 他们一共花费了&#123;&#125;元&#x27;.format(</span><br><span class="line">    projects[&#x27;ipad&#x27;][&#x27;name&#x27;], projects[&#x27;iphone&#x27;][&#x27;name&#x27;],</span><br><span class="line">    projects[&#x27;ipad&#x27;][&#x27;price&#x27;] + projects[&#x27;iphone&#x27;][&#x27;price&#x27;]</span><br><span class="line">))</span><br><span class="line">projects.clear()</span><br><span class="line">print(projects.keys())</span><br><span class="line"></span><br><span class="line">del  projects</span><br><span class="line"># print(projects)</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <summary type="html">本节课主要学习了:&lt;br&gt;clear函数和pop函数&lt;br&gt;[]以及del在字典中的用法</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="字典" scheme="https://code.maylove.pub/tags/%E5%AD%97%E5%85%B8/"/>
    
  </entry>
  
  <entry>
    <title>Python 字典key的获取</title>
    <link href="https://code.maylove.pub/a44f8b1037ba/"/>
    <id>https://code.maylove.pub/a44f8b1037ba/</id>
    <published>2021-10-04T00:44:34.000Z</published>
    <updated>2021-10-04T01:02:46.308Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="字典key的获取"><a href="#字典key的获取" class="headerlink" title="字典key的获取"></a>字典key的获取</h3><h4 id="的获取方法"><a href="#的获取方法" class="headerlink" title="[]的获取方法"></a>[]的获取方法</h4><ul><li>字典+中括号内传key , 不进行赋值操作` 即为获取</li><li>返回key对应的value值</li></ul><h4 id="内置函数get获取方法"><a href="#内置函数get获取方法" class="headerlink" title="内置函数get获取方法"></a>内置函数get获取方法</h4><h5 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h5><ul><li>获取当前字典中指定key对应的value</li></ul><h5 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h5><ul><li><code>dict.get(key, default=None)</code></li></ul><h5 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h5><ul><li><code>key</code> : 需要获取<strong>value</strong>的<strong>key</strong></li><li><code>default</code> : key<strong>不存在</strong>则返回此默认值 ,  默认是<code>None</code> , 我们也可以自定义(可以是任意类型)</li></ul><h4 id="与get的区别"><a href="#与get的区别" class="headerlink" title="[]与get的区别"></a>[]与get的区别</h4><ul><li><code>[]</code>如果获取的<strong>key不存在</strong>, 则**<code>直接报错</code>**</li><li><code>get</code>如果获取的<strong>key不存在</strong> ,  则<strong>返回默认值</strong></li><li>所以<strong>开发中</strong> , <strong>优先使用</strong><code>get函数</code></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">user_info = &#123;</span><br><span class="line">    <span class="string">&#x27;id&#x27;</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="string">&#x27;username&#x27;</span>: <span class="string">&#x27;dewei&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;password&#x27;</span>: <span class="string">&#x27;abcdefg&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;created_time&#x27;</span>: <span class="string">&#x27;2020-01-01 11:11:11&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;birthday&#x27;</span>: <span class="literal">None</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">values = []</span><br><span class="line">values.append(user_info[<span class="string">&#x27;id&#x27;</span>])</span><br><span class="line">values.append(user_info[<span class="string">&#x27;username&#x27;</span>])</span><br><span class="line">values.append(user_info[<span class="string">&#x27;password&#x27;</span>])</span><br><span class="line"><span class="comment"># values.append(user_info[&#x27;created_time&#x27;])</span></span><br><span class="line">values.append(user_info.get(<span class="string">&#x27;created_time&#x27;</span>, <span class="string">&#x27;2020-02-02&#x27;</span>))</span><br><span class="line"><span class="comment"># values.append(user_info[&#x27;birthday&#x27;])</span></span><br><span class="line">values.append(user_info.get(<span class="string">&#x27;birthday&#x27;</span>, <span class="string">&#x27;2020-03-03&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(values)</span><br><span class="line"><span class="comment"># values.append(user_info[&#x27;birthday&#x27;])</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># values.append(user_info.get(&#x27;birthday&#x27;, &#x27;1986-01-01&#x27;))</span></span><br><span class="line"><span class="comment"># print(values)</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本节课主要学习了:&lt;br&gt;内置函数get获取方法&lt;br&gt;[]的获取方法以及他们的区别</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="字典" scheme="https://code.maylove.pub/tags/%E5%AD%97%E5%85%B8/"/>
    
  </entry>
  
  <entry>
    <title>Python 字典的values函数</title>
    <link href="https://code.maylove.pub/c4a2fc9c82dd/"/>
    <id>https://code.maylove.pub/c4a2fc9c82dd/</id>
    <published>2021-10-04T00:44:17.000Z</published>
    <updated>2021-10-04T01:01:17.253Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="字典的values函数"><a href="#字典的values函数" class="headerlink" title="字典的values函数"></a>字典的values函数</h3><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li>获取<strong>当前字典</strong>中所有<code>键值对</code>中的<code>值(value)</code></li></ul><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><ul><li><code>dict.values()</code>  -&gt; <strong>无需传参</strong>, 返回一个<code>value集合</code>的<code>伪列表</code><ul><li>依旧是伪列表,不具有列表的所有功能</li></ul></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">project = &#123;<span class="string">&#x27;id&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;ipad&#x27;</span>, <span class="string">&#x27;price&#x27;</span>: <span class="number">2200</span>, <span class="string">&#x27;count&#x27;</span>: <span class="number">50</span>&#125;</span><br><span class="line"></span><br><span class="line">keys = <span class="built_in">list</span>(project.keys())</span><br><span class="line">values = <span class="built_in">list</span>(project.values())</span><br><span class="line"><span class="built_in">print</span>(keys)</span><br><span class="line"><span class="built_in">print</span>(values)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; | &#123;&#125;  | &#123;&#125; | &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(keys[<span class="number">0</span>], keys[<span class="number">1</span>], keys[<span class="number">2</span>], keys[<span class="number">3</span>]))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125;  | &#123;&#125;  | &#123;&#125;  | &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(values[<span class="number">0</span>], values[<span class="number">1</span>], values[<span class="number">2</span>], values[<span class="number">3</span>]))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;2  | iphone | 3000 | 50&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本节课主要学习了:&lt;br&gt;字典的values函数的功能和用法</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="字典" scheme="https://code.maylove.pub/tags/%E5%AD%97%E5%85%B8/"/>
    
  </entry>
  
  <entry>
    <title>Python 字典的keys函数</title>
    <link href="https://code.maylove.pub/3ae120011f42/"/>
    <id>https://code.maylove.pub/3ae120011f42/</id>
    <published>2021-10-04T00:43:53.000Z</published>
    <updated>2021-10-04T01:00:37.550Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="字典的keys函数"><a href="#字典的keys函数" class="headerlink" title="字典的keys函数"></a>字典的keys函数</h3><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li>获取当前字典中所有的<code>键(key)</code></li></ul><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><ul><li><code>dict.keys()</code>  -&gt; <strong>无需传参</strong>,返回一个<strong>key</strong>集合的<code>伪列表</code><ul><li><code>伪列表</code>不具备列表的所有功能</li></ul></li></ul><h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><ul><li>使用<code>list()函数</code>可以将<code>伪列表</code>转换为<code>列表</code></li><li>转换之后的列表具有<code>无重复成员</code>的特点</li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">project = &#123;<span class="string">&#x27;id&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;project_name&#x27;</span>: <span class="string">&#x27;ipad&#x27;</span>, <span class="string">&#x27;price&#x27;</span>: <span class="number">2200</span>, <span class="string">&#x27;count&#x27;</span>: <span class="number">30</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># project_title = project.keys()</span></span><br><span class="line">project_title = <span class="built_in">list</span>(project.keys())</span><br><span class="line"><span class="built_in">print</span>(project_title)</span><br><span class="line"><span class="comment"># print(project_title[0])</span></span><br><span class="line"><span class="comment"># project_title.append(&#x27;user&#x27;)</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(project_title))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(project_title[<span class="number">0</span>])</span><br><span class="line"><span class="built_in">print</span>(project_title[<span class="number">3</span>])</span><br><span class="line"><span class="built_in">print</span>(project_title[<span class="number">2</span>: <span class="number">6</span>])</span><br><span class="line">project_title.append(<span class="string">&#x27;user&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(project_title)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本节课主要学习了:&lt;br&gt;字典的keys函数&lt;br&gt;以及相关的注意事项</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="字典" scheme="https://code.maylove.pub/tags/%E5%AD%97%E5%85%B8/"/>
    
  </entry>
  
  <entry>
    <title>Python 总结 : 字典中添加数据的方法</title>
    <link href="https://code.maylove.pub/4e361d34199b/"/>
    <id>https://code.maylove.pub/4e361d34199b/</id>
    <published>2021-10-04T00:43:34.000Z</published>
    <updated>2021-10-04T01:00:03.051Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="总结-字典中添加数据的方法"><a href="#总结-字典中添加数据的方法" class="headerlink" title="总结 : 字典中添加数据的方法"></a>总结 : 字典中添加数据的方法</h3><blockquote><p>在字典中添加数据的方法有很多种，总结为以下几种</p></blockquote><h4 id="第一种：通过中括号的形式添加"><a href="#第一种：通过中括号的形式添加" class="headerlink" title="第一种：通过中括号的形式添加"></a>第一种：通过中括号的形式添加</h4><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-10-3/1.jpg" alt="1"></p><h4 id="第二种：字典的内置函数update"><a href="#第二种：字典的内置函数update" class="headerlink" title="第二种：字典的内置函数update"></a>第二种：字典的内置函数update</h4><ul><li><p>无论是添加还是修改都属于<code>更新字典</code></p></li><li><p>在<code>update括号</code>中传入一个新的字典<code>key</code>和<code>value</code>就可以了。字典会自己去检测<code>key</code>是否存在，存在就会覆盖。</p></li></ul><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-10-3/2.jpg" alt="2"></p><h4 id="第三种：字典的setdefault-函数"><a href="#第三种：字典的setdefault-函数" class="headerlink" title="第三种：字典的setdefault()函数"></a>第三种：字典的setdefault()函数</h4><ul><li>Python 字典 <code>setdefault() 函数</code>和 <code>get()方法</code> 类似, 如果键不存在于字典中，将会添加键并将值设为默认值，如果字典中包含有给定键，则返回该键对应的值，否则返回为该键设置的值。</li></ul><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-10-3/3.jpg" alt="3"></p>]]></content>
    
    
    <summary type="html">本节课主要总结了:&lt;br&gt;字典中添加数据的方法&lt;br&gt;是上节课的总结记录......</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="字典" scheme="https://code.maylove.pub/tags/%E5%AD%97%E5%85%B8/"/>
    
  </entry>
  
  <entry>
    <title>Python 字典添加修改数据的方法</title>
    <link href="https://code.maylove.pub/93a62aa43730/"/>
    <id>https://code.maylove.pub/93a62aa43730/</id>
    <published>2021-10-04T00:43:22.000Z</published>
    <updated>2021-10-04T00:58:41.635Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="字典添加修改数据的方法"><a href="#字典添加修改数据的方法" class="headerlink" title="字典添加修改数据的方法"></a>字典添加修改数据的方法</h3><h4 id="处理法"><a href="#处理法" class="headerlink" title="[]处理法"></a><code>[]</code>处理法</h4><blockquote><p>字符串,列表, <code>list[0] = 10</code></p></blockquote><ul><li>字典<strong>无</strong>索引</li><li><code>dict[ &#39;name&#39; ] =  &#39;dewei&#39;</code></li><li>添加或修改 ,  根据key是否存在所决定</li></ul><h4 id="字典的内置函数update"><a href="#字典的内置函数update" class="headerlink" title="字典的内置函数update"></a>字典的内置函数<code>update</code></h4><h5 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h5><ul><li>添加新的字典,如<strong>新字典</strong>中有和原字典相同的<code>key</code> , 则该<code>key</code>的<code>value</code>会被<strong>新字典</strong>的<code>value</code>覆盖</li></ul><h5 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h5><ul><li><code>dict.update(new_dict)</code> – 该函数无返回值</li></ul><h5 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h5><ul><li><code>new_dict</code> : 新的字典</li></ul><h4 id="字典的内置函数setdefault"><a href="#字典的内置函数setdefault" class="headerlink" title="字典的内置函数setdefault"></a>字典的内置函数<code>setdefault</code></h4><h5 id="功能-1"><a href="#功能-1" class="headerlink" title="功能"></a>功能</h5><ul><li>获取某个<code>key</code>的<code>value</code> , 如<code>key</code><strong>不存在</strong>于字典中 , 将会<code>添加key</code>并将<strong>value</strong>设为<strong>默认值</strong></li></ul><h5 id="用法-1"><a href="#用法-1" class="headerlink" title="用法"></a>用法</h5><ul><li>dict.setdefault(key, value)</li></ul><h5 id="参数-1"><a href="#参数-1" class="headerlink" title="参数"></a>参数</h5><ul><li><code>key</code> : 需要获取的<strong>key</strong></li><li><code>value</code> : 如果<strong>key</strong>不存在 , 对应这个<strong>key</strong>存入字典的默认值</li></ul><h4 id="注意事项再强调"><a href="#注意事项再强调" class="headerlink" title="注意事项再强调"></a>注意事项再强调</h4><ul><li>字典中每一个<code>key</code>一定是<strong>唯一</strong>的</li><li>字典中的数据量<strong>没有限制</strong></li><li>字典中的<code>value</code>可以是<strong>任何python的内置数据类型的对象和自定义的对象</strong></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">user = &#123;<span class="string">&#x27;username&#x27;</span>: <span class="string">&#x27;dewei&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">33</span>&#125;</span><br><span class="line">xiaomu = &#123;<span class="string">&#x27;username&#x27;</span>: <span class="string">&#x27;小慕&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">10</span>, <span class="string">&#x27;top&#x27;</span>: <span class="number">175</span>, <span class="string">&#x27;sex&#x27;</span>: <span class="string">&#x27;男&#x27;</span>&#125;</span><br><span class="line">user.update(xiaomu)</span><br><span class="line"><span class="built_in">print</span>(user)</span><br><span class="line"></span><br><span class="line">value = user.setdefault(<span class="string">&#x27;username&#x27;</span>, <span class="string">&#x27;xiaoyun&#x27;</span>)</span><br><span class="line">value = user.setdefault(<span class="string">&#x27;birthday&#x27;</span>, <span class="string">&#x27;2021-1-1&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(user, value)</span><br><span class="line"></span><br><span class="line"><span class="comment"># user[&#x27;top&#x27;] = 174</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># print(user)</span></span><br><span class="line"><span class="comment"># user[&#x27;username&#x27;] = &#x27;小慕&#x27;</span></span><br><span class="line"><span class="comment"># print(user)</span></span><br><span class="line"><span class="comment"># user[&#x27;top&#x27;] = 175</span></span><br><span class="line"><span class="comment"># user[&#x27;age&#x27;] = 10</span></span><br><span class="line"><span class="comment"># print(user)</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本节课主要学习了:&lt;br&gt;字典添加修改数据的方法&lt;br&gt;[] 、 update 以及 setdefault</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="字典" scheme="https://code.maylove.pub/tags/%E5%AD%97%E5%85%B8/"/>
    
  </entry>
  
  <entry>
    <title>Python 索引与切片之字符串</title>
    <link href="https://code.maylove.pub/fe406508a7f3/"/>
    <id>https://code.maylove.pub/fe406508a7f3/</id>
    <published>2021-10-01T14:43:45.000Z</published>
    <updated>2021-10-02T06:58:33.281Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="索引与切片之字符串"><a href="#索引与切片之字符串" class="headerlink" title="索引与切片之字符串"></a>索引与切片之字符串</h2><h4 id="字符串的索引-获取"><a href="#字符串的索引-获取" class="headerlink" title="字符串的索引 , 获取"></a>字符串的索引 , 获取</h4><ul><li>索引规则与列表相同</li><li>切片与索引的获取与列表相同</li><li><strong>无法</strong>通过索引修改与<strong>删除</strong></li><li>字符串<strong>不可修改</strong></li></ul><h4 id="字符串的find与index函数"><a href="#字符串的find与index函数" class="headerlink" title="字符串的find与index函数"></a>字符串的<code>find</code>与<code>index</code>函数</h4><h5 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h5><ul><li><strong>获取</strong>元素的<strong>索引位置</strong></li></ul><h5 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h5><ul><li><code>string.index(item)</code>  -&gt; <code>item</code>:查询个数的元素,返回索引位置</li><li><code>string.find(item)</code>     -&gt; <code>item</code>:查询个数的元素,返回索引位置</li><li>返回的是第一个字母的位置</li></ul><h5 id="区别"><a href="#区别" class="headerlink" title="区别"></a>区别</h5><ul><li><code>find</code>如果获取不到,返回<code>-1</code></li><li><code>index</code>如果获取不到,直接<code>报错</code></li></ul><h5 id="好题"><a href="#好题" class="headerlink" title="好题"></a>好题</h5><ul><li><code>list1 = [1, 2, 3, 4, 2]</code></li><li><code>print(list1.index(2))</code></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">name = <span class="string">&#x27;dewei&#x27;</span></span><br><span class="line"></span><br><span class="line">temp = []</span><br><span class="line">temp.extend(name)</span><br><span class="line"><span class="comment"># temp.append(name[0])</span></span><br><span class="line"><span class="comment"># temp.append(name[1])</span></span><br><span class="line"><span class="comment"># temp.append(name[2])</span></span><br><span class="line"><span class="comment"># temp.append(name[3])</span></span><br><span class="line"><span class="comment"># temp.append(name[4])</span></span><br><span class="line"><span class="built_in">print</span>(temp)</span><br><span class="line">temp.reverse()</span><br><span class="line"><span class="built_in">print</span>(temp)</span><br><span class="line"><span class="comment"># new_name = &#x27;%s%s%s%s%s&#x27; % (temp[0], temp[1], temp[2], temp[3], temp[4])</span></span><br><span class="line">new_name = name[::-<span class="number">1</span>]</span><br><span class="line"><span class="built_in">print</span>(new_name)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(new_name)</span><br><span class="line">result = new_name.find(<span class="string">&#x27;iew&#x27;</span>)</span><br><span class="line"><span class="comment"># result = new_name.index(&#x27;iew&#x27;)</span></span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本节课主要学习了:&lt;br&gt;索引与切片在字符串中的运用&lt;br&gt;以及字符串的find与index函数</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="字符串" scheme="https://code.maylove.pub/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
  </entry>
  
  <entry>
    <title>Python 阶段编程练习(四)</title>
    <link href="https://code.maylove.pub/6e5c920393e2/"/>
    <id>https://code.maylove.pub/6e5c920393e2/</id>
    <published>2021-10-01T14:43:27.000Z</published>
    <updated>2021-10-01T15:10:49.243Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="编程练习-四"><a href="#编程练习-四" class="headerlink" title="编程练习(四)"></a>编程练习(四)</h3><h4 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h4><blockquote><p>上级派一个组织，去捣毁诈骗团伙。某组织打入敌人内部之后。被卧底发现。卧底想破译组织带来的编码里应合，一网打尽。根据效果图，任务描述及代码中的部分提示来完成</p><p>效果图:</p><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-10-1/3.jpg"></p></blockquote><h4 id="任务"><a href="#任务" class="headerlink" title="任务"></a>任务</h4><ol><li>定义两个}空列表将字符串与数字分别添加到这两个空列表里</li><li>得到两个列表之后将两个列表进行有规律的排序</li><li>排序之后就获取到暗号与密码，为了保密再将两个列表的顺序反转进行打乱顺序</li><li>将原来code列表中的数据复制一份</li><li>为了不让编码落入敌人只手将原code列表数据清空</li></ol><h4 id="原始代码"><a href="#原始代码" class="headerlink" title="原始代码"></a>原始代码</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">code = [&quot;e_ying&quot;, &quot;d_shi&quot;, 6, &quot;a_wo&quot;, 1, 2, 3, &#x27;f_xiong&#x27;, 4, &#x27;b_men&#x27;, 5, &quot;c_dou&quot;]</span><br><span class="line"># 定一个空列表crack 放入字符串</span><br><span class="line"></span><br><span class="line"># 定义一个空列表number 放入数字</span><br><span class="line"></span><br><span class="line"># 使用append将code里面的字符串根据索引添加到crack列表</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(&quot;字符串添加完成&quot;, crack)</span><br><span class="line"># 使用append将code里面的数字根据索引添加到number列表</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(&quot;数字添加完成&quot;, number)</span><br><span class="line"># 使用sort对crack和number列表进行排序</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(&quot;新字符串列表排序&quot;, crack, &quot;\n&quot;, &quot;新数字列表&quot;, number)</span><br><span class="line"># 使用reverse对两个列表进行反序</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(&quot;反转后的新字符串列表crack&quot;, crack)</span><br><span class="line">print(&quot;反转后的新数字列表number&quot;, number)</span><br><span class="line"># 再将原列表复制了一份并且将原列表里面的内容清空</span><br><span class="line"></span><br><span class="line">print(&quot;复制原编码&quot;, new_code)</span><br><span class="line"></span><br><span class="line">print(&quot;清空原列表编码&quot;, code)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="作业提交区"><a href="#作业提交区" class="headerlink" title="作业提交区"></a>作业提交区</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">code = [<span class="string">&quot;e_ying&quot;</span>, <span class="string">&quot;d_shi&quot;</span>, <span class="number">6</span>, <span class="string">&quot;a_wo&quot;</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="string">&#x27;f_xiong&#x27;</span>, <span class="number">4</span>, <span class="string">&#x27;b_men&#x27;</span>, <span class="number">5</span>, <span class="string">&quot;c_dou&quot;</span>]</span><br><span class="line"><span class="comment"># 定一个空列表crack 放入字符串</span></span><br><span class="line">crack = []</span><br><span class="line"><span class="comment"># 定义一个空列表number 放入数字</span></span><br><span class="line">number = []</span><br><span class="line"><span class="comment"># 使用append将code里面的字符串根据索引添加到crack列表</span></span><br><span class="line">crack.append(code[<span class="number">0</span>])</span><br><span class="line">crack.append(code[<span class="number">1</span>])</span><br><span class="line">crack.append(code[<span class="number">3</span>])</span><br><span class="line">crack.append(code[<span class="number">7</span>])</span><br><span class="line">crack.append(code[<span class="number">9</span>])</span><br><span class="line">crack.append(code[<span class="number">11</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;字符串添加完成:&quot;</span>, crack)</span><br><span class="line"><span class="comment"># 使用append将code里面的数字根据索引添加到number列表</span></span><br><span class="line">number.append(code[<span class="number">2</span>])</span><br><span class="line">number.append(code[<span class="number">4</span>])</span><br><span class="line">number.append(code[<span class="number">5</span>])</span><br><span class="line">number.append(code[<span class="number">6</span>])</span><br><span class="line">number.append(code[<span class="number">8</span>])</span><br><span class="line">number.append(code[<span class="number">10</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;数字添加完成&quot;</span>, number)</span><br><span class="line"><span class="comment"># 使用sort对crack和number列表进行排序</span></span><br><span class="line">crack.sort()</span><br><span class="line">number.sort()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;新字符串列表排序&quot;</span>, crack, <span class="string">&quot;\n&quot;</span>, <span class="string">&quot;新数字列表&quot;</span>, number)</span><br><span class="line"><span class="comment"># 使用reverse对两个列表进行反序</span></span><br><span class="line">crack.reverse()</span><br><span class="line">number.reverse()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;反转后的新字符串列表crack&quot;</span>, crack)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;反转后的新数字列表number&quot;</span>, number)</span><br><span class="line"><span class="comment"># 再将原列表复制了一份并且将原列表里面的内容清空</span></span><br><span class="line">new_code = code.copy()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;复制原编码&quot;</span>, new_code)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;清空原列表编码&quot;</span>, code)</span><br><span class="line"><span class="keyword">del</span> code</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="结果检验区"><a href="#结果检验区" class="headerlink" title="结果检验区"></a>结果检验区</h4><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">C:\<span class="title">Users</span>\<span class="title">admin</span>\<span class="title">PycharmProjects</span>\<span class="title">pythonlearn</span>\<span class="title">venv</span>\<span class="title">Scripts</span>\<span class="title">python.exe</span> <span class="title">C</span>:/<span class="title">Users</span>/<span class="title">admin</span>/<span class="title">PycharmProjects</span>/<span class="title">python_list</span>/<span class="title">venv</span>/<span class="title">test3.py</span></span></span><br><span class="line"><span class="function">字符串添加完成: [&#x27;<span class="title">e_ying</span>&#x27;, &#x27;<span class="title">d_shi</span>&#x27;, &#x27;<span class="title">a_wo</span>&#x27;, &#x27;<span class="title">f_xiong</span>&#x27;, &#x27;<span class="title">b_men</span>&#x27;, &#x27;<span class="title">c_dou</span>&#x27;]</span></span><br><span class="line"><span class="function">数字添加完成 [6, 1, 2, 3, 4, 5]</span></span><br><span class="line"><span class="function">新字符串列表排序 [&#x27;<span class="title">a_wo</span>&#x27;, &#x27;<span class="title">b_men</span>&#x27;, &#x27;<span class="title">c_dou</span>&#x27;, &#x27;<span class="title">d_shi</span>&#x27;, &#x27;<span class="title">e_ying</span>&#x27;, &#x27;<span class="title">f_xiong</span>&#x27;] </span></span><br><span class="line"><span class="function"> 新数字列表 [1, 2, 3, 4, 5, 6]</span></span><br><span class="line"><span class="function">反转后的新字符串列表<span class="title">crack</span> [&#x27;<span class="title">f_xiong</span>&#x27;, &#x27;<span class="title">e_ying</span>&#x27;, &#x27;<span class="title">d_shi</span>&#x27;, &#x27;<span class="title">c_dou</span>&#x27;, &#x27;<span class="title">b_men</span>&#x27;, &#x27;<span class="title">a_wo</span>&#x27;]</span></span><br><span class="line"><span class="function">反转后的新数字列表<span class="title">number</span> [6, 5, 4, 3, 2, 1]</span></span><br><span class="line"><span class="function">复制原编码 [&#x27;<span class="title">e_ying</span>&#x27;, &#x27;<span class="title">d_shi</span>&#x27;, 6, &#x27;<span class="title">a_wo</span>&#x27;, 1, 2, 3, &#x27;<span class="title">f_xiong</span>&#x27;, 4, &#x27;<span class="title">b_men</span>&#x27;, 5, &#x27;<span class="title">c_dou</span>&#x27;]</span></span><br><span class="line"><span class="function">清空原列表编码 [&#x27;<span class="title">e_ying</span>&#x27;, &#x27;<span class="title">d_shi</span>&#x27;, 6, &#x27;<span class="title">a_wo</span>&#x27;, 1, 2, 3, &#x27;<span class="title">f_xiong</span>&#x27;, 4, &#x27;<span class="title">b_men</span>&#x27;, 5, &#x27;<span class="title">c_dou</span>&#x27;]</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">进程已结束，退出代码为 0</span></span><br><span class="line"><span class="function"></span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">通过运用前面所学的知识 &lt;br&gt; 完成自己的任务</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="编程练习" scheme="https://code.maylove.pub/tags/%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Python 索引与切片之列表</title>
    <link href="https://code.maylove.pub/dc50fd8d3243/"/>
    <id>https://code.maylove.pub/dc50fd8d3243/</id>
    <published>2021-10-01T14:43:04.000Z</published>
    <updated>2021-10-01T15:11:29.764Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="索引与切片之列表"><a href="#索引与切片之列表" class="headerlink" title="索引与切片之列表"></a>索引与切片之列表</h3><h4 id="什么是索引"><a href="#什么是索引" class="headerlink" title="什么是索引"></a>什么是索引</h4><ul><li><p><code>字符串</code>,<code>列表</code>和<code>元组</code></p></li><li><p>从最左边记录的位置就是<code>索引</code></p></li><li><p><code>索引</code>用<strong>数字</strong>表示,起始从<code>0</code>开始</p></li><li><p>字符串,列表(元组)的<code>最大索引</code>是他们的<strong>长度-1</strong></p></li></ul><h4 id="什么是切片"><a href="#什么是切片" class="headerlink" title="什么是切片"></a>什么是切片</h4><ul><li>索引用来对<code>单个元素</code>进行访问,切片则对<code>一定范围</code>内的元素进行访问</li><li>切片通过<code>冒号</code>在<code>中括号</code>内把相隔的两个索引查找出来  [0:10]</li><li><strong>切片规则</strong>为: <code>左含右不含</code></li></ul><h4 id="列表的索引-获取与修改"><a href="#列表的索引-获取与修改" class="headerlink" title="列表的索引,获取与修改"></a>列表的索引,获取与修改</h4><ul><li><code>list[index] = new_item</code>为索引更改变量<ul><li><strong>数据的修改只能在存在的索引范围内</strong></li><li>列表无法通过添加新的索引的方式赋值</li></ul></li><li><code>list.index(item)</code>查找元素的位置</li></ul><h4 id="通过pop删除索引"><a href="#通过pop删除索引" class="headerlink" title="通过pop删除索引"></a>通过pop删除索引</h4><h5 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h5><ul><li>通过索引删除并获取列表的元素</li></ul><h5 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h5><ul><li><code>list.pop(index)</code></li></ul><h5 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h5><ul><li><code>index</code> : 删除列表的第几个索引</li><li><strong>函数会删除该索引的元素并返回</strong></li><li><strong>如果传入的index索引不存在则报错</strong></li></ul><h4 id="通过del删除索引"><a href="#通过del删除索引" class="headerlink" title="通过del删除索引"></a>通过del删除索引</h4><ul><li><p><code>del list[index]</code></p></li><li><p><strong>直接删除  无返回值</strong></p></li><li><p><strong>如果index(索引)不存在则报错</strong></p></li></ul><h4 id="索引在元组中的特殊性"><a href="#索引在元组中的特殊性" class="headerlink" title="索引在元组中的特殊性"></a>索引在元组中的特殊性</h4><ul><li>可以和列表一样获取索引与切片索引</li><li>元组函数index和列表用法完全一致</li><li>无法通过索引修改与删除元素</li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">numbers = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(numbers) - <span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(numbers[<span class="number">9</span>])</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">id</span>(numbers))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;获取列表完整数据:&#x27;</span>, numbers[:])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;另一种获取完整列表的方法&#x27;</span>, numbers[<span class="number">0</span>:])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;第三种获取列表的方法&#x27;</span>, numbers[:-<span class="number">1</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;列表的反序:&#x27;</span>, numbers[::-<span class="number">1</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;列表的反向获取(不完美,少一个最后元素):&#x27;</span>, numbers[-<span class="number">3</span>:-<span class="number">1</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;列表的反序获取(自己想的,好像很成功):&#x27;</span>, numbers[::-<span class="number">1</span>][:<span class="number">3</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;步长获取切片:&#x27;</span>, numbers[<span class="number">0</span>: <span class="number">8</span>: <span class="number">2</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;切片生成空列表&#x27;</span>, numbers[<span class="number">0</span>:<span class="number">0</span>])</span><br><span class="line">new_numbers = numbers[:<span class="number">4</span>]</span><br><span class="line"><span class="built_in">print</span>(new_numbers)</span><br><span class="line"></span><br><span class="line">numbers[<span class="number">3</span>] = <span class="string">&#x27;code&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(numbers)</span><br><span class="line"><span class="comment"># numbers[10] = 1</span></span><br><span class="line"><span class="comment"># print(numbers)</span></span><br><span class="line">numbers[<span class="number">2</span>: <span class="number">5</span>] =  <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span></span><br><span class="line">numbers[<span class="number">2</span>: <span class="number">5</span>] = [ <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(numbers)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(numbers.index(<span class="string">&#x27;c&#x27;</span>))</span><br><span class="line"></span><br><span class="line">item = numbers.pop(<span class="number">4</span>)</span><br><span class="line"><span class="built_in">print</span>(item, numbers, <span class="built_in">len</span>(numbers))</span><br><span class="line"></span><br><span class="line"><span class="keyword">del</span> numbers[<span class="number">4</span>]</span><br><span class="line"><span class="built_in">print</span>(numbers)</span><br><span class="line"></span><br><span class="line">tuple_test = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line"><span class="keyword">del</span> tuple_test</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本节课主要学习了:&lt;br&gt;索引与切片在列表和元组中的运用&lt;br&gt;以及pop和del的用法</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="列表" scheme="https://code.maylove.pub/tags/%E5%88%97%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>Python 列表的extend函数</title>
    <link href="https://code.maylove.pub/8ac840a5df91/"/>
    <id>https://code.maylove.pub/8ac840a5df91/</id>
    <published>2021-10-01T14:42:55.000Z</published>
    <updated>2021-10-01T15:11:29.766Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="列表的extend函数"><a href="#列表的extend函数" class="headerlink" title="列表的extend函数"></a>列表的extend函数</h3><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li>将其他<strong>列表</strong>或<strong>元组</strong>中的<code>元素</code>导入<code>当前列表</code>中</li></ul><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><ul><li><code>list.extend(iterable)</code> </li></ul><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><ul><li><code>iterable</code>代表列表或元组 , 该函数无返回值</li></ul><h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><ul><li>传入的必须是<code>iterable</code></li><li>直接传入字符串的话会被拆分成很多个单个字符</li><li>不可传入整形或者布尔类型之类的(不是<code>iterable</code><strong>就不行</strong>)</li><li><strong>传入<code>字典</code>的话只会保留<code>key</code>的值</strong></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">manhua = []</span><br><span class="line">history = []</span><br><span class="line">code = []</span><br><span class="line"></span><br><span class="line">new_manhua = (<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>)</span><br><span class="line">new_history = (<span class="string">&#x27;中国历史&#x27;</span>, <span class="string">&#x27;日本历史&#x27;</span>, <span class="string">&#x27;韩国历史&#x27;</span>)</span><br><span class="line">new_code = (<span class="string">&#x27;python&#x27;</span>, <span class="string">&#x27;django&#x27;</span>, <span class="string">&#x27;flask&#x27;</span>)</span><br><span class="line"></span><br><span class="line">manhua.extend(new_manhua)</span><br><span class="line">history.extend(new_history)</span><br><span class="line">code.extend(new_code)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(manhua, history, code)</span><br><span class="line"></span><br><span class="line">history.extend(manhua)</span><br><span class="line"><span class="keyword">del</span> manhua</span><br><span class="line"><span class="built_in">print</span>(history)</span><br><span class="line"></span><br><span class="line">test = []</span><br><span class="line"><span class="comment"># test.extend(&#x27;abcd&#x27;)</span></span><br><span class="line">test.extend(&#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;dewei&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">33</span>&#125;)</span><br><span class="line"><span class="comment"># test.extend(True)</span></span><br><span class="line"><span class="built_in">print</span>(test)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本节课主要学习了:&lt;br&gt;列表的extend函数以及相关的注意事项</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="列表" scheme="https://code.maylove.pub/tags/%E5%88%97%E8%A1%A8/"/>
    
  </entry>
  
</feed>
