<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ZkeqのCoding日志</title>
  
  <subtitle>Python Java Html 都在学</subtitle>
  <link href="https://code.maylove.pub/atom.xml" rel="self"/>
  
  <link href="https://code.maylove.pub/"/>
  <updated>2021-10-14T13:53:53.958Z</updated>
  <id>https://code.maylove.pub/</id>
  
  <author>
    <name>Zkeq</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Python 嵌套for循环</title>
    <link href="https://code.maylove.pub/2021/2680d5950f06/"/>
    <id>https://code.maylove.pub/2021/2680d5950f06/</id>
    <published>2021-10-14T13:47:56.000Z</published>
    <updated>2021-10-14T13:53:53.958Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="嵌套for循环"><a href="#嵌套for循环" class="headerlink" title="嵌套for循环"></a>嵌套for循环</h4><ul><li><code>for循环</code>中的<code>for循环</code></li></ul><h5 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">a = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">b = [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> a:</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;------&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> b:</span><br><span class="line">        <span class="built_in">print</span>(i + j)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;=======&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(i, j)</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本节课主要学习了&lt;br&gt;循环与for循环,即在for循环中再写一个for循环</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="循环" scheme="https://code.maylove.pub/tags/%E5%BE%AA%E7%8E%AF/"/>
    
  </entry>
  
  <entry>
    <title>Pyhton 编程练习(六)</title>
    <link href="https://code.maylove.pub/2021/dd5fcdd0b984/"/>
    <id>https://code.maylove.pub/2021/dd5fcdd0b984/</id>
    <published>2021-10-14T13:47:37.000Z</published>
    <updated>2021-10-14T13:53:39.853Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="编程练习"><a href="#编程练习" class="headerlink" title="编程练习"></a>编程练习</h3><blockquote><p>已知一个列表，存储1到10的元素，遍历循环输出列表中的所有偶数。</p><p>运行结果：</p><p>第 1 个偶数 2</p><p>第 2 个偶数 4</p><p>第 3 个偶数 6</p><p>第 4 个偶数 8</p><p>第 5 个偶数 10</p></blockquote><h4 id="任务"><a href="#任务" class="headerlink" title="任务"></a>任务</h4><ul><li><p>定义一个列表numList，存储元素为1到10的所有整数</p></li><li><p>for循环遍历输出所有列表中的偶数</p></li></ul><h4 id="任务提示"><a href="#任务提示" class="headerlink" title="任务提示"></a>任务提示</h4><ul><li><code>注意</code>：输出格式</li></ul><h4 id="作业提交"><a href="#作业提交" class="headerlink" title="作业提交"></a>作业提交</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">list</span> = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>]</span><br><span class="line">a = <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">10</span>, <span class="number">2</span>)</span><br><span class="line">b = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> a:</span><br><span class="line">    b = b + <span class="number">1</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;第%s个偶数&#x27;</span> % b, <span class="built_in">list</span>[i])</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">通过运用前面所学的知识 &lt;br&gt; 完成自己的任务</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="编程练习" scheme="https://code.maylove.pub/tags/%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Python 循环与for循环</title>
    <link href="https://code.maylove.pub/2021/df1a44535dfc/"/>
    <id>https://code.maylove.pub/2021/df1a44535dfc/</id>
    <published>2021-10-14T13:47:07.000Z</published>
    <updated>2021-10-14T13:54:08.921Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="循环与for循环"><a href="#循环与for循环" class="headerlink" title="循环与for循环"></a>循环与for循环</h3><h4 id="什么是循环"><a href="#什么是循环" class="headerlink" title="什么是循环"></a>什么是循环</h4><ul><li><code>周而复始</code>地<strong>运动</strong>或<strong>变化</strong></li><li><strong>遍历</strong></li></ul><h4 id="for循环的功能与用法"><a href="#for循环的功能与用法" class="headerlink" title="for循环的功能与用法"></a>for循环的功能与用法</h4><ul><li>通过<code>for关键字</code>将<code>列表, 元组, 字符串, 字典</code>中的<code>每个元素</code>按照<code>列顺序</code>进行<strong>遍历(循环)</strong></li></ul><h4 id="字典的for循环"><a href="#字典的for循环" class="headerlink" title="字典的for循环"></a>字典的for循环</h4><h5 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> iterable :  <span class="comment"># for循环语法块</span></span><br><span class="line"><span class="built_in">print</span>(item)<span class="comment"># 每次循环对应的代码块</span></span><br><span class="line">代码块需要缩进</span><br></pre></td></tr></table></figure><h5 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h5><ul><li><code>iterable</code>: 一切可循环的数据类型 如列表 元组 字符串 字典</li><li><code>item</code> : iterable中的每一个元素(成员)</li></ul><h5 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h5><ul><li>for循环是语句,<code>没有</code>返回值,但在特定情况下<strong>有返回值</strong></li></ul><h4 id="字典利用items内置函数进行for循环"><a href="#字典利用items内置函数进行for循环" class="headerlink" title="字典利用items内置函数进行for循环"></a>字典利用<code>items内置函数</code>进行<strong>for循环</strong></h4><h5 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h5><ul><li>将字典转成<code>伪列表</code> , 每个<code>key</code> , <code>value</code>转成<code>元组</code></li></ul><h5 id="用法-1"><a href="#用法-1" class="headerlink" title="用法"></a>用法</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> key, value <span class="keyword">in</span> <span class="built_in">dict</span>.items():</span><br><span class="line"><span class="built_in">print</span>(key, value)</span><br></pre></td></tr></table></figure><h5 id="参数-1"><a href="#参数-1" class="headerlink" title="参数"></a>参数</h5><ul><li><code>items</code>无参数</li><li><code>key</code> : <code>for循环体</code>中获取的<strong>字典当前元素的key</strong></li><li><code>value</code> : <code>for循环体</code>中<strong>对应当前key的value值</strong></li></ul><h5 id="返回值-1"><a href="#返回值-1" class="headerlink" title="返回值"></a>返回值</h5><ul><li><code>for循环</code>是语句, <strong>没有返回值</strong>, <code>items</code><strong>返回一个伪列表</strong></li></ul><h4 id="python的内置函数–range"><a href="#python的内置函数–range" class="headerlink" title="python的内置函数–range"></a>python的内置函数–range</h4><h5 id="功能-1"><a href="#功能-1" class="headerlink" title="功能"></a>功能</h5><ul><li>返回的是一个一定范围的可迭代对象, 元素为整形, 它不是列表 ,无法打印信息,但可循环.</li></ul><h5 id="用法-2"><a href="#用法-2" class="headerlink" title="用法"></a>用法</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">for item in range(start, stop, step=1):</span><br><span class="line"></span><br><span class="line">print(item)</span><br></pre></td></tr></table></figure><h5 id="参数-2"><a href="#参数-2" class="headerlink" title="参数"></a>参数</h5><ul><li><p><code>start</code>:<strong>开始的数字</strong>,类似索引的左边(左含)</p></li><li><p><code>stop</code>:<strong>结束的数字</strong>,类似索引的右边(右不含)</p></li><li><p><code>step</code>:<strong>跳步</strong>,类似于索引中的第三个参数</p></li></ul><h5 id="返回值-2"><a href="#返回值-2" class="headerlink" title="返回值"></a>返回值</h5><ul><li>返回一个可迭代(循环的)以整形为主的对象</li></ul><h4 id="else在for循环中使用"><a href="#else在for循环中使用" class="headerlink" title="else在for循环中使用"></a>else在for循环中使用</h4><ul><li><code>else语句</code>只有在<strong>for循环正常退出</strong>后执行</li><li>循环<code>没有报错</code>, <code>没有中途停止</code></li></ul><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">l = [<span class="string">&#x27;dewei&#x27;</span>, <span class="string">&#x27;xiaomu&#x27;</span>, <span class="string">&#x27;xiaoman&#x27;</span>, <span class="string">&#x27;xiaoming&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> l:</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;finish&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="string">&#x27;python&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br><span class="line"></span><br><span class="line">users = (<span class="string">&#x27;dewei&#x27;</span>, <span class="string">&#x27;xiaoman&#x27;</span>, <span class="string">&#x27;xiaomu&#x27;</span>, <span class="string">&#x27;xiaoming&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> name <span class="keyword">in</span> users:</span><br><span class="line">    <span class="keyword">if</span> name == <span class="string">&#x27;xiaomu&#x27;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;你好 小慕&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;hello &#123;&#125;, 欢迎学习python&#x27;</span>.<span class="built_in">format</span>(name))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;------------&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;finish---&#x27;</span>)</span><br><span class="line"></span><br><span class="line">users = &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;dewei&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">33</span>&#125;</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> users:</span><br><span class="line">    <span class="built_in">print</span>(i, users[i])</span><br><span class="line"></span><br><span class="line">items = users.items()</span><br><span class="line"><span class="built_in">print</span>(items)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> key, value <span class="keyword">in</span> users.items():</span><br><span class="line">    <span class="built_in">print</span>(key, value)</span><br><span class="line"></span><br><span class="line">users_list = [</span><br><span class="line">    &#123;<span class="string">&#x27;username&#x27;</span>: <span class="string">&#x27;dewei&#x27;</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&#x27;username&#x27;</span>: <span class="string">&#x27;xiaomu&#x27;</span>&#125;</span><br><span class="line">]</span><br><span class="line"><span class="keyword">for</span> user <span class="keyword">in</span> users_list:</span><br><span class="line">    <span class="built_in">print</span>(user.get(<span class="string">&#x27;username&#x27;</span>))</span><br><span class="line">    <span class="built_in">print</span>(user.get(<span class="string">&#x27;age&#x27;</span>))</span><br><span class="line"></span><br><span class="line">l = <span class="built_in">range</span>(<span class="number">6</span>)</span><br><span class="line"><span class="built_in">print</span>(l, <span class="built_in">type</span>(l))</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> l:</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;for循环结束了&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本节课主要学习了&lt;br&gt;循环与for循环,即在for循环的基础用法</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="循环" scheme="https://code.maylove.pub/tags/%E5%BE%AA%E7%8E%AF/"/>
    
  </entry>
  
  <entry>
    <title>Python 阶段编程练习(五)</title>
    <link href="https://code.maylove.pub/2021/a305be767dd4/"/>
    <id>https://code.maylove.pub/2021/a305be767dd4/</id>
    <published>2021-10-06T10:05:32.000Z</published>
    <updated>2021-10-10T23:19:29.190Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="编程练习-五"><a href="#编程练习-五" class="headerlink" title="编程练习(五)"></a>编程练习(五)</h3><blockquote><ol><li>输入身高与体重并打印</li><li>身体状况指数是身体质量指数即BMI指数，计算公式为：BMI=体重（千克）除以身高（米）的平方</li><li>判断身体BMI指数：</li></ol><ul><li>条件<ul><li>如果小于18.5，打印“过轻”</li><li>如果大于等于18.5并且小于等于25，打印“正常”</li><li>如果大于25并且小于等于28，打印“过重”</li><li>如果大于28并且小于等于32，打印“肥胖”</li><li>否则，打印“严重肥胖”</li></ul></li></ul><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-10-6/4.jpg" alt="4"></p></blockquote><h5 id="初始代码"><a href="#初始代码" class="headerlink" title="初始代码"></a>初始代码</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding: utf-8</span></span><br><span class="line">height = <span class="built_in">float</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入身高：&#x27;</span>))</span><br><span class="line">weight = <span class="built_in">float</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入体重：&#x27;</span>))</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="作业提交区"><a href="#作业提交区" class="headerlink" title="作业提交区"></a>作业提交区</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding: utf-8</span></span><br><span class="line"></span><br><span class="line">height = <span class="built_in">float</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入身高：&#x27;</span>))</span><br><span class="line">weight = <span class="built_in">float</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入体重：&#x27;</span>))</span><br><span class="line"></span><br><span class="line">BMI = weight / height ** <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;小明身高为%s,体重为%s&#x27;</span> % (height, weight))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;小明身高状况指数为%s&#x27;</span> % BMI)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> BMI &lt; <span class="number">18.5</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;过轻&#x27;</span>)</span><br><span class="line"><span class="keyword">elif</span> <span class="number">18.5</span> &lt; BMI &lt;= <span class="number">25</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;正常&#x27;</span>)</span><br><span class="line"><span class="keyword">elif</span> <span class="number">25</span> &lt; BMI &lt;=<span class="number">28</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;过重&#x27;</span>)</span><br><span class="line"><span class="keyword">elif</span> <span class="number">28</span> &lt; BMI &lt;= <span class="number">32</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;肥胖&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;严重肥胖&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="结果检验区"><a href="#结果检验区" class="headerlink" title="结果检验区"></a>结果检验区</h5><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">C:\<span class="title">Users</span>\<span class="title">admin</span>\<span class="title">PycharmProjects</span>\<span class="title">pythonlearn</span>\<span class="title">venv</span>\<span class="title">Scripts</span>\<span class="title">python.exe</span> <span class="title">C</span>:/<span class="title">Users</span>/<span class="title">admin</span>/<span class="title">PycharmProjects</span>/<span class="title">python_if</span>/<span class="title">test_5.py</span></span></span><br><span class="line"><span class="function">请输入身高：1.65</span></span><br><span class="line"><span class="function">请输入体重：55</span></span><br><span class="line"><span class="function">小明身高为1.65,体重为55.0</span></span><br><span class="line"><span class="function">小明身高状况指数为20.202020202020204</span></span><br><span class="line"><span class="function">正常</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">进程已结束，退出代码为 0</span></span><br><span class="line"><span class="function"></span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">通过运用前面所学的知识 &lt;br&gt; 完成自己的任务</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="编程练习" scheme="https://code.maylove.pub/tags/%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Python 条件语句中的elif</title>
    <link href="https://code.maylove.pub/2021/3652adc4b943/"/>
    <id>https://code.maylove.pub/2021/3652adc4b943/</id>
    <published>2021-10-06T10:05:07.000Z</published>
    <updated>2021-10-06T10:11:05.714Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="条件语句中的elif"><a href="#条件语句中的elif" class="headerlink" title="条件语句中的elif"></a>条件语句中的<code>elif</code></h3><h4 id="什么是elif"><a href="#什么是elif" class="headerlink" title="什么是elif"></a>什么是<code>elif</code></h4><ul><li><code>elif</code>(或者如果)对于命题的<strong>非第一次的多种判断</strong> , <strong>每一种判断条件</strong><code>对应一组业务代码</code></li></ul><h4 id="条件语句的说明"><a href="#条件语句的说明" class="headerlink" title="条件语句的说明"></a>条件语句的说明</h4><ul><li>对于首次if判断不满足后 , 其他条件的判断语句</li></ul><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> bool_result :</span><br><span class="line">do</span><br><span class="line"><span class="keyword">elif</span> bool_result:</span><br><span class="line">elifdo <span class="comment"># 当前elif语句对应的语法块</span></span><br><span class="line"><span class="keyword">elif</span> bool_result:</span><br><span class="line">elifdo <span class="comment"># 缩进等级与do语法块一致</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">elsedo</span><br></pre></td></tr></table></figure><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-10-6/2.jpg" alt="2"></p><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-10-6/3.png" alt="3"></p><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><ul><li><code>elifdo</code> : 当前<code>elif语句</code><strong>对应</strong>的<code>python</code>代码</li></ul><h4 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h4><ul><li> <code>elif属于语法</code> , <strong>没有返回值</strong></li></ul><h4 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h4><ul><li>条件语句中<code>满足一个条件</code>后 , 将<code>退出</code><strong>当前条件语句</strong></li><li>每个条件语句中仅<code>有且必须有</code>一个<code>if语句</code> <ul><li>可以有<code>0个或多个</code>  <code>elif语句</code></li><li>可以有<code>0个或1个</code> <code>else语句</code></li></ul></li><li>每个<code>条件语句</code>      <code>if</code>  <strong>必须是第一个条件语句</strong></li></ul><h4 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h4><ul><li>有一个班级,班级有很多同学,每个同学有如下信息: <code>名字 年龄 分数</code> , 现在来了一个插班生,将这个小明放到成绩单里,这里要做判断,如果班级里有小明,就说明重名了,那么要给新的小明的后面加个新字并存入</li><li>用列表与字典两种类型, 用两种方法做题</li></ul><h5 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">number = <span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> number &gt; <span class="number">10</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;number的值大于10&#x27;</span>)</span><br><span class="line"><span class="keyword">elif</span> <span class="number">5</span> &lt; number &lt;= <span class="number">10</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;number的值在5和10之间&#x27;</span>)</span><br><span class="line"><span class="keyword">elif</span> <span class="number">5</span> &gt;= number &gt; <span class="number">0</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;number的值是1~5&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;number的值是0或者复数&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;finish&#x27;</span>)</span><br><span class="line"></span><br><span class="line">users = [</span><br><span class="line">    (<span class="string">&#x27;dewei&#x27;</span>, <span class="number">30</span>, <span class="number">90</span>),</span><br><span class="line">    (<span class="string">&#x27;xiaomu&#x27;</span>, <span class="number">10</span>, <span class="number">99</span>),</span><br><span class="line">    (<span class="string">&#x27;xiaoming&#x27;</span>, <span class="number">18</span>, <span class="number">100</span>)</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">xiaoming = [<span class="string">&#x27;xiaoming&#x27;</span>, <span class="number">19</span>, <span class="number">90</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> users[<span class="number">0</span>][<span class="number">0</span>] == xiaoming[<span class="number">0</span>]:</span><br><span class="line">    xiaoming[<span class="number">0</span>] = <span class="string">&#x27;%s_new&#x27;</span> % xiaoming[<span class="number">0</span>]</span><br><span class="line">    users.append(xiaoming)</span><br><span class="line"><span class="keyword">elif</span> users[<span class="number">1</span>][<span class="number">0</span>] == xiaoming[<span class="number">0</span>]:</span><br><span class="line">    xiaoming[<span class="number">0</span>] = <span class="string">&#x27;%s_new&#x27;</span> % xiaoming[<span class="number">0</span>]</span><br><span class="line">    users.append(xiaoming)</span><br><span class="line"><span class="keyword">elif</span> users[<span class="number">2</span>][<span class="number">0</span>] == xiaoming[<span class="number">0</span>]:</span><br><span class="line">    xiaoming[<span class="number">0</span>] = <span class="string">&#x27;%s_new&#x27;</span> % xiaoming[<span class="number">0</span>]</span><br><span class="line">    users.append(xiaoming)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    users.append(xiaoming)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(users)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">users = &#123;</span><br><span class="line">    <span class="string">&#x27;dewei&#x27;</span>: &#123;<span class="string">&#x27;age&#x27;</span>: <span class="number">33</span>, <span class="string">&#x27;count&#x27;</span>: <span class="number">90</span>&#125;,</span><br><span class="line">    <span class="string">&#x27;xiaomu&#x27;</span>: &#123;<span class="string">&#x27;age&#x27;</span>: <span class="number">10</span>, <span class="string">&#x27;count&#x27;</span>: <span class="number">99</span>&#125;,</span><br><span class="line">    <span class="string">&#x27;xiaoming&#x27;</span>: &#123;<span class="string">&#x27;age&#x27;</span>: <span class="number">18</span>, <span class="string">&#x27;count&#x27;</span>: <span class="number">100</span>&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> xiaoming[<span class="number">0</span>] <span class="keyword">in</span> users:</span><br><span class="line">    xiaoming[<span class="number">0</span>] = <span class="string">&#x27;%s_new&#x27;</span> % xiaoming[<span class="number">0</span>]</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    users[xiaoming[<span class="number">0</span>]] = &#123;<span class="string">&#x27;age&#x27;</span>: xiaoming[<span class="number">1</span>], <span class="string">&#x27;count&#x27;</span>: xiaoming[<span class="number">2</span>]&#125;</span><br><span class="line"><span class="built_in">print</span>(users)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本节课主要学习了:&lt;br&gt;条件语句中的elif</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="条件语句" scheme="https://code.maylove.pub/tags/%E6%9D%A1%E4%BB%B6%E8%AF%AD%E5%8F%A5/"/>
    
  </entry>
  
  <entry>
    <title>Python 条件语句中的else</title>
    <link href="https://code.maylove.pub/2021/bcfc19294f17/"/>
    <id>https://code.maylove.pub/2021/bcfc19294f17/</id>
    <published>2021-10-06T10:04:50.000Z</published>
    <updated>2021-10-06T10:11:26.849Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="条件语句中的else"><a href="#条件语句中的else" class="headerlink" title="条件语句中的else"></a>条件语句中的<code>else</code></h3><h4 id="什么是else"><a href="#什么是else" class="headerlink" title="什么是else"></a>什么是else</h4><ul><li><code>else</code> 就是对于<code>if条件不满足的时候</code>执行<code>另一个代码块</code>的<code>入口</code></li><li><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-10-6/1.jpg" alt="1"></li></ul><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li>当if语句<code>不满足时</code>所执行的<strong>代码块</strong>的<code>入口</code></li></ul><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">if bool_result :</span><br><span class="line">do</span><br><span class="line">else:</span><br><span class="line">elsedo  # else语法快 , 需缩进</span><br><span class="line"># 缩进等级与do语法块一致</span><br></pre></td></tr></table></figure><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><ul><li><code>elsedo</code> : else 语句对应的python代码块</li></ul><h4 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h4><ul><li><code>else属于语法</code> , 没有<strong>返回值</strong></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;https://code.maylove.pub&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="string">&#x27;code.maylove.pub&#x27;</span> <span class="keyword">in</span> url:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;你进入了编程日志记录web,请查阅相关知识&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;请前往code.maylove.pub获取内容&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="string">&#x27;code.maylove.pub&#x27;</span> <span class="keyword">in</span> url:</span><br><span class="line">    _url = <span class="string">&#x27;code.maylove.pub&#x27;</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    _url = <span class="literal">None</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;_url is %s&#x27;</span> % _url)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="number">3</span>-<span class="number">3</span> :</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;b&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本节课主要学习了:&lt;br&gt;条件语句中的else</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="条件语句" scheme="https://code.maylove.pub/tags/%E6%9D%A1%E4%BB%B6%E8%AF%AD%E5%8F%A5/"/>
    
  </entry>
  
  <entry>
    <title>Python 逻辑判断的应用与总结</title>
    <link href="https://code.maylove.pub/2021/e9dc53dfaef4/"/>
    <id>https://code.maylove.pub/2021/e9dc53dfaef4/</id>
    <published>2021-10-06T10:04:31.000Z</published>
    <updated>2021-10-06T10:09:52.450Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="1-3-逻辑判断的应用与总结"><a href="#1-3-逻辑判断的应用与总结" class="headerlink" title="1-3 逻辑判断的应用与总结"></a>1-3 逻辑判断的应用与总结</h3><h4 id="逻辑判断的定义"><a href="#逻辑判断的定义" class="headerlink" title="逻辑判断的定义"></a>逻辑判断的定义</h4><p>所谓的逻辑判断就是在一个程序中要<code>对判断的语句</code>进行<code>真与假</code>的结果判定，</p><p>逻辑判断结果的<strong>最基本标准</strong>是<code>布尔类型</code>。</p><p>布尔类型只有<code>两个值</code>：</p><p><code>True</code>和<code>False</code>，</p><p>在<strong>Python语言</strong>中对应的是<code>1</code>和<code>0</code>。<br>请看以下例子：</p><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-10-6/1.jpg" alt="1"></p><p>在程序中， 如果name等于“小司”</p><ul><li><p>则程序会做相应的逻辑处理</p></li><li><p>把name改成“小李”</p></li><li><p>并打印“小李”</p></li></ul><p>如果name不等于“小司”</p><ul><li>则程序跳出if判断之后去打印name</li></ul><p>结果输出发现name的变量值变成了“小李”</p><p>代表这个判断是True</p><p>所以会走到if下面的代码块。</p>]]></content>
    
    
    <summary type="html">本节课主要学习了:&lt;br&gt;逻辑判断的应用与总结</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="条件语句" scheme="https://code.maylove.pub/tags/%E6%9D%A1%E4%BB%B6%E8%AF%AD%E5%8F%A5/"/>
    
  </entry>
  
  <entry>
    <title>Python 初识逻辑与if语句</title>
    <link href="https://code.maylove.pub/2021/179b54b5d552/"/>
    <id>https://code.maylove.pub/2021/179b54b5d552/</id>
    <published>2021-10-06T10:04:17.000Z</published>
    <updated>2021-10-06T10:10:03.144Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="初识逻辑与if语句"><a href="#初识逻辑与if语句" class="headerlink" title="初识逻辑与if语句"></a>初识逻辑与<code>if</code>语句</h3><h4 id="逻辑判断与逻辑语句"><a href="#逻辑判断与逻辑语句" class="headerlink" title="逻辑判断与逻辑语句"></a>逻辑判断与逻辑语句</h4><ul><li>对于一件事情正确与否(真假的判断)</li><li>根据判断的结果做不同的事情 , 就是我们的逻辑业务</li><li>对于条件满足的判断语句 , 就是条件语句</li></ul><blockquote><p>一个逻辑语句是由条件语句和业务语句组合而成的</p></blockquote><h4 id="if语句"><a href="#if语句" class="headerlink" title="if语句"></a>if语句</h4><h5 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h5><ul><li>判断一个命题的真实性 , 如果命题为真(True)则执行if的逻辑语句</li></ul><h5 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h5><ul><li><code>if bool_result : # 语法</code>块</li><li>​            <code>do         # 业务代码块   注意缩进</code><ul><li>缩进是由一个<code>TAB</code>或者<code>四个空格</code>组成的</li></ul></li><li>in  and</li></ul><h5 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h5><ul><li><code>if 属于关键字</code>  ,  <strong>没有返回值</strong></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">info = <span class="string">&#x27;my name is xiaomu&#x27;</span></span><br><span class="line"></span><br><span class="line">info_list = info.split()</span><br><span class="line"><span class="built_in">print</span>(info_list)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> info_list[<span class="number">0</span>] == <span class="string">&#x27;xiaomu&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="number">1</span>)</span><br><span class="line">    info_list[<span class="number">0</span>] = <span class="string">&#x27;dewei&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> info_list[<span class="number">1</span>] == <span class="string">&#x27;xiaomu&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="number">2</span>)</span><br><span class="line">    info_list[<span class="number">1</span>] = <span class="string">&#x27;dewei&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> info_list[<span class="number">2</span>] == <span class="string">&#x27;xiaomu&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="number">3</span>)</span><br><span class="line">    info_list[<span class="number">2</span>] = <span class="string">&#x27;dewei&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> info_list[-<span class="number">1</span>] == <span class="string">&#x27;xiaomu&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="number">4</span>)</span><br><span class="line">    info_list[-<span class="number">1</span>] = <span class="string">&#x27;dewei&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(info_list)</span><br><span class="line">info = <span class="string">&#x27; &#x27;</span>.join(info_list)</span><br><span class="line"><span class="built_in">print</span>(info)</span><br><span class="line"></span><br><span class="line">info = <span class="string">&#x27;my name is dewei, i am a pythoner, i love python&#x27;</span></span><br><span class="line">info_list = info.split()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> info_list[<span class="number">0</span>] <span class="keyword">in</span> [<span class="string">&#x27;python&#x27;</span>, <span class="string">&#x27;i&#x27;</span>]:</span><br><span class="line">    info_list[<span class="number">0</span>] = <span class="string">&#x27;*&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> info_list[<span class="number">1</span>] == <span class="string">&#x27;python&#x27;</span> <span class="keyword">or</span> info_list[<span class="number">1</span>] == <span class="string">&#x27;i&#x27;</span>:</span><br><span class="line">    info_list[<span class="number">1</span>] = <span class="string">&#x27;*&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> info_list[<span class="number">2</span>] == <span class="string">&#x27;python&#x27;</span> <span class="keyword">or</span> info_list[<span class="number">2</span>] == <span class="string">&#x27;i&#x27;</span>:</span><br><span class="line">    info_list[<span class="number">2</span>] = <span class="string">&#x27;*&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> info_list[<span class="number">3</span>] == <span class="string">&#x27;python&#x27;</span> <span class="keyword">or</span> info_list[<span class="number">3</span>] == <span class="string">&#x27;i&#x27;</span>:</span><br><span class="line">    info_list[<span class="number">3</span>] = <span class="string">&#x27;*&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> info_list[<span class="number">4</span>] == <span class="string">&#x27;python&#x27;</span> <span class="keyword">or</span> info_list[<span class="number">4</span>] == <span class="string">&#x27;i&#x27;</span>:</span><br><span class="line">    info_list[<span class="number">4</span>] = <span class="string">&#x27;*&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> info_list[<span class="number">5</span>] == <span class="string">&#x27;python&#x27;</span> <span class="keyword">or</span> info_list[<span class="number">5</span>] == <span class="string">&#x27;i&#x27;</span>:</span><br><span class="line">    info_list[<span class="number">5</span>] = <span class="string">&#x27;*&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> info_list[<span class="number">6</span>] == <span class="string">&#x27;python&#x27;</span> <span class="keyword">or</span> info_list[<span class="number">6</span>] == <span class="string">&#x27;i&#x27;</span>:</span><br><span class="line">    info_list[<span class="number">6</span>] = <span class="string">&#x27;*&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> info_list[<span class="number">7</span>] == <span class="string">&#x27;python&#x27;</span> <span class="keyword">or</span> info_list[<span class="number">7</span>] == <span class="string">&#x27;i&#x27;</span>:</span><br><span class="line">    info_list[<span class="number">7</span>] = <span class="string">&#x27;*&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> info_list[<span class="number">8</span>] == <span class="string">&#x27;python&#x27;</span> <span class="keyword">or</span> info_list[<span class="number">8</span>] == <span class="string">&#x27;i&#x27;</span>:</span><br><span class="line">    info_list[<span class="number">8</span>] = <span class="string">&#x27;*&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> info_list[<span class="number">9</span>] == <span class="string">&#x27;python&#x27;</span> <span class="keyword">or</span> info_list[<span class="number">9</span>] == <span class="string">&#x27;i&#x27;</span>:</span><br><span class="line">    info_list[<span class="number">9</span>] = <span class="string">&#x27;*&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> info_list[-<span class="number">1</span>] <span class="keyword">in</span> [<span class="string">&#x27;python&#x27;</span>, <span class="string">&#x27;i&#x27;</span>]:</span><br><span class="line">    info_list[<span class="number">10</span>] = <span class="string">&#x27;*&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(info_list)</span><br><span class="line"></span><br><span class="line">info = <span class="string">&#x27; &#x27;</span>.join(info_list)</span><br><span class="line"><span class="built_in">print</span>(info)</span><br><span class="line"></span><br><span class="line">info = <span class="string">&#x27;my name is dewei&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(info))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(info) &gt; <span class="number">10</span> <span class="keyword">and</span> <span class="built_in">len</span>(info) != <span class="number">16</span>:</span><br><span class="line">    <span class="built_in">print</span>(info.replace(<span class="string">&#x27;dewei&#x27;</span>, <span class="string">&#x27;xiaomu&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;finish&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本节课主要学习了:&lt;br&gt;逻辑的概念与if语句&lt;br&gt;</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="逻辑" scheme="https://code.maylove.pub/tags/%E9%80%BB%E8%BE%91/"/>
    
    <category term="条件语句" scheme="https://code.maylove.pub/tags/%E6%9D%A1%E4%BB%B6%E8%AF%AD%E5%8F%A5/"/>
    
  </entry>
  
  <entry>
    <title>Python 综合案例:九九乘法表</title>
    <link href="https://code.maylove.pub/2021/47bf9691d9e3/"/>
    <id>https://code.maylove.pub/2021/47bf9691d9e3/</id>
    <published>2021-10-05T10:25:42.000Z</published>
    <updated>2021-10-05T10:50:54.369Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="综合案例-九九乘法表"><a href="#综合案例-九九乘法表" class="headerlink" title="综合案例:九九乘法表"></a>综合案例:九九乘法表</h3><h5 id="图片版代码"><a href="#图片版代码" class="headerlink" title="图片版代码"></a>图片版代码</h5><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-10-5/carbon.png" alt="1"></p><h5 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">1 * 1 = 1</span></span><br><span class="line"><span class="string">2 * 1 = 2 2 * 2 = 4</span></span><br><span class="line"><span class="string">3 * 1 = 3 3 * 2 = 6 3 * 3 = 9</span></span><br><span class="line"><span class="string">4 * 1 = 4 4 * 2 = 8 4 * 3 = 12 4 * 4 = 16</span></span><br><span class="line"><span class="string">5 * 1 = 5 5 * 2 = 10 5 * 3 = 15 5 * 4 = 20 5 * 5 = 25</span></span><br><span class="line"><span class="string">6 * 1 = 6 6 * 2 = 12 6 * 3 = 18 6 * 4 = 24 6 * 5 = 30 6 * 6 = 36</span></span><br><span class="line"><span class="string">7 * 1 = 7 7 * 2 = 14 7 * 3 = 21 7 * 4 = 28 7 * 5 = 35 7 * 6 = 42 7 * 7 = 49</span></span><br><span class="line"><span class="string">8 * 1 = 8 8 * 2 = 16 8 * 3 = 24 8 * 4 = 32 8 * 5 = 40 8 * 6 = 48 8 * 7 = 56 8 * 8 = 64</span></span><br><span class="line"><span class="string">9 * 1 = 9 9 * 2 = 18 9 * 3 = 27 9 * 4 = 36 9 * 5 = 45 9 * 6 = 54 9 * 7 = 63 9 * 8 = 72 9 * 9 = 81</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">work = &#123;&#125;</span><br><span class="line"><span class="comment"># 1</span></span><br><span class="line">one_value = (<span class="number">1</span>,)</span><br><span class="line">one_key = <span class="number">1</span></span><br><span class="line">work[<span class="built_in">str</span>(one_key)] = one_value</span><br><span class="line"><span class="built_in">print</span>(work)</span><br><span class="line"><span class="comment"># 2</span></span><br><span class="line">two_key = <span class="number">2</span></span><br><span class="line">two_value = []</span><br><span class="line">two_value.append(<span class="number">1</span>)</span><br><span class="line">two_value.append(<span class="number">2</span>)</span><br><span class="line">work[<span class="built_in">str</span>(two_key)] = two_value</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3</span></span><br><span class="line">three_key = <span class="number">3</span></span><br><span class="line">three_value = []</span><br><span class="line">three_value.append(<span class="number">1</span>)</span><br><span class="line">three_value.append(<span class="number">2</span>)</span><br><span class="line">three_value.append(<span class="number">3</span>)</span><br><span class="line">work[<span class="built_in">str</span>(three_key)] = three_value</span><br><span class="line"><span class="built_in">print</span>(work)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4</span></span><br><span class="line">four_key = <span class="number">4</span></span><br><span class="line">four_value = []</span><br><span class="line">four_value.append(<span class="number">1</span>)</span><br><span class="line">four_value.append(<span class="number">2</span>)</span><br><span class="line">four_value.append(<span class="number">3</span>)</span><br><span class="line">four_value.append(<span class="number">4</span>)</span><br><span class="line">work[<span class="built_in">str</span>(four_key)] = four_value</span><br><span class="line"></span><br><span class="line">temp_five = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>)</span><br><span class="line">five_key = <span class="number">5</span></span><br><span class="line">five_value = []</span><br><span class="line">five_value.extend(temp_five)</span><br><span class="line">work[<span class="built_in">str</span>(five_key)] = five_value</span><br><span class="line"><span class="built_in">print</span>(work)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 6</span></span><br><span class="line">temp_six = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]</span><br><span class="line">six_key = <span class="number">6</span></span><br><span class="line">six_value = []</span><br><span class="line">six_value.extend(temp_six)</span><br><span class="line">work[<span class="built_in">str</span>(six_key)] = six_value</span><br><span class="line"></span><br><span class="line"><span class="comment"># 7</span></span><br><span class="line">temp_seven = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>&#125;</span><br><span class="line">seven_key = <span class="number">7</span></span><br><span class="line">seven_value = []</span><br><span class="line">seven_value.extend(temp_seven)</span><br><span class="line">work[<span class="built_in">str</span>(seven_key)] = seven_value</span><br><span class="line"></span><br><span class="line"><span class="comment"># 8</span></span><br><span class="line">temp_eight = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>]</span><br><span class="line">eight_key = <span class="number">8</span></span><br><span class="line">eight_value = []</span><br><span class="line">eight_value.extend(temp_eight)</span><br><span class="line">eight_key = <span class="built_in">str</span>(eight_key)</span><br><span class="line">work[eight_key] = eight_value</span><br><span class="line"></span><br><span class="line"><span class="comment"># 9</span></span><br><span class="line">temp_nine = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>)</span><br><span class="line">nine_key = <span class="number">9</span></span><br><span class="line">nine_value = <span class="built_in">list</span>(temp_nine)</span><br><span class="line">nine_key = <span class="built_in">str</span>(nine_key)</span><br><span class="line">work.update(&#123;nine_key: nine_value&#125;)</span><br><span class="line"><span class="built_in">print</span>(work)</span><br><span class="line"></span><br><span class="line">_keys = work.keys()</span><br><span class="line">keys = <span class="built_in">list</span>(_keys)</span><br><span class="line"><span class="built_in">print</span>(_keys)</span><br><span class="line"></span><br><span class="line">one = keys[<span class="number">0</span>]</span><br><span class="line">one_value = work.pop(one)</span><br><span class="line"><span class="built_in">print</span>(one, one_value)</span><br><span class="line">one_key = <span class="built_in">int</span>(one)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(one_key, one_value[<span class="number">0</span>], one_key * one_value[<span class="number">0</span>]))</span><br><span class="line"></span><br><span class="line">two = keys[<span class="number">1</span>]</span><br><span class="line">two_value = work.pop(two)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(two, two_value[<span class="number">0</span>], <span class="built_in">int</span>(two) * two_value[<span class="number">0</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(two, two_value[<span class="number">1</span>], <span class="built_in">int</span>(two) * two_value[<span class="number">1</span>]))</span><br><span class="line"></span><br><span class="line">three = keys[<span class="number">2</span>]</span><br><span class="line">three_value = work.pop(three)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(three, three_value[<span class="number">0</span>], <span class="built_in">int</span>(three) * (three_value[<span class="number">0</span>])), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(three, three_value[<span class="number">1</span>], <span class="built_in">int</span>(three) * (three_value[<span class="number">1</span>])), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(three, three_value[<span class="number">2</span>], <span class="built_in">int</span>(three) * (three_value[<span class="number">2</span>])))</span><br><span class="line"></span><br><span class="line">four = keys[<span class="number">3</span>]</span><br><span class="line">four_value = work.pop(four)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(four, four_value[<span class="number">0</span>], <span class="built_in">int</span>(four) * (four_value[<span class="number">0</span>])), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(four, four_value[<span class="number">1</span>], <span class="built_in">int</span>(four) * (four_value[<span class="number">1</span>])), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(four, four_value[<span class="number">2</span>], <span class="built_in">int</span>(four) * (four_value[<span class="number">2</span>])), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(four, four_value[-<span class="number">1</span>], <span class="built_in">int</span>(four) * (four_value[-<span class="number">1</span>])))</span><br><span class="line"></span><br><span class="line">five = keys[<span class="number">4</span>]</span><br><span class="line">five_value = work.pop(five)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%s * %s = %s&#x27;</span> % (five, five_value[<span class="number">0</span>], <span class="built_in">int</span>(five) * five_value[<span class="number">0</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%s * %s = %d&#x27;</span> % (five, five_value[<span class="number">1</span>], <span class="built_in">int</span>(five) * five_value[<span class="number">1</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%s * %s = %d&#x27;</span> % (five, five_value[<span class="number">2</span>], <span class="built_in">int</span>(five) * five_value[<span class="number">2</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%s * %s = %d&#x27;</span> % (five, five_value[-<span class="number">2</span>], <span class="built_in">int</span>(five) * five_value[-<span class="number">2</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%s * %s = %d&#x27;</span> % (five, five_value[-<span class="number">1</span>], <span class="built_in">int</span>(five) * five_value[-<span class="number">1</span>]),)</span><br><span class="line"></span><br><span class="line">six = keys[<span class="number">5</span>]</span><br><span class="line">six_value = work.pop(six)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%s * %s = %s&#x27;</span> % (six, six_value[<span class="number">0</span>], <span class="built_in">int</span>(six) * six_value[<span class="number">0</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%s * %s = %s&#x27;</span> % (six, six_value[<span class="number">1</span>], <span class="built_in">int</span>(six) * six_value[<span class="number">1</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%s * %s = %s&#x27;</span> % (six, six_value[<span class="number">2</span>], <span class="built_in">int</span>(six) * six_value[<span class="number">2</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(six, six_value[<span class="number">3</span>], <span class="built_in">int</span>(six) * six_value[<span class="number">3</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(six, six_value[<span class="number">4</span>], <span class="built_in">int</span>(six) * six_value[<span class="number">4</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(six, six_value[<span class="number">5</span>], <span class="built_in">int</span>(six) * six_value[<span class="number">5</span>]))</span><br><span class="line"></span><br><span class="line">seven = keys[<span class="number">6</span>]</span><br><span class="line">seven_value = work.pop(seven)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(seven, seven_value[<span class="number">0</span>], <span class="built_in">int</span>(seven) * seven_value[<span class="number">0</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(seven, seven_value[<span class="number">1</span>], <span class="built_in">int</span>(seven) * seven_value[<span class="number">1</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(seven, seven_value[<span class="number">2</span>], <span class="built_in">int</span>(seven) * seven_value[<span class="number">2</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(seven, seven_value[<span class="number">3</span>], <span class="built_in">int</span>(seven) * seven_value[<span class="number">3</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(seven, seven_value[<span class="number">4</span>], <span class="built_in">int</span>(seven) * seven_value[<span class="number">4</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(seven, seven_value[<span class="number">5</span>], <span class="built_in">int</span>(seven) * seven_value[<span class="number">5</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(seven, seven_value[<span class="number">6</span>], <span class="built_in">int</span>(seven) * seven_value[<span class="number">6</span>]))</span><br><span class="line"></span><br><span class="line">eight = keys[<span class="number">7</span>]</span><br><span class="line">eight_value = work.pop(eight)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(eight, eight_value[<span class="number">0</span>], <span class="built_in">int</span>(eight) * eight_value[<span class="number">0</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(eight, eight_value[<span class="number">1</span>], <span class="built_in">int</span>(eight) * eight_value[<span class="number">1</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(eight, eight_value[<span class="number">2</span>], <span class="built_in">int</span>(eight) * eight_value[<span class="number">2</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(eight, eight_value[<span class="number">3</span>], <span class="built_in">int</span>(eight) * eight_value[<span class="number">3</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(eight, eight_value[<span class="number">4</span>], <span class="built_in">int</span>(eight) * eight_value[<span class="number">4</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(eight, eight_value[<span class="number">5</span>], <span class="built_in">int</span>(eight) * eight_value[<span class="number">5</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(eight, eight_value[<span class="number">6</span>], <span class="built_in">int</span>(eight) * eight_value[<span class="number">6</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(eight, eight_value[<span class="number">7</span>], <span class="built_in">int</span>(eight) * eight_value[<span class="number">7</span>]))</span><br><span class="line"></span><br><span class="line">nine = keys[-<span class="number">1</span>]</span><br><span class="line">nine_value = work.get(nine)</span><br><span class="line">format_str = <span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(format_str.<span class="built_in">format</span>(nine, nine_value[<span class="number">0</span>], <span class="built_in">int</span>(nine) * nine_value[<span class="number">0</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(format_str.<span class="built_in">format</span>(nine, nine_value[<span class="number">1</span>], <span class="built_in">int</span>(nine) * nine_value[<span class="number">1</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(format_str.<span class="built_in">format</span>(nine, nine_value[<span class="number">2</span>], <span class="built_in">int</span>(nine) * nine_value[<span class="number">2</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(format_str.<span class="built_in">format</span>(nine, nine_value[<span class="number">3</span>], <span class="built_in">int</span>(nine) * nine_value[<span class="number">3</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(format_str.<span class="built_in">format</span>(nine, nine_value[<span class="number">4</span>], <span class="built_in">int</span>(nine) * nine_value[<span class="number">4</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(format_str.<span class="built_in">format</span>(nine, nine_value[<span class="number">5</span>], <span class="built_in">int</span>(nine) * nine_value[<span class="number">5</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(format_str.<span class="built_in">format</span>(nine, nine_value[<span class="number">6</span>], <span class="built_in">int</span>(nine) * nine_value[<span class="number">6</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(format_str.<span class="built_in">format</span>(nine, nine_value[<span class="number">7</span>], <span class="built_in">int</span>(nine) * nine_value[<span class="number">7</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(format_str.<span class="built_in">format</span>(nine, nine_value[<span class="number">8</span>], <span class="built_in">int</span>(nine) * nine_value[<span class="number">8</span>]))</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">通过运用前面所学的知识 &lt;br&gt; 完成一个乘法口诀表</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="编程练习" scheme="https://code.maylove.pub/tags/%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Python 元组 ,列表, 集合间的转换</title>
    <link href="https://code.maylove.pub/2021/5e79a4d30cf0/"/>
    <id>https://code.maylove.pub/2021/5e79a4d30cf0/</id>
    <published>2021-10-05T10:24:50.000Z</published>
    <updated>2021-10-05T10:40:51.491Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="元组-列表-集合间的转换"><a href="#元组-列表-集合间的转换" class="headerlink" title="元组 ,列表, 集合间的转换"></a>元组 ,列表, 集合间的转换</h3><ul><li>列表元组集合间隔转换的函数</li></ul><table><thead><tr><th align="center">原始类型</th><th align="center">目标函数</th><th align="center">函数</th><th>举例</th></tr></thead><tbody><tr><td align="center">列表</td><td align="center">集合</td><td align="center">set</td><td><code>new_set = set([1,  2,  3, 4, 5])</code></td></tr><tr><td align="center">列表</td><td align="center">元组</td><td align="center">tuple</td><td><code>new_tutple = tuple([1, 2, 3, 4, 5])</code></td></tr><tr><td align="center">元组</td><td align="center">集合</td><td align="center">set</td><td><code>new_set = set((1, 2, 3, 4, 5))</code></td></tr><tr><td align="center">元组</td><td align="center">列表</td><td align="center">list</td><td><code>new_list = list(1, 2, 3, 4, 5)</code></td></tr><tr><td align="center">集合</td><td align="center">列表</td><td align="center">list</td><td><code>new_list = list(&#123;1, 2, 3, 4, 5&#125;)</code></td></tr><tr><td align="center">集合</td><td align="center">元组</td><td align="center">tuple</td><td><code>new_tuple = tuple(&#123;1, 2, 3, 4, 5&#125;)</code></td></tr></tbody></table><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">a = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">b = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line">c = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">tuple</span>(a), <span class="built_in">set</span>(a))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(<span class="built_in">tuple</span>(a)), <span class="built_in">type</span>(<span class="built_in">set</span>(a)))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">tuple</span>(a) <span class="keyword">is</span> b)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">set</span>(a) == c)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>(b), <span class="built_in">set</span>(b))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>(c), <span class="built_in">tuple</span>(c))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>(a))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>(a), <span class="built_in">type</span>(<span class="built_in">str</span>(a)))  <span class="comment"># &#x27;[1, 2, 3]&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>(b), <span class="built_in">type</span>(<span class="built_in">str</span>(b)))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>(c), <span class="built_in">type</span>(<span class="built_in">str</span>(c)))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 转换不可逆...</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>(<span class="built_in">str</span>(a)))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">tuple</span>(<span class="built_in">str</span>(b)))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">set</span>(<span class="built_in">str</span>(c)))</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本节课主要学习了:&lt;br&gt;元组 ,列表, 集合间的转换&lt;br&gt;其中涉及到的相关函数</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="类型转换" scheme="https://code.maylove.pub/tags/%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/"/>
    
  </entry>
  
  <entry>
    <title>Python 字符串与bytes的转换</title>
    <link href="https://code.maylove.pub/2021/c78f8edfbe5a/"/>
    <id>https://code.maylove.pub/2021/c78f8edfbe5a/</id>
    <published>2021-10-05T10:24:34.000Z</published>
    <updated>2021-10-05T10:41:35.826Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="字符串与bytes的转换"><a href="#字符串与bytes的转换" class="headerlink" title="字符串与bytes的转换"></a>字符串与bytes的转换</h3><h4 id="什么是bytes-比特类型"><a href="#什么是bytes-比特类型" class="headerlink" title="什么是bytes(比特类型)"></a>什么是bytes(比特类型)</h4><ul><li><p>二进制的数据流–bytes</p></li><li><p>一种特殊的字符串</p></li><li><p>字符串前 + b  标记</p></li></ul><blockquote><p>内置函数dir可以查到该数据类型的相关说明</p></blockquote><hr><h4 id="字符串转bytes的函数–encode"><a href="#字符串转bytes的函数–encode" class="headerlink" title="字符串转bytes的函数–encode"></a>字符串转bytes的函数–encode</h4><h5 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h5><ul><li>将<code>字符串</code>转成<code>比特(bytes)类型</code></li></ul><h5 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h5><p><code>sring.encode(endocing=&#39;utf-8&#39;, errors= &#39;strict&#39;)</code></p><h5 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h5><ul><li><p><code>encoding</code>:转换的<strong>编码格式</strong> ,如<code>ascii</code> , <code>gbk</code> , 默认 <code>utf-8</code></p></li><li><p><code>errors</code> : <strong>出错</strong>时的处理方法 , 默认<code>strict</code> </p><ul><li>直接抛错误 , 也可以选择 <code>ignore</code> 忽略错误</li></ul></li></ul><h5 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h5><ul><li>返回一个比特(bytes)类型</li></ul><hr><h4 id="bytes转字符串的函数–decode"><a href="#bytes转字符串的函数–decode" class="headerlink" title="bytes转字符串的函数–decode"></a>bytes转字符串的函数–decode</h4><h5 id="功能-1"><a href="#功能-1" class="headerlink" title="功能"></a>功能</h5><ul><li>将<code>比特(bytes)类型</code>转成<code>字符串</code></li></ul><h5 id="用法-1"><a href="#用法-1" class="headerlink" title="用法"></a>用法</h5><ul><li><code>bytes.decode(encoding=&#39;utf-8&#39;, errors=&#39;strict&#39;)</code></li></ul><h5 id="参数-1"><a href="#参数-1" class="headerlink" title="参数"></a>参数</h5><ul><li><p><code>encoding</code>:  转换成的<strong>编码格式</strong>, 如 <code>ascii</code>, <code>gbk</code>, 默认 <code>utf-8</code></p></li><li><p><code>errors</code>: 出错时的<strong>处理方法</strong> , 默认<code>strict</code> ,直接<strong>抛错误</strong> , 也可以选择<code>ignore</code>忽略错误</p></li></ul><h5 id="返回值-1"><a href="#返回值-1" class="headerlink" title="返回值"></a>返回值</h5><ul><li>返回一个<code>字符串类型</code></li></ul><h5 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">a = <span class="string">&#x27;hello xiaomu&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(a, <span class="built_in">type</span>(a))</span><br><span class="line"></span><br><span class="line">b = <span class="string">b&#x27;hello xiaomu&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(b, <span class="built_in">type</span>(b))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(b.capitalize())</span><br><span class="line"><span class="built_in">print</span>(b.replace(<span class="string">b&#x27;xiaomu&#x27;</span>, <span class="string">b&#x27;dewei&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(b[:<span class="number">3</span>])</span><br><span class="line"><span class="built_in">print</span>(b.find(<span class="string">b&#x27;x&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">dir</span>(b))</span><br><span class="line"></span><br><span class="line">c = <span class="string">&#x27;hello 小慕&#x27;</span></span><br><span class="line">d = c.encode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(d, <span class="built_in">type</span>(d))</span><br><span class="line"><span class="built_in">print</span>(d.decode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本节课主要学习了:&lt;br&gt;字符串与bytes的转换&lt;br&gt;bytes比特类型和 encode与decode函数</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="类型转换" scheme="https://code.maylove.pub/tags/%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/"/>
    
  </entry>
  
  <entry>
    <title>Python 字符串与列表间的转换</title>
    <link href="https://code.maylove.pub/2021/ae96905fcbf4/"/>
    <id>https://code.maylove.pub/2021/ae96905fcbf4/</id>
    <published>2021-10-05T10:24:17.000Z</published>
    <updated>2021-10-05T10:39:31.587Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="字符串与列表间的转换"><a href="#字符串与列表间的转换" class="headerlink" title="字符串与列表间的转换"></a>字符串与列表间的转换</h3><h4 id="字符串转列表的函数–split"><a href="#字符串转列表的函数–split" class="headerlink" title="字符串转列表的函数–split"></a>字符串转列表的函数–split</h4><h5 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h5><ul><li>将字符串以<code>一定规则</code><strong>切割</strong>转成<code>列表</code></li></ul><h5 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h5><ul><li><code>string.split(sep=None, maxsplit=-1)</code></li></ul><h5 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h5><ul><li><p><code>sep</code>:切割的规则符号,不填写**,默认空格**,如字符串<strong>无空格</strong><code>不分割</code>生成列表</p></li><li><p><code>maxsplit</code> : 根据切割符号<strong>切割的次数</strong>, 默认**-1无限制**</p></li></ul><h5 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h5><ul><li>返回一个<strong>列表</strong></li></ul><hr><h4 id="列表转字符串的函数–join"><a href="#列表转字符串的函数–join" class="headerlink" title="列表转字符串的函数–join"></a>列表转字符串的函数–join</h4><h5 id="功能-1"><a href="#功能-1" class="headerlink" title="功能"></a>功能</h5><ul><li>将<code>列表</code>以<strong>一定规则</strong>转成<code>字符串</code>(元组,集合也可以)</li></ul><h5 id="用法-1"><a href="#用法-1" class="headerlink" title="用法"></a>用法</h5><ul><li><code>&#39;sep&#39;.join(iterable)</code></li></ul><h5 id="参数-1"><a href="#参数-1" class="headerlink" title="参数"></a>参数</h5><ul><li><code>sep</code>: 生成字符串用来分割<code>列表每个元素</code>的符号</li><li><code>iterable</code>: <strong>非数字类型</strong>的<code>列表或元组或集合</code></li></ul><h5 id="返回值-1"><a href="#返回值-1" class="headerlink" title="返回值"></a>返回值</h5><ul><li>返回一个字符串</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">a = <span class="string">&#x27;abc&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(a.split())</span><br><span class="line"></span><br><span class="line">b = <span class="string">&#x27;a,b,c&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(b.split(<span class="string">&#x27;,&#x27;</span>))</span><br><span class="line"></span><br><span class="line">c = <span class="string">&#x27;a|b|c|d&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(c.split(<span class="string">&#x27;|&#x27;</span>, <span class="number">1</span>))</span><br><span class="line"></span><br><span class="line">d = <span class="string">&#x27;a|b|c|d&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(d.split(<span class="string">&#x27;|&#x27;</span>, <span class="number">2</span>))</span><br><span class="line"></span><br><span class="line">f = <span class="string">&#x27;a~b~c&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(f.split(<span class="string">&#x27;~&#x27;</span>, <span class="number">2</span>))</span><br><span class="line"></span><br><span class="line">test = [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>]</span><br><span class="line">test_str = <span class="string">&#x27;|&#x27;</span>.join(test)</span><br><span class="line"><span class="built_in">print</span>(test_str)</span><br><span class="line"></span><br><span class="line">test2 = [<span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;|&#x27;</span>.join(test2))</span><br><span class="line"></span><br><span class="line"><span class="comment"># test3 = [&#123;&#x27;name&#x27;: &#x27;dewei&#x27;&#125;, &#123;&#x27;name&#x27;: &#x27;xiaomu&#x27;&#125;]</span></span><br><span class="line"><span class="comment"># print(&#x27;.&#x27;.join(test3))</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># test4 = [(&#x27;a&#x27;, &#x27;v&#x27;), (&#x27;a&#x27;, &#x27;b&#x27;)]</span></span><br><span class="line"><span class="comment"># print(&#x27;&#x27;.join(test4))</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># test5 = [None, True]</span></span><br><span class="line"><span class="comment"># print(&#x27;.&#x27;.join(test5))</span></span><br><span class="line"></span><br><span class="line">sort_str = <span class="string">&#x27;a b c d f i p q c&#x27;</span></span><br><span class="line">sort_list = sort_str.split()</span><br><span class="line"><span class="built_in">print</span>(sort_list)</span><br><span class="line">sort_list.sort()</span><br><span class="line"><span class="built_in">print</span>(sort_list)</span><br><span class="line">sort_str = <span class="string">&#x27; &#x27;</span>.join(sort_list)</span><br><span class="line"><span class="built_in">print</span>(sort_str)</span><br><span class="line"></span><br><span class="line">sort_str_new = <span class="string">&#x27;abcdfipqc&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(sort_str_new)</span><br><span class="line">res = <span class="built_in">sorted</span>(sort_str_new)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#x27;</span>.join(res))</span><br><span class="line"></span><br><span class="line">seq = (<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>)</span><br><span class="line">seq2 = &#123;<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;#&#x27;</span>.join(seq))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;$&#x27;</span>.join(seq2), <span class="built_in">type</span>(seq2))</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本节课主要学习了:&lt;br&gt;字符串与列表间的转换&lt;br&gt;split函数和join函数</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="类型转换" scheme="https://code.maylove.pub/tags/%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/"/>
    
  </entry>
  
  <entry>
    <title>Python 字符串与数字类型的转换</title>
    <link href="https://code.maylove.pub/2021/ab042a99e9a7/"/>
    <id>https://code.maylove.pub/2021/ab042a99e9a7/</id>
    <published>2021-10-05T10:23:53.000Z</published>
    <updated>2021-10-05T10:37:08.413Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="字符串与数字类型的转换"><a href="#字符串与数字类型的转换" class="headerlink" title="字符串与数字类型的转换"></a>字符串与数字类型的转换</h3><h4 id="什么是类型转换-为什么做类型转换"><a href="#什么是类型转换-为什么做类型转换" class="headerlink" title="什么是类型转换, 为什么做类型转换"></a>什么是类型转换, 为什么做类型转换</h4><ul><li>将自身数据类型变成<code>新的数据类型</code> , 并拥有新的数据类型的所有功能的过程即为类型转换</li><li><code>a = &#39;1&#39;</code>  <strong>#无法做数字操作</strong></li><li>为方便更好的帮助处理业务, 将类型变更为更适合业务场景的类型</li></ul><h4 id="字符串与数字之间转换的要求"><a href="#字符串与数字之间转换的要求" class="headerlink" title="字符串与数字之间转换的要求"></a>字符串与数字之间转换的要求</h4><ul><li><code>str  --&gt;  number</code>: 数字组成的字符串</li><li><code>number  ---&gt;  str</code>  :  无要求</li></ul><h4 id="字符串与数字之间的转换函数"><a href="#字符串与数字之间的转换函数" class="headerlink" title="字符串与数字之间的转换函数"></a>字符串与数字之间的转换函数</h4><table><thead><tr><th align="center">原始类型</th><th align="center">目标函数</th><th align="center">函数</th><th align="center">举例</th></tr></thead><tbody><tr><td align="center">整形</td><td align="center">字符串</td><td align="center">str</td><td align="center">new_str = str(123456)</td></tr><tr><td align="center">浮点型</td><td align="center">字符串</td><td align="center">str</td><td align="center">new_str = str(3.14)</td></tr><tr><td align="center">字符串</td><td align="center">整形</td><td align="center">int</td><td align="center">new_int = int(‘12’)</td></tr><tr><td align="center">字符串</td><td align="center">浮点型</td><td align="center">float</td><td align="center">new_float = float(‘1.2’)</td></tr></tbody></table><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">int_data = <span class="number">12</span></span><br><span class="line">float_date =<span class="number">3.14</span></span><br><span class="line"></span><br><span class="line">str_int_data = <span class="built_in">str</span>(int_data)</span><br><span class="line">str_float_data = <span class="built_in">str</span>(float_date)</span><br><span class="line"><span class="built_in">print</span>(str_int_data, str_float_data, <span class="built_in">type</span>(str_int_data), <span class="built_in">type</span>(str_float_data))</span><br><span class="line"></span><br><span class="line">zero_number = <span class="number">0</span></span><br><span class="line">_number = -<span class="number">1</span></span><br><span class="line"></span><br><span class="line">str_zero_number = <span class="built_in">str</span>(zero_number)</span><br><span class="line">str_number = <span class="built_in">str</span>(_number)</span><br><span class="line"><span class="built_in">print</span>(str_zero_number, str_number, <span class="built_in">type</span>(str_zero_number), <span class="built_in">type</span>(str_number))</span><br><span class="line"></span><br><span class="line">str_float = <span class="string">&#x27;3.14&#x27;</span></span><br><span class="line">str_int = <span class="string">&#x27;123456&#x27;</span></span><br><span class="line"></span><br><span class="line">real_float = <span class="built_in">float</span>(str_float)</span><br><span class="line">real_int = <span class="built_in">int</span>(str_int)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(real_float, real_int, <span class="built_in">type</span>(real_float), <span class="built_in">type</span>(real_int))</span><br><span class="line"></span><br><span class="line">mix_Str = <span class="string">&#x27;123a&#x27;</span></span><br><span class="line"><span class="comment"># print(float(mix_Str))</span></span><br><span class="line">float_data_str = <span class="string">&#x27;3.14&#x27;</span></span><br><span class="line">test_data = <span class="built_in">float</span>(float_data_str)</span><br><span class="line"><span class="built_in">print</span>(test_data, <span class="built_in">type</span>(test_data))</span><br><span class="line"></span><br><span class="line">int_data_str = <span class="string">&#x27;123&#x27;</span></span><br><span class="line">test_data = <span class="built_in">float</span>(int_data_str)</span><br><span class="line"><span class="built_in">print</span>(test_data, <span class="built_in">type</span>(test_data))</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本节课主要学习了:&lt;br&gt;字符串与数字类型的转换&lt;br&gt;其中包含的原理和要求</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="类型转换" scheme="https://code.maylove.pub/tags/%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/"/>
    
  </entry>
  
  <entry>
    <title>Python 集合的isdisjoint函数</title>
    <link href="https://code.maylove.pub/2021/00310efa09de/"/>
    <id>https://code.maylove.pub/2021/00310efa09de/</id>
    <published>2021-10-04T12:52:13.000Z</published>
    <updated>2021-10-04T12:57:29.253Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="集合的isdisjoint函数"><a href="#集合的isdisjoint函数" class="headerlink" title="集合的isdisjoint函数"></a>集合的isdisjoint函数</h3><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li>判断两个<code>集合</code>是否包含<strong>相同的元素</strong> , 如果<strong>没有</strong>返回<code>True</code> , 否则返回<code>False</code></li><li><code>没有</code>才返回<strong>True</strong></li></ul><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><ul><li><code>a_set.isdisjoint(b_set)</code></li></ul><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><ul><li><code>b_set</code> : 与当前集合用来判断的集合</li></ul><h4 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h4><ul><li>返回一个<strong>布尔值</strong><code>True</code>或<code>False</code></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">company_not_allow = &#123;<span class="string">&#x27;女&#x27;</span>, <span class="string">&#x27;喝酒&#x27;</span>, <span class="string">&#x27;抽烟&#x27;</span>, <span class="string">&#x27;睡懒觉&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line">one_player = &#123;<span class="string">&#x27;男&#x27;</span>, <span class="string">&#x27;跑步&#x27;</span>, <span class="string">&#x27;朝气&#x27;</span>, <span class="string">&#x27;喝酒&#x27;</span>&#125;</span><br><span class="line">two_player = &#123;<span class="string">&#x27;女&#x27;</span>, <span class="string">&#x27;生活规律&#x27;</span>, <span class="string">&#x27;跆拳道&#x27;</span>&#125;</span><br><span class="line">three_player = &#123;<span class="string">&#x27;男&#x27;</span>, <span class="string">&#x27;太极拳&#x27;</span>&#125;</span><br><span class="line">four_player = &#123;<span class="string">&#x27;男&#x27;</span>, <span class="string">&#x27;空手道&#x27;</span>, <span class="string">&#x27;年轻&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(company_not_allow.isdisjoint(one_player))</span><br><span class="line"><span class="built_in">print</span>(company_not_allow.isdisjoint(two_player))</span><br><span class="line"><span class="built_in">print</span>(company_not_allow.isdisjoint(three_player))</span><br><span class="line"><span class="built_in">print</span>(company_not_allow.isdisjoint(four_player))</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本节课主要学习了:&lt;br&gt;isdisjoint函数&lt;br&gt;判断两个元素是否包含相同元素</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="集合" scheme="https://code.maylove.pub/tags/%E9%9B%86%E5%90%88/"/>
    
  </entry>
  
  <entry>
    <title>Python 集合的并集--union函数</title>
    <link href="https://code.maylove.pub/2021/e8a9c829e273/"/>
    <id>https://code.maylove.pub/2021/e8a9c829e273/</id>
    <published>2021-10-04T12:52:03.000Z</published>
    <updated>2021-10-04T12:55:53.440Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="集合的并集–union函数"><a href="#集合的并集–union函数" class="headerlink" title="集合的并集–union函数"></a>集合的并集–<code>union函数</code></h3><h4 id="什么是并集"><a href="#什么是并集" class="headerlink" title="什么是并集"></a>什么是并集</h4><ul><li><code>a , b 两个集合</code>中所有的<strong>元素</strong>(去除重复)即为a与b的<code>并集</code></li><li><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-10-4/1.png" alt="1"></li></ul><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li>返回<strong>多个集合</strong>的<code>并集</code>,即包含了<strong>所有集合</strong>的元素,<strong>重复的元素</strong><code>只会出现一次</code></li></ul><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><ul><li>a_set.union(b_set…)</li></ul><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><ul><li><code>b_set...</code>: 与<code>当前集合</code>对比的<strong>1或多个集合</strong></li></ul><h4 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h4><ul><li>返回<strong>原始集合</strong>与<strong>对比集合</strong>的<code>并集</code></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">a_school = [<span class="string">&#x27;周五半天&#x27;</span>, <span class="string">&#x27;免费周末培训&#x27;</span>, <span class="string">&#x27;周五休息&#x27;</span>]</span><br><span class="line">b_school = [<span class="string">&#x27;放学时间从6点改为5点&#x27;</span>, <span class="string">&#x27;作业少留点&#x27;</span>, <span class="string">&#x27;换舒服的座椅&#x27;</span>]</span><br><span class="line">c_school = [<span class="string">&#x27;作业少留点&#x27;</span>, <span class="string">&#x27;周五半天&#x27;</span>, <span class="string">&#x27;伙食改善&#x27;</span>]</span><br><span class="line"></span><br><span class="line">a_set = <span class="built_in">set</span>(a_school)</span><br><span class="line">b_set = <span class="built_in">set</span>(b_school)</span><br><span class="line">c_set = <span class="built_in">set</span>(c_school)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(a_set)</span><br><span class="line"><span class="built_in">print</span>(b_set)</span><br><span class="line"><span class="built_in">print</span>(c_set)</span><br><span class="line"></span><br><span class="line"><span class="comment"># help_date = a_set.union(b_set, c_set)</span></span><br><span class="line">help_date = a_set.union(b_school, c_school)</span><br><span class="line"><span class="built_in">print</span>(help_date)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(help_date))</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本节课主要学习了:&lt;br&gt;union函数&lt;br&gt;并集的使用方法</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="集合" scheme="https://code.maylove.pub/tags/%E9%9B%86%E5%90%88/"/>
    
  </entry>
  
  <entry>
    <title>Python 集合的交集--intersection函数</title>
    <link href="https://code.maylove.pub/2021/accc6957dd99/"/>
    <id>https://code.maylove.pub/2021/accc6957dd99/</id>
    <published>2021-10-04T12:51:48.000Z</published>
    <updated>2021-10-04T12:55:18.674Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="集合的交集–intersection函数"><a href="#集合的交集–intersection函数" class="headerlink" title="集合的交集–intersection函数"></a>集合的交集–<code>intersection函数</code></h3><h4 id="什么是交集"><a href="#什么是交集" class="headerlink" title="什么是交集"></a>什么是交集</h4><ul><li>a , b两个集合分别拥有的<code>相同</code>的元素集 , 称为a与b的交集</li><li><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-10-4/1.png" alt="1"></li></ul><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li>返回<strong>两个或更多集合</strong>中<code>都包含</code>的元素,即交集</li></ul><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><ul><li><code>a_set.intersection(b_set...)</code></li></ul><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><p><code>b_set...</code>:  与当前集合对比的<strong>1或多个集合</strong></p><h4 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h4><ul><li>返回<strong>原始集合</strong>与<strong>对比集合</strong>的<code>交集</code></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">a = [<span class="string">&#x27;dewei&#x27;</span>, <span class="string">&#x27;xiaomu&#x27;</span>, <span class="string">&#x27;xiaohua&#x27;</span>, <span class="string">&#x27;xiaoguo&#x27;</span>]</span><br><span class="line">b = [<span class="string">&#x27;xiaohua&#x27;</span>, <span class="string">&#x27;dewei&#x27;</span>, <span class="string">&#x27;xiaoman&#x27;</span>, <span class="string">&#x27;xiaolin&#x27;</span>]</span><br><span class="line">c = [<span class="string">&#x27;xiaoguang&#x27;</span>, <span class="string">&#x27;xiaobai&#x27;</span>, <span class="string">&#x27;dewei&#x27;</span>, <span class="string">&#x27;xiaoyuan&#x27;</span>]</span><br><span class="line"></span><br><span class="line">a_set = <span class="built_in">set</span>(a)</span><br><span class="line">b_set = <span class="built_in">set</span>(b)</span><br><span class="line">c_set = <span class="built_in">set</span>(c)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(a_set, b_set, c_set)</span><br><span class="line"></span><br><span class="line">result = a_set.intersection(b_set, c_set)</span><br><span class="line">xiaotou = <span class="built_in">list</span>(result)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; 是 这个小偷&#x27;</span>.<span class="built_in">format</span>(xiaotou[<span class="number">0</span>]))</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本节课主要学习了:&lt;br&gt;intersection函数&lt;br&gt;交集的使用方法</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="集合" scheme="https://code.maylove.pub/tags/%E9%9B%86%E5%90%88/"/>
    
  </entry>
  
  <entry>
    <title>Python 集合的差集--difference函数</title>
    <link href="https://code.maylove.pub/2021/bb2cff969079/"/>
    <id>https://code.maylove.pub/2021/bb2cff969079/</id>
    <published>2021-10-04T12:51:28.000Z</published>
    <updated>2021-10-04T12:54:42.045Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="集合的差集–difference函数"><a href="#集合的差集–difference函数" class="headerlink" title="集合的差集–difference函数"></a>集合的差集–<code>difference函数</code></h3><h4 id="什么是差集"><a href="#什么是差集" class="headerlink" title="什么是差集"></a>什么是差集</h4><ul><li>a, b两个集合 , 由所有属于a且不属于b的元素组成的集合叫做a与b的差集</li><li><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-10-4/1.png" alt="1"></li></ul><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li><code>返回集合的差集</code> , 即<strong>返回的集合元素</strong><code>包含在第一个集合中</code>, 但<code>不包含在第二个集合</code>(方法的参数)中</li></ul><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><ul><li><code>a_set.difference(b_set)</code></li></ul><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><ul><li><code>b_set</code> : 当前集合<strong>需要对比的集合</strong></li></ul><h4 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h4><ul><li><strong>返回</strong><code>原始集合</code>于<code>对比集合</code>的<code>差集</code></li><li>(即a_set与b_set的差集)</li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">drivers = [<span class="string">&#x27;dewei&#x27;</span>, <span class="string">&#x27;xiaomu&#x27;</span>, <span class="string">&#x27;xiaoming&#x27;</span>, <span class="string">&#x27;xiaoman&#x27;</span>]</span><br><span class="line">testers = [<span class="string">&#x27;xiaomu&#x27;</span>, <span class="string">&#x27;xiaoman&#x27;</span>, <span class="string">&#x27;xiaogang&#x27;</span>, <span class="string">&#x27;xiaotao&#x27;</span>]</span><br><span class="line"></span><br><span class="line">driver_set = <span class="built_in">set</span>(drivers)</span><br><span class="line">test_set = <span class="built_in">set</span>(testers)</span><br><span class="line"></span><br><span class="line">sample_drives = driver_set.difference(test_set)</span><br><span class="line"><span class="built_in">print</span>(sample_drives)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本节课主要学习了:&lt;br&gt;difference函数&lt;br&gt;差集的使用方法</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="集合" scheme="https://code.maylove.pub/tags/%E9%9B%86%E5%90%88/"/>
    
  </entry>
  
  <entry>
    <title>Python 集合的增删改</title>
    <link href="https://code.maylove.pub/2021/697e4a85a0ab/"/>
    <id>https://code.maylove.pub/2021/697e4a85a0ab/</id>
    <published>2021-10-04T12:51:06.000Z</published>
    <updated>2021-10-04T12:53:28.797Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="集合的增删改"><a href="#集合的增删改" class="headerlink" title="集合的增删改"></a>集合的增删改</h3><h4 id="集合的add函数"><a href="#集合的add函数" class="headerlink" title="集合的add函数"></a>集合的<code>add函数</code></h4><h5 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h5><ul><li>用于集合中<code>添加一个元素</code>,如果集合中<strong>已存在该元素</strong>则该元素<strong>不执行</strong></li></ul><h5 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h5><ul><li><code>set.add(item)</code></li></ul><h5 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h5><ul><li><code>item</code> : 要<strong>添加到集合中的元素</strong></li></ul><h5 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h5><ul><li>无返回值</li></ul><hr><h4 id="集合的update函数"><a href="#集合的update函数" class="headerlink" title="集合的update函数"></a>集合的update函数</h4><h5 id="功能-1"><a href="#功能-1" class="headerlink" title="功能"></a>功能</h5><ul><li>加入一个<code>新的集合(或列表, 元组, 字符串)</code>, 如新集合内的元素在原集合中<strong>存在则无视</strong></li></ul><h5 id="用法-1"><a href="#用法-1" class="headerlink" title="用法"></a>用法</h5><ul><li><code>set.update(iterable)</code></li><li>传入字符串的时候会被拆开….</li></ul><h5 id="参数-1"><a href="#参数-1" class="headerlink" title="参数"></a>参数</h5><ul><li><code>iterable</code> : 集合,列表元组字符串</li></ul><h5 id="返回值-1"><a href="#返回值-1" class="headerlink" title="返回值"></a>返回值</h5><ul><li><code>无</code>返回值 , <strong>直接作用于原集合</strong></li></ul><hr><h4 id="集合的remove函数"><a href="#集合的remove函数" class="headerlink" title="集合的remove函数"></a>集合的remove函数</h4><h5 id="功能-2"><a href="#功能-2" class="headerlink" title="功能"></a>功能</h5><ul><li>将集合中的某个元素<code>删除</code> , 如元素<code>不存在</code>将会<strong>报错</strong></li></ul><h5 id="用法-2"><a href="#用法-2" class="headerlink" title="用法"></a>用法</h5><ul><li>set.remove(item)  #   注意是元素不是索引</li></ul><h5 id="参数-2"><a href="#参数-2" class="headerlink" title="参数"></a>参数</h5><ul><li><code>item</code> : 当前集合中的<strong>一个元素</strong></li></ul><h5 id="返回值-2"><a href="#返回值-2" class="headerlink" title="返回值"></a>返回值</h5><ul><li><strong>无返回值</strong> , 直接作用于<strong>原集合</strong></li></ul><hr><h4 id="集合的clear函数"><a href="#集合的clear函数" class="headerlink" title="集合的clear函数"></a>集合的clear函数</h4><h5 id="功能-3"><a href="#功能-3" class="headerlink" title="功能"></a>功能</h5><ul><li>清空<strong>当前集合</strong>中的<code>所有元素</code></li></ul><h5 id="用法-3"><a href="#用法-3" class="headerlink" title="用法"></a>用法</h5><ul><li><code>set.clear()</code></li></ul><h5 id="参数-3"><a href="#参数-3" class="headerlink" title="参数"></a>参数</h5><ul><li><code>无</code></li></ul><h5 id="返回值-3"><a href="#返回值-3" class="headerlink" title="返回值"></a>返回值</h5><ul><li><code>无返回值</code> , 直接作用于<strong>原集合</strong></li></ul><hr><h4 id="用del删除集合"><a href="#用del删除集合" class="headerlink" title="用del删除集合"></a>用del删除集合</h4><ul><li>只能直接删除集合对象自身</li></ul><hr><h4 id="重要说明"><a href="#重要说明" class="headerlink" title="重要说明"></a>重要说明</h4><ul><li>集合无法通过索引获取元素</li><li>集合无获取元素的任何方法</li><li>集合只是用来处理列表或元组的一种临时类型 , 它不适合存储于运输</li></ul><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">a_list = [<span class="string">&#x27;python&#x27;</span>, <span class="string">&#x27;django&#x27;</span>, <span class="string">&#x27;django&#x27;</span>, <span class="string">&#x27;flask&#x27;</span>]</span><br><span class="line"></span><br><span class="line">a_set = <span class="built_in">set</span>()</span><br><span class="line"></span><br><span class="line">a_set.add(a_list[<span class="number">0</span>])</span><br><span class="line">a_set.add(a_list[<span class="number">1</span>])</span><br><span class="line">a_set.add(a_list[<span class="number">2</span>])</span><br><span class="line">a_set.add(a_list[-<span class="number">1</span>])</span><br><span class="line"><span class="built_in">print</span>(a_set)</span><br><span class="line"></span><br><span class="line">a_set.add(<span class="literal">True</span>)</span><br><span class="line">a_set.add(<span class="literal">None</span>)</span><br><span class="line"><span class="built_in">print</span>(a_set)</span><br><span class="line"></span><br><span class="line">a_tuple = (<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>)</span><br><span class="line">a_set.update(a_tuple)</span><br><span class="line"><span class="built_in">print</span>(a_set)</span><br><span class="line">a_set.update(<span class="string">&#x27;python&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(a_set)</span><br><span class="line"></span><br><span class="line">a_set.remove(<span class="string">&#x27;python&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(a_set)</span><br><span class="line"></span><br><span class="line">a_set.clear()</span><br><span class="line"><span class="built_in">print</span>(a_set)</span><br><span class="line"><span class="keyword">del</span> a_set</span><br><span class="line"></span><br><span class="line"><span class="comment"># a_set.remove(&#x27;flask&#x27;)</span></span><br><span class="line"><span class="comment"># print(a_set)</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本节课主要学习了:&lt;br&gt;集合的add,update,remove,clear函数&lt;br&gt;和del的注意事项</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="集合" scheme="https://code.maylove.pub/tags/%E9%9B%86%E5%90%88/"/>
    
  </entry>
  
  <entry>
    <title>Python 初识集合</title>
    <link href="https://code.maylove.pub/2021/65bbd4967d97/"/>
    <id>https://code.maylove.pub/2021/65bbd4967d97/</id>
    <published>2021-10-04T12:46:30.000Z</published>
    <updated>2021-10-04T12:50:32.693Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="初识集合"><a href="#初识集合" class="headerlink" title="初识集合"></a>初识集合</h3><h4 id="什么是集合"><a href="#什么是集合" class="headerlink" title="什么是集合"></a>什么是集合</h4><ul><li><code>集合(set)</code>是一个无序的不重复元素序列</li><li>常用来对两个列表进行交并差的处理</li><li>集合与列表一样, 支持所有的数据类型(<strong>所有不可变的数据类型</strong>)</li></ul><h4 id="集合与列表的区别"><a href="#集合与列表的区别" class="headerlink" title="集合与列表的区别"></a>集合与列表的区别</h4><table><thead><tr><th align="center">功能</th><th align="center">列表</th><th align="center">集合</th></tr></thead><tbody><tr><td align="center">顺序</td><td align="center">有序</td><td align="center">无序</td></tr><tr><td align="center">内容</td><td align="center">可重复</td><td align="center">不可重复</td></tr><tr><td align="center">功能</td><td align="center">用于数据的使用</td><td align="center">用于数据的交集并集差集的获取</td></tr><tr><td align="center">索引</td><td align="center">有索引</td><td align="center">无索引</td></tr><tr><td align="center">符号</td><td align="center">[] [1,2,3]</td><td align="center">{} {1,2,3}</td></tr></tbody></table><h4 id="集合的创建方法"><a href="#集合的创建方法" class="headerlink" title="集合的创建方法"></a>集合的创建方法</h4><ul><li>通过<code>set函数</code>来创建集合,<code>不能使用&#123;&#125;</code> 来创建<strong>空集合</strong></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">a = <span class="built_in">set</span>()</span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(a))</span><br><span class="line"></span><br><span class="line">b = <span class="built_in">set</span>([<span class="string">&#x27;python&#x27;</span>, <span class="string">&#x27;django&#x27;</span>, <span class="string">&#x27;flask&#x27;</span>])</span><br><span class="line"><span class="built_in">print</span>(b)</span><br><span class="line"></span><br><span class="line">c = &#123;(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>), <span class="string">&#x27;123&#x27;</span>, <span class="number">1</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(c)</span><br><span class="line"></span><br><span class="line">d = &#123;&#125;</span><br><span class="line"><span class="built_in">print</span>(d, <span class="built_in">type</span>(d))</span><br><span class="line"></span><br><span class="line">a_list = [<span class="string">&#x27;python&#x27;</span>, <span class="string">&#x27;django&#x27;</span>, <span class="string">&#x27;python&#x27;</span>, <span class="string">&#x27;flask&#x27;</span>]</span><br><span class="line">b_set = <span class="built_in">set</span>(a_list)</span><br><span class="line"><span class="built_in">print</span>(b_set)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本节课主要学习了:&lt;br&gt;集合的定义以及与列表的区别&lt;br&gt;和创建方法的注意事项</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="集合" scheme="https://code.maylove.pub/tags/%E9%9B%86%E5%90%88/"/>
    
  </entry>
  
  <entry>
    <title>Python 所有数据类型与布尔值的关系</title>
    <link href="https://code.maylove.pub/2021/e614b7c29c00/"/>
    <id>https://code.maylove.pub/2021/e614b7c29c00/</id>
    <published>2021-10-04T00:46:07.000Z</published>
    <updated>2021-10-04T01:06:00.199Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="所有数据类型与布尔值的关系"><a href="#所有数据类型与布尔值的关系" class="headerlink" title="所有数据类型与布尔值的关系"></a>所有数据类型与布尔值的关系</h3><ul><li>字符串, 数字, 列表, 元组, 字典, 空类型 与 布尔值 的关系总结</li></ul><h4 id="明确两点"><a href="#明确两点" class="headerlink" title="明确两点"></a>明确两点</h4><ol><li>每一种数据类型,自身的值都有表示True与False</li><li>not对于一切结果取反</li><li>非0 非空都为True 其他都为False</li></ol><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-10-3/4.jpg" alt="4"></p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">a_1 = <span class="number">1</span></span><br><span class="line">a_2 = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bool</span>(a_1))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bool</span>(a_2))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bool</span>(<span class="keyword">not</span> a_1))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bool</span>(<span class="keyword">not</span> a_2))</span><br><span class="line"></span><br><span class="line">b_1 = <span class="string">&#x27;1&#x27;</span></span><br><span class="line">b_2 = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;----------&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bool</span>(b_1))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bool</span>(b_2))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bool</span>(<span class="keyword">not</span> b_1))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bool</span>(<span class="keyword">not</span> b_2))</span><br><span class="line"></span><br><span class="line">c_1 = <span class="literal">True</span></span><br><span class="line">c_2 = <span class="literal">False</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;-----------&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(c_1)</span><br><span class="line"><span class="built_in">print</span>(c_2)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="keyword">not</span> c_1)</span><br><span class="line"><span class="built_in">print</span>(<span class="keyword">not</span> c_2)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本节课主要学习了:&lt;br&gt;所有数据类型与布尔值的关系</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="字典" scheme="https://code.maylove.pub/tags/%E5%AD%97%E5%85%B8/"/>
    
  </entry>
  
</feed>
