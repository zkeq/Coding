<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ZkeqのCoding日志</title>
  
  <subtitle>Python Java Html 都在学</subtitle>
  <link href="https://code.maylove.pub/atom.xml" rel="self"/>
  
  <link href="https://code.maylove.pub/"/>
  <updated>2021-10-28T14:38:58.680Z</updated>
  <id>https://code.maylove.pub/</id>
  
  <author>
    <name>Zkeq</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Python 装饰器</title>
    <link href="https://code.maylove.pub/2021/8ac31b97c4f0/"/>
    <id>https://code.maylove.pub/2021/8ac31b97c4f0/</id>
    <published>2021-10-28T14:25:10.000Z</published>
    <updated>2021-10-28T14:38:58.680Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="装饰器"><a href="#装饰器" class="headerlink" title="装饰器"></a>装饰器</h3><h4 id="什么是装饰器"><a href="#什么是装饰器" class="headerlink" title="什么是装饰器"></a>什么是装饰器</h4><ul><li>也是一种函数</li><li>可以接受函数作为参数</li><li>可以返回函数</li><li>接收一个函数,内部对其处理,然后返回一个新函数,动态的增强函数功能</li><li>将<code>c函数</code>在<code>a函数</code>中执行,在<code>a函数</code>中可以<strong>选择执行</strong>或<strong>不执行</strong><code>c函数</code>,也可以对<code>c函数</code>的<strong>结果</strong>进行<strong>二次加工处理</strong></li></ul><h4 id="装饰器的定义"><a href="#装饰器的定义" class="headerlink" title="装饰器的定义"></a>装饰器的定义</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">out</span>(<span class="params">func_args</span>):</span> 外围函数</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">inter</span>(<span class="params">*args, **kwargs</span>):</span> 内嵌函数</span><br><span class="line">reture func_args(*args, **kwargs)</span><br><span class="line">    <span class="keyword">return</span> inter   外围函数返回内嵌函数</span><br></pre></td></tr></table></figure><h4 id="装饰器的用法"><a href="#装饰器的用法" class="headerlink" title="装饰器的用法"></a>装饰器的用法</h4><ul><li><p>将<code>被调用的函数</code>直接作为<code>参数</code><strong>传入</strong><code>装饰器</code>的<code>外围函数括弧</code></p></li><li><p>将装饰器与被调用函数绑定在一起</p></li><li><p><code>@符号 + 装饰器函数</code>放在被调用函数的上一行 , <code>被调用的函数</code><strong>正常定义</strong> , <code>只需要直接调用</code><strong>被执行函数</strong>即可</p></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check_str</span>(<span class="params">func</span>):</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;func:&#x27;</span>, func)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">inner</span>(<span class="params">*args, **kwargs</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;args:&#x27;</span>, args, kwargs)</span><br><span class="line">        result = func(*args, **kwargs)</span><br><span class="line">        <span class="keyword">if</span> result == <span class="string">&#x27;ok&#x27;</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;result is %s&#x27;</span> % result</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;result is failed:%s&#x27;</span> % result</span><br><span class="line">    <span class="keyword">return</span> inner</span><br><span class="line"></span><br><span class="line"><span class="meta">@check_str</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span>(<span class="params">data</span>):</span></span><br><span class="line">    <span class="keyword">return</span> data</span><br><span class="line"></span><br><span class="line">result = test(data=<span class="string">&#x27;no&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line"></span><br><span class="line">result = test(<span class="string">&#x27;ok&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本节课主要学习了&lt;br&gt;Python中的装饰器</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="对象和异常" scheme="https://code.maylove.pub/tags/%E5%AF%B9%E8%B1%A1%E5%92%8C%E5%BC%82%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>Python中的封装</title>
    <link href="https://code.maylove.pub/2021/3ef525f29f3e/"/>
    <id>https://code.maylove.pub/2021/3ef525f29f3e/</id>
    <published>2021-10-28T14:24:58.000Z</published>
    <updated>2021-10-28T14:38:53.840Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="Python中的封装"><a href="#Python中的封装" class="headerlink" title="Python中的封装"></a>Python中的封装</h3><h4 id="python中的封装概念"><a href="#python中的封装概念" class="headerlink" title="python中的封装概念"></a>python中的封装概念</h4><ul><li><p>将<code>不对外</code>的<code>私有属性或方法</code>通过<strong>可对外使用的函数</strong>而使用</p><p>​        (类中<code>定义私有的</code>,只有通过类<code>内部使用</code>,<strong>外部无法访问</strong>)</p></li><li><p>这样做的<strong>主要原因</strong>:<code>保护隐私</code>, <code>明确区分内外</code></p></li></ul>]]></content>
    
    
    <summary type="html">本节课主要学习了&lt;br&gt;Python中的封装</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="对象和异常" scheme="https://code.maylove.pub/tags/%E5%AF%B9%E8%B1%A1%E5%92%8C%E5%BC%82%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>Python 阶段编程练习(十四)</title>
    <link href="https://code.maylove.pub/2021/65df7f3fb793/"/>
    <id>https://code.maylove.pub/2021/65df7f3fb793/</id>
    <published>2021-10-28T14:24:36.000Z</published>
    <updated>2021-10-28T14:38:48.943Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="编程练习"><a href="#编程练习" class="headerlink" title="编程练习"></a>编程练习</h3><blockquote><p>自定义一个交通工具类(Vehicle)，并根据提示对该类进行进一步封装，使其拥有工具类型、速度、体积等属性值。通过自定义实例方法实现交通工具的前移、速度设置、获取当前速度、加速行驶、减速行驶、实例信息展示、实例类型判别等功能。</p><p>效果图如下：</p><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-10-28/1.jpg" alt="1"></p></blockquote><h4 id="任务"><a href="#任务" class="headerlink" title="任务"></a>任务</h4><ol><li><p>自定义一个交通工具类(Vehicle)</p></li><li><p>设置类属性trans_type（默认值为SUV）和实例属性速度speed（int 类型，单位为 km/h）、体积size（tuple类型，单位为米。）</p></li><li><p>自定义方法 show_info( )，打印实例的所属类型和速度、体积的值；</p></li><li><p>自定义实例方法如下：</p><ol><li>定义move( )方法，实现打印”我已向前移动了50米”</li><li>定义set_speed(new_speed)方法，设置对应实例的速度为new_speed km/h</li><li>定义get_speed()方法，如果（2）中设置了速度值则打印出来，打印格式为”我的时速为：设置的速度值 km/h”</li><li>定义speed_up()方法，设置每次调用时实例的速度都增加10km/h，并打印”我的速度由xx km/提升到了xx km/h”</li><li>定义speed_down()方法，设置每次调用时实例的速度都降低15km/h，并打印”我的速度由xx km/下降到了xx km/h”</li></ol></li><li><p>自定义方法 transport_identify( )，判断实例的trans_type属性是否为SUV。若是则打印”类型匹配”，反之则打印”类型不匹配”</p></li><li><p>初始化实例对象tool_1，并根据上述效果图调用对应方法</p></li></ol><h4 id="任务提示"><a href="#任务提示" class="headerlink" title="任务提示"></a>任务提示</h4><ul><li>类的初始化方法中所传参数size是元组类型，直接传入实例的长，宽，高即可，如size=(10,10,10)</li></ul><h4 id="初始代码"><a href="#初始代码" class="headerlink" title="初始代码"></a>初始代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Vehicle</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line"><span class="comment"># 自定义Vehicle类属性</span></span><br><span class="line">    </span><br><span class="line"><span class="comment"># 自定义实例的初始化方法</span></span><br><span class="line">    </span><br><span class="line"><span class="comment"># 自定义实例方法show_info，打印实例的速度和体积</span></span><br><span class="line">    </span><br><span class="line"><span class="comment"># 自定义实例方法move,打印“我已向前移动了50米”</span></span><br><span class="line">    </span><br><span class="line"><span class="comment"># 自定义实例方法set_speed，设置对应的速度值</span></span><br><span class="line">    </span><br><span class="line"><span class="comment"># 自定义实例方法get_speed，打印当前的速度值</span></span><br><span class="line">    </span><br><span class="line"><span class="comment"># 自定义实例方法speed_up，实现对实例的加速</span></span><br><span class="line">    </span><br><span class="line"><span class="comment"># 自定义实例方法speed_down，实现对实例的减速</span></span><br><span class="line">    </span><br><span class="line"><span class="comment"># 自定义实例方法transport_identify，实现对实例</span></span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">tool_1 = Vehicle(<span class="number">20</span>, (<span class="number">3.6</span>, <span class="number">1.9</span>, <span class="number">1.75</span>))</span><br><span class="line">    </span><br><span class="line"><span class="comment"># 调用实例方法 打印实例的速度和体积</span></span><br><span class="line">    </span><br><span class="line"><span class="comment"># 调用实例方法 实现实例的前移</span></span><br><span class="line">    </span><br><span class="line">tool_1.set_speed(<span class="number">40</span>)</span><br><span class="line"><span class="comment"># 调用实例方法 打印当前速度</span></span><br><span class="line">    </span><br><span class="line"><span class="comment"># 调用实例方法 对实例进行加速</span></span><br><span class="line">    </span><br><span class="line"><span class="comment"># 调用实例方法 对实例进行减速</span></span><br><span class="line">    </span><br><span class="line"><span class="comment"># 调用实例方法 判断当前实例的类型</span></span><br></pre></td></tr></table></figure><h4 id="代码提交区"><a href="#代码提交区" class="headerlink" title="代码提交区"></a>代码提交区</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Vehicle</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="comment"># 自定义Vehicle类属性</span></span><br><span class="line">    trans_type = <span class="string">&#x27;SUV&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 自定义实例的初始化方法</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, speed, size</span>):</span></span><br><span class="line">        self.speed = speed</span><br><span class="line">        self.size = size</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 自定义实例方法show_info，打印实例的速度和体积</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_info</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;所属类型:&#123;&#125;,速度是&#123;&#125;km/h,体积是&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(self.trans_type, self.speed, self.size))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 自定义实例方法move,打印“我已向前移动了50米”</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">move</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;我已向前移动了50米&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 自定义实例方法set_speed，设置对应的速度值</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">set_speed</span>(<span class="params">self, speed</span>):</span></span><br><span class="line">        self.speed = speed</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 自定义实例方法get_speed，打印当前的速度值</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_speed</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;我的时速为:&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(self.speed))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 自定义实例方法speed_up，实现对实例的加速</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">speed_up</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.__new_speed = self.speed + <span class="number">10</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;我的速度由&#123;&#125;km/h,提升到了&#123;&#125;km/h&#x27;</span>.<span class="built_in">format</span>(self.speed,self.__new_speed))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 自定义实例方法speed_down，实现对实例的减速</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">speed_down</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.__speed = self.speed - <span class="number">15</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;我的速度由&#123;&#125;km/h,下降到了&#123;&#125;km/h&#x27;</span>.<span class="built_in">format</span>(self.speed, self.__speed))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 自定义实例方法transport_identify，实现对实例</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">transport_identify</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">isinstance</span>(self, Vehicle):</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;类型匹配&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;类型不匹配&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    tool_1 = Vehicle(<span class="number">20</span>, (<span class="number">3.6</span>, <span class="number">1.9</span>, <span class="number">1.75</span>))</span><br><span class="line"><span class="comment"># 调用实例方法 打印实例的速度和体积</span></span><br><span class="line">    tool_1.show_info()</span><br><span class="line"><span class="comment"># 调用实例方法 实现实例的前移</span></span><br><span class="line">    tool_1.move()</span><br><span class="line">    tool_1.set_speed(<span class="number">40</span>)</span><br><span class="line"><span class="comment"># 调用实例方法 打印当前速度</span></span><br><span class="line">    tool_1.get_speed()</span><br><span class="line"><span class="comment"># 调用实例方法 对实例进行加速</span></span><br><span class="line">    tool_1.speed_up()</span><br><span class="line"><span class="comment"># 调用实例方法 对实例进行减速</span></span><br><span class="line">    tool_1.speed_down()</span><br><span class="line"><span class="comment"># 调用实例方法 判断当前实例的类型</span></span><br><span class="line">    tool_1.transport_identify()</span><br></pre></td></tr></table></figure><h4 id="结果检验"><a href="#结果检验" class="headerlink" title="结果检验"></a>结果检验</h4><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">C:\<span class="title">Python39</span>\<span class="title">python.exe</span> <span class="title">C</span>:/<span class="title">Users</span>/<span class="title">admin</span>/<span class="title">PycharmProjects</span>/<span class="title">python_object</span>/<span class="title">hello.py</span></span></span><br><span class="line"><span class="function">所属类型:<span class="title">SUV</span>,速度是20<span class="title">km</span>/<span class="title">h</span>,体积是(3.6, 1.9, 1.75)</span></span><br><span class="line"><span class="function">我已向前移动了50米</span></span><br><span class="line"><span class="function">我的时速为:40</span></span><br><span class="line"><span class="function">我的速度由40<span class="title">km</span>/<span class="title">h</span>,提升到了50<span class="title">km</span>/<span class="title">h</span></span></span><br><span class="line"><span class="function">我的速度由40<span class="title">km</span>/<span class="title">h</span>,下降到了25<span class="title">km</span>/<span class="title">h</span></span></span><br><span class="line"><span class="function">类型匹配</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">进程已结束，退出代码为 0</span></span><br><span class="line"><span class="function"></span></span><br></pre></td></tr></table></figure><h5 id="学霸答案区"><a href="#学霸答案区" class="headerlink" title="学霸答案区"></a>学霸答案区</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Vehicle</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="comment"># 自定义Vehicle类属性</span></span><br><span class="line">    trans_type = <span class="string">&#x27;SUV&#x27;</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment"># 自定义实例的初始化方法</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self,speed,size</span>):</span></span><br><span class="line">        self.speed = speed</span><br><span class="line">        self.size = size</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 自定义实例方法show_info，打印实例的速度和体积</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_info</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;速度：&#123;0&#125;km/h,体积：&#123;1&#125;&#x27;</span>.<span class="built_in">format</span>(self.speed,self.size))</span><br><span class="line">    <span class="comment"># 自定义实例方法move,打印“我已向前移动了50米”</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">move</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;我已经向前移动了50米&#x27;</span>)</span><br><span class="line">    <span class="comment"># 自定义实例方法set_speed，设置对应的速度值</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">set_speed</span>(<span class="params">self,speed</span>):</span></span><br><span class="line">        self.speed = speed</span><br><span class="line">    <span class="comment"># 自定义实例方法get_speed，打印当前的速度值</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_speed</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;我的时速为：&#123;0&#125;km/h&#x27;</span>.<span class="built_in">format</span>(self.speed))</span><br><span class="line">    <span class="comment"># 自定义实例方法speed_up，实现对实例的加速</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">speed_up</span>(<span class="params">self</span>):</span></span><br><span class="line">        speed2 = self.speed+<span class="number">10</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;我的速度由&#123;0&#125;km/h提升到了&#123;1&#125;km/h&#x27;</span>.<span class="built_in">format</span>(self.speed,speed2))</span><br><span class="line">        self.speed = speed2</span><br><span class="line">    <span class="comment"># 自定义实例方法speed_down，实现对实例的减速</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">speed_down</span>(<span class="params">self</span>):</span></span><br><span class="line">        speed3 = self.speed - <span class="number">15</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;我的速度由&#123;0&#125;km/h下降到了&#123;1&#125;km/h&#x27;</span>.<span class="built_in">format</span>(self.speed,speed3))</span><br><span class="line">        self.speed = speed3</span><br><span class="line">    <span class="comment"># 自定义实例方法transport_identify，实现对实例所属类型的判断</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">transport_identify</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">isinstance</span>(self,Vehicle):</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;类型匹配&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;类型不匹配&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    tool_1 = Vehicle(<span class="number">20</span>, (<span class="number">3.6</span>, <span class="number">1.9</span>, <span class="number">1.75</span>))</span><br><span class="line"> </span><br><span class="line">    <span class="comment"># 调用实例方法 打印实例的速度和体积</span></span><br><span class="line">    tool_1.show_info()</span><br><span class="line">    <span class="comment"># 调用实例方法 实现实例的前移</span></span><br><span class="line">    tool_1.move()</span><br><span class="line"> </span><br><span class="line">    tool_1.set_speed(<span class="number">40</span>)</span><br><span class="line">    <span class="comment"># 调用实例方法 打印当前速度</span></span><br><span class="line">    tool_1.get_speed()</span><br><span class="line">    <span class="comment"># 调用实例方法 对实例进行加速</span></span><br><span class="line">    tool_1.speed_up()</span><br><span class="line">    <span class="comment"># 调用实例方法 对实例进行减速</span></span><br><span class="line">    tool_1.speed_down()</span><br><span class="line">    <span class="comment"># 调用实例方法 判断当前实例的类型</span></span><br><span class="line">    tool_1.transport_identify()</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">通过运用前面所学的知识 &lt;br&gt; 完成自己的任务</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="编程练习" scheme="https://code.maylove.pub/tags/%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Python 私有函数和私有变量</title>
    <link href="https://code.maylove.pub/2021/a85b5a2e7b47/"/>
    <id>https://code.maylove.pub/2021/a85b5a2e7b47/</id>
    <published>2021-10-28T14:23:54.000Z</published>
    <updated>2021-10-28T14:48:40.244Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="私有函数和私有变量"><a href="#私有函数和私有变量" class="headerlink" title="私有函数和私有变量"></a>私有函数和私有变量</h3><h4 id="什么是私有函数和私有变量"><a href="#什么是私有函数和私有变量" class="headerlink" title="什么是私有函数和私有变量"></a>什么是私有函数和私有变量</h4><ul><li>无法被实例化后的对象调用的类中的函数与变量</li><li>类的内部可以调用私有函数与变量</li><li>只希望类内部业务调用使用,不希望被使用者使用</li></ul><h4 id="私有函数与私有变量的定义方法"><a href="#私有函数与私有变量的定义方法" class="headerlink" title="私有函数与私有变量的定义方法"></a>私有函数与私有变量的定义方法</h4><ul><li>在一个变量或函数前添加<code>__</code>(2个下横线),变量或函数名后边无需添加</li></ul> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, name</span>):</span></span><br><span class="line">self.name = name</span><br><span class="line">self.__age = <span class="number">33</span>  <span class="comment"># 私有</span></span><br><span class="line">   <span class="function"><span class="keyword">def</span> <span class="title">dump</span>(<span class="params">self</span>):</span></span><br><span class="line">   <span class="built_in">print</span>(self.name, self.__age)  <span class="comment"># 私有</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__cry</span>(<span class="params">self</span>):</span>  <span class="comment"># 私有</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;I want cry&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cat</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    __cat_type = <span class="string">&#x27;cat&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, name, sex</span>):</span></span><br><span class="line">        self.name = name</span><br><span class="line">        self.__sex = sex</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span>(<span class="params">self</span>):</span></span><br><span class="line">        result = self.__run()</span><br><span class="line">        <span class="built_in">print</span>(result)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__run</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">f&#x27;<span class="subst">&#123;self.__cat_type&#125;</span>,小猫<span class="subst">&#123;self.name&#125;</span><span class="subst">&#123;self.__sex&#125;</span>开心的奔跑着&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">dump</span>(<span class="params">self</span>):</span></span><br><span class="line">        result = self.__dump()</span><br><span class="line">        <span class="built_in">print</span>(result)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__dump</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">f&#x27;<span class="subst">&#123;self.__cat_type&#125;</span>小猫<span class="subst">&#123;self.name&#125;</span><span class="subst">&#123;self.__sex&#125;</span>开心的跳着&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">cat = Cat(name=<span class="string">&#x27;米粒儿&#x27;</span>, sex=<span class="string">&#x27;boy&#x27;</span>)</span><br><span class="line">cat.run()</span><br><span class="line">cat.dump()</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">dir</span>(cat))</span><br><span class="line"><span class="comment"># print(cat._Cat__dump())</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本节课主要学习了&lt;br&gt;私有函数和私有变量的基础知识</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="对象和异常" scheme="https://code.maylove.pub/tags/%E5%AF%B9%E8%B1%A1%E5%92%8C%E5%BC%82%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>Python 对象的生命周期</title>
    <link href="https://code.maylove.pub/2021/3f708f9e3b70/"/>
    <id>https://code.maylove.pub/2021/3f708f9e3b70/</id>
    <published>2021-10-28T14:23:43.000Z</published>
    <updated>2021-10-28T14:38:38.118Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="对象的生命周期"><a href="#对象的生命周期" class="headerlink" title="对象的生命周期"></a>对象的生命周期</h3><ul><li>对象的生命周期</li></ul><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>内存中分配一个内存块</td><td>实例化<code>__init__:</code>对象生命的开始</td></tr><tr><td></td><td></td></tr><tr><td>从内存中释放这个内存块</td><td><code>__del__</code>: 删除对象</td></tr></tbody></table>]]></content>
    
    
    <summary type="html">本节课主要学习了&lt;br&gt;对象的生命周期的基础知识</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="对象和异常" scheme="https://code.maylove.pub/tags/%E5%AF%B9%E8%B1%A1%E5%92%8C%E5%BC%82%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>Python 类的构造函数</title>
    <link href="https://code.maylove.pub/2021/e1f702148634/"/>
    <id>https://code.maylove.pub/2021/e1f702148634/</id>
    <published>2021-10-28T14:23:31.000Z</published>
    <updated>2021-10-28T14:38:31.764Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="类的构造函数"><a href="#类的构造函数" class="headerlink" title="类的构造函数"></a>类的构造函数</h3><ul><li>类中的一种默认函数,用来将类实例化的同时, 将参数传入类中</li></ul><h4 id="构造函数的创建"><a href="#构造函数的创建" class="headerlink" title="构造函数的创建"></a>构造函数的创建</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, a, b</span>)</span></span><br><span class="line"><span class="function"><span class="title">self</span>.<span class="title">a</span> = <span class="title">a</span></span></span><br><span class="line"><span class="function">    <span class="title">self</span>.<span class="title">b</span> = <span class="title">b</span></span></span><br></pre></td></tr></table></figure><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sleep</span>(<span class="params">name</span>):</span></span><br><span class="line">   <span class="keyword">return</span> name</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, name, age=<span class="literal">None</span></span>):</span></span><br><span class="line">        self.name = name</span><br><span class="line">        self.age = age</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;self.name&#125;</span>在奔跑&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">jump</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;self.name&#125;</span>在跳跃&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">work</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.run()</span><br><span class="line">        self.jump()</span><br><span class="line">        <span class="comment"># def sleep(name):</span></span><br><span class="line">        <span class="comment">#     return name</span></span><br><span class="line">        <span class="comment"># result = sleep(self.name)</span></span><br><span class="line">        <span class="comment"># print(&#x27;sleep result is&#x27;, result)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">xiaomu = Person(name=<span class="string">&#x27;小慕&#x27;</span>,age=<span class="number">10</span>)</span><br><span class="line">xiaomu.name = <span class="string">&#x27;xiaomu&#x27;</span></span><br><span class="line">xiaomu.jump()</span><br><span class="line"></span><br><span class="line">dewei = Person(name=<span class="string">&#x27;dewei&#x27;</span>)</span><br><span class="line">dewei.jump()</span><br><span class="line"></span><br><span class="line">dewei.top = <span class="number">174</span></span><br><span class="line"><span class="built_in">print</span>(dewei.top)</span><br><span class="line"><span class="comment"># print(xiaomu.top)</span></span><br><span class="line"><span class="built_in">print</span>(dewei.age)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;--------&#x27;</span>)</span><br><span class="line">xiaomu.work()</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本节课主要学习了&lt;br&gt;类的构造函数</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="对象和异常" scheme="https://code.maylove.pub/tags/%E5%AF%B9%E8%B1%A1%E5%92%8C%E5%BC%82%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>Python 类的参数self</title>
    <link href="https://code.maylove.pub/2021/1e1c97e328e3/"/>
    <id>https://code.maylove.pub/2021/1e1c97e328e3/</id>
    <published>2021-10-28T14:23:18.000Z</published>
    <updated>2021-10-28T14:38:25.327Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="类的参数self"><a href="#类的参数self" class="headerlink" title="类的参数self"></a>类的参数self</h3><ul><li><code>self</code>是类函数中的必传参数, 且必须放在第一个参数位置</li><li><code>self</code>是一个变量,他代表实例化的变量本身</li><li><code>self</code>可以直接通过定义点来定义一个类变量    <code>self.name = &#39;dewei&#39;</code></li><li>self中的变量与含有self参数的函数可以在类中的任何一个函数内随意调用</li><li>非函数中定义的变量在定义的时候不用self</li></ul><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sleep</span>(<span class="params">name</span>):</span></span><br><span class="line">   <span class="keyword">return</span> name</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    name = <span class="literal">None</span></span><br><span class="line">    age = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;self.name&#125;</span>在奔跑&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">jump</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;self.name&#125;</span>在跳跃&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">work</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.run()</span><br><span class="line">        self.jump()</span><br><span class="line">        <span class="comment"># def sleep(name):</span></span><br><span class="line">        <span class="comment">#     return name</span></span><br><span class="line">        result = sleep(self.name)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;sleep result is&#x27;</span>, result)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">xiaomu = Person()</span><br><span class="line">xiaomu.name = <span class="string">&#x27;小慕&#x27;</span></span><br><span class="line">xiaomu.jump()</span><br><span class="line"></span><br><span class="line">dewei = Person()</span><br><span class="line">dewei.jump()</span><br><span class="line"></span><br><span class="line">dewei.top = <span class="number">174</span></span><br><span class="line"><span class="built_in">print</span>(dewei.top)</span><br><span class="line"><span class="comment"># print(xiaomu.top)</span></span><br><span class="line"><span class="built_in">print</span>(dewei.age)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;--------&#x27;</span>)</span><br><span class="line">xiaomu.work()</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本节课主要学习了&lt;br&gt;类的参数self</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="对象和异常" scheme="https://code.maylove.pub/tags/%E5%AF%B9%E8%B1%A1%E5%92%8C%E5%BC%82%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>Python 面向对象中常用术语</title>
    <link href="https://code.maylove.pub/2021/9b363a26ba6e/"/>
    <id>https://code.maylove.pub/2021/9b363a26ba6e/</id>
    <published>2021-10-28T14:23:05.000Z</published>
    <updated>2021-10-28T14:35:36.107Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="面向对象中常用术语"><a href="#面向对象中常用术语" class="headerlink" title="面向对象中常用术语"></a>面向对象中常用术语</h3><blockquote><p>为大家总结了面向对象中常用术语，请大家认真学习：</p></blockquote><p><strong>1、类：</strong> 可以理解是一个模板，通过它可以创建出无数个具体实例。</p><p>比如，定义一个Cat类，通过它可以创建出无数个实例来代表各种不同特征的猫。</p><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-10-24/1.jpg" alt="1"></p><p><strong>2、对象：</strong> 类并不能直接使用，通过类创建出的实例（又称对象）才能使用，比如以上案例创建类<br>对象cat。<br><strong>3、属性：</strong> 类中的所有变量称为属性。比如以上案例中类的变量有 颜色color 、体重 weight 、种类k<br>ind 、年龄age。<br><strong>4、方法：</strong> 类中的所有函数通常称为方法。不过，和函数所有不同的是，类方法至少要包含一个 sel<br>f 参数，类方法无法单独使用，只能和类的对象一起使用，比如以上案例中的方法有eat()、action<br>()、sleep()，创建对象后就可以直接调用类中的方法和属性。<br>面向对象最重要的概念就是类和实例，要牢记类是抽象的模板，而实例是根据类创建出来的一个个<br>具体的“对象”，每个对象都拥有相同的方法。</p>]]></content>
    
    
    <summary type="html">本节课主要学习了&lt;br&gt;面向对象编程中的常用术语</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="对象和异常" scheme="https://code.maylove.pub/tags/%E5%AF%B9%E8%B1%A1%E5%92%8C%E5%BC%82%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>Python 初识面向对象编程</title>
    <link href="https://code.maylove.pub/2021/4b3e522b6936/"/>
    <id>https://code.maylove.pub/2021/4b3e522b6936/</id>
    <published>2021-10-22T16:50:05.000Z</published>
    <updated>2021-10-22T16:52:32.619Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="初识面向对象编程"><a href="#初识面向对象编程" class="headerlink" title="初识面向对象编程"></a>初识面向对象编程</h3><h4 id="什么是面向对象编程"><a href="#什么是面向对象编程" class="headerlink" title="什么是面向对象编程"></a>什么是面向对象编程</h4><ul><li>利用(面向)对象(属性或方法)去进行编码的过程</li><li>自定义对象数据类型就是面向对象中的类(class)的概念</li></ul><h4 id="类的关键字class"><a href="#类的关键字class" class="headerlink" title="类的关键字class"></a>类的关键字class</h4><ul><li><code>class</code>来<strong>声明类</strong>,<code>类的名称</code><strong>首字母大写</strong>,多单词情况下每个单词<strong>首字母大写</strong></li></ul><h4 id="类的定义"><a href="#类的定义" class="headerlink" title="类的定义"></a>类的定义</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Name</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">attr = something</span><br><span class="line"><span class="comment"># s</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">func</span>(<span class="params">self</span>):</span></span><br><span class="line">    do</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本节课主要学习了&lt;br&gt;面向对象编程的基础知识</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="对象和异常" scheme="https://code.maylove.pub/tags/%E5%AF%B9%E8%B1%A1%E5%92%8C%E5%BC%82%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>Python [案例]实现学生信息库</title>
    <link href="https://code.maylove.pub/2021/aff30b79847e/"/>
    <id>https://code.maylove.pub/2021/aff30b79847e/</id>
    <published>2021-10-20T15:15:16.000Z</published>
    <updated>2021-10-20T15:24:19.355Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="案例-实现学生信息库"><a href="#案例-实现学生信息库" class="headerlink" title="[案例]实现学生信息库"></a>[案例]实现学生信息库</h3><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-10-20/3.png" alt="3"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    学生信息库</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">students = &#123;</span><br><span class="line">    <span class="number">1</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;dewei&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;age&#x27;</span>: <span class="number">33</span>,</span><br><span class="line">        <span class="string">&#x27;class_number&#x27;</span>: <span class="string">&#x27;A&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;sex&#x27;</span>: <span class="string">&#x27;boy&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="number">2</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;小慕&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;age&#x27;</span>: <span class="number">10</span>,</span><br><span class="line">        <span class="string">&#x27;class_number&#x27;</span>: <span class="string">&#x27;B&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;sex&#x27;</span>: <span class="string">&#x27;boy&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="number">3</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;小曼&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;age&#x27;</span>: <span class="number">18</span>,</span><br><span class="line">        <span class="string">&#x27;class_number&#x27;</span>: <span class="string">&#x27;A&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;sex&#x27;</span>: <span class="string">&#x27;girl&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="number">4</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;小高&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;age&#x27;</span>: <span class="number">18</span>,</span><br><span class="line">        <span class="string">&#x27;class_number&#x27;</span>: <span class="string">&#x27;C&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;sex&#x27;</span>: <span class="string">&#x27;boy&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="number">5</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;小云&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;age&#x27;</span>: <span class="number">18</span>,</span><br><span class="line">        <span class="string">&#x27;class_number&#x27;</span>: <span class="string">&#x27;B&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;sex&#x27;</span>: <span class="string">&#x27;girl&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check_user_info</span>(<span class="params">**kwargs</span>):</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;name&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> kwargs:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;没有发现学生姓名&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;age&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> kwargs:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;没有发现学生姓名&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;sex&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> kwargs:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;没有发现学生姓名&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;class_number&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> kwargs:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;没有发现学生姓名&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_all_students</span>():</span></span><br><span class="line">    <span class="keyword">for</span> id_, value <span class="keyword">in</span> students.items():</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;学号: &#123;&#125;,姓名&#123;&#125;,年龄&#123;&#125;,性别&#123;&#125;,班级&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(</span><br><span class="line">            id_, value[<span class="string">&#x27;name&#x27;</span>], value[<span class="string">&#x27;age&#x27;</span>], value[<span class="string">&#x27;sex&#x27;</span>], value[<span class="string">&#x27;class_number&#x27;</span>]</span><br><span class="line">        ))</span><br><span class="line">    <span class="keyword">return</span> students</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># result = get_all_students()</span></span><br><span class="line"><span class="comment"># print(&#x27;----&#x27;, result)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add_student</span>(<span class="params">**kwargs</span>):</span></span><br><span class="line">    check = check_user_info(**kwargs)</span><br><span class="line">    <span class="keyword">if</span> check != <span class="literal">True</span>:</span><br><span class="line">        <span class="built_in">print</span>(check)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">    id_ = <span class="built_in">max</span>(students) + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    students[id_] = &#123;</span><br><span class="line">        <span class="string">&#x27;name&#x27;</span>: kwargs[<span class="string">&#x27;name&#x27;</span>],</span><br><span class="line">        <span class="string">&#x27;age&#x27;</span>: kwargs[<span class="string">&#x27;age&#x27;</span>],</span><br><span class="line">        <span class="string">&#x27;sex&#x27;</span>: kwargs[<span class="string">&#x27;sex&#x27;</span>],</span><br><span class="line">        <span class="string">&#x27;class_number&#x27;</span>: kwargs[<span class="string">&#x27;class_number&#x27;</span>]</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># add_student(name=&#x27;小白&#x27;, age=19, class_number=&#x27;A&#x27;, sex=&#x27;boy&#x27;)</span></span><br><span class="line"><span class="comment"># get_all_students()</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">delete_student</span>(<span class="params">student_id</span>):</span></span><br><span class="line">    <span class="keyword">if</span> student_id <span class="keyword">not</span> <span class="keyword">in</span> students:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125;并不存在&#x27;</span>.<span class="built_in">format</span>(student_id))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        user_info = students.pop(student_id)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;学号是&#123;&#125;, &#123;&#125;同学的信息已经被删除了&#x27;</span>.<span class="built_in">format</span>(student_id, user_info[<span class="string">&#x27;name&#x27;</span>]))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># delete_student(1)</span></span><br><span class="line"><span class="comment"># add_student(name=&#x27;小白&#x27;, age=19, class_number=&#x27;A&#x27;, sex=&#x27;boy&#x27;)</span></span><br><span class="line"><span class="comment"># get_all_students()</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">update_student</span>(<span class="params">student_id, **kwargs</span>):</span></span><br><span class="line">    <span class="keyword">if</span> student_id <span class="keyword">not</span> <span class="keyword">in</span> students:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;并不存在这个学号:&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(student_id))</span><br><span class="line"></span><br><span class="line">    check = check_user_info(**kwargs)</span><br><span class="line">    <span class="keyword">if</span> check != <span class="literal">True</span>:</span><br><span class="line">        <span class="built_in">print</span>(check)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">    students[student_id] = kwargs</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;同学信息更新完毕&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">update_student(<span class="number">1</span>, name=<span class="string">&#x27;dewei.zhang&#x27;</span>, age=<span class="number">33</span>, class_number=<span class="string">&#x27;A&#x27;</span>, sex=<span class="string">&#x27;boy&#x27;</span>)</span><br><span class="line">get_all_students()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_user_by_id</span>(<span class="params">student_id</span>):</span></span><br><span class="line">    <span class="keyword">return</span> students.get(student_id)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(get_user_by_id(<span class="number">3</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">search_users</span>(<span class="params">**kwargs</span>):</span></span><br><span class="line">    values = <span class="built_in">list</span>(students.values())</span><br><span class="line">    key = <span class="literal">None</span></span><br><span class="line">    value = <span class="literal">None</span></span><br><span class="line">    result = []</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;name&#x27;</span> <span class="keyword">in</span> kwargs:</span><br><span class="line">        key = <span class="string">&#x27;name&#x27;</span></span><br><span class="line">        value = kwargs[key]</span><br><span class="line">    <span class="keyword">elif</span> <span class="string">&#x27;sex&#x27;</span> <span class="keyword">in</span> kwargs:</span><br><span class="line">        key = <span class="string">&#x27;sex&#x27;</span></span><br><span class="line">        value = kwargs[<span class="string">&#x27;sex&#x27;</span>]</span><br><span class="line">    <span class="keyword">elif</span> <span class="string">&#x27;class_number&#x27;</span> <span class="keyword">in</span> kwargs:</span><br><span class="line">        key = <span class="string">&#x27;class_number&#x27;</span></span><br><span class="line">        value = kwargs[key]</span><br><span class="line">    <span class="keyword">elif</span> <span class="string">&#x27;age&#x27;</span> <span class="keyword">in</span> kwargs:</span><br><span class="line">        key = <span class="string">&#x27;age&#x27;</span></span><br><span class="line">        value = kwargs[key]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;没有发现搜索的关键字&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> user <span class="keyword">in</span> values:</span><br><span class="line">        <span class="keyword">if</span> user[key] == value:</span><br><span class="line">            result.append(user)</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;---------&#x27;</span>)</span><br><span class="line"><span class="comment"># users = search_users(age=18)</span></span><br><span class="line">users = search_users(sex=<span class="string">&#x27;girl&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(users)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">通过运用前面所学的知识 &lt;br&gt; 完成学生信息库的案例</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="编程练习" scheme="https://code.maylove.pub/tags/%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Python 匿名函数lambda</title>
    <link href="https://code.maylove.pub/2021/091d96ffc9f9/"/>
    <id>https://code.maylove.pub/2021/091d96ffc9f9/</id>
    <published>2021-10-20T15:15:00.000Z</published>
    <updated>2021-10-20T15:23:10.593Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="匿名函数lambda"><a href="#匿名函数lambda" class="headerlink" title="匿名函数lambda"></a>匿名函数lambda</h3><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li>定义一个轻量化的函数</li><li><code>即用即删除</code>, 很适合需要完成一项功能 , 但是此功能<code>只在此一处使用</code></li></ul><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 无参数</span></span><br><span class="line">f = <span class="keyword">lambda</span> :value</span><br><span class="line"></span><br><span class="line">f()</span><br><span class="line"><span class="comment"># 有参数</span></span><br><span class="line">f = <span class="keyword">lambda</span> x,y: x*y</span><br><span class="line">f(<span class="number">3</span>, <span class="number">4</span>)</span><br></pre></td></tr></table></figure><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">f = <span class="keyword">lambda</span>: <span class="built_in">print</span>(<span class="number">1</span>)</span><br><span class="line"><span class="comment"># result = f()</span></span><br><span class="line"><span class="comment"># print(result)</span></span><br><span class="line">f()</span><br><span class="line"></span><br><span class="line"><span class="comment"># f1 = lambda x, y=2: x + y</span></span><br><span class="line">f1 = <span class="keyword">lambda</span> x, y=<span class="number">2</span>: x &gt; y</span><br><span class="line"><span class="comment"># print(f1(1, 2))</span></span><br><span class="line"><span class="built_in">print</span>(f1(<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line">users = [</span><br><span class="line">    &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;dewei&#x27;</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;xiaomu&#x27;</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;asan&#x27;</span>&#125;,</span><br><span class="line">]</span><br><span class="line">users.sort(key=<span class="keyword">lambda</span> x: x[<span class="string">&#x27;name&#x27;</span>])</span><br><span class="line"><span class="built_in">print</span>(users)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本节课主要学习了&lt;br&gt;匿名函数lambda</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="函数" scheme="https://code.maylove.pub/tags/%E5%87%BD%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>Python 函数的递归</title>
    <link href="https://code.maylove.pub/2021/5d2a2d7d4695/"/>
    <id>https://code.maylove.pub/2021/5d2a2d7d4695/</id>
    <published>2021-10-20T15:14:48.000Z</published>
    <updated>2021-10-20T15:22:41.991Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="函数的递归"><a href="#函数的递归" class="headerlink" title="函数的递归"></a>函数的递归</h3><h4 id="什么是递归函数"><a href="#什么是递归函数" class="headerlink" title="什么是递归函数"></a>什么是递归函数</h4><ul><li>一个函数不停的将自己反复执行</li></ul><h4 id="递归的定义方法"><a href="#递归的定义方法" class="headerlink" title="递归的定义方法"></a>递归的定义方法</h4><ul><li>通过返回值 <code>直接执行自身函数</code></li></ul><h4 id="递归函数的说明"><a href="#递归函数的说明" class="headerlink" title="递归函数的说明"></a>递归函数的说明</h4><ul><li>内存溢出</li><li>避免滥用递归</li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">count = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span>():</span></span><br><span class="line">    <span class="keyword">global</span> count</span><br><span class="line">    count += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> count &lt; <span class="number">5</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;count条件不满足, 我要重新执行我自己! 当前count是%s&#x27;</span> % count)</span><br><span class="line">        <span class="keyword">return</span> test()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;count is %s&#x27;</span> % count)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">test()</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本节课主要学习了&lt;br&gt;函数的递归</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="函数" scheme="https://code.maylove.pub/tags/%E5%87%BD%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>Python 局部变量与全局变量</title>
    <link href="https://code.maylove.pub/2021/58c1ce227e34/"/>
    <id>https://code.maylove.pub/2021/58c1ce227e34/</id>
    <published>2021-10-20T15:14:34.000Z</published>
    <updated>2021-10-20T15:21:52.713Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="局部变量与全局变量"><a href="#局部变量与全局变量" class="headerlink" title="局部变量与全局变量"></a>局部变量与全局变量</h3><h4 id="全局变量"><a href="#全局变量" class="headerlink" title="全局变量"></a>全局变量</h4><ul><li>在python脚本最上层代码块的变量</li><li>全局变量可以在函数内被读取使用</li></ul><h4 id="局部变量"><a href="#局部变量" class="headerlink" title="局部变量"></a>局部变量</h4><ul><li>在函数体内定义的变量</li><li>局部变量无法在自身函数以外使用</li></ul><h4 id="global"><a href="#global" class="headerlink" title="global"></a>global</h4><ul><li><p><code>将全局变量可以在函数体内进行修改</code></p><ol><li><p>定义一个全局变量</p></li><li><p>定义函数</p><p><code>global + 全局变量名</code></p></li><li><p>函数体内给全局变量重新赋值</p></li></ol></li><li><p>工作中, <code>不建议</code>使用<code>global</code>对<strong>全局变量</strong>进行修改</p></li><li><p>仅支持 <code>数字</code> <code>字符串</code> <code>空类型</code> <code>布尔类型</code> 的声明</p></li><li><p><code>列表和字典</code>的全局变量<strong>不需要global进行声明</strong></p></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">name = <span class="string">&#x27;dewei&#x27;</span></span><br><span class="line">age = <span class="number">33</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span>():</span></span><br><span class="line">    <span class="built_in">print</span>(name)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">test()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test1</span>():</span></span><br><span class="line">    name = <span class="string">&#x27;小慕&#x27;</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;函数体内&#x27;</span>, name)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">test1()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;函数体外&#x27;</span>, name)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test3</span>():</span></span><br><span class="line">    age = <span class="number">33</span></span><br><span class="line">    <span class="built_in">print</span>(age)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">test3()</span><br><span class="line"><span class="comment"># print(age)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test4</span>(<span class="params">a</span>):</span></span><br><span class="line">    a = <span class="number">10</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">test4(name)</span><br><span class="line"><span class="built_in">print</span>(name)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test5</span>():</span></span><br><span class="line">    <span class="keyword">global</span> name</span><br><span class="line">    <span class="keyword">global</span> age</span><br><span class="line">    name = <span class="number">10</span></span><br><span class="line">    age = <span class="number">10</span></span><br><span class="line"></span><br><span class="line">test5()</span><br><span class="line"><span class="built_in">print</span>(name)</span><br><span class="line"><span class="built_in">print</span>(age)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">test_dict = &#123;<span class="string">&#x27;a&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;b&#x27;</span>: <span class="number">2</span>&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test6</span>():</span></span><br><span class="line">    test_dict[<span class="string">&#x27;c&#x27;</span>] = <span class="number">3</span></span><br><span class="line">    test_dict.pop(<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">test6()</span><br><span class="line"><span class="built_in">print</span>(test_dict)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本节课主要学习了&lt;br&gt;局部变量与全局变量</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="函数" scheme="https://code.maylove.pub/tags/%E5%87%BD%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>Python 函数的参数类型定义</title>
    <link href="https://code.maylove.pub/2021/587a683b5ccb/"/>
    <id>https://code.maylove.pub/2021/587a683b5ccb/</id>
    <published>2021-10-20T15:14:09.000Z</published>
    <updated>2021-10-20T15:25:56.194Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="函数的参数类型定义"><a href="#函数的参数类型定义" class="headerlink" title="函数的参数类型定义"></a>函数的参数类型定义</h3><h4 id="参数定义类型的方法"><a href="#参数定义类型的方法" class="headerlink" title="参数定义类型的方法"></a>参数定义类型的方法</h4><ul><li><code>def person(name:str, age:int=33):</code><br><code>print(name, age)</code></li></ul><ul><li>函数定义在python3.7之后可用</li><li>函数不会对参数类型进行验证</li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span>(<span class="params">a: <span class="built_in">int</span>, b: <span class="built_in">int</span> = <span class="number">3</span></span>):</span></span><br><span class="line">    <span class="built_in">print</span>(a + b)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">add(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line"><span class="comment"># add(&#x27;hello&#x27;, &#x27;xiaomu&#x27;)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span>(<span class="params">a: <span class="built_in">int</span>, b: <span class="built_in">int</span> = <span class="number">3</span>, *args: <span class="built_in">int</span>, **kwargs: <span class="built_in">str</span></span>):</span></span><br><span class="line">    <span class="built_in">print</span>(a, b, args, kwargs)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">test(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, name=<span class="string">&#x27;小慕&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test2</span>(<span class="params">a: <span class="built_in">int</span>, b, c=<span class="number">3</span></span>):</span></span><br><span class="line">    <span class="built_in">print</span>(a, b, c)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">test2(<span class="number">1</span>, <span class="number">3</span>, <span class="number">4</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本节课主要学习了&lt;br&gt;函数的参数类型定义</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="函数" scheme="https://code.maylove.pub/tags/%E5%87%BD%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>Python 总结函数传参的方式</title>
    <link href="https://code.maylove.pub/2021/21d421965af0/"/>
    <id>https://code.maylove.pub/2021/21d421965af0/</id>
    <published>2021-10-20T15:13:55.000Z</published>
    <updated>2021-10-20T15:20:59.630Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="总结函数传参的方式"><a href="#总结函数传参的方式" class="headerlink" title="总结函数传参的方式"></a>总结函数传参的方式</h3><p>在函数中经常会用到参数来做一系列的业务处理，我们先来说说函数中的参数。</p><p>形参变量（所谓形参就是def声明函数名括号中的参数）:</p><ul><li>只有在被调用时才分配内存单元，调用结束时，即刻释放所分配的内存单元。因此，形参只在函数内部有效。</li></ul><p>实参（调用函数传入的参数被称为实参）：</p><ul><li>无论实参是何种类型，在进行函数调用，它们都必须有确定的值。</li></ul><p>传参的方式：</p><ul><li><p>第一种位置参数：</p><ul><li><p>位置参数顾名思义，就是调用函数时传的实参与形参位置上一一对应的参数。</p><p>例如：</p><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-10-20/1.jpg" alt="1"></p></li></ul></li><li><p>第二种默认参数：</p><ul><li><p>默认参数是你在函数形参中定义好的，当实参中未传对应的参数时，参数就会以默认值为准。</p><ul><li>注意：默认参数，必须放在位置参数之后,否则会出错</li></ul><p>例如：</p><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-10-20/2.jpg" alt="2"></p></li></ul></li><li><p>第三种关键参数：</p><ul><li>正常情况下，给函数传参数要按顺序，如果不按顺序就可以用关键参数，只需指定参数名即可（指定参数名的参数就叫关键参数），<ul><li>切记，关键参数必须放在位置参数（以位置顺序确定对应关系的参数）之后。</li></ul></li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">two_stu_info</span>(<span class="params">name,age,major,country=<span class="string">&#x27;CN&#x27;</span></span>):</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;--------------------学生信息---------------------&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;姓名：&#x27;</span>,name)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;年龄：&#x27;</span>,age)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;专业：&#x27;</span>,major)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;国籍：&#x27;</span>,country)</span><br><span class="line"><span class="comment">#country即为关键参数，单独指定，但必须放在位置参数之后，覆盖默认参数</span></span><br><span class="line">stu3 = stu_info(<span class="string">&#x27;Jack&#x27;</span>,<span class="number">21</span>,<span class="string">&#x27;Chinese&#x27;</span>,country=<span class="string">&#x27;UK&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">send_alert</span>(<span class="params">msg,*users</span>):</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    :param msg:</span></span><br><span class="line"><span class="string">    :param users: 表示非固定传参，可同时指定多个用户，传给过来的所有参数</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;打印参数users&#x27;</span>,users)</span><br><span class="line">    <span class="keyword">for</span> u <span class="keyword">in</span> users:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;报警！请及时查看……&#x27;</span>,u,msg)</span><br><span class="line"></span><br><span class="line">send_alert(<span class="string">&#x27;你的系统已频临崩溃&#x27;</span>,<span class="string">&#x27;AA&#x27;</span>,<span class="string">&#x27;BB&#x27;</span>,<span class="string">&#x27;CC&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>非固定传参方式二：    <ul><li>可同时指定多个用户，传过来的所有参数打包成元组或字典；</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span>(<span class="params">name,*args,**kwargs</span>):</span><span class="comment">#形参依次是：位置参数，元组，字典</span></span><br><span class="line">    <span class="built_in">print</span>(name,args,kwargs)</span><br><span class="line"></span><br><span class="line">func(<span class="string">&#x27;Tom&#x27;</span>,<span class="number">22</span>,<span class="string">&#x27;CN&#x27;</span>,<span class="string">&#x27;tomorrow&#x27;</span>)</span><br><span class="line">func(<span class="string">&#x27;Try&#x27;</span>,<span class="number">21</span>,<span class="string">&#x27;will&#x27;</span>,add=<span class="string">&#x27;HG&#x27;</span>,num=<span class="number">666</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本节课主要总结了&lt;br&gt;函数的传参的方式</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="函数" scheme="https://code.maylove.pub/tags/%E5%87%BD%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>Python 阶段编程练习(十三)</title>
    <link href="https://code.maylove.pub/2021/d2c9dd7e254a/"/>
    <id>https://code.maylove.pub/2021/d2c9dd7e254a/</id>
    <published>2021-10-20T15:13:30.000Z</published>
    <updated>2021-10-20T15:20:20.963Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="编程练习"><a href="#编程练习" class="headerlink" title="编程练习"></a>编程练习</h3><blockquote><p>定义seq函数，向函数内传入形参(num, num1, num2)，如果num小于88，返回num1与num2的积，否则返回num1和num2的和，调用函数传参时使用元组传参</p></blockquote><h4 id="任务"><a href="#任务" class="headerlink" title="任务"></a>任务</h4><ol><li>当num小于88，计算num1与num2的乘积，否则计算num1，num2之和</li><li>定义变量tuple1为(5,2,1)</li><li>调用函数，并打印函数返回值</li></ol><h4 id="任务提示"><a href="#任务提示" class="headerlink" title="任务提示"></a>任务提示</h4><ul><li>使用*tuple1可实现对元组tuple1的解包</li></ul><h4 id="原始代码"><a href="#原始代码" class="headerlink" title="原始代码"></a>原始代码</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">def seq(num,num1,num2):</span><br><span class="line"># if判断num小于88</span><br><span class="line"></span><br><span class="line">#返回num1与num2的积</span><br><span class="line"></span><br><span class="line">else:</span><br><span class="line">#返回num1与num2之和</span><br><span class="line"></span><br><span class="line"># 定义变量tuple1的值为(5,2,1)</span><br><span class="line"></span><br><span class="line"># 调用函数，传入参数tuple1，并打印函数返回值</span><br></pre></td></tr></table></figure><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">seq</span>(<span class="params">num, num1, num2</span>):</span></span><br><span class="line">    <span class="comment"># if判断num小于88</span></span><br><span class="line">    <span class="keyword">if</span> num &lt; <span class="number">88</span>:</span><br><span class="line">        <span class="comment"># 返回num1与num2的积</span></span><br><span class="line">        <span class="keyword">return</span> num1 * num2</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="comment"># 返回num1与num2之和</span></span><br><span class="line">        <span class="keyword">return</span> num1 + num2</span><br><span class="line"><span class="comment"># 定义变量tuple1的值为(5,2,1)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">tuple1 = (<span class="number">5</span>, <span class="number">2</span>, <span class="number">1</span>)</span><br><span class="line"><span class="comment"># 调用函数，传入参数tuple1，并打印函数返回值</span></span><br><span class="line"><span class="built_in">print</span>(seq(tuple1[<span class="number">0</span>], tuple1[<span class="number">1</span>], tuple1[<span class="number">2</span>]))</span><br><span class="line"><span class="built_in">print</span>(seq(*tuple1))</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">通过运用前面所学的知识 &lt;br&gt; 完成自己的任务</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="编程练习" scheme="https://code.maylove.pub/tags/%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Python 阶段编程练习(十二)</title>
    <link href="https://code.maylove.pub/2021/efb1852ba7d6/"/>
    <id>https://code.maylove.pub/2021/efb1852ba7d6/</id>
    <published>2021-10-20T15:13:09.000Z</published>
    <updated>2021-10-20T15:20:04.774Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="编程练习"><a href="#编程练习" class="headerlink" title="编程练习"></a>编程练习</h3><blockquote><p>定义一个函数，向函数内传入形参username，password，当username值为imooc且password值为字符串123456时，返回“登录成功”；否则返回“请重新登录”</p></blockquote><h4 id="任务"><a href="#任务" class="headerlink" title="任务"></a>任务</h4><ol><li>定义函数login</li><li>if语句判断用户名和密码是否为字符串imooc和123456</li></ol><h4 id="原始代码"><a href="#原始代码" class="headerlink" title="原始代码"></a>原始代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span>(<span class="params">username,password</span>):</span></span><br><span class="line"><span class="comment"># 使用if语句，判断用户名和密码为“imooc”和“123456</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#返回登录成功</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用else子句处理用户名和密码非“imooc”和“123456</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#返回请重新登录</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用函数，向函数内传入&#x27;imooc&#x27;,&#x27;123456&#x27;和&#x27;mooc&#x27;,&#x27;123456&#x27;两组数据测试结果</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 打印函数测试结果</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span>(<span class="params">username, password</span>):</span></span><br><span class="line">    <span class="comment"># 使用if语句，判断用户名和密码为“imooc”和“123456</span></span><br><span class="line">    <span class="keyword">if</span> username == <span class="string">&#x27;imooc&#x27;</span> <span class="keyword">and</span> password == <span class="string">&#x27;123456&#x27;</span>:</span><br><span class="line">        <span class="comment"># 返回登录成功</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;登录成功&#x27;</span></span><br><span class="line"><span class="comment"># 使用else子句处理用户名和密码非“imooc”和“123456</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="comment"># 返回请重新登录</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;请重新登录&#x27;</span></span><br><span class="line"><span class="comment"># 调用函数，向函数内传入&#x27;imooc&#x27;,&#x27;123456&#x27;和&#x27;mooc&#x27;,&#x27;123456&#x27;两组数据测试结果</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">user1 = login(<span class="string">&#x27;imooc&#x27;</span>, <span class="string">&#x27;123456&#x27;</span>)</span><br><span class="line">user2 = login(<span class="string">&#x27;mooc&#x27;</span>, <span class="string">&#x27;123456&#x27;</span>)</span><br><span class="line"><span class="comment"># 打印函数测试结果</span></span><br><span class="line"><span class="built_in">print</span>(user1)</span><br><span class="line"><span class="built_in">print</span>(user2)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">通过运用前面所学的知识 &lt;br&gt; 完成自己的任务</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="编程练习" scheme="https://code.maylove.pub/tags/%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Python 阶段编程练习(十一)</title>
    <link href="https://code.maylove.pub/2021/f3d0c9404e41/"/>
    <id>https://code.maylove.pub/2021/f3d0c9404e41/</id>
    <published>2021-10-20T15:12:46.000Z</published>
    <updated>2021-10-20T15:19:20.962Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="编程练习"><a href="#编程练习" class="headerlink" title="编程练习"></a>编程练习</h3><blockquote><p>定义一个函数，向函数内传入形参num, num1, num2，如果num小于100，则计算num1 和 num2的积并打印；否则计算num1 和num2的和，然后打印输出</p></blockquote><h4 id="任务"><a href="#任务" class="headerlink" title="任务"></a>任务</h4><ol><li>定义函数名为oper的函数</li><li>当num值小于100时，求两数的乘积，反之求两数的和</li><li>调用函数，向函数内传入1314, 52, 0和5, 2, 0两组数据测试结果</li></ol><h4 id="原始代码"><a href="#原始代码" class="headerlink" title="原始代码"></a>原始代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">oper</span>(<span class="params">num, num1, num2</span>):</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># if条件判断num小于100的情况</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 对num1和num2进行乘法运算，并输出结果</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"></span><br><span class="line"><span class="comment">#对num1和num2进行加法运算，并输出结果</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#调用函数，向函数内传入1314, 52, 0和5, 2, 0两组数据测试结果</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">oper</span>(<span class="params">num, num1, num2</span>):</span></span><br><span class="line">    <span class="comment"># if条件判断num小于100的情况</span></span><br><span class="line">    <span class="keyword">if</span> num &lt; <span class="number">100</span>:</span><br><span class="line">        <span class="comment"># 对num1和num2进行乘法运算，并输出结果</span></span><br><span class="line">        num = num1 * num2</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="comment"># 对num1和num2进行加法运算，并输出结果</span></span><br><span class="line">        num = num1 + num2</span><br><span class="line">    <span class="keyword">return</span> num</span><br><span class="line">    <span class="comment"># 调用函数，向函数内传入1314, 52, 0和5, 2, 0两组数据测试结果</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(oper(<span class="number">1313</span>, <span class="number">52</span>, <span class="number">0</span>))</span><br><span class="line"><span class="built_in">print</span>(oper(<span class="number">5</span>, <span class="number">2</span>, <span class="number">0</span>))</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">通过运用前面所学的知识 &lt;br&gt; 完成自己的任务</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="编程练习" scheme="https://code.maylove.pub/tags/%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Python 函数的传参</title>
    <link href="https://code.maylove.pub/2021/aaa17fc9a2af/"/>
    <id>https://code.maylove.pub/2021/aaa17fc9a2af/</id>
    <published>2021-10-18T15:58:19.000Z</published>
    <updated>2021-10-18T16:02:33.171Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="函数的传参"><a href="#函数的传参" class="headerlink" title="函数的传参"></a>函数的传参</h3><h4 id="必传参数"><a href="#必传参数" class="headerlink" title="必传参数"></a>必传参数</h4><ul><li>函数中定义的参数<code>没有默认值</code>,在<strong>调用函数时</strong>如果<code>不传入则报错</code></li><li>在定义函数的时候,参数后边没有等号与默认值</li><li><strong>错误:def add (a=1, b=1)</strong> <code>x</code><ul><li>在定义函数的时候,没有默认值且必须在函数执行的时候传递进去的参数,且顺序与参数顺序相同,就是必传参数</li></ul></li></ul><h4 id="默认参数-非必传参数"><a href="#默认参数-非必传参数" class="headerlink" title="默认参数(非必传参数)"></a>默认参数(非必传参数)</h4><ul><li>在定义函数的时候,定义的参数含有默认值,通过赋值语句给他设一个默认的值</li><li>如果默认参数在调用函数的时候给予了新的值,函数将优先使用后传入的值进行工作</li></ul><h4 id="不确定参数-可变参数"><a href="#不确定参数-可变参数" class="headerlink" title="不确定参数-可变参数"></a>不确定参数-可变参数</h4><ul><li>没有固定的参数名和数量(不知道要传的参数名具体是什么)</li><li><code>*args</code> 代表 :<strong>将无参数的值合并成元组</strong></li><li><code>**kwargs</code> 代表<strong>将有参数与默认值的赋值语句合并成字典</strong></li></ul><h4 id="参数规则"><a href="#参数规则" class="headerlink" title="参数规则"></a>参数规则</h4><ul><li><p>参数的定义从左到右依次是</p><ol><li><p>必传参数</p></li><li><p>默认参数</p></li><li><p>可变元组参数 <code>?</code></p><ul><li><code># 如果赋值的形式传参,则需要将可变的元组类型放在第一位</code></li></ul></li><li><p>可变字典参数</p></li></ol></li><li><p>函数的参数传递<code>非常灵活</code></p></li><li><p><code>必传参数</code>与<code>默认参数</code>的传参<strong>多样化</strong></p></li><li><p>函数体内<strong>不可</strong>加<code>*</code>号</p></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span>(<span class="params">a, b, c=<span class="number">3</span></span>):</span></span><br><span class="line">    <span class="keyword">return</span> a + b + c</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">result = add(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line"></span><br><span class="line">result = add(<span class="number">1</span>, <span class="number">2</span>, <span class="number">6</span>)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test_args</span>(<span class="params">*args, **kwargs</span>):</span></span><br><span class="line">    <span class="built_in">print</span>(args, <span class="built_in">type</span>(args))</span><br><span class="line">    <span class="built_in">print</span>(kwargs, <span class="built_in">type</span>(args))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">test_args(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, name=<span class="string">&#x27;dewei&#x27;</span>, age=<span class="number">33</span>, top=<span class="number">174</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test_args_supre</span>(<span class="params">*args, **kwargs</span>):</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(args) &gt;= <span class="number">1</span>:</span><br><span class="line">        <span class="built_in">print</span>(args[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;name&#x27;</span> <span class="keyword">in</span> kwargs:</span><br><span class="line">        <span class="built_in">print</span>(kwargs[<span class="string">&#x27;name&#x27;</span>])</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;no name&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(args, <span class="built_in">len</span>(args))</span><br><span class="line">    <span class="built_in">print</span>(kwargs, <span class="built_in">len</span>(kwargs))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">test_args_supre(<span class="number">1</span>, name=<span class="string">&#x27;dewei&#x27;</span>)</span><br><span class="line">a = (<span class="string">&#x27;python&#x27;</span>, <span class="string">&#x27;django&#x27;</span>)</span><br><span class="line">b = &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;dewei&#x27;</span>&#125;</span><br><span class="line">test_args_supre(*a, **b)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span>(<span class="params">a, b=<span class="number">1</span></span>):</span></span><br><span class="line">    <span class="built_in">print</span>(a + b)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">add(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">add(<span class="number">1</span>)</span><br><span class="line">add(a=<span class="number">1</span>, b=<span class="number">2</span>)</span><br><span class="line">add(b=<span class="number">2</span>, a=<span class="number">1</span>)  <span class="comment"># 仅限于当前形式</span></span><br><span class="line"><span class="comment"># add(b=2)  # 会报错</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span>(<span class="params">a, b=<span class="number">1</span>, *args</span>):</span></span><br><span class="line">    <span class="built_in">print</span>(a, b, args)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">s = (<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">test(<span class="number">1</span>, <span class="number">2</span>, *s)</span><br><span class="line"><span class="comment"># test(a=1, b=2, *s)  # 如果赋值的形式传参,则需要将可变的元组类型放在第一位</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test2</span>(<span class="params">*args, a, b=<span class="number">1</span></span>):</span></span><br><span class="line">    <span class="built_in">print</span>(a, b, args)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">test2(a=<span class="number">1</span>,b=<span class="number">2</span>, *s)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test3</span>(<span class="params">a, b=<span class="number">1</span>, **kwargs</span>):</span></span><br><span class="line">    <span class="built_in">print</span>(a, b, kwargs)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">test3(<span class="number">1</span>, <span class="number">2</span>, name=<span class="string">&#x27;dewei&#x27;</span>)</span><br><span class="line">test3(a=<span class="number">1</span>, b=<span class="number">2</span>, name=<span class="string">&#x27;dewei&#x27;</span>)</span><br><span class="line">test3(name=<span class="string">&#x27;dewei&#x27;</span>, age=<span class="number">33</span>, a=<span class="number">1</span>, b=<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">d = &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;小慕&#x27;</span>&#125;</span><br><span class="line">test3(a=<span class="number">1</span>, b=<span class="number">2</span>, **d)</span><br><span class="line">test3(**d, a=<span class="number">1</span>, b=<span class="number">2</span>)</span><br><span class="line">test3(**d, a=<span class="number">1</span>, b=<span class="number">2</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本节课主要学习了&lt;br&gt;函数的传参</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="函数" scheme="https://code.maylove.pub/tags/%E5%87%BD%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>Python 函数的定义(图文节)</title>
    <link href="https://code.maylove.pub/2021/8eb1dec0102e/"/>
    <id>https://code.maylove.pub/2021/8eb1dec0102e/</id>
    <published>2021-10-18T15:58:05.000Z</published>
    <updated>2021-10-18T16:01:40.304Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="函数的定义"><a href="#函数的定义" class="headerlink" title="函数的定义"></a>函数的定义</h3><blockquote><p>所谓函数就是为了满足业务需求封装的功能。</p><p>比如多个地方需要用到同一个校验方法。</p><p>这个时候就可以把校验方法单独写一个函数以供多个地方进行调用。</p></blockquote><h4 id="函数的作用及好处："><a href="#函数的作用及好处：" class="headerlink" title="函数的作用及好处："></a>函数的作用及好处：</h4><ol><li>减少<code>重复代码</code></li><li>方便<code>修改</code>，更易于<code>扩展</code>（加减功能）</li><li>保持<code>代码一致性</code>（便于一修改一致修改）</li></ol>]]></content>
    
    
    <summary type="html">本节课主要总结了&lt;br&gt;函数的定义</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="函数" scheme="https://code.maylove.pub/tags/%E5%87%BD%E6%95%B0/"/>
    
  </entry>
  
</feed>
