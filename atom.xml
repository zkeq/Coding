<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ZkeqのCoding日志</title>
  
  <subtitle>Python Java Html 都在学</subtitle>
  <link href="https://code.maylove.pub/atom.xml" rel="self"/>
  
  <link href="https://code.maylove.pub/"/>
  <updated>2021-10-05T10:50:54.369Z</updated>
  <id>https://code.maylove.pub/</id>
  
  <author>
    <name>Zkeq</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Python 综合案例:九九乘法表</title>
    <link href="https://code.maylove.pub/47bf9691d9e3/"/>
    <id>https://code.maylove.pub/47bf9691d9e3/</id>
    <published>2021-10-05T10:25:42.000Z</published>
    <updated>2021-10-05T10:50:54.369Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="综合案例-九九乘法表"><a href="#综合案例-九九乘法表" class="headerlink" title="综合案例:九九乘法表"></a>综合案例:九九乘法表</h3><h5 id="图片版代码"><a href="#图片版代码" class="headerlink" title="图片版代码"></a>图片版代码</h5><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-10-5/carbon.png" alt="1"></p><h5 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">1 * 1 = 1</span></span><br><span class="line"><span class="string">2 * 1 = 2 2 * 2 = 4</span></span><br><span class="line"><span class="string">3 * 1 = 3 3 * 2 = 6 3 * 3 = 9</span></span><br><span class="line"><span class="string">4 * 1 = 4 4 * 2 = 8 4 * 3 = 12 4 * 4 = 16</span></span><br><span class="line"><span class="string">5 * 1 = 5 5 * 2 = 10 5 * 3 = 15 5 * 4 = 20 5 * 5 = 25</span></span><br><span class="line"><span class="string">6 * 1 = 6 6 * 2 = 12 6 * 3 = 18 6 * 4 = 24 6 * 5 = 30 6 * 6 = 36</span></span><br><span class="line"><span class="string">7 * 1 = 7 7 * 2 = 14 7 * 3 = 21 7 * 4 = 28 7 * 5 = 35 7 * 6 = 42 7 * 7 = 49</span></span><br><span class="line"><span class="string">8 * 1 = 8 8 * 2 = 16 8 * 3 = 24 8 * 4 = 32 8 * 5 = 40 8 * 6 = 48 8 * 7 = 56 8 * 8 = 64</span></span><br><span class="line"><span class="string">9 * 1 = 9 9 * 2 = 18 9 * 3 = 27 9 * 4 = 36 9 * 5 = 45 9 * 6 = 54 9 * 7 = 63 9 * 8 = 72 9 * 9 = 81</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">work = &#123;&#125;</span><br><span class="line"><span class="comment"># 1</span></span><br><span class="line">one_value = (<span class="number">1</span>,)</span><br><span class="line">one_key = <span class="number">1</span></span><br><span class="line">work[<span class="built_in">str</span>(one_key)] = one_value</span><br><span class="line"><span class="built_in">print</span>(work)</span><br><span class="line"><span class="comment"># 2</span></span><br><span class="line">two_key = <span class="number">2</span></span><br><span class="line">two_value = []</span><br><span class="line">two_value.append(<span class="number">1</span>)</span><br><span class="line">two_value.append(<span class="number">2</span>)</span><br><span class="line">work[<span class="built_in">str</span>(two_key)] = two_value</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3</span></span><br><span class="line">three_key = <span class="number">3</span></span><br><span class="line">three_value = []</span><br><span class="line">three_value.append(<span class="number">1</span>)</span><br><span class="line">three_value.append(<span class="number">2</span>)</span><br><span class="line">three_value.append(<span class="number">3</span>)</span><br><span class="line">work[<span class="built_in">str</span>(three_key)] = three_value</span><br><span class="line"><span class="built_in">print</span>(work)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4</span></span><br><span class="line">four_key = <span class="number">4</span></span><br><span class="line">four_value = []</span><br><span class="line">four_value.append(<span class="number">1</span>)</span><br><span class="line">four_value.append(<span class="number">2</span>)</span><br><span class="line">four_value.append(<span class="number">3</span>)</span><br><span class="line">four_value.append(<span class="number">4</span>)</span><br><span class="line">work[<span class="built_in">str</span>(four_key)] = four_value</span><br><span class="line"></span><br><span class="line">temp_five = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>)</span><br><span class="line">five_key = <span class="number">5</span></span><br><span class="line">five_value = []</span><br><span class="line">five_value.extend(temp_five)</span><br><span class="line">work[<span class="built_in">str</span>(five_key)] = five_value</span><br><span class="line"><span class="built_in">print</span>(work)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 6</span></span><br><span class="line">temp_six = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]</span><br><span class="line">six_key = <span class="number">6</span></span><br><span class="line">six_value = []</span><br><span class="line">six_value.extend(temp_six)</span><br><span class="line">work[<span class="built_in">str</span>(six_key)] = six_value</span><br><span class="line"></span><br><span class="line"><span class="comment"># 7</span></span><br><span class="line">temp_seven = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>&#125;</span><br><span class="line">seven_key = <span class="number">7</span></span><br><span class="line">seven_value = []</span><br><span class="line">seven_value.extend(temp_seven)</span><br><span class="line">work[<span class="built_in">str</span>(seven_key)] = seven_value</span><br><span class="line"></span><br><span class="line"><span class="comment"># 8</span></span><br><span class="line">temp_eight = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>]</span><br><span class="line">eight_key = <span class="number">8</span></span><br><span class="line">eight_value = []</span><br><span class="line">eight_value.extend(temp_eight)</span><br><span class="line">eight_key = <span class="built_in">str</span>(eight_key)</span><br><span class="line">work[eight_key] = eight_value</span><br><span class="line"></span><br><span class="line"><span class="comment"># 9</span></span><br><span class="line">temp_nine = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>)</span><br><span class="line">nine_key = <span class="number">9</span></span><br><span class="line">nine_value = <span class="built_in">list</span>(temp_nine)</span><br><span class="line">nine_key = <span class="built_in">str</span>(nine_key)</span><br><span class="line">work.update(&#123;nine_key: nine_value&#125;)</span><br><span class="line"><span class="built_in">print</span>(work)</span><br><span class="line"></span><br><span class="line">_keys = work.keys()</span><br><span class="line">keys = <span class="built_in">list</span>(_keys)</span><br><span class="line"><span class="built_in">print</span>(_keys)</span><br><span class="line"></span><br><span class="line">one = keys[<span class="number">0</span>]</span><br><span class="line">one_value = work.pop(one)</span><br><span class="line"><span class="built_in">print</span>(one, one_value)</span><br><span class="line">one_key = <span class="built_in">int</span>(one)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(one_key, one_value[<span class="number">0</span>], one_key * one_value[<span class="number">0</span>]))</span><br><span class="line"></span><br><span class="line">two = keys[<span class="number">1</span>]</span><br><span class="line">two_value = work.pop(two)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(two, two_value[<span class="number">0</span>], <span class="built_in">int</span>(two) * two_value[<span class="number">0</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(two, two_value[<span class="number">1</span>], <span class="built_in">int</span>(two) * two_value[<span class="number">1</span>]))</span><br><span class="line"></span><br><span class="line">three = keys[<span class="number">2</span>]</span><br><span class="line">three_value = work.pop(three)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(three, three_value[<span class="number">0</span>], <span class="built_in">int</span>(three) * (three_value[<span class="number">0</span>])), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(three, three_value[<span class="number">1</span>], <span class="built_in">int</span>(three) * (three_value[<span class="number">1</span>])), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(three, three_value[<span class="number">2</span>], <span class="built_in">int</span>(three) * (three_value[<span class="number">2</span>])))</span><br><span class="line"></span><br><span class="line">four = keys[<span class="number">3</span>]</span><br><span class="line">four_value = work.pop(four)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(four, four_value[<span class="number">0</span>], <span class="built_in">int</span>(four) * (four_value[<span class="number">0</span>])), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(four, four_value[<span class="number">1</span>], <span class="built_in">int</span>(four) * (four_value[<span class="number">1</span>])), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(four, four_value[<span class="number">2</span>], <span class="built_in">int</span>(four) * (four_value[<span class="number">2</span>])), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(four, four_value[-<span class="number">1</span>], <span class="built_in">int</span>(four) * (four_value[-<span class="number">1</span>])))</span><br><span class="line"></span><br><span class="line">five = keys[<span class="number">4</span>]</span><br><span class="line">five_value = work.pop(five)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%s * %s = %s&#x27;</span> % (five, five_value[<span class="number">0</span>], <span class="built_in">int</span>(five) * five_value[<span class="number">0</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%s * %s = %d&#x27;</span> % (five, five_value[<span class="number">1</span>], <span class="built_in">int</span>(five) * five_value[<span class="number">1</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%s * %s = %d&#x27;</span> % (five, five_value[<span class="number">2</span>], <span class="built_in">int</span>(five) * five_value[<span class="number">2</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%s * %s = %d&#x27;</span> % (five, five_value[-<span class="number">2</span>], <span class="built_in">int</span>(five) * five_value[-<span class="number">2</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%s * %s = %d&#x27;</span> % (five, five_value[-<span class="number">1</span>], <span class="built_in">int</span>(five) * five_value[-<span class="number">1</span>]),)</span><br><span class="line"></span><br><span class="line">six = keys[<span class="number">5</span>]</span><br><span class="line">six_value = work.pop(six)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%s * %s = %s&#x27;</span> % (six, six_value[<span class="number">0</span>], <span class="built_in">int</span>(six) * six_value[<span class="number">0</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%s * %s = %s&#x27;</span> % (six, six_value[<span class="number">1</span>], <span class="built_in">int</span>(six) * six_value[<span class="number">1</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%s * %s = %s&#x27;</span> % (six, six_value[<span class="number">2</span>], <span class="built_in">int</span>(six) * six_value[<span class="number">2</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(six, six_value[<span class="number">3</span>], <span class="built_in">int</span>(six) * six_value[<span class="number">3</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(six, six_value[<span class="number">4</span>], <span class="built_in">int</span>(six) * six_value[<span class="number">4</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(six, six_value[<span class="number">5</span>], <span class="built_in">int</span>(six) * six_value[<span class="number">5</span>]))</span><br><span class="line"></span><br><span class="line">seven = keys[<span class="number">6</span>]</span><br><span class="line">seven_value = work.pop(seven)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(seven, seven_value[<span class="number">0</span>], <span class="built_in">int</span>(seven) * seven_value[<span class="number">0</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(seven, seven_value[<span class="number">1</span>], <span class="built_in">int</span>(seven) * seven_value[<span class="number">1</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(seven, seven_value[<span class="number">2</span>], <span class="built_in">int</span>(seven) * seven_value[<span class="number">2</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(seven, seven_value[<span class="number">3</span>], <span class="built_in">int</span>(seven) * seven_value[<span class="number">3</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(seven, seven_value[<span class="number">4</span>], <span class="built_in">int</span>(seven) * seven_value[<span class="number">4</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(seven, seven_value[<span class="number">5</span>], <span class="built_in">int</span>(seven) * seven_value[<span class="number">5</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(seven, seven_value[<span class="number">6</span>], <span class="built_in">int</span>(seven) * seven_value[<span class="number">6</span>]))</span><br><span class="line"></span><br><span class="line">eight = keys[<span class="number">7</span>]</span><br><span class="line">eight_value = work.pop(eight)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(eight, eight_value[<span class="number">0</span>], <span class="built_in">int</span>(eight) * eight_value[<span class="number">0</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(eight, eight_value[<span class="number">1</span>], <span class="built_in">int</span>(eight) * eight_value[<span class="number">1</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(eight, eight_value[<span class="number">2</span>], <span class="built_in">int</span>(eight) * eight_value[<span class="number">2</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(eight, eight_value[<span class="number">3</span>], <span class="built_in">int</span>(eight) * eight_value[<span class="number">3</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(eight, eight_value[<span class="number">4</span>], <span class="built_in">int</span>(eight) * eight_value[<span class="number">4</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(eight, eight_value[<span class="number">5</span>], <span class="built_in">int</span>(eight) * eight_value[<span class="number">5</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(eight, eight_value[<span class="number">6</span>], <span class="built_in">int</span>(eight) * eight_value[<span class="number">6</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(eight, eight_value[<span class="number">7</span>], <span class="built_in">int</span>(eight) * eight_value[<span class="number">7</span>]))</span><br><span class="line"></span><br><span class="line">nine = keys[-<span class="number">1</span>]</span><br><span class="line">nine_value = work.get(nine)</span><br><span class="line">format_str = <span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(format_str.<span class="built_in">format</span>(nine, nine_value[<span class="number">0</span>], <span class="built_in">int</span>(nine) * nine_value[<span class="number">0</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(format_str.<span class="built_in">format</span>(nine, nine_value[<span class="number">1</span>], <span class="built_in">int</span>(nine) * nine_value[<span class="number">1</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(format_str.<span class="built_in">format</span>(nine, nine_value[<span class="number">2</span>], <span class="built_in">int</span>(nine) * nine_value[<span class="number">2</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(format_str.<span class="built_in">format</span>(nine, nine_value[<span class="number">3</span>], <span class="built_in">int</span>(nine) * nine_value[<span class="number">3</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(format_str.<span class="built_in">format</span>(nine, nine_value[<span class="number">4</span>], <span class="built_in">int</span>(nine) * nine_value[<span class="number">4</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(format_str.<span class="built_in">format</span>(nine, nine_value[<span class="number">5</span>], <span class="built_in">int</span>(nine) * nine_value[<span class="number">5</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(format_str.<span class="built_in">format</span>(nine, nine_value[<span class="number">6</span>], <span class="built_in">int</span>(nine) * nine_value[<span class="number">6</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(format_str.<span class="built_in">format</span>(nine, nine_value[<span class="number">7</span>], <span class="built_in">int</span>(nine) * nine_value[<span class="number">7</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(format_str.<span class="built_in">format</span>(nine, nine_value[<span class="number">8</span>], <span class="built_in">int</span>(nine) * nine_value[<span class="number">8</span>]))</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">通过运用前面所学的知识 &lt;br&gt; 完成一个乘法口诀表</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="编程练习" scheme="https://code.maylove.pub/tags/%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Python 元组 ,列表, 集合间的转换</title>
    <link href="https://code.maylove.pub/5e79a4d30cf0/"/>
    <id>https://code.maylove.pub/5e79a4d30cf0/</id>
    <published>2021-10-05T10:24:50.000Z</published>
    <updated>2021-10-05T10:40:51.491Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="元组-列表-集合间的转换"><a href="#元组-列表-集合间的转换" class="headerlink" title="元组 ,列表, 集合间的转换"></a>元组 ,列表, 集合间的转换</h3><ul><li>列表元组集合间隔转换的函数</li></ul><table><thead><tr><th align="center">原始类型</th><th align="center">目标函数</th><th align="center">函数</th><th>举例</th></tr></thead><tbody><tr><td align="center">列表</td><td align="center">集合</td><td align="center">set</td><td><code>new_set = set([1,  2,  3, 4, 5])</code></td></tr><tr><td align="center">列表</td><td align="center">元组</td><td align="center">tuple</td><td><code>new_tutple = tuple([1, 2, 3, 4, 5])</code></td></tr><tr><td align="center">元组</td><td align="center">集合</td><td align="center">set</td><td><code>new_set = set((1, 2, 3, 4, 5))</code></td></tr><tr><td align="center">元组</td><td align="center">列表</td><td align="center">list</td><td><code>new_list = list(1, 2, 3, 4, 5)</code></td></tr><tr><td align="center">集合</td><td align="center">列表</td><td align="center">list</td><td><code>new_list = list(&#123;1, 2, 3, 4, 5&#125;)</code></td></tr><tr><td align="center">集合</td><td align="center">元组</td><td align="center">tuple</td><td><code>new_tuple = tuple(&#123;1, 2, 3, 4, 5&#125;)</code></td></tr></tbody></table><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">a = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">b = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line">c = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">tuple</span>(a), <span class="built_in">set</span>(a))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(<span class="built_in">tuple</span>(a)), <span class="built_in">type</span>(<span class="built_in">set</span>(a)))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">tuple</span>(a) <span class="keyword">is</span> b)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">set</span>(a) == c)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>(b), <span class="built_in">set</span>(b))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>(c), <span class="built_in">tuple</span>(c))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>(a))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>(a), <span class="built_in">type</span>(<span class="built_in">str</span>(a)))  <span class="comment"># &#x27;[1, 2, 3]&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>(b), <span class="built_in">type</span>(<span class="built_in">str</span>(b)))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>(c), <span class="built_in">type</span>(<span class="built_in">str</span>(c)))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 转换不可逆...</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>(<span class="built_in">str</span>(a)))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">tuple</span>(<span class="built_in">str</span>(b)))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">set</span>(<span class="built_in">str</span>(c)))</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本节课主要学习了:&lt;br&gt;元组 ,列表, 集合间的转换&lt;br&gt;其中涉及到的相关函数</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="类型转换" scheme="https://code.maylove.pub/tags/%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/"/>
    
  </entry>
  
  <entry>
    <title>Python 字符串与bytes的转换</title>
    <link href="https://code.maylove.pub/c78f8edfbe5a/"/>
    <id>https://code.maylove.pub/c78f8edfbe5a/</id>
    <published>2021-10-05T10:24:34.000Z</published>
    <updated>2021-10-05T10:41:35.826Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="字符串与bytes的转换"><a href="#字符串与bytes的转换" class="headerlink" title="字符串与bytes的转换"></a>字符串与bytes的转换</h3><h4 id="什么是bytes-比特类型"><a href="#什么是bytes-比特类型" class="headerlink" title="什么是bytes(比特类型)"></a>什么是bytes(比特类型)</h4><ul><li><p>二进制的数据流–bytes</p></li><li><p>一种特殊的字符串</p></li><li><p>字符串前 + b  标记</p></li></ul><blockquote><p>内置函数dir可以查到该数据类型的相关说明</p></blockquote><hr><h4 id="字符串转bytes的函数–encode"><a href="#字符串转bytes的函数–encode" class="headerlink" title="字符串转bytes的函数–encode"></a>字符串转bytes的函数–encode</h4><h5 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h5><ul><li>将<code>字符串</code>转成<code>比特(bytes)类型</code></li></ul><h5 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h5><p><code>sring.encode(endocing=&#39;utf-8&#39;, errors= &#39;strict&#39;)</code></p><h5 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h5><ul><li><p><code>encoding</code>:转换的<strong>编码格式</strong> ,如<code>ascii</code> , <code>gbk</code> , 默认 <code>utf-8</code></p></li><li><p><code>errors</code> : <strong>出错</strong>时的处理方法 , 默认<code>strict</code> </p><ul><li>直接抛错误 , 也可以选择 <code>ignore</code> 忽略错误</li></ul></li></ul><h5 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h5><ul><li>返回一个比特(bytes)类型</li></ul><hr><h4 id="bytes转字符串的函数–decode"><a href="#bytes转字符串的函数–decode" class="headerlink" title="bytes转字符串的函数–decode"></a>bytes转字符串的函数–decode</h4><h5 id="功能-1"><a href="#功能-1" class="headerlink" title="功能"></a>功能</h5><ul><li>将<code>比特(bytes)类型</code>转成<code>字符串</code></li></ul><h5 id="用法-1"><a href="#用法-1" class="headerlink" title="用法"></a>用法</h5><ul><li><code>bytes.decode(encoding=&#39;utf-8&#39;, errors=&#39;strict&#39;)</code></li></ul><h5 id="参数-1"><a href="#参数-1" class="headerlink" title="参数"></a>参数</h5><ul><li><p><code>encoding</code>:  转换成的<strong>编码格式</strong>, 如 <code>ascii</code>, <code>gbk</code>, 默认 <code>utf-8</code></p></li><li><p><code>errors</code>: 出错时的<strong>处理方法</strong> , 默认<code>strict</code> ,直接<strong>抛错误</strong> , 也可以选择<code>ignore</code>忽略错误</p></li></ul><h5 id="返回值-1"><a href="#返回值-1" class="headerlink" title="返回值"></a>返回值</h5><ul><li>返回一个<code>字符串类型</code></li></ul><h5 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">a = <span class="string">&#x27;hello xiaomu&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(a, <span class="built_in">type</span>(a))</span><br><span class="line"></span><br><span class="line">b = <span class="string">b&#x27;hello xiaomu&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(b, <span class="built_in">type</span>(b))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(b.capitalize())</span><br><span class="line"><span class="built_in">print</span>(b.replace(<span class="string">b&#x27;xiaomu&#x27;</span>, <span class="string">b&#x27;dewei&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(b[:<span class="number">3</span>])</span><br><span class="line"><span class="built_in">print</span>(b.find(<span class="string">b&#x27;x&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">dir</span>(b))</span><br><span class="line"></span><br><span class="line">c = <span class="string">&#x27;hello 小慕&#x27;</span></span><br><span class="line">d = c.encode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(d, <span class="built_in">type</span>(d))</span><br><span class="line"><span class="built_in">print</span>(d.decode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本节课主要学习了:&lt;br&gt;字符串与bytes的转换&lt;br&gt;bytes比特类型和 encode与decode函数</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="类型转换" scheme="https://code.maylove.pub/tags/%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/"/>
    
  </entry>
  
  <entry>
    <title>Python 字符串与列表间的转换</title>
    <link href="https://code.maylove.pub/ae96905fcbf4/"/>
    <id>https://code.maylove.pub/ae96905fcbf4/</id>
    <published>2021-10-05T10:24:17.000Z</published>
    <updated>2021-10-05T10:39:31.587Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="字符串与列表间的转换"><a href="#字符串与列表间的转换" class="headerlink" title="字符串与列表间的转换"></a>字符串与列表间的转换</h3><h4 id="字符串转列表的函数–split"><a href="#字符串转列表的函数–split" class="headerlink" title="字符串转列表的函数–split"></a>字符串转列表的函数–split</h4><h5 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h5><ul><li>将字符串以<code>一定规则</code><strong>切割</strong>转成<code>列表</code></li></ul><h5 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h5><ul><li><code>string.split(sep=None, maxsplit=-1)</code></li></ul><h5 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h5><ul><li><p><code>sep</code>:切割的规则符号,不填写**,默认空格**,如字符串<strong>无空格</strong><code>不分割</code>生成列表</p></li><li><p><code>maxsplit</code> : 根据切割符号<strong>切割的次数</strong>, 默认**-1无限制**</p></li></ul><h5 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h5><ul><li>返回一个<strong>列表</strong></li></ul><hr><h4 id="列表转字符串的函数–join"><a href="#列表转字符串的函数–join" class="headerlink" title="列表转字符串的函数–join"></a>列表转字符串的函数–join</h4><h5 id="功能-1"><a href="#功能-1" class="headerlink" title="功能"></a>功能</h5><ul><li>将<code>列表</code>以<strong>一定规则</strong>转成<code>字符串</code>(元组,集合也可以)</li></ul><h5 id="用法-1"><a href="#用法-1" class="headerlink" title="用法"></a>用法</h5><ul><li><code>&#39;sep&#39;.join(iterable)</code></li></ul><h5 id="参数-1"><a href="#参数-1" class="headerlink" title="参数"></a>参数</h5><ul><li><code>sep</code>: 生成字符串用来分割<code>列表每个元素</code>的符号</li><li><code>iterable</code>: <strong>非数字类型</strong>的<code>列表或元组或集合</code></li></ul><h5 id="返回值-1"><a href="#返回值-1" class="headerlink" title="返回值"></a>返回值</h5><ul><li>返回一个字符串</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">a = <span class="string">&#x27;abc&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(a.split())</span><br><span class="line"></span><br><span class="line">b = <span class="string">&#x27;a,b,c&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(b.split(<span class="string">&#x27;,&#x27;</span>))</span><br><span class="line"></span><br><span class="line">c = <span class="string">&#x27;a|b|c|d&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(c.split(<span class="string">&#x27;|&#x27;</span>, <span class="number">1</span>))</span><br><span class="line"></span><br><span class="line">d = <span class="string">&#x27;a|b|c|d&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(d.split(<span class="string">&#x27;|&#x27;</span>, <span class="number">2</span>))</span><br><span class="line"></span><br><span class="line">f = <span class="string">&#x27;a~b~c&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(f.split(<span class="string">&#x27;~&#x27;</span>, <span class="number">2</span>))</span><br><span class="line"></span><br><span class="line">test = [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>]</span><br><span class="line">test_str = <span class="string">&#x27;|&#x27;</span>.join(test)</span><br><span class="line"><span class="built_in">print</span>(test_str)</span><br><span class="line"></span><br><span class="line">test2 = [<span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;|&#x27;</span>.join(test2))</span><br><span class="line"></span><br><span class="line"><span class="comment"># test3 = [&#123;&#x27;name&#x27;: &#x27;dewei&#x27;&#125;, &#123;&#x27;name&#x27;: &#x27;xiaomu&#x27;&#125;]</span></span><br><span class="line"><span class="comment"># print(&#x27;.&#x27;.join(test3))</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># test4 = [(&#x27;a&#x27;, &#x27;v&#x27;), (&#x27;a&#x27;, &#x27;b&#x27;)]</span></span><br><span class="line"><span class="comment"># print(&#x27;&#x27;.join(test4))</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># test5 = [None, True]</span></span><br><span class="line"><span class="comment"># print(&#x27;.&#x27;.join(test5))</span></span><br><span class="line"></span><br><span class="line">sort_str = <span class="string">&#x27;a b c d f i p q c&#x27;</span></span><br><span class="line">sort_list = sort_str.split()</span><br><span class="line"><span class="built_in">print</span>(sort_list)</span><br><span class="line">sort_list.sort()</span><br><span class="line"><span class="built_in">print</span>(sort_list)</span><br><span class="line">sort_str = <span class="string">&#x27; &#x27;</span>.join(sort_list)</span><br><span class="line"><span class="built_in">print</span>(sort_str)</span><br><span class="line"></span><br><span class="line">sort_str_new = <span class="string">&#x27;abcdfipqc&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(sort_str_new)</span><br><span class="line">res = <span class="built_in">sorted</span>(sort_str_new)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#x27;</span>.join(res))</span><br><span class="line"></span><br><span class="line">seq = (<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>)</span><br><span class="line">seq2 = &#123;<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;#&#x27;</span>.join(seq))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;$&#x27;</span>.join(seq2), <span class="built_in">type</span>(seq2))</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本节课主要学习了:&lt;br&gt;字符串与列表间的转换&lt;br&gt;split函数和join函数</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="类型转换" scheme="https://code.maylove.pub/tags/%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/"/>
    
  </entry>
  
  <entry>
    <title>Python 字符串与数字类型的转换</title>
    <link href="https://code.maylove.pub/ab042a99e9a7/"/>
    <id>https://code.maylove.pub/ab042a99e9a7/</id>
    <published>2021-10-05T10:23:53.000Z</published>
    <updated>2021-10-05T10:37:08.413Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="字符串与数字类型的转换"><a href="#字符串与数字类型的转换" class="headerlink" title="字符串与数字类型的转换"></a>字符串与数字类型的转换</h3><h4 id="什么是类型转换-为什么做类型转换"><a href="#什么是类型转换-为什么做类型转换" class="headerlink" title="什么是类型转换, 为什么做类型转换"></a>什么是类型转换, 为什么做类型转换</h4><ul><li>将自身数据类型变成<code>新的数据类型</code> , 并拥有新的数据类型的所有功能的过程即为类型转换</li><li><code>a = &#39;1&#39;</code>  <strong>#无法做数字操作</strong></li><li>为方便更好的帮助处理业务, 将类型变更为更适合业务场景的类型</li></ul><h4 id="字符串与数字之间转换的要求"><a href="#字符串与数字之间转换的要求" class="headerlink" title="字符串与数字之间转换的要求"></a>字符串与数字之间转换的要求</h4><ul><li><code>str  --&gt;  number</code>: 数字组成的字符串</li><li><code>number  ---&gt;  str</code>  :  无要求</li></ul><h4 id="字符串与数字之间的转换函数"><a href="#字符串与数字之间的转换函数" class="headerlink" title="字符串与数字之间的转换函数"></a>字符串与数字之间的转换函数</h4><table><thead><tr><th align="center">原始类型</th><th align="center">目标函数</th><th align="center">函数</th><th align="center">举例</th></tr></thead><tbody><tr><td align="center">整形</td><td align="center">字符串</td><td align="center">str</td><td align="center">new_str = str(123456)</td></tr><tr><td align="center">浮点型</td><td align="center">字符串</td><td align="center">str</td><td align="center">new_str = str(3.14)</td></tr><tr><td align="center">字符串</td><td align="center">整形</td><td align="center">int</td><td align="center">new_int = int(‘12’)</td></tr><tr><td align="center">字符串</td><td align="center">浮点型</td><td align="center">float</td><td align="center">new_float = float(‘1.2’)</td></tr></tbody></table><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">int_data = <span class="number">12</span></span><br><span class="line">float_date =<span class="number">3.14</span></span><br><span class="line"></span><br><span class="line">str_int_data = <span class="built_in">str</span>(int_data)</span><br><span class="line">str_float_data = <span class="built_in">str</span>(float_date)</span><br><span class="line"><span class="built_in">print</span>(str_int_data, str_float_data, <span class="built_in">type</span>(str_int_data), <span class="built_in">type</span>(str_float_data))</span><br><span class="line"></span><br><span class="line">zero_number = <span class="number">0</span></span><br><span class="line">_number = -<span class="number">1</span></span><br><span class="line"></span><br><span class="line">str_zero_number = <span class="built_in">str</span>(zero_number)</span><br><span class="line">str_number = <span class="built_in">str</span>(_number)</span><br><span class="line"><span class="built_in">print</span>(str_zero_number, str_number, <span class="built_in">type</span>(str_zero_number), <span class="built_in">type</span>(str_number))</span><br><span class="line"></span><br><span class="line">str_float = <span class="string">&#x27;3.14&#x27;</span></span><br><span class="line">str_int = <span class="string">&#x27;123456&#x27;</span></span><br><span class="line"></span><br><span class="line">real_float = <span class="built_in">float</span>(str_float)</span><br><span class="line">real_int = <span class="built_in">int</span>(str_int)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(real_float, real_int, <span class="built_in">type</span>(real_float), <span class="built_in">type</span>(real_int))</span><br><span class="line"></span><br><span class="line">mix_Str = <span class="string">&#x27;123a&#x27;</span></span><br><span class="line"><span class="comment"># print(float(mix_Str))</span></span><br><span class="line">float_data_str = <span class="string">&#x27;3.14&#x27;</span></span><br><span class="line">test_data = <span class="built_in">float</span>(float_data_str)</span><br><span class="line"><span class="built_in">print</span>(test_data, <span class="built_in">type</span>(test_data))</span><br><span class="line"></span><br><span class="line">int_data_str = <span class="string">&#x27;123&#x27;</span></span><br><span class="line">test_data = <span class="built_in">float</span>(int_data_str)</span><br><span class="line"><span class="built_in">print</span>(test_data, <span class="built_in">type</span>(test_data))</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本节课主要学习了:&lt;br&gt;字符串与数字类型的转换&lt;br&gt;其中包含的原理和要求</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="类型转换" scheme="https://code.maylove.pub/tags/%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/"/>
    
  </entry>
  
  <entry>
    <title>Python 集合的isdisjoint函数</title>
    <link href="https://code.maylove.pub/00310efa09de/"/>
    <id>https://code.maylove.pub/00310efa09de/</id>
    <published>2021-10-04T12:52:13.000Z</published>
    <updated>2021-10-04T12:57:29.253Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="集合的isdisjoint函数"><a href="#集合的isdisjoint函数" class="headerlink" title="集合的isdisjoint函数"></a>集合的isdisjoint函数</h3><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li>判断两个<code>集合</code>是否包含<strong>相同的元素</strong> , 如果<strong>没有</strong>返回<code>True</code> , 否则返回<code>False</code></li><li><code>没有</code>才返回<strong>True</strong></li></ul><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><ul><li><code>a_set.isdisjoint(b_set)</code></li></ul><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><ul><li><code>b_set</code> : 与当前集合用来判断的集合</li></ul><h4 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h4><ul><li>返回一个<strong>布尔值</strong><code>True</code>或<code>False</code></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">company_not_allow = &#123;<span class="string">&#x27;女&#x27;</span>, <span class="string">&#x27;喝酒&#x27;</span>, <span class="string">&#x27;抽烟&#x27;</span>, <span class="string">&#x27;睡懒觉&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line">one_player = &#123;<span class="string">&#x27;男&#x27;</span>, <span class="string">&#x27;跑步&#x27;</span>, <span class="string">&#x27;朝气&#x27;</span>, <span class="string">&#x27;喝酒&#x27;</span>&#125;</span><br><span class="line">two_player = &#123;<span class="string">&#x27;女&#x27;</span>, <span class="string">&#x27;生活规律&#x27;</span>, <span class="string">&#x27;跆拳道&#x27;</span>&#125;</span><br><span class="line">three_player = &#123;<span class="string">&#x27;男&#x27;</span>, <span class="string">&#x27;太极拳&#x27;</span>&#125;</span><br><span class="line">four_player = &#123;<span class="string">&#x27;男&#x27;</span>, <span class="string">&#x27;空手道&#x27;</span>, <span class="string">&#x27;年轻&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(company_not_allow.isdisjoint(one_player))</span><br><span class="line"><span class="built_in">print</span>(company_not_allow.isdisjoint(two_player))</span><br><span class="line"><span class="built_in">print</span>(company_not_allow.isdisjoint(three_player))</span><br><span class="line"><span class="built_in">print</span>(company_not_allow.isdisjoint(four_player))</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本节课主要学习了:&lt;br&gt;isdisjoint函数&lt;br&gt;判断两个元素是否包含相同元素</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="集合" scheme="https://code.maylove.pub/tags/%E9%9B%86%E5%90%88/"/>
    
  </entry>
  
  <entry>
    <title>Python 集合的并集--union函数</title>
    <link href="https://code.maylove.pub/e8a9c829e273/"/>
    <id>https://code.maylove.pub/e8a9c829e273/</id>
    <published>2021-10-04T12:52:03.000Z</published>
    <updated>2021-10-04T12:55:53.440Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="集合的并集–union函数"><a href="#集合的并集–union函数" class="headerlink" title="集合的并集–union函数"></a>集合的并集–<code>union函数</code></h3><h4 id="什么是并集"><a href="#什么是并集" class="headerlink" title="什么是并集"></a>什么是并集</h4><ul><li><code>a , b 两个集合</code>中所有的<strong>元素</strong>(去除重复)即为a与b的<code>并集</code></li><li><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-10-4/1.png" alt="1"></li></ul><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li>返回<strong>多个集合</strong>的<code>并集</code>,即包含了<strong>所有集合</strong>的元素,<strong>重复的元素</strong><code>只会出现一次</code></li></ul><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><ul><li>a_set.union(b_set…)</li></ul><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><ul><li><code>b_set...</code>: 与<code>当前集合</code>对比的<strong>1或多个集合</strong></li></ul><h4 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h4><ul><li>返回<strong>原始集合</strong>与<strong>对比集合</strong>的<code>并集</code></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">a_school = [<span class="string">&#x27;周五半天&#x27;</span>, <span class="string">&#x27;免费周末培训&#x27;</span>, <span class="string">&#x27;周五休息&#x27;</span>]</span><br><span class="line">b_school = [<span class="string">&#x27;放学时间从6点改为5点&#x27;</span>, <span class="string">&#x27;作业少留点&#x27;</span>, <span class="string">&#x27;换舒服的座椅&#x27;</span>]</span><br><span class="line">c_school = [<span class="string">&#x27;作业少留点&#x27;</span>, <span class="string">&#x27;周五半天&#x27;</span>, <span class="string">&#x27;伙食改善&#x27;</span>]</span><br><span class="line"></span><br><span class="line">a_set = <span class="built_in">set</span>(a_school)</span><br><span class="line">b_set = <span class="built_in">set</span>(b_school)</span><br><span class="line">c_set = <span class="built_in">set</span>(c_school)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(a_set)</span><br><span class="line"><span class="built_in">print</span>(b_set)</span><br><span class="line"><span class="built_in">print</span>(c_set)</span><br><span class="line"></span><br><span class="line"><span class="comment"># help_date = a_set.union(b_set, c_set)</span></span><br><span class="line">help_date = a_set.union(b_school, c_school)</span><br><span class="line"><span class="built_in">print</span>(help_date)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(help_date))</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本节课主要学习了:&lt;br&gt;union函数&lt;br&gt;并集的使用方法</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="集合" scheme="https://code.maylove.pub/tags/%E9%9B%86%E5%90%88/"/>
    
  </entry>
  
  <entry>
    <title>Python 集合的交集--intersection函数</title>
    <link href="https://code.maylove.pub/accc6957dd99/"/>
    <id>https://code.maylove.pub/accc6957dd99/</id>
    <published>2021-10-04T12:51:48.000Z</published>
    <updated>2021-10-04T12:55:18.674Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="集合的交集–intersection函数"><a href="#集合的交集–intersection函数" class="headerlink" title="集合的交集–intersection函数"></a>集合的交集–<code>intersection函数</code></h3><h4 id="什么是交集"><a href="#什么是交集" class="headerlink" title="什么是交集"></a>什么是交集</h4><ul><li>a , b两个集合分别拥有的<code>相同</code>的元素集 , 称为a与b的交集</li><li><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-10-4/1.png" alt="1"></li></ul><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li>返回<strong>两个或更多集合</strong>中<code>都包含</code>的元素,即交集</li></ul><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><ul><li><code>a_set.intersection(b_set...)</code></li></ul><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><p><code>b_set...</code>:  与当前集合对比的<strong>1或多个集合</strong></p><h4 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h4><ul><li>返回<strong>原始集合</strong>与<strong>对比集合</strong>的<code>交集</code></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">a = [<span class="string">&#x27;dewei&#x27;</span>, <span class="string">&#x27;xiaomu&#x27;</span>, <span class="string">&#x27;xiaohua&#x27;</span>, <span class="string">&#x27;xiaoguo&#x27;</span>]</span><br><span class="line">b = [<span class="string">&#x27;xiaohua&#x27;</span>, <span class="string">&#x27;dewei&#x27;</span>, <span class="string">&#x27;xiaoman&#x27;</span>, <span class="string">&#x27;xiaolin&#x27;</span>]</span><br><span class="line">c = [<span class="string">&#x27;xiaoguang&#x27;</span>, <span class="string">&#x27;xiaobai&#x27;</span>, <span class="string">&#x27;dewei&#x27;</span>, <span class="string">&#x27;xiaoyuan&#x27;</span>]</span><br><span class="line"></span><br><span class="line">a_set = <span class="built_in">set</span>(a)</span><br><span class="line">b_set = <span class="built_in">set</span>(b)</span><br><span class="line">c_set = <span class="built_in">set</span>(c)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(a_set, b_set, c_set)</span><br><span class="line"></span><br><span class="line">result = a_set.intersection(b_set, c_set)</span><br><span class="line">xiaotou = <span class="built_in">list</span>(result)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; 是 这个小偷&#x27;</span>.<span class="built_in">format</span>(xiaotou[<span class="number">0</span>]))</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本节课主要学习了:&lt;br&gt;intersection函数&lt;br&gt;交集的使用方法</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="集合" scheme="https://code.maylove.pub/tags/%E9%9B%86%E5%90%88/"/>
    
  </entry>
  
  <entry>
    <title>Python 集合的差集--difference函数</title>
    <link href="https://code.maylove.pub/bb2cff969079/"/>
    <id>https://code.maylove.pub/bb2cff969079/</id>
    <published>2021-10-04T12:51:28.000Z</published>
    <updated>2021-10-04T12:54:42.045Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="集合的差集–difference函数"><a href="#集合的差集–difference函数" class="headerlink" title="集合的差集–difference函数"></a>集合的差集–<code>difference函数</code></h3><h4 id="什么是差集"><a href="#什么是差集" class="headerlink" title="什么是差集"></a>什么是差集</h4><ul><li>a, b两个集合 , 由所有属于a且不属于b的元素组成的集合叫做a与b的差集</li><li><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-10-4/1.png" alt="1"></li></ul><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li><code>返回集合的差集</code> , 即<strong>返回的集合元素</strong><code>包含在第一个集合中</code>, 但<code>不包含在第二个集合</code>(方法的参数)中</li></ul><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><ul><li><code>a_set.difference(b_set)</code></li></ul><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><ul><li><code>b_set</code> : 当前集合<strong>需要对比的集合</strong></li></ul><h4 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h4><ul><li><strong>返回</strong><code>原始集合</code>于<code>对比集合</code>的<code>差集</code></li><li>(即a_set与b_set的差集)</li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">drivers = [<span class="string">&#x27;dewei&#x27;</span>, <span class="string">&#x27;xiaomu&#x27;</span>, <span class="string">&#x27;xiaoming&#x27;</span>, <span class="string">&#x27;xiaoman&#x27;</span>]</span><br><span class="line">testers = [<span class="string">&#x27;xiaomu&#x27;</span>, <span class="string">&#x27;xiaoman&#x27;</span>, <span class="string">&#x27;xiaogang&#x27;</span>, <span class="string">&#x27;xiaotao&#x27;</span>]</span><br><span class="line"></span><br><span class="line">driver_set = <span class="built_in">set</span>(drivers)</span><br><span class="line">test_set = <span class="built_in">set</span>(testers)</span><br><span class="line"></span><br><span class="line">sample_drives = driver_set.difference(test_set)</span><br><span class="line"><span class="built_in">print</span>(sample_drives)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本节课主要学习了:&lt;br&gt;difference函数&lt;br&gt;差集的使用方法</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="集合" scheme="https://code.maylove.pub/tags/%E9%9B%86%E5%90%88/"/>
    
  </entry>
  
  <entry>
    <title>Python 集合的增删改</title>
    <link href="https://code.maylove.pub/697e4a85a0ab/"/>
    <id>https://code.maylove.pub/697e4a85a0ab/</id>
    <published>2021-10-04T12:51:06.000Z</published>
    <updated>2021-10-04T12:53:28.797Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="集合的增删改"><a href="#集合的增删改" class="headerlink" title="集合的增删改"></a>集合的增删改</h3><h4 id="集合的add函数"><a href="#集合的add函数" class="headerlink" title="集合的add函数"></a>集合的<code>add函数</code></h4><h5 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h5><ul><li>用于集合中<code>添加一个元素</code>,如果集合中<strong>已存在该元素</strong>则该元素<strong>不执行</strong></li></ul><h5 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h5><ul><li><code>set.add(item)</code></li></ul><h5 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h5><ul><li><code>item</code> : 要<strong>添加到集合中的元素</strong></li></ul><h5 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h5><ul><li>无返回值</li></ul><hr><h4 id="集合的update函数"><a href="#集合的update函数" class="headerlink" title="集合的update函数"></a>集合的update函数</h4><h5 id="功能-1"><a href="#功能-1" class="headerlink" title="功能"></a>功能</h5><ul><li>加入一个<code>新的集合(或列表, 元组, 字符串)</code>, 如新集合内的元素在原集合中<strong>存在则无视</strong></li></ul><h5 id="用法-1"><a href="#用法-1" class="headerlink" title="用法"></a>用法</h5><ul><li><code>set.update(iterable)</code></li><li>传入字符串的时候会被拆开….</li></ul><h5 id="参数-1"><a href="#参数-1" class="headerlink" title="参数"></a>参数</h5><ul><li><code>iterable</code> : 集合,列表元组字符串</li></ul><h5 id="返回值-1"><a href="#返回值-1" class="headerlink" title="返回值"></a>返回值</h5><ul><li><code>无</code>返回值 , <strong>直接作用于原集合</strong></li></ul><hr><h4 id="集合的remove函数"><a href="#集合的remove函数" class="headerlink" title="集合的remove函数"></a>集合的remove函数</h4><h5 id="功能-2"><a href="#功能-2" class="headerlink" title="功能"></a>功能</h5><ul><li>将集合中的某个元素<code>删除</code> , 如元素<code>不存在</code>将会<strong>报错</strong></li></ul><h5 id="用法-2"><a href="#用法-2" class="headerlink" title="用法"></a>用法</h5><ul><li>set.remove(item)  #   注意是元素不是索引</li></ul><h5 id="参数-2"><a href="#参数-2" class="headerlink" title="参数"></a>参数</h5><ul><li><code>item</code> : 当前集合中的<strong>一个元素</strong></li></ul><h5 id="返回值-2"><a href="#返回值-2" class="headerlink" title="返回值"></a>返回值</h5><ul><li><strong>无返回值</strong> , 直接作用于<strong>原集合</strong></li></ul><hr><h4 id="集合的clear函数"><a href="#集合的clear函数" class="headerlink" title="集合的clear函数"></a>集合的clear函数</h4><h5 id="功能-3"><a href="#功能-3" class="headerlink" title="功能"></a>功能</h5><ul><li>清空<strong>当前集合</strong>中的<code>所有元素</code></li></ul><h5 id="用法-3"><a href="#用法-3" class="headerlink" title="用法"></a>用法</h5><ul><li><code>set.clear()</code></li></ul><h5 id="参数-3"><a href="#参数-3" class="headerlink" title="参数"></a>参数</h5><ul><li><code>无</code></li></ul><h5 id="返回值-3"><a href="#返回值-3" class="headerlink" title="返回值"></a>返回值</h5><ul><li><code>无返回值</code> , 直接作用于<strong>原集合</strong></li></ul><hr><h4 id="用del删除集合"><a href="#用del删除集合" class="headerlink" title="用del删除集合"></a>用del删除集合</h4><ul><li>只能直接删除集合对象自身</li></ul><hr><h4 id="重要说明"><a href="#重要说明" class="headerlink" title="重要说明"></a>重要说明</h4><ul><li>集合无法通过索引获取元素</li><li>集合无获取元素的任何方法</li><li>集合只是用来处理列表或元组的一种临时类型 , 它不适合存储于运输</li></ul><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">a_list = [<span class="string">&#x27;python&#x27;</span>, <span class="string">&#x27;django&#x27;</span>, <span class="string">&#x27;django&#x27;</span>, <span class="string">&#x27;flask&#x27;</span>]</span><br><span class="line"></span><br><span class="line">a_set = <span class="built_in">set</span>()</span><br><span class="line"></span><br><span class="line">a_set.add(a_list[<span class="number">0</span>])</span><br><span class="line">a_set.add(a_list[<span class="number">1</span>])</span><br><span class="line">a_set.add(a_list[<span class="number">2</span>])</span><br><span class="line">a_set.add(a_list[-<span class="number">1</span>])</span><br><span class="line"><span class="built_in">print</span>(a_set)</span><br><span class="line"></span><br><span class="line">a_set.add(<span class="literal">True</span>)</span><br><span class="line">a_set.add(<span class="literal">None</span>)</span><br><span class="line"><span class="built_in">print</span>(a_set)</span><br><span class="line"></span><br><span class="line">a_tuple = (<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>)</span><br><span class="line">a_set.update(a_tuple)</span><br><span class="line"><span class="built_in">print</span>(a_set)</span><br><span class="line">a_set.update(<span class="string">&#x27;python&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(a_set)</span><br><span class="line"></span><br><span class="line">a_set.remove(<span class="string">&#x27;python&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(a_set)</span><br><span class="line"></span><br><span class="line">a_set.clear()</span><br><span class="line"><span class="built_in">print</span>(a_set)</span><br><span class="line"><span class="keyword">del</span> a_set</span><br><span class="line"></span><br><span class="line"><span class="comment"># a_set.remove(&#x27;flask&#x27;)</span></span><br><span class="line"><span class="comment"># print(a_set)</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本节课主要学习了:&lt;br&gt;集合的add,update,remove,clear函数&lt;br&gt;和del的注意事项</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="集合" scheme="https://code.maylove.pub/tags/%E9%9B%86%E5%90%88/"/>
    
  </entry>
  
  <entry>
    <title>Python 初识集合</title>
    <link href="https://code.maylove.pub/65bbd4967d97/"/>
    <id>https://code.maylove.pub/65bbd4967d97/</id>
    <published>2021-10-04T12:46:30.000Z</published>
    <updated>2021-10-04T12:50:32.693Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="初识集合"><a href="#初识集合" class="headerlink" title="初识集合"></a>初识集合</h3><h4 id="什么是集合"><a href="#什么是集合" class="headerlink" title="什么是集合"></a>什么是集合</h4><ul><li><code>集合(set)</code>是一个无序的不重复元素序列</li><li>常用来对两个列表进行交并差的处理</li><li>集合与列表一样, 支持所有的数据类型(<strong>所有不可变的数据类型</strong>)</li></ul><h4 id="集合与列表的区别"><a href="#集合与列表的区别" class="headerlink" title="集合与列表的区别"></a>集合与列表的区别</h4><table><thead><tr><th align="center">功能</th><th align="center">列表</th><th align="center">集合</th></tr></thead><tbody><tr><td align="center">顺序</td><td align="center">有序</td><td align="center">无序</td></tr><tr><td align="center">内容</td><td align="center">可重复</td><td align="center">不可重复</td></tr><tr><td align="center">功能</td><td align="center">用于数据的使用</td><td align="center">用于数据的交集并集差集的获取</td></tr><tr><td align="center">索引</td><td align="center">有索引</td><td align="center">无索引</td></tr><tr><td align="center">符号</td><td align="center">[] [1,2,3]</td><td align="center">{} {1,2,3}</td></tr></tbody></table><h4 id="集合的创建方法"><a href="#集合的创建方法" class="headerlink" title="集合的创建方法"></a>集合的创建方法</h4><ul><li>通过<code>set函数</code>来创建集合,<code>不能使用&#123;&#125;</code> 来创建<strong>空集合</strong></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">a = <span class="built_in">set</span>()</span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(a))</span><br><span class="line"></span><br><span class="line">b = <span class="built_in">set</span>([<span class="string">&#x27;python&#x27;</span>, <span class="string">&#x27;django&#x27;</span>, <span class="string">&#x27;flask&#x27;</span>])</span><br><span class="line"><span class="built_in">print</span>(b)</span><br><span class="line"></span><br><span class="line">c = &#123;(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>), <span class="string">&#x27;123&#x27;</span>, <span class="number">1</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(c)</span><br><span class="line"></span><br><span class="line">d = &#123;&#125;</span><br><span class="line"><span class="built_in">print</span>(d, <span class="built_in">type</span>(d))</span><br><span class="line"></span><br><span class="line">a_list = [<span class="string">&#x27;python&#x27;</span>, <span class="string">&#x27;django&#x27;</span>, <span class="string">&#x27;python&#x27;</span>, <span class="string">&#x27;flask&#x27;</span>]</span><br><span class="line">b_set = <span class="built_in">set</span>(a_list)</span><br><span class="line"><span class="built_in">print</span>(b_set)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本节课主要学习了:&lt;br&gt;集合的定义以及与列表的区别&lt;br&gt;和创建方法的注意事项</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="集合" scheme="https://code.maylove.pub/tags/%E9%9B%86%E5%90%88/"/>
    
  </entry>
  
  <entry>
    <title>Python 所有数据类型与布尔值的关系</title>
    <link href="https://code.maylove.pub/e614b7c29c00/"/>
    <id>https://code.maylove.pub/e614b7c29c00/</id>
    <published>2021-10-04T00:46:07.000Z</published>
    <updated>2021-10-04T01:06:00.199Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="所有数据类型与布尔值的关系"><a href="#所有数据类型与布尔值的关系" class="headerlink" title="所有数据类型与布尔值的关系"></a>所有数据类型与布尔值的关系</h3><ul><li>字符串, 数字, 列表, 元组, 字典, 空类型 与 布尔值 的关系总结</li></ul><h4 id="明确两点"><a href="#明确两点" class="headerlink" title="明确两点"></a>明确两点</h4><ol><li>每一种数据类型,自身的值都有表示True与False</li><li>not对于一切结果取反</li><li>非0 非空都为True 其他都为False</li></ol><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-10-3/4.jpg" alt="4"></p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">a_1 = <span class="number">1</span></span><br><span class="line">a_2 = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bool</span>(a_1))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bool</span>(a_2))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bool</span>(<span class="keyword">not</span> a_1))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bool</span>(<span class="keyword">not</span> a_2))</span><br><span class="line"></span><br><span class="line">b_1 = <span class="string">&#x27;1&#x27;</span></span><br><span class="line">b_2 = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;----------&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bool</span>(b_1))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bool</span>(b_2))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bool</span>(<span class="keyword">not</span> b_1))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bool</span>(<span class="keyword">not</span> b_2))</span><br><span class="line"></span><br><span class="line">c_1 = <span class="literal">True</span></span><br><span class="line">c_2 = <span class="literal">False</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;-----------&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(c_1)</span><br><span class="line"><span class="built_in">print</span>(c_2)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="keyword">not</span> c_1)</span><br><span class="line"><span class="built_in">print</span>(<span class="keyword">not</span> c_2)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本节课主要学习了:&lt;br&gt;所有数据类型与布尔值的关系</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="字典" scheme="https://code.maylove.pub/tags/%E5%AD%97%E5%85%B8/"/>
    
  </entry>
  
  <entry>
    <title>Python 字典中的末尾删除函数--popitem</title>
    <link href="https://code.maylove.pub/ee4436b63343/"/>
    <id>https://code.maylove.pub/ee4436b63343/</id>
    <published>2021-10-04T00:45:46.000Z</published>
    <updated>2021-10-04T01:05:37.568Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="字典中的末尾删除函数–popitem"><a href="#字典中的末尾删除函数–popitem" class="headerlink" title="字典中的末尾删除函数–popitem"></a>字典中的末尾删除函数–<code>popitem</code></h3><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li>删除当前字典<code>末尾一组键值对</code>并将其返回</li></ul><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><ul><li><code>dict.popitem()</code>  –  无需传参</li><li><code>&gt;&gt; 返回被删除的键值对,用元组包裹 0索引是key, 1索引是value</code></li></ul><h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><ul><li>如字典为空,则直接报错</li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">students = &#123;<span class="string">&#x27;dewei&#x27;</span>: <span class="string">&#x27;到&#x27;</span>, <span class="string">&#x27;xiaomu&#x27;</span>: <span class="string">&#x27;在&#x27;</span>, <span class="string">&#x27;xiaoyun&#x27;</span>: <span class="string">&#x27;在呢&#x27;</span>, <span class="string">&#x27;xiaogao&#x27;</span>: <span class="string">&#x27;在&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;xiaogao 在吗&#x27;</span>)</span><br><span class="line">xiaogao = students.popitem()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125;喊&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(xiaogao[<span class="number">0</span>], xiaogao[<span class="number">1</span>]))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;xiaoyun 在吗&#x27;</span>)</span><br><span class="line">xiaoyun = students.popitem()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125;喊&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(xiaoyun[<span class="number">0</span>], xiaoyun[<span class="number">1</span>]))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;xiaomu 在吗&#x27;</span>)</span><br><span class="line">xiaomu = students.popitem()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125;喊&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(xiaomu[<span class="number">0</span>], xiaomu[<span class="number">1</span>]))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;dewei在吗&#x27;</span>)</span><br><span class="line">dewei = students.popitem()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125;喊&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(dewei[<span class="number">0</span>], dewei[<span class="number">1</span>]))</span><br><span class="line"><span class="built_in">print</span>(students)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本节课主要学习了:&lt;br&gt;popitem的用法和注意事项</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="字典" scheme="https://code.maylove.pub/tags/%E5%AD%97%E5%85%B8/"/>
    
  </entry>
  
  <entry>
    <title>Python 字典中的成员判断</title>
    <link href="https://code.maylove.pub/69524697f433/"/>
    <id>https://code.maylove.pub/69524697f433/</id>
    <published>2021-10-04T00:45:25.000Z</published>
    <updated>2021-10-04T01:05:02.585Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="字典中的成员判断"><a href="#字典中的成员判断" class="headerlink" title="字典中的成员判断"></a>字典中的成员判断</h3><h4 id="in-与-not-in在字典中的用法"><a href="#in-与-not-in在字典中的用法" class="headerlink" title="in 与 not in在字典中的用法"></a><code>in</code> 与 <code>not in</code>在字典中的用法</h4><ul><li>只能判断<code>key</code>是否存在</li></ul><h4 id="get用于判断成员存在"><a href="#get用于判断成员存在" class="headerlink" title="get用于判断成员存在"></a><code>get</code>用于判断成员存在</h4><ul><li><code>bool(test_dict.get(&#39;name&#39;))</code></li><li>字典中的类型可能为<code>False类型</code>…<strong>有待商榷</strong></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">default_dict = &#123;<span class="string">&#x27;a&#x27;</span>: <span class="literal">None</span>, <span class="string">&#x27;b&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;c&#x27;</span>: <span class="number">0</span>, <span class="string">&#x27;d&#x27;</span>: <span class="string">&#x27;&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;a&#x27;</span> <span class="keyword">in</span> default_dict)</span><br><span class="line"><span class="built_in">print</span>(default_dict[<span class="string">&#x27;a&#x27;</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bool</span>(default_dict.get(<span class="string">&#x27;a&#x27;</span>)))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bool</span>(default_dict.get(<span class="string">&#x27;b&#x27;</span>)))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;f&#x27;</span> <span class="keyword">in</span> default_dict)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;f&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> default_dict)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本节课主要学习了:&lt;br&gt;in 与 not in&lt;br&gt;[]以及get的用法</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="字典" scheme="https://code.maylove.pub/tags/%E5%AD%97%E5%85%B8/"/>
    
  </entry>
  
  <entry>
    <title>Python 字典的复制--copy函数</title>
    <link href="https://code.maylove.pub/87bad7ab2468/"/>
    <id>https://code.maylove.pub/87bad7ab2468/</id>
    <published>2021-10-04T00:45:10.000Z</published>
    <updated>2021-10-04T01:16:19.031Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="字典的复制–copy函数"><a href="#字典的复制–copy函数" class="headerlink" title="字典的复制–copy函数"></a>字典的复制–copy函数</h3><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li>将当前字典复制一个新的字典</li></ul><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><ul><li><code>dict.copy()</code>  -&gt; 该函数<strong>无参数</strong>, 返回一个一模一样的<code>内存地址不同的字典</code><ul><li>!= 可以判断两个成员是否相同</li></ul></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">fruits = &#123;</span><br><span class="line">    <span class="string">&#x27;apple&#x27;</span>: <span class="number">30</span>,</span><br><span class="line">    <span class="string">&#x27;banana&#x27;</span>: <span class="number">50</span>,</span><br><span class="line">    <span class="string">&#x27;pear&#x27;</span>: <span class="number">100</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">real_fruits = fruits.copy()</span><br><span class="line">fruits[<span class="string">&#x27;apple&#x27;</span>] = <span class="number">60</span></span><br><span class="line"><span class="built_in">print</span>(real_fruits)</span><br><span class="line"></span><br><span class="line">real_fruits[<span class="string">&#x27;orange&#x27;</span>] = <span class="number">50</span></span><br><span class="line">real_fruits.update(&#123;<span class="string">&#x27;cherry&#x27;</span>: <span class="number">100</span>&#125;)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(real_fruits)</span><br><span class="line"><span class="comment"># print(fruits)</span></span><br><span class="line">real_fruits[<span class="string">&#x27;apple&#x27;</span>] = real_fruits[<span class="string">&#x27;apple&#x27;</span>] - <span class="number">5</span></span><br><span class="line"><span class="built_in">print</span>(real_fruits)</span><br><span class="line">real_fruits[<span class="string">&#x27;pear&#x27;</span>] -= <span class="number">3</span></span><br><span class="line"><span class="built_in">print</span>(real_fruits)</span><br><span class="line"></span><br><span class="line">real_fruits.clear()</span><br><span class="line"><span class="built_in">print</span>(real_fruits)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;第二天......&#x27;</span>)</span><br><span class="line">real_fruits = fruits.copy()</span><br><span class="line"><span class="built_in">print</span>(real_fruits)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本节课主要学习了:&lt;br&gt;copy函数的功能和用法</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="字典" scheme="https://code.maylove.pub/tags/%E5%AD%97%E5%85%B8/"/>
    
  </entry>
  
  <entry>
    <title>Python 字典的删除</title>
    <link href="https://code.maylove.pub/ea97ba53d454/"/>
    <id>https://code.maylove.pub/ea97ba53d454/</id>
    <published>2021-10-04T00:44:49.000Z</published>
    <updated>2021-10-04T01:03:48.447Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="字典的删除"><a href="#字典的删除" class="headerlink" title="字典的删除"></a>字典的删除</h3><h4 id="clear函数"><a href="#clear函数" class="headerlink" title="clear函数"></a>clear函数</h4><h5 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h5><ul><li>清空当前字典中所有数据</li></ul><h5 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h5><ul><li><code>dict.clear()</code>  -&gt; <strong>无参数</strong>,<strong>无返回值</strong></li></ul><h4 id="pop函数的功能与用法"><a href="#pop函数的功能与用法" class="headerlink" title="pop函数的功能与用法"></a>pop函数的功能与用法</h4><h5 id="功能-1"><a href="#功能-1" class="headerlink" title="功能"></a>功能</h5><ul><li><strong>删除</strong>字典中<code>指定的key</code>,并<strong>将其结果返回</strong>,如果<strong>key不存在则报错</strong></li></ul><h5 id="用法-1"><a href="#用法-1" class="headerlink" title="用法"></a>用法</h5><ul><li>dict.pop(key)  –  key 希望被删掉的键</li><li><code>&gt;&gt;返回这个key对应的值(value)</code></li></ul><h4 id="del-在字典中的用法"><a href="#del-在字典中的用法" class="headerlink" title="del 在字典中的用法"></a>del 在字典中的用法</h4><ul><li>```python<br>my_dict = {‘name’: ‘dewei’, ‘age’: 33}del my_dict[‘name’]<br>print(my_dict)<blockquote><blockquote><p>{‘age’: 33}</p></blockquote></blockquote>del my_dict<br>print(my_dict) -&gt; 报错 , 整个字典对象已被删除<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#### 代码</span><br><span class="line"></span><br><span class="line">```python</span><br><span class="line"># coding:utf-8</span><br><span class="line"></span><br><span class="line">projects = &#123;</span><br><span class="line">    &#x27;ipad&#x27;: &#123;&#x27;name&#x27;: &#x27;ipad&#x27;, &#x27;price&#x27;: 2200, &#x27;decs&#x27;: &#x27;平板电脑&#x27;&#125;,</span><br><span class="line">    &#x27;iphone&#x27;: &#123;&#x27;name&#x27;: &#x27;iphone&#x27;, &#x27;price&#x27;: 3000, &#x27;desc&#x27;: &#x27;智能手机&#x27;&#125;,</span><br><span class="line">    &#x27;pc&#x27;: &#123;&#x27;name&#x27;: &#x27;pc&#x27;, &#x27;price&#x27;: 5000, &#x27;desc&#x27;: &#x27;台式电脑&#x27;&#125;,</span><br><span class="line">    &#x27;mac&#x27;: &#123;&#x27;name&#x27;: &#x27;mac&#x27;, &#x27;price&#x27;: 8000, &#x27;desc&#x27;: &#x27;平板电脑&#x27;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">print(projects.keys())</span><br><span class="line"></span><br><span class="line">print(&#x27;一个中学生购买了&#123;&#125;,价格是&#123;&#125;&#x27;.format(projects[&#x27;pc&#x27;][&#x27;name&#x27;], projects[&#x27;pc&#x27;][&#x27;price&#x27;]))</span><br><span class="line">projects.pop(&#x27;pc&#x27;)</span><br><span class="line">print(projects.keys())</span><br><span class="line"></span><br><span class="line">result = projects.pop(&#x27;mac&#x27;)</span><br><span class="line">print(&#x27;一个程序员购买了&#123;&#125;,它的价格是&#123;&#125;&#x27;.format(result[&#x27;name&#x27;], result[&#x27;price&#x27;]))</span><br><span class="line">print(projects.keys())</span><br><span class="line"></span><br><span class="line">print(&#x27;&#123;&#125; 和 &#123;&#125; 都被卖出了, 他们一共花费了&#123;&#125;元&#x27;.format(</span><br><span class="line">    projects[&#x27;ipad&#x27;][&#x27;name&#x27;], projects[&#x27;iphone&#x27;][&#x27;name&#x27;],</span><br><span class="line">    projects[&#x27;ipad&#x27;][&#x27;price&#x27;] + projects[&#x27;iphone&#x27;][&#x27;price&#x27;]</span><br><span class="line">))</span><br><span class="line">projects.clear()</span><br><span class="line">print(projects.keys())</span><br><span class="line"></span><br><span class="line">del  projects</span><br><span class="line"># print(projects)</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <summary type="html">本节课主要学习了:&lt;br&gt;clear函数和pop函数&lt;br&gt;[]以及del在字典中的用法</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="字典" scheme="https://code.maylove.pub/tags/%E5%AD%97%E5%85%B8/"/>
    
  </entry>
  
  <entry>
    <title>Python 字典key的获取</title>
    <link href="https://code.maylove.pub/a44f8b1037ba/"/>
    <id>https://code.maylove.pub/a44f8b1037ba/</id>
    <published>2021-10-04T00:44:34.000Z</published>
    <updated>2021-10-04T01:02:46.308Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="字典key的获取"><a href="#字典key的获取" class="headerlink" title="字典key的获取"></a>字典key的获取</h3><h4 id="的获取方法"><a href="#的获取方法" class="headerlink" title="[]的获取方法"></a>[]的获取方法</h4><ul><li>字典+中括号内传key , 不进行赋值操作` 即为获取</li><li>返回key对应的value值</li></ul><h4 id="内置函数get获取方法"><a href="#内置函数get获取方法" class="headerlink" title="内置函数get获取方法"></a>内置函数get获取方法</h4><h5 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h5><ul><li>获取当前字典中指定key对应的value</li></ul><h5 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h5><ul><li><code>dict.get(key, default=None)</code></li></ul><h5 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h5><ul><li><code>key</code> : 需要获取<strong>value</strong>的<strong>key</strong></li><li><code>default</code> : key<strong>不存在</strong>则返回此默认值 ,  默认是<code>None</code> , 我们也可以自定义(可以是任意类型)</li></ul><h4 id="与get的区别"><a href="#与get的区别" class="headerlink" title="[]与get的区别"></a>[]与get的区别</h4><ul><li><code>[]</code>如果获取的<strong>key不存在</strong>, 则**<code>直接报错</code>**</li><li><code>get</code>如果获取的<strong>key不存在</strong> ,  则<strong>返回默认值</strong></li><li>所以<strong>开发中</strong> , <strong>优先使用</strong><code>get函数</code></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">user_info = &#123;</span><br><span class="line">    <span class="string">&#x27;id&#x27;</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="string">&#x27;username&#x27;</span>: <span class="string">&#x27;dewei&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;password&#x27;</span>: <span class="string">&#x27;abcdefg&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;created_time&#x27;</span>: <span class="string">&#x27;2020-01-01 11:11:11&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;birthday&#x27;</span>: <span class="literal">None</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">values = []</span><br><span class="line">values.append(user_info[<span class="string">&#x27;id&#x27;</span>])</span><br><span class="line">values.append(user_info[<span class="string">&#x27;username&#x27;</span>])</span><br><span class="line">values.append(user_info[<span class="string">&#x27;password&#x27;</span>])</span><br><span class="line"><span class="comment"># values.append(user_info[&#x27;created_time&#x27;])</span></span><br><span class="line">values.append(user_info.get(<span class="string">&#x27;created_time&#x27;</span>, <span class="string">&#x27;2020-02-02&#x27;</span>))</span><br><span class="line"><span class="comment"># values.append(user_info[&#x27;birthday&#x27;])</span></span><br><span class="line">values.append(user_info.get(<span class="string">&#x27;birthday&#x27;</span>, <span class="string">&#x27;2020-03-03&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(values)</span><br><span class="line"><span class="comment"># values.append(user_info[&#x27;birthday&#x27;])</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># values.append(user_info.get(&#x27;birthday&#x27;, &#x27;1986-01-01&#x27;))</span></span><br><span class="line"><span class="comment"># print(values)</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本节课主要学习了:&lt;br&gt;内置函数get获取方法&lt;br&gt;[]的获取方法以及他们的区别</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="字典" scheme="https://code.maylove.pub/tags/%E5%AD%97%E5%85%B8/"/>
    
  </entry>
  
  <entry>
    <title>Python 字典的values函数</title>
    <link href="https://code.maylove.pub/c4a2fc9c82dd/"/>
    <id>https://code.maylove.pub/c4a2fc9c82dd/</id>
    <published>2021-10-04T00:44:17.000Z</published>
    <updated>2021-10-04T01:01:17.253Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="字典的values函数"><a href="#字典的values函数" class="headerlink" title="字典的values函数"></a>字典的values函数</h3><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li>获取<strong>当前字典</strong>中所有<code>键值对</code>中的<code>值(value)</code></li></ul><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><ul><li><code>dict.values()</code>  -&gt; <strong>无需传参</strong>, 返回一个<code>value集合</code>的<code>伪列表</code><ul><li>依旧是伪列表,不具有列表的所有功能</li></ul></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">project = &#123;<span class="string">&#x27;id&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;ipad&#x27;</span>, <span class="string">&#x27;price&#x27;</span>: <span class="number">2200</span>, <span class="string">&#x27;count&#x27;</span>: <span class="number">50</span>&#125;</span><br><span class="line"></span><br><span class="line">keys = <span class="built_in">list</span>(project.keys())</span><br><span class="line">values = <span class="built_in">list</span>(project.values())</span><br><span class="line"><span class="built_in">print</span>(keys)</span><br><span class="line"><span class="built_in">print</span>(values)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; | &#123;&#125;  | &#123;&#125; | &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(keys[<span class="number">0</span>], keys[<span class="number">1</span>], keys[<span class="number">2</span>], keys[<span class="number">3</span>]))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125;  | &#123;&#125;  | &#123;&#125;  | &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(values[<span class="number">0</span>], values[<span class="number">1</span>], values[<span class="number">2</span>], values[<span class="number">3</span>]))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;2  | iphone | 3000 | 50&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本节课主要学习了:&lt;br&gt;字典的values函数的功能和用法</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="字典" scheme="https://code.maylove.pub/tags/%E5%AD%97%E5%85%B8/"/>
    
  </entry>
  
  <entry>
    <title>Python 字典的keys函数</title>
    <link href="https://code.maylove.pub/3ae120011f42/"/>
    <id>https://code.maylove.pub/3ae120011f42/</id>
    <published>2021-10-04T00:43:53.000Z</published>
    <updated>2021-10-04T01:00:37.550Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="字典的keys函数"><a href="#字典的keys函数" class="headerlink" title="字典的keys函数"></a>字典的keys函数</h3><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li>获取当前字典中所有的<code>键(key)</code></li></ul><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><ul><li><code>dict.keys()</code>  -&gt; <strong>无需传参</strong>,返回一个<strong>key</strong>集合的<code>伪列表</code><ul><li><code>伪列表</code>不具备列表的所有功能</li></ul></li></ul><h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><ul><li>使用<code>list()函数</code>可以将<code>伪列表</code>转换为<code>列表</code></li><li>转换之后的列表具有<code>无重复成员</code>的特点</li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">project = &#123;<span class="string">&#x27;id&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;project_name&#x27;</span>: <span class="string">&#x27;ipad&#x27;</span>, <span class="string">&#x27;price&#x27;</span>: <span class="number">2200</span>, <span class="string">&#x27;count&#x27;</span>: <span class="number">30</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># project_title = project.keys()</span></span><br><span class="line">project_title = <span class="built_in">list</span>(project.keys())</span><br><span class="line"><span class="built_in">print</span>(project_title)</span><br><span class="line"><span class="comment"># print(project_title[0])</span></span><br><span class="line"><span class="comment"># project_title.append(&#x27;user&#x27;)</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(project_title))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(project_title[<span class="number">0</span>])</span><br><span class="line"><span class="built_in">print</span>(project_title[<span class="number">3</span>])</span><br><span class="line"><span class="built_in">print</span>(project_title[<span class="number">2</span>: <span class="number">6</span>])</span><br><span class="line">project_title.append(<span class="string">&#x27;user&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(project_title)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">本节课主要学习了:&lt;br&gt;字典的keys函数&lt;br&gt;以及相关的注意事项</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="字典" scheme="https://code.maylove.pub/tags/%E5%AD%97%E5%85%B8/"/>
    
  </entry>
  
  <entry>
    <title>Python 总结 : 字典中添加数据的方法</title>
    <link href="https://code.maylove.pub/4e361d34199b/"/>
    <id>https://code.maylove.pub/4e361d34199b/</id>
    <published>2021-10-04T00:43:34.000Z</published>
    <updated>2021-10-04T01:00:03.051Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="总结-字典中添加数据的方法"><a href="#总结-字典中添加数据的方法" class="headerlink" title="总结 : 字典中添加数据的方法"></a>总结 : 字典中添加数据的方法</h3><blockquote><p>在字典中添加数据的方法有很多种，总结为以下几种</p></blockquote><h4 id="第一种：通过中括号的形式添加"><a href="#第一种：通过中括号的形式添加" class="headerlink" title="第一种：通过中括号的形式添加"></a>第一种：通过中括号的形式添加</h4><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-10-3/1.jpg" alt="1"></p><h4 id="第二种：字典的内置函数update"><a href="#第二种：字典的内置函数update" class="headerlink" title="第二种：字典的内置函数update"></a>第二种：字典的内置函数update</h4><ul><li><p>无论是添加还是修改都属于<code>更新字典</code></p></li><li><p>在<code>update括号</code>中传入一个新的字典<code>key</code>和<code>value</code>就可以了。字典会自己去检测<code>key</code>是否存在，存在就会覆盖。</p></li></ul><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-10-3/2.jpg" alt="2"></p><h4 id="第三种：字典的setdefault-函数"><a href="#第三种：字典的setdefault-函数" class="headerlink" title="第三种：字典的setdefault()函数"></a>第三种：字典的setdefault()函数</h4><ul><li>Python 字典 <code>setdefault() 函数</code>和 <code>get()方法</code> 类似, 如果键不存在于字典中，将会添加键并将值设为默认值，如果字典中包含有给定键，则返回该键对应的值，否则返回为该键设置的值。</li></ul><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-10-3/3.jpg" alt="3"></p>]]></content>
    
    
    <summary type="html">本节课主要总结了:&lt;br&gt;字典中添加数据的方法&lt;br&gt;是上节课的总结记录......</summary>
    
    
    
    <category term="Python" scheme="https://code.maylove.pub/categories/Python/"/>
    
    
    <category term="字典" scheme="https://code.maylove.pub/tags/%E5%AD%97%E5%85%B8/"/>
    
  </entry>
  
</feed>
