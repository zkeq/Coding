<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Vue 初体验</title>
      <link href="/2022/93d6f53e3a9e/"/>
      <url>/2022/93d6f53e3a9e/</url>
      
        <content type="html"><![CDATA[<blockquote><p>点击标题超链接可跳转到对应的html界面</p></blockquote><h2 id="01-Vue3的引入-CDN"><a href="#01-Vue3的引入-CDN" class="headerlink" title="01_Vue3的引入-CDN"></a><a href="https://icodeq.com/html/Vue/01_Vue3%E5%88%9D%E4%BD%93%E9%AA%8C/01_Vue3%E7%9A%84%E5%BC%95%E5%85%A5-CDN.html">01_Vue3的引入-CDN</a></h2><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2022-02-04/1.png" alt="1"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>world<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.zhimg.com/vue@3.0.11/dist/vue.global.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> why = &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">template</span>: <span class="string">&#x27;&lt;h2&gt;hello&lt;/h2&gt;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">        </span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> app = Vue.createApp(why)</span></span><br><span class="line"><span class="javascript">        app.mount(<span class="string">&quot;#app&quot;</span>)</span></span><br><span class="line"><span class="javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="02-Vue3的引入-local"><a href="#02-Vue3的引入-local" class="headerlink" title="02_Vue3的引入-local"></a><a href="https://icodeq.com/html/Vue/01_Vue3%E5%88%9D%E4%BD%93%E9%AA%8C/02_Vue3%E7%9A%84%E5%BC%95%E5%85%A5-local.html">02_Vue3的引入-local</a></h2><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2022-02-04/2.png" alt="2"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">        Vue.createApp(&#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">template</span>: <span class="string">&#x27;&lt;h2&gt;hello Vue.js! 你好&lt;/h2&gt;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        &#125;).mount(<span class="string">&quot;#app&quot;</span>)</span></span><br><span class="line"><span class="javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="03-计数器案例-原生"><a href="#03-计数器案例-原生" class="headerlink" title="03_计数器案例-原生"></a><a href="https://icodeq.com/html/Vue/01_Vue3%E5%88%9D%E4%BD%93%E9%AA%8C/03_%E8%AE%A1%E6%95%B0%E5%99%A8%E6%A1%88%E4%BE%8B-%E5%8E%9F%E7%94%9F.html">03_计数器案例-原生</a></h2><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2022-02-04/3.png" alt="3"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">&quot;counter&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;increment&quot;</span>&gt;</span>+1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;decrement&quot;</span>&gt;</span>-1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">// 1.获取所有的元素</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> counterEl = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.counter&#x27;</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> incrementEl = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.increment&#x27;</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> decrementEl = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.decrement&#x27;</span>);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">// 2.定义变量</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> counter = <span class="number">100</span>;</span></span><br><span class="line"><span class="javascript">    counterEl.innerText = counter;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">// 3.监听按钮的点击</span></span></span><br><span class="line"><span class="javascript">    incrementEl.addEventListener(<span class="string">&#x27;click&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">        counter++;</span></span><br><span class="line"><span class="javascript">        counterEl.innerText = counter;</span></span><br><span class="line"><span class="javascript">    &#125;);</span></span><br><span class="line"><span class="javascript">    decrementEl.addEventListener(<span class="string">&#x27;click&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">        counter--;</span></span><br><span class="line"><span class="javascript">        counterEl.innerText = counter;</span></span><br><span class="line"><span class="javascript">    &#125;);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="04-计数器案例-Vue"><a href="#04-计数器案例-Vue" class="headerlink" title="04_计数器案例-Vue"></a><a href="https://icodeq.com/html/Vue/01_Vue3%E5%88%9D%E4%BD%93%E9%AA%8C/04_%E8%AE%A1%E6%95%B0%E5%99%A8%E6%A1%88%E4%BE%8B-Vue.html">04_计数器案例-Vue</a></h2><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2022-02-04/4.png" alt="4"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">        Vue.createApp(&#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">template</span>: <span class="string">`</span></span></span><br><span class="line"><span class="string"><span class="javascript">            &lt;div&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">                &lt;h2&gt;&#123;&#123;message&#125;&#125;&lt;/h2&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">                &lt;h2&gt;&#123;&#123;counter&#125;&#125;&lt;/h2&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">                &lt;button @click=&#x27;increment&#x27;&gt;+1&lt;/button&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">                &lt;button @click=&#x27;decrement&#x27;&gt;-1&lt;/button&gt;   </span></span></span><br><span class="line"><span class="string"><span class="javascript">            &lt;/div&gt;</span></span></span><br><span class="line"><span class="string"><span class="javascript">            `</span>,                         </span></span><br><span class="line"><span class="javascript">            <span class="attr">data</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="attr">counter</span>: <span class="number">10</span> ,</span></span><br><span class="line"><span class="javascript">                    <span class="attr">message</span>: <span class="string">&quot;hello Vue.js!&quot;</span></span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">            &#125;,</span></span><br><span class="line"><span class="javascript">            <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">                <span class="function"><span class="title">increment</span>(<span class="params"></span>)</span> &#123; <span class="comment">//语法糖 写法</span></span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.counter++;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="string">&quot;increment&quot;</span>)</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="built_in">this</span>.counter)</span></span><br><span class="line"><span class="javascript">                &#125;,</span></span><br><span class="line"><span class="javascript">                <span class="attr">decrement</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="comment">//ES5 写法</span></span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.counter--;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="string">&quot;decrement&quot;</span>)</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="built_in">this</span>.counter)</span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;).mount(<span class="string">&quot;#app&quot;</span>)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="05-template写法一"><a href="#05-template写法一" class="headerlink" title="05_template写法一"></a><a href="https://icodeq.com/html/Vue/01_Vue3%E5%88%9D%E4%BD%93%E9%AA%8C/05_template%E5%86%99%E6%B3%95%E4%B8%80.html">05_template写法一</a></h2><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2022-02-04/5.png" alt="5"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;x-template&quot;</span> <span class="attr">id</span>=<span class="string">&quot;code&quot;</span>&gt;</span><span class="handlebars"><span class="xml"></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            <span class="tag">&lt;<span class="name">h2</span>&gt;</span></span><span class="template-variable">&#123;&#123;<span class="name">message</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            <span class="tag">&lt;<span class="name">h2</span>&gt;</span></span><span class="template-variable">&#123;&#123;<span class="name">counter</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&#x27;increment&#x27;</span>&gt;</span>+1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">            <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&#x27;decrement&#x27;</span>&gt;</span>-1<span class="tag">&lt;/<span class="name">button</span>&gt;</span>   </span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    </span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">        Vue.createApp(&#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">template</span>: <span class="string">&#x27;#code&#x27;</span>, <span class="comment">// # 号开头的时候, 就是id. 不是class 会执行 querySelector(#why)</span></span></span><br><span class="line"><span class="javascript">            <span class="attr">data</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="attr">counter</span>: <span class="number">100</span> ,</span></span><br><span class="line"><span class="javascript">                    <span class="attr">message</span>: <span class="string">&quot;hello Vue.js!&quot;</span></span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">            &#125;,</span></span><br><span class="line"><span class="javascript">            <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">                <span class="function"><span class="title">increment</span>(<span class="params"></span>)</span> &#123; <span class="comment">//语法糖 写法</span></span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.counter++;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="string">&quot;increment&quot;</span>)</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="built_in">this</span>.counter)</span></span><br><span class="line"><span class="javascript">                &#125;,</span></span><br><span class="line"><span class="javascript">                <span class="attr">decrement</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="comment">//ES5 写法</span></span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.counter--;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="string">&quot;decrement&quot;</span>)</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="built_in">this</span>.counter)</span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;).mount(<span class="string">&quot;#app&quot;</span>)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="06-template写法二"><a href="#06-template写法二" class="headerlink" title="06_template写法二"></a><a href="https://icodeq.com/html/Vue/01_Vue3%E5%88%9D%E4%BD%93%E9%AA%8C/06_template%E5%86%99%E6%B3%95%E4%BA%8C.html">06_template写法二</a></h2><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2022-02-04/6.png" alt="6"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">&quot;code&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123;counter&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&#x27;increment&#x27;</span>&gt;</span>+1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&#x27;decrement&#x27;</span>&gt;</span>-1<span class="tag">&lt;/<span class="name">button</span>&gt;</span>   </span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 可以用div 但是会渲染两边. 原始的数据会被保留 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 也就是 code 里面的内容在解析的时候被显示一次 被 Vue 解析之后, 在 app 中又被渲染一次--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">        Vue.createApp(&#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">template</span>: <span class="string">&#x27;#code&#x27;</span>, <span class="comment">// # 号开头的时候, 就是id. 不是class 会执行 querySelector(#why)</span></span></span><br><span class="line"><span class="javascript">            <span class="attr">data</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="comment">// vue 2 中 也可以传入一个对象(虽然官方推荐是一个函数) [vue3 中不能传入对象, 否则会报错(只能传函数 返回一个对象)]</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> &#123; </span></span><br><span class="line"><span class="javascript">                    <span class="attr">counter</span>: <span class="number">100</span> ,</span></span><br><span class="line"><span class="javascript">                    <span class="attr">message</span>: <span class="string">&quot;hello Vue.js!&quot;</span></span></span><br><span class="line"><span class="javascript">                    <span class="comment">// data 中的数据会被 vue 中劫持</span></span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">            &#125;,</span></span><br><span class="line"><span class="javascript">            <span class="attr">methods</span>: &#123; <span class="comment">// 这里不可用箭头函数, 因为箭头函数中的 this 指向的是父组件, 而不是当前组件</span></span></span><br><span class="line"><span class="javascript">                <span class="function"><span class="title">increment</span>(<span class="params"></span>)</span> &#123; <span class="comment">//语法糖 写法</span></span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.counter++;</span></span><br><span class="line"><span class="javascript">                    <span class="comment">// this 这种就是指向 vue 实例</span></span></span><br><span class="line"><span class="javascript">                    <span class="comment">// 可以修改或者获取 , 可以直接访问</span></span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="string">&quot;increment&quot;</span>)</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="built_in">this</span>.counter)</span></span><br><span class="line"><span class="javascript">                &#125;,</span></span><br><span class="line"><span class="javascript">                <span class="attr">decrement</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="comment">//ES5 写法</span></span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.counter--;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="string">&quot;decrement&quot;</span>)</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="built_in">this</span>.counter)</span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;).mount(<span class="string">&quot;#app&quot;</span>)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础语法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>3号厅备份-我们只配看这种电影吗</title>
      <link href="/2022/3c98bbb10669/"/>
      <url>/2022/3c98bbb10669/</url>
      
        <content type="html"><![CDATA[<h3 id="查看纯享版-3号厅备份-我们只配看这种电影吗"><a href="#查看纯享版-3号厅备份-我们只配看这种电影吗" class="headerlink" title="查看纯享版: 3号厅备份-我们只配看这种电影吗"></a>查看纯享版: <a href="https://coding.maylove.pub/html/3-movie-del/">3号厅备份-我们只配看这种电影吗</a></h3><iframename="web"width="100%" frameborder=0 height="100%" src="\html\3-movie-del\index.html" id="web"onload="this.height=web.document.body.scrollHeight+20"></iframe><scriptlanguage="javascript">if(window.parent.length>0){window.parent.document.all.newtest.style.height=document.body.scrollHeight;}</script>]]></content>
      
      
      <categories>
          
          <category> 其他 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 归档 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>归档 | 使用Javascript获取m3u8</title>
      <link href="/2022/260d8d4daa90/"/>
      <url>/2022/260d8d4daa90/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本页将提供一些JS代码，在您的浏览器运行这些代码有助于更快的获取到m3u8链接用以下载。<br>为了方便使用，最好将下面的JS代码存为书签。</p></blockquote><h3 id="注意："><a href="#注意：" class="headerlink" title="注意："></a><strong>注意</strong>：</h3><ul><li>所有代码仅供学习，请勿用于任何违法途径</li><li>所有代码通过360极速浏览器测试成功</li><li>本页Javascript代码有的已经年久失修，均不保证正常使用</li></ul><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法:"></a>使用方法:</h3><h5 id="Github-N-m3u8DL-CLI"><a href="#Github-N-m3u8DL-CLI" class="headerlink" title="Github: N_m3u8DL-CLI"></a><a href="https://github.com/nilaoda/N_m3u8DL-CLI">Github: N_m3u8DL-CLI</a></h5><ul><li> [.NET] m3u8 downloader 开源的命令行m3u8/HLS/dash下载器，支持普通AES-128-CBC解密，多线程，自定义请求头等. 支持简体中文,繁体中文和英文. ]</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">███╗   ██╗        ███╗   ███╗██████╗ ██╗   ██╗ █████╗ ██████╗ ██╗       ██████╗██╗     ██╗</span><br><span class="line">████╗  ██║        ████╗ ████║╚════██╗██║   ██║██╔══██╗██╔══██╗██║      ██╔════╝██║     ██║</span><br><span class="line">██╔██╗ ██║        ██╔████╔██║ █████╔╝██║   ██║╚█████╔╝██║  ██║██║█████╗██║     ██║     ██║</span><br><span class="line">██║╚██╗██║        ██║╚██╔╝██║ ╚═══██╗██║   ██║██╔══██╗██║  ██║██║╚════╝██║     ██║     ██║</span><br><span class="line">██║ ╚████║███████╗██║ ╚═╝ ██║██████╔╝╚██████╔╝╚█████╔╝██████╔╝███████╗ ╚██████╗███████╗██║</span><br><span class="line">╚═╝  ╚═══╝╚══════╝╚═╝     ╚═╝╚═════╝  ╚═════╝  ╚════╝ ╚═════╝ ╚══════╝  ╚═════╝╚══════╝╚═╝</span><br><span class="line">                                                                                          </span><br></pre></td></tr></table></figure><h4 id="下载使用"><a href="#下载使用" class="headerlink" title="下载使用"></a>下载使用</h4><ul><li>发行版: <a href="https://github.com/nilaoda/N_m3u8DL-CLI/releases">https://github.com/nilaoda/N_m3u8DL-CLI/releases</a></li><li>自动构建版<code>(供测试)</code>: <a href="https://github.com/nilaoda/N_m3u8DL-CLI/actions">https://github.com/nilaoda/N_m3u8DL-CLI/actions</a></li></ul><h4 id="关于开源"><a href="#关于开源" class="headerlink" title="关于开源"></a>关于开源</h4><p>本项目已于2019年10月9日开源，采用MIT许可证，各取所需。</p><h5 id="N-m3u8DL-CLI"><a href="#N-m3u8DL-CLI" class="headerlink" title="N_m3u8DL-CLI"></a>N_m3u8DL-CLI</h5><p>一个<strong>简单易用的</strong>m3u8下载器</p><p>支持下载m3u8链接或文件为<code>mp4</code>或<code>ts</code>格式，并提供丰富的命令行选项。</p><ul><li><strong>不支持</strong>优酷视频解密</li><li><strong>不支持</strong>气球云视频解密</li><li>支持<code>AES-128-CBC</code>加密自动解密</li><li>支持多线程下载</li><li>支持下载限速</li><li>支持断点续传</li><li>支持<code>Master List</code></li><li>支持直播流录制(<code>BETA</code>)</li><li>支持自定义<code>HTTP Headers</code></li><li>支持自动合并 (二进制合并或使用ffmpeg合并)</li><li>支持选择下载<code>m3u8</code>中的指定时间段/分片内容</li><li>支持下载路径为网络驱动器的情况</li><li>支持下载外挂字幕轨道、音频轨道</li><li>支持仅合并为音频</li><li>支持设置特定http代理</li><li>支持自动使用系统代理（默认行为, 可禁止）</li><li>提供SimpleG简易的<code>GUI</code>生成常用参数</li></ul><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2022-01-27/1.gif" alt="运行截图">  </p><h2 id="腾讯视频"><a href="#腾讯视频" class="headerlink" title="腾讯视频"></a>腾讯视频</h2><p>可直接将这个超链接拖入你的书签栏：<a href="javascript:var a=prompt(PLAYER._DownloadMonitor.context.dataset.title,PLAYER._DownloadMonitor.context.dataset.ckc?PLAYER._DownloadMonitor.context.dataset.currentVideoUrl:PLAYER._DownloadMonitor.context.dataset.currentVideoUrl.replace(/:.*qq.com/g,&quot;://defaultts.tc.qq.com/defaultts.tc.qq.com&quot;));" target="_blank">腾讯视频</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javascript:<span class="keyword">var</span> a=prompt(PLAYER._DownloadMonitor.context.dataset.title,PLAYER._DownloadMonitor.context.dataset.ckc?PLAYER._DownloadMonitor.context.dataset.currentVideoUrl:PLAYER._DownloadMonitor.context.dataset.currentVideoUrl.replace(<span class="regexp">/:.*qq.com/g</span>,<span class="string">&quot;://defaultts.tc.qq.com/defaultts.tc.qq.com&quot;</span>));</span><br></pre></td></tr></table></figure><h2 id="腾讯视频-DRM内容"><a href="#腾讯视频-DRM内容" class="headerlink" title="腾讯视频(DRM内容)"></a>腾讯视频(DRM内容)</h2><p>可直接将这个超链接拖入你的书签栏：<a href="javascript:var m3u8Content=PLAYER._DownloadMonitor.context.dataset.playList[0].m3u8;var blob=new Blob([m3u8Content],{type:&quot;text/plain&quot;});var url=URL.createObjectURL(blob);var title=PLAYER._DownloadMonitor.context.dataset.title+&quot;.m3u8&quot;;var aLink=document.createElement(&quot;a&quot;);aLink.href=url;aLink.download=title;aLink.style.display=&quot;none&quot;;var event;if(window.MouseEvent){event=new MouseEvent(&quot;click&quot;)}else{event=document.createEvent(&quot;MouseEvents&quot;);event.initMouseEvent(&quot;click&quot;,true,false,window,0,0,0,0,0,false,false,false,false,0,null)}aLink.dispatchEvent(event);" target="_blank">腾讯视频(DRM内容)</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javascript:<span class="keyword">var</span> m3u8Content=PLAYER._DownloadMonitor.context.dataset.playList[<span class="number">0</span>].m3u8;<span class="keyword">var</span> blob=<span class="keyword">new</span> Blob([m3u8Content],&#123;<span class="attr">type</span>:<span class="string">&quot;text/plain&quot;</span>&#125;);<span class="keyword">var</span> url=URL.createObjectURL(blob);<span class="keyword">var</span> title=PLAYER._DownloadMonitor.context.dataset.title+<span class="string">&quot;[v+a].m3u8&quot;</span>;<span class="keyword">var</span> aLink=<span class="built_in">document</span>.createElement(<span class="string">&quot;a&quot;</span>);aLink.href=url;aLink.download=title;aLink.style.display=<span class="string">&quot;none&quot;</span>;<span class="keyword">var</span> event;<span class="keyword">if</span>(<span class="built_in">window</span>.MouseEvent)&#123;event=<span class="keyword">new</span> MouseEvent(<span class="string">&quot;click&quot;</span>)&#125;<span class="keyword">else</span>&#123;event=<span class="built_in">document</span>.createEvent(<span class="string">&quot;MouseEvents&quot;</span>);event.initMouseEvent(<span class="string">&quot;click&quot;</span>,<span class="literal">true</span>,<span class="literal">false</span>,<span class="built_in">window</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="literal">false</span>,<span class="literal">false</span>,<span class="literal">false</span>,<span class="literal">false</span>,<span class="number">0</span>,<span class="literal">null</span>)&#125;aLink.dispatchEvent(event);</span><br></pre></td></tr></table></figure><h2 id="爱奇艺-愛奇藝视频"><a href="#爱奇艺-愛奇藝视频" class="headerlink" title="爱奇艺/愛奇藝视频"></a>爱奇艺/愛奇藝视频</h2><p>可直接将这个超链接拖入你的书签栏：<a href="javascript:eval(function(p,a,c,k,e,r){e=function(c){return(c<a?'':e(parseInt(c/a)))+((c=c%a)>35?String.fromCharCode(c+29):c.toString(36))};if(!''.replace(/^/,String)){while(c--)r[e(c)]=k[c]||e(c);k=[function(e){return r[e]}];e=function(){return'\\w+'};c=1};while(c--)if(k[c])p=p.replace(new RegExp('\\b'+e(c)+'\\b','g'),k[c]);return p}('3 C=D.E.F.8.G.8.H.I.1b.z.1c.J;C.K(7(j,k){9(j.1d){3 l=&quot;&quot;;9(j.A==1e){L{9(1f(1g(M))==&quot;7&quot;){}}N(e){3 m=v O();m.P(&quot;Q&quot;,&quot;R://1h.S.T/U/1i/1j.U&quot;,6);m.V=7(){3 a=5.W(&quot;1k&quot;);a.Y=m.Z;5.1l(&quot;1m&quot;)[0].1n(a)};m.11(B)}3 n=j.1o;3 o=&quot;#1p\\n&quot;;n.K(7(b,c){3 e=b.l;3 f=&quot;R://z.J.S.T/1q&quot;;3 h=f+e;L{3 t=D.E.F.8.G.8.H.I.1r.z.t;h=f+e+&quot;%1s%1t%1u=1&t=&quot;+t+&quot;&1v=&quot;+/1w=(\\d+)/g.12(e)[1]+&quot;&1x=4&1y=0&1z=&quot;+M(t+/\\/(\\w{10,})/g.12(e)[1])}N(13){1A.1B(13)}3 i=v O();i.1C(&quot;1D/1E&quot;);i.P(&quot;Q&quot;,h,6);i.V=7(){3 a=1F.1G(i.Z);o+=&quot;#1H:0\\n&quot;+a[&quot;l&quot;]+&quot;\\n&quot;};i.11(B)});o+=&quot;#1I-X-1J&quot;;l=o}14{l=j.A}3 p=v 1K([l],{1L:&quot;Y/1M&quot;});3 q=1N.1O(p);3 r=(5.x.15(&quot;-&quot;)!=-1?5.x.1P(0,5.x.15(&quot;-&quot;)):5.x.16(/\\s/,&quot;&quot;))+&quot;y&quot;+j.1Q+&quot;y&quot;+(j.1R==2?&quot;1S&quot;:&quot;1T&quot;)+&quot;y&quot;+5.1U(&quot;1V-1W-1X&quot;)[0].1Y.16(/:/,&quot;.&quot;)+&quot;y&quot;+(j.1Z/17/17).20(2)+&quot;21.A&quot;;3 s=5.W(&quot;a&quot;);s.22=q;s.23=r;s.24.25=&quot;26&quot;;3 u;9(18.19){u=v 19(&quot;1a&quot;)}14{u=5.27(&quot;28&quot;);u.29(&quot;1a&quot;,2a,6,18,0,0,0,0,0,6,6,6,6,0,B)}s.2b(u)}})',62,136,'|||var||document|false|function|engine|if||||||||||||||||||||||new||title|_|data|m3u8|null|info|playerObject|_player|package|adproxy|movieinfo|current|video|forEach|try|cmd5x|catch|XMLHttpRequest|open|GET|https|iqiyi|com|js|onload|createElement||text|responseText||send|exec|err|else|indexOf|replace|1024|window|MouseEvent|click|originalData|program|_selected|undefined|typeof|eval|static|common|f6a3054843de4645b34d205a9f377d25|script|getElementsByTagName|head|appendChild|fs|EXTM3U|videos|boss|E2|9C|97domain|QY00001|qd_uid|ib|ptime|ibt|console|error|overrideMimeType|application|json|JSON|parse|EXTINF|EXT|ENDLIST|Blob|type|plain|URL|createObjectURL|substring|scrsz|code|H264|H265|getElementsByClassName|iqp|time|dur|innerText|vsize|toFixed|MB|href|download|style|display|none|createEvent|MouseEvents|initMouseEvent|true|dispatchEvent'.split('|'),0,{}))" target="_blank">爱奇艺视频</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javascript:<span class="built_in">eval</span>(<span class="function"><span class="keyword">function</span>(<span class="params">p,a,c,k,e,r</span>)</span>&#123;e=<span class="function"><span class="keyword">function</span>(<span class="params">c</span>)</span>&#123;<span class="keyword">return</span>(c&lt;a?<span class="string">&#x27;&#x27;</span>:e(<span class="built_in">parseInt</span>(c/a)))+((c=c%a)&gt;<span class="number">35</span>?<span class="built_in">String</span>.fromCharCode(c+<span class="number">29</span>):c.toString(<span class="number">36</span>))&#125;;<span class="keyword">if</span>(!<span class="string">&#x27;&#x27;</span>.replace(<span class="regexp">/^/</span>,<span class="built_in">String</span>))&#123;<span class="keyword">while</span>(c--)r[e(c)]=k[c]||e(c);k=[<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">return</span> r[e]&#125;];e=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span><span class="string">&#x27;\\w+&#x27;</span>&#125;;c=<span class="number">1</span>&#125;;<span class="keyword">while</span>(c--)<span class="keyword">if</span>(k[c])p=p.replace(<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">&#x27;\\b&#x27;</span>+e(c)+<span class="string">&#x27;\\b&#x27;</span>,<span class="string">&#x27;g&#x27;</span>),k[c]);<span class="keyword">return</span> p&#125;(<span class="string">&#x27;3 C=D.E.F.8.G.8.H.I.1b.z.1c.J;C.K(7(j,k)&#123;9(j.1d)&#123;3 l=&quot;&quot;;9(j.A==1e)&#123;L&#123;9(1f(1g(M))==&quot;7&quot;)&#123;&#125;&#125;N(e)&#123;3 m=v O();m.P(&quot;Q&quot;,&quot;R://1h.S.T/U/1i/1j.U&quot;,6);m.V=7()&#123;3 a=5.W(&quot;1k&quot;);a.Y=m.Z;5.1l(&quot;1m&quot;)[0].1n(a)&#125;;m.11(B)&#125;3 n=j.1o;3 o=&quot;#1p\\n&quot;;n.K(7(b,c)&#123;3 e=b.l;3 f=&quot;R://z.J.S.T/1q&quot;;3 h=f+e;L&#123;3 t=D.E.F.8.G.8.H.I.1r.z.t;h=f+e+&quot;%1s%1t%1u=1&amp;t=&quot;+t+&quot;&amp;1v=&quot;+/1w=(\\d+)/g.12(e)[1]+&quot;&amp;1x=4&amp;1y=0&amp;1z=&quot;+M(t+/\\/(\\w&#123;10,&#125;)/g.12(e)[1])&#125;N(13)&#123;1A.1B(13)&#125;3 i=v O();i.1C(&quot;1D/1E&quot;);i.P(&quot;Q&quot;,h,6);i.V=7()&#123;3 a=1F.1G(i.Z);o+=&quot;#1H:0\\n&quot;+a[&quot;l&quot;]+&quot;\\n&quot;&#125;;i.11(B)&#125;);o+=&quot;#1I-X-1J&quot;;l=o&#125;14&#123;l=j.A&#125;3 p=v 1K([l],&#123;1L:&quot;Y/1M&quot;&#125;);3 q=1N.1O(p);3 r=(5.x.15(&quot;-&quot;)!=-1?5.x.1P(0,5.x.15(&quot;-&quot;)):5.x.16(/\\s/,&quot;&quot;))+&quot;y&quot;+j.1Q+&quot;y&quot;+(j.1R==2?&quot;1S&quot;:&quot;1T&quot;)+&quot;y&quot;+5.1U(&quot;1V-1W-1X&quot;)[0].1Y.16(/:/,&quot;.&quot;)+&quot;y&quot;+(j.1Z/17/17).20(2)+&quot;21.A&quot;;3 s=5.W(&quot;a&quot;);s.22=q;s.23=r;s.24.25=&quot;26&quot;;3 u;9(18.19)&#123;u=v 19(&quot;1a&quot;)&#125;14&#123;u=5.27(&quot;28&quot;);u.29(&quot;1a&quot;,2a,6,18,0,0,0,0,0,6,6,6,6,0,B)&#125;s.2b(u)&#125;&#125;)&#x27;</span>,<span class="number">62</span>,<span class="number">136</span>,<span class="string">&#x27;|||var||document|false|function|engine|if||||||||||||||||||||||new||title|_|data|m3u8|null|info|playerObject|_player|package|adproxy|movieinfo|current|video|forEach|try|cmd5x|catch|XMLHttpRequest|open|GET|https|iqiyi|com|js|onload|createElement||text|responseText||send|exec|err|else|indexOf|replace|1024|window|MouseEvent|click|originalData|program|_selected|undefined|typeof|eval|static|common|f6a3054843de4645b34d205a9f377d25|script|getElementsByTagName|head|appendChild|fs|EXTM3U|videos|boss|E2|9C|97domain|QY00001|qd_uid|ib|ptime|ibt|console|error|overrideMimeType|application|json|JSON|parse|EXTINF|EXT|ENDLIST|Blob|type|plain|URL|createObjectURL|substring|scrsz|code|H264|H265|getElementsByClassName|iqp|time|dur|innerText|vsize|toFixed|MB|href|download|style|display|none|createEvent|MouseEvents|initMouseEvent|true|dispatchEvent&#x27;</span>.split(<span class="string">&#x27;|&#x27;</span>),<span class="number">0</span>,&#123;&#125;))</span><br></pre></td></tr></table></figure><h2 id="爱奇艺-愛奇藝-杜比音轨"><a href="#爱奇艺-愛奇藝-杜比音轨" class="headerlink" title="爱奇艺/愛奇藝 杜比音轨"></a>爱奇艺/愛奇藝 杜比音轨</h2><p>可直接将这个超链接拖入你的书签栏：<a href="javascript:eval(function(p,a,c,k,e,r){e=function(c){return(c<a?'':e(parseInt(c/a)))+((c=c%a)>35?String.fromCharCode(c+29):c.toString(36))};if(!''.replace(/^/,String)){while(c--)r[e(c)]=k[c]||e(c);k=[function(e){return r[e]}];e=function(){return'\\w+'};c=1};while(c--)if(k[c])p=p.replace(new RegExp('\\b'+e(c)+'\\b','g'),k[c]);return p}('3 B=A 1k();B.1j(&quot;1h&quot;,&quot;R://2I.M.C/1c/1Q/2b.1c&quot;,9);B.1b=7(){3 a=6.Q(&quot;19&quot;);a.1m=B.Z;6.V(&quot;U&quot;)[0].S(a)};B.18(z);7 G(a){3 b=6.2S.14(&quot;; &quot;);1K(3 i=0;i<b.1Y;i++){3 c=b[i].14(&quot;=&quot;);J(a==c[0])K 1d(c[1])}K z}7 N(a,b){3 c=A 1U(\'(^|&amp;)\'+a+\'=([^&amp;]*)(&amp;|$)\',\'i\');3 r=b.22(c);J(r!=z){K 1d(r[2])}K z}3 L=8.2T.15.O(&quot;1L.M.C&quot;)!=-1?&quot;1M&quot;:&quot;1O&quot;;3 F=1R.1S.1T.1a.1X.1a.F;3 P=&quot;/1Z/20?1e=&quot;+F.1e+&quot;&amp;24=26&amp;27=28&amp;D=&quot;+F.D+&quot;&amp;L=&quot;+L+&quot;&amp;2d=0&amp;2e=1&amp;2h=&quot;+G(&quot;2i&quot;)+&quot;&amp;2x=2y&amp;2E=0&amp;T=&quot;+G(&quot;2M&quot;)+&quot;&amp;2R=0&amp;d=0&amp;s=&amp;1n=&amp;1o=&amp;1p=&amp;1q=1&amp;1r=0&amp;1s=0&amp;1t=&quot;+G(&quot;1u&quot;)+&quot;&amp;1v=1w&amp;1x=0&amp;1y=2&amp;1z=&quot;+(A 2Z()).1B()+&quot;&amp;1C=a&amp;1D=0&amp;1E=1F&amp;1G=1H&amp;1I=1&amp;1J=W&amp;Y=1&amp;Y=5&quot;;8.I=&quot;R://1N.11.M.C&quot;+P+&quot;&amp;1P=&quot;+12(P);13(8.I);7 13(a){3 b=6.V(&quot;U&quot;)[0];3 c=6.Q(&quot;19&quot;);c.L=a;b.S(c)}7 W(e){3 x=e.H.1V.1W;3 y=0;x.17(7(m,n){J(m.21){3 o=m.23;3 p=&quot;#25\\n&quot;;o.17(7(b,c){3 f=b.l;y+=b.b;3 h=&quot;R://H.11.M.C/29&quot;;3 i=h+f;2a{3 t=e.H.2c.H.t;3 j=N(&quot;D&quot;,8.I);3 k=N(&quot;T&quot;,8.I);i=h+f+&quot;&amp;t=&quot;+t+&quot;&amp;D=&quot;+j+&quot;&amp;2f=&quot;+/2g=(\\d+)/g.1f(f)[1]+&quot;&amp;2j=&quot;+k+&quot;&amp;2k=4&amp;2l=&quot;+12(t+/\\/(\\w{10,})/g.1f(f)[1])+&quot;&amp;2m=0&quot;}2n(2o){}3 l=A 1k();l.2p(&quot;2q/2r&quot;);l.1j(&quot;1h&quot;,i,9);l.1b=7(){3 a=2s.2t(l.Z);p+=&quot;#2u:0\\n&quot;+a[&quot;l&quot;]+&quot;\\n&quot;};l.18(z)});p+=&quot;#2v-X-2w&quot;;1g=p;3 q=A 2z([1g],{2A:&quot;1m/2B&quot;});3 r=2C.2D(q);3 s=(6.E.O(&quot;-&quot;)!=-1?6.E.2F(0,6.E.O(&quot;-&quot;)):6.E.2G(/\\s/,&quot;&quot;))+&quot;2H&quot;+(y/1i/1i).2J(2)+&quot;2K.2L&quot;;3 u=6.Q(&quot;a&quot;);u.15=r;u.2N=s;u.2O.2P=&quot;2Q&quot;;3 v;J(8.1l){v=A 1l(&quot;16&quot;)}2U{v=6.2V(&quot;2W&quot;);v.2X(&quot;16&quot;,2Y,9,8,0,0,0,0,0,9,9,9,9,0,z)}u.1A(v)}})}',62,186,'|||var|||document|function|window|false||||||||||||||||||||||||||null|new|req1|com|vid|title|movieinfo|getCookie|data|dashUrl|if|return|src|iqiyi|getQueryString|indexOf|params|createElement|https|appendChild|k_uid|head|getElementsByTagName|NILAODA||ut|responseText||video|cmd5x|loadScript|split|href|click|forEach|send|script|engine|onload|js|unescape|tvid|exec|m3u8Content|GET|1024|open|XMLHttpRequest|MouseEvent|text|lid|cf|ct|k_tag|ost|ppt|dfp|__dfp|locale|zh_cn|k_err_retries|qd_v|tm|dispatchEvent|getTime|qdy|qds|k_ft1|1354994433|k_ft4|8196|k_ft5|callback|for|tw|01010031010010000000|cache|01010031010000000000|vf|common|playerObject|_player|package|RegExp|program|audio|adproxy|length|jp|dash|_selected|match|fs|bid|EXTM3U|300|abid|500|videos|try|f6a3054843de4645b34d205a9f377d25|boss_ts|vt|rs|QY00001|qd_uid|uid|P00003|su|ib|ibt|ptime|catch|err|overrideMimeType|application|json|JSON|parse|EXTINF|EXT|ENDLIST|ori|pcw|Blob|type|plain|URL|createObjectURL|ps|substring|replace|_dolby_|static|toFixed|MB|m3u8|QC005|download|style|display|none|pt|cookie|location|else|createEvent|MouseEvents|initMouseEvent|true|Date'.split('|'),0,{}))" target="_blank">爱奇艺杜比音轨</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javascript:<span class="built_in">eval</span>(<span class="function"><span class="keyword">function</span>(<span class="params">p,a,c,k,e,r</span>)</span>&#123;e=<span class="function"><span class="keyword">function</span>(<span class="params">c</span>)</span>&#123;<span class="keyword">return</span>(c&lt;a?<span class="string">&#x27;&#x27;</span>:e(<span class="built_in">parseInt</span>(c/a)))+((c=c%a)&gt;<span class="number">35</span>?<span class="built_in">String</span>.fromCharCode(c+<span class="number">29</span>):c.toString(<span class="number">36</span>))&#125;;<span class="keyword">if</span>(!<span class="string">&#x27;&#x27;</span>.replace(<span class="regexp">/^/</span>,<span class="built_in">String</span>))&#123;<span class="keyword">while</span>(c--)r[e(c)]=k[c]||e(c);k=[<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">return</span> r[e]&#125;];e=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span><span class="string">&#x27;\\w+&#x27;</span>&#125;;c=<span class="number">1</span>&#125;;<span class="keyword">while</span>(c--)<span class="keyword">if</span>(k[c])p=p.replace(<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">&#x27;\\b&#x27;</span>+e(c)+<span class="string">&#x27;\\b&#x27;</span>,<span class="string">&#x27;g&#x27;</span>),k[c]);<span class="keyword">return</span> p&#125;(<span class="string">&#x27;3 B=A 1k();B.1j(&quot;1h&quot;,&quot;R://2I.M.C/1c/1Q/2b.1c&quot;,9);B.1b=7()&#123;3 a=6.Q(&quot;19&quot;);a.1m=B.Z;6.V(&quot;U&quot;)[0].S(a)&#125;;B.18(z);7 G(a)&#123;3 b=6.2S.14(&quot;; &quot;);1K(3 i=0;i&lt;b.1Y;i++)&#123;3 c=b[i].14(&quot;=&quot;);J(a==c[0])K 1d(c[1])&#125;K z&#125;7 N(a,b)&#123;3 c=A 1U(\&#x27;(^|&amp;)\&#x27;+a+\&#x27;=([^&amp;]*)(&amp;|$)\&#x27;,\&#x27;i\&#x27;);3 r=b.22(c);J(r!=z)&#123;K 1d(r[2])&#125;K z&#125;3 L=8.2T.15.O(&quot;1L.M.C&quot;)!=-1?&quot;1M&quot;:&quot;1O&quot;;3 F=1R.1S.1T.1a.1X.1a.F;3 P=&quot;/1Z/20?1e=&quot;+F.1e+&quot;&amp;24=26&amp;27=28&amp;D=&quot;+F.D+&quot;&amp;L=&quot;+L+&quot;&amp;2d=0&amp;2e=1&amp;2h=&quot;+G(&quot;2i&quot;)+&quot;&amp;2x=2y&amp;2E=0&amp;T=&quot;+G(&quot;2M&quot;)+&quot;&amp;2R=0&amp;d=0&amp;s=&amp;1n=&amp;1o=&amp;1p=&amp;1q=1&amp;1r=0&amp;1s=0&amp;1t=&quot;+G(&quot;1u&quot;)+&quot;&amp;1v=1w&amp;1x=0&amp;1y=2&amp;1z=&quot;+(A 2Z()).1B()+&quot;&amp;1C=a&amp;1D=0&amp;1E=1F&amp;1G=1H&amp;1I=1&amp;1J=W&amp;Y=1&amp;Y=5&quot;;8.I=&quot;R://1N.11.M.C&quot;+P+&quot;&amp;1P=&quot;+12(P);13(8.I);7 13(a)&#123;3 b=6.V(&quot;U&quot;)[0];3 c=6.Q(&quot;19&quot;);c.L=a;b.S(c)&#125;7 W(e)&#123;3 x=e.H.1V.1W;3 y=0;x.17(7(m,n)&#123;J(m.21)&#123;3 o=m.23;3 p=&quot;#25\\n&quot;;o.17(7(b,c)&#123;3 f=b.l;y+=b.b;3 h=&quot;R://H.11.M.C/29&quot;;3 i=h+f;2a&#123;3 t=e.H.2c.H.t;3 j=N(&quot;D&quot;,8.I);3 k=N(&quot;T&quot;,8.I);i=h+f+&quot;&amp;t=&quot;+t+&quot;&amp;D=&quot;+j+&quot;&amp;2f=&quot;+/2g=(\\d+)/g.1f(f)[1]+&quot;&amp;2j=&quot;+k+&quot;&amp;2k=4&amp;2l=&quot;+12(t+/\\/(\\w&#123;10,&#125;)/g.1f(f)[1])+&quot;&amp;2m=0&quot;&#125;2n(2o)&#123;&#125;3 l=A 1k();l.2p(&quot;2q/2r&quot;);l.1j(&quot;1h&quot;,i,9);l.1b=7()&#123;3 a=2s.2t(l.Z);p+=&quot;#2u:0\\n&quot;+a[&quot;l&quot;]+&quot;\\n&quot;&#125;;l.18(z)&#125;);p+=&quot;#2v-X-2w&quot;;1g=p;3 q=A 2z([1g],&#123;2A:&quot;1m/2B&quot;&#125;);3 r=2C.2D(q);3 s=(6.E.O(&quot;-&quot;)!=-1?6.E.2F(0,6.E.O(&quot;-&quot;)):6.E.2G(/\\s/,&quot;&quot;))+&quot;2H&quot;+(y/1i/1i).2J(2)+&quot;2K.2L&quot;;3 u=6.Q(&quot;a&quot;);u.15=r;u.2N=s;u.2O.2P=&quot;2Q&quot;;3 v;J(8.1l)&#123;v=A 1l(&quot;16&quot;)&#125;2U&#123;v=6.2V(&quot;2W&quot;);v.2X(&quot;16&quot;,2Y,9,8,0,0,0,0,0,9,9,9,9,0,z)&#125;u.1A(v)&#125;&#125;)&#125;&#x27;</span>,<span class="number">62</span>,<span class="number">186</span>,<span class="string">&#x27;|||var|||document|function|window|false||||||||||||||||||||||||||null|new|req1|com|vid|title|movieinfo|getCookie|data|dashUrl|if|return|src|iqiyi|getQueryString|indexOf|params|createElement|https|appendChild|k_uid|head|getElementsByTagName|NILAODA||ut|responseText||video|cmd5x|loadScript|split|href|click|forEach|send|script|engine|onload|js|unescape|tvid|exec|m3u8Content|GET|1024|open|XMLHttpRequest|MouseEvent|text|lid|cf|ct|k_tag|ost|ppt|dfp|__dfp|locale|zh_cn|k_err_retries|qd_v|tm|dispatchEvent|getTime|qdy|qds|k_ft1|1354994433|k_ft4|8196|k_ft5|callback|for|tw|01010031010010000000|cache|01010031010000000000|vf|common|playerObject|_player|package|RegExp|program|audio|adproxy|length|jp|dash|_selected|match|fs|bid|EXTM3U|300|abid|500|videos|try|f6a3054843de4645b34d205a9f377d25|boss_ts|vt|rs|QY00001|qd_uid|uid|P00003|su|ib|ibt|ptime|catch|err|overrideMimeType|application|json|JSON|parse|EXTINF|EXT|ENDLIST|ori|pcw|Blob|type|plain|URL|createObjectURL|ps|substring|replace|_dolby_|static|toFixed|MB|m3u8|QC005|download|style|display|none|pt|cookie|location|else|createEvent|MouseEvents|initMouseEvent|true|Date&#x27;</span>.split(<span class="string">&#x27;|&#x27;</span>),<span class="number">0</span>,&#123;&#125;))</span><br></pre></td></tr></table></figure><h2 id="爱奇艺-愛奇藝-交互式选择音轨"><a href="#爱奇艺-愛奇藝-交互式选择音轨" class="headerlink" title="爱奇艺/愛奇藝 交互式选择音轨"></a>爱奇艺/愛奇藝 交互式选择音轨</h2><p>可直接将这个超链接拖入你的书签栏：<a href="javascript:eval(function(p,a,c,k,e,r){e=function(c){return(c<a?'':e(parseInt(c/a)))+((c=c%a)>35?String.fromCharCode(c+29):c.toString(36))};if(!''.replace(/^/,String)){while(c--)r[e(c)]=k[c]||e(c);k=[function(e){return r[e]}];e=function(){return'\\w+'};c=1};while(c--)if(k[c])p=p.replace(new RegExp('\\b'+e(c)+'\\b','g'),k[c]);return p}('3 O=C 1e();O.1f(&quot;1g&quot;,&quot;R://2e.S.H/1h/2f/2g.1h&quot;,D);O.1i=6(){3 a=7.15(&quot;1j&quot;);a.1k=O.1l;7.1m(&quot;1n&quot;)[0].1o(a)};O.1p(I);6 J(a){3 b=7.2h.1q(&quot;; &quot;);2i(3 i=0;i<b.2j;i++){3 c=b[i].1q(&quot;=&quot;);8(a==c[0])K 1r(c[1])}K I}6 16(a,b){3 c=C 2k(\'(^|&amp;)\'+a+\'=([^&amp;]*)(&amp;|$)\',\'i\');3 r=b.2l(c);8(r!=I){K 1r(r[2])}K I}3 9=&quot;2m&quot;;3 17=&quot;R://1s.18.S.H&quot;;8(A.1t.19.T(&quot;2n.S.H&quot;)!=-1){9=&quot;2o&quot;}1u 8(A.1t.19.T(&quot;1v.H&quot;)!=-1){17=&quot;R://1s-18.1v.H&quot;;9=&quot;1w&quot;}3 L=2p.2q.2r.1x.2s.1x.L;6 1a(b,c,e,f){3 g=&quot;/1y/1z?U=&quot;+L.U+&quot;&amp;E=1A&amp;M=&quot;+L.M+&quot;&amp;9=&quot;+9+&quot;&amp;1B=0&amp;1C=1&amp;1D=&quot;+J(&quot;2t&quot;)+&quot;&amp;1E=1F&amp;1G=0&amp;1b=&quot;+J(&quot;1H&quot;)+&quot;&amp;1I=0&amp;d=0&amp;s=&amp;V=&quot;+b+&quot;&amp;W=&quot;+c+&quot;&amp;N=&quot;+(e==&quot;1J&quot;?&quot;2&quot;:&quot;1&quot;)+&quot;&amp;1K=1&amp;1L=0&amp;1M=0&amp;1N=&quot;+J(&quot;1O&quot;)+&quot;&amp;2u=2v&amp;1P=0&amp;1Q=2&amp;1R=&quot;+(C 1S()).1T()+&quot;&amp;1U=a&amp;1V=0&amp;1W=2w&amp;1X=2x&amp;1Y=1&amp;2y=&quot;+f+&quot;&amp;1c=1&amp;1c=5&quot;;8(9==&quot;1w&quot;){g=`/1y/1z?U=${L.U}&amp;E=1A&amp;M=${L.M}`+`&amp;9=${9}&amp;1B=0&amp;1C=1&amp;1D=0&amp;1E=1F&amp;1G=0&amp;1b=${J(&quot;1H&quot;)}`+`&amp;1I=0&amp;d=0&amp;s=&amp;b=${b}&amp;2z=2&amp;e=${(e==&quot;1J&quot;?&quot;2&quot;:&quot;1&quot;)}&amp;c=${c}`+`&amp;1K=1&amp;1L=0&amp;1M=0&amp;1N=${J(&quot;1O&quot;)}&amp;1P=0&amp;2A=&amp;1Z=1`+`&amp;2B=2C&amp;2D=2&amp;1Q=2&amp;1R=${(C 1S()).1T()}&amp;1U=a&amp;1V=0&amp;1W=2E&amp;1X=2F&amp;1Y=1&amp;1c=0`}A.Y=17+g+&quot;&amp;2G=&quot;+20(g);21(A.Y)}6 21(a){3 b=7.1m(&quot;1n&quot;)[0];3 c=7.15(&quot;1j&quot;);c.9=a;b.1o(c)}8(z)z=2H;3 z=[];1a(&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;22&quot;);6 22(e){3 c=e.P.23.24;c.Z(6(a,b){F G={};G.E=a.E;G.B=a.B;G.N=a.N;G.W=a.W;G.V=a.V;z.2I(G)});z.2J((11,12)=>{K(12.B<11.B?1:(12.B==11.B?0:-1))+(12.E-11.E)});F p=&quot;&quot;;z.Z(6(a,b){p+=`\\r\\n[${b}]:{${a.B||&quot;&quot;}Q${a.E}Q${a.N}}`});F 1d=2K(&quot;请选择音轨&quot;+p);8(!1d)K;F 13=2L(1d);F 25=z[13].V;F 26=z[13].W;F 27=z[13].N;1a(25,26,27,&quot;28&quot;)}6 28(e){3 x=e.P.23.24;3 y=0;x.Z(6(m,n){8(m.2M){3 o=m.2N;3 p=&quot;#2O\\n&quot;;o.Z(6(b,c){3 f=b.l;y+=b.b;3 h=&quot;R://P.18.S.H/2P&quot;;3 i=h+f;2Q{3 t=e.P.2R.P.t;3 j=16(&quot;M&quot;,A.Y);3 k=16(&quot;1b&quot;,A.Y);i=h+f+&quot;&amp;t=&quot;+t+&quot;&amp;M=&quot;+j+&quot;&amp;2S=&quot;+/2T=(\\d+)/g.29(f)[1]+&quot;&amp;1Z=&quot;+k+&quot;&amp;2U=4&amp;2V=&quot;+20(t+/\\/(\\w{10,})/g.29(f)[1])+&quot;&amp;2W=0&quot;}2X(2Y){}3 l=C 1e();l.2Z(&quot;30/31&quot;);l.1f(&quot;1g&quot;,i,D);l.1i=6(){3 a=32.33(l.1l);p+=&quot;#34:0\\n&quot;+a[&quot;l&quot;]+&quot;\\n&quot;};l.1p(I)});p+=&quot;#35-X-36&quot;;2a=p;3 q=C 37([2a],{38:&quot;1k/39&quot;});3 r=3a.3b(q);3 s=(7.14.T(&quot;-&quot;)!=-1?7.14.3c(0,7.14.T(&quot;-&quot;)):7.14.3d(/\\s/,&quot;&quot;))+`Q${(m.B||&quot;&quot;)}Q${m.N}Q`+(y/2b/2b).3e(2)+&quot;3f.3g&quot;;3 u=7.15(&quot;a&quot;);u.19=r;u.3h=s;u.3i.3j=&quot;3k&quot;;3 v;8(A.2c){v=C 2c(&quot;2d&quot;)}1u{v=7.3l(&quot;3m&quot;);v.3n(&quot;2d&quot;,3o,D,A,0,0,0,0,0,D,D,D,D,0,I)}u.3p(v)}})}',62,212,'|||var|||function|document|if|src||||||||||||||||||||||||||audioTracks|window|name|new|false|bid|let|_track|com|null|getCookie|return|movieinfo|vid|cf|req1|data|_|https|iqiyi|indexOf|tvid|lid|ct||dashUrl|forEach||a1|a2|_select|title|createElement|getQueryString|host|video|href|doRequest|k_uid|ut|_input|XMLHttpRequest|open|GET|js|onload|script|text|responseText|getElementsByTagName|head|appendChild|send|split|unescape|cache|location|else|iq|01010031010014000000|engine|jp|dash|300|vt|rs|uid|ori|pcw|ps|QC005|pt|aac|k_tag|ost|ppt|dfp|__dfp|k_err_retries|qd_v|tm|Date|getTime|qdy|qds|k_ft1|k_ft4|k_ft5|su|cmd5x|loadScript|getAllTracks|program|audio|_lid|_ct|_cf|NILAODA|exec|m3u8Content|1024|MouseEvent|click|static|common|f6a3054843de4645b34d205a9f377d25|cookie|for|length|RegExp|match|01010031010000000000|tw|01010031010010000000|playerObject|_player|package|adproxy|P00003|locale|zh_cn|740531601218477|1162183859249156|callback|slid|up|applang|en_us|sver|141287244169348|34359746564|vf|undefined|push|sort|prompt|Number|_selected|fs|EXTM3U|videos|try|boss_ts|QY00001|qd_uid|ib|ibt|ptime|catch|err|overrideMimeType|application|json|JSON|parse|EXTINF|EXT|ENDLIST|Blob|type|plain|URL|createObjectURL|substring|replace|toFixed|MB|m3u8|download|style|display|none|createEvent|MouseEvents|initMouseEvent|true|dispatchEvent'.split('|'),0,{}))" target="_blank">爱奇艺音轨下载</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javascript:<span class="built_in">eval</span>(<span class="function"><span class="keyword">function</span>(<span class="params">p,a,c,k,e,r</span>)</span>&#123;e=<span class="function"><span class="keyword">function</span>(<span class="params">c</span>)</span>&#123;<span class="keyword">return</span>(c&lt;a?<span class="string">&#x27;&#x27;</span>:e(<span class="built_in">parseInt</span>(c/a)))+((c=c%a)&gt;<span class="number">35</span>?<span class="built_in">String</span>.fromCharCode(c+<span class="number">29</span>):c.toString(<span class="number">36</span>))&#125;;<span class="keyword">if</span>(!<span class="string">&#x27;&#x27;</span>.replace(<span class="regexp">/^/</span>,<span class="built_in">String</span>))&#123;<span class="keyword">while</span>(c--)r[e(c)]=k[c]||e(c);k=[<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">return</span> r[e]&#125;];e=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span><span class="string">&#x27;\\w+&#x27;</span>&#125;;c=<span class="number">1</span>&#125;;<span class="keyword">while</span>(c--)<span class="keyword">if</span>(k[c])p=p.replace(<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">&#x27;\\b&#x27;</span>+e(c)+<span class="string">&#x27;\\b&#x27;</span>,<span class="string">&#x27;g&#x27;</span>),k[c]);<span class="keyword">return</span> p&#125;(<span class="string">&#x27;3 O=C 1e();O.1f(&quot;1g&quot;,&quot;R://2e.S.H/1h/2f/2g.1h&quot;,D);O.1i=6()&#123;3 a=7.15(&quot;1j&quot;);a.1k=O.1l;7.1m(&quot;1n&quot;)[0].1o(a)&#125;;O.1p(I);6 J(a)&#123;3 b=7.2h.1q(&quot;; &quot;);2i(3 i=0;i&lt;b.2j;i++)&#123;3 c=b[i].1q(&quot;=&quot;);8(a==c[0])K 1r(c[1])&#125;K I&#125;6 16(a,b)&#123;3 c=C 2k(\&#x27;(^|&amp;)\&#x27;+a+\&#x27;=([^&amp;]*)(&amp;|$)\&#x27;,\&#x27;i\&#x27;);3 r=b.2l(c);8(r!=I)&#123;K 1r(r[2])&#125;K I&#125;3 9=&quot;2m&quot;;3 17=&quot;R://1s.18.S.H&quot;;8(A.1t.19.T(&quot;2n.S.H&quot;)!=-1)&#123;9=&quot;2o&quot;&#125;1u 8(A.1t.19.T(&quot;1v.H&quot;)!=-1)&#123;17=&quot;R://1s-18.1v.H&quot;;9=&quot;1w&quot;&#125;3 L=2p.2q.2r.1x.2s.1x.L;6 1a(b,c,e,f)&#123;3 g=&quot;/1y/1z?U=&quot;+L.U+&quot;&amp;E=1A&amp;M=&quot;+L.M+&quot;&amp;9=&quot;+9+&quot;&amp;1B=0&amp;1C=1&amp;1D=&quot;+J(&quot;2t&quot;)+&quot;&amp;1E=1F&amp;1G=0&amp;1b=&quot;+J(&quot;1H&quot;)+&quot;&amp;1I=0&amp;d=0&amp;s=&amp;V=&quot;+b+&quot;&amp;W=&quot;+c+&quot;&amp;N=&quot;+(e==&quot;1J&quot;?&quot;2&quot;:&quot;1&quot;)+&quot;&amp;1K=1&amp;1L=0&amp;1M=0&amp;1N=&quot;+J(&quot;1O&quot;)+&quot;&amp;2u=2v&amp;1P=0&amp;1Q=2&amp;1R=&quot;+(C 1S()).1T()+&quot;&amp;1U=a&amp;1V=0&amp;1W=2w&amp;1X=2x&amp;1Y=1&amp;2y=&quot;+f+&quot;&amp;1c=1&amp;1c=5&quot;;8(9==&quot;1w&quot;)&#123;g=`/1y/1z?U=$&#123;L.U&#125;&amp;E=1A&amp;M=$&#123;L.M&#125;`+`&amp;9=$&#123;9&#125;&amp;1B=0&amp;1C=1&amp;1D=0&amp;1E=1F&amp;1G=0&amp;1b=$&#123;J(&quot;1H&quot;)&#125;`+`&amp;1I=0&amp;d=0&amp;s=&amp;b=$&#123;b&#125;&amp;2z=2&amp;e=$&#123;(e==&quot;1J&quot;?&quot;2&quot;:&quot;1&quot;)&#125;&amp;c=$&#123;c&#125;`+`&amp;1K=1&amp;1L=0&amp;1M=0&amp;1N=$&#123;J(&quot;1O&quot;)&#125;&amp;1P=0&amp;2A=&amp;1Z=1`+`&amp;2B=2C&amp;2D=2&amp;1Q=2&amp;1R=$&#123;(C 1S()).1T()&#125;&amp;1U=a&amp;1V=0&amp;1W=2E&amp;1X=2F&amp;1Y=1&amp;1c=0`&#125;A.Y=17+g+&quot;&amp;2G=&quot;+20(g);21(A.Y)&#125;6 21(a)&#123;3 b=7.1m(&quot;1n&quot;)[0];3 c=7.15(&quot;1j&quot;);c.9=a;b.1o(c)&#125;8(z)z=2H;3 z=[];1a(&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;22&quot;);6 22(e)&#123;3 c=e.P.23.24;c.Z(6(a,b)&#123;F G=&#123;&#125;;G.E=a.E;G.B=a.B;G.N=a.N;G.W=a.W;G.V=a.V;z.2I(G)&#125;);z.2J((11,12)=&gt;&#123;K(12.B&lt;11.B?1:(12.B==11.B?0:-1))+(12.E-11.E)&#125;);F p=&quot;&quot;;z.Z(6(a,b)&#123;p+=`\\r\\n[$&#123;b&#125;]:&#123;$&#123;a.B||&quot;&quot;&#125;Q$&#123;a.E&#125;Q$&#123;a.N&#125;&#125;`&#125;);F 1d=2K(&quot;请选择音轨&quot;+p);8(!1d)K;F 13=2L(1d);F 25=z[13].V;F 26=z[13].W;F 27=z[13].N;1a(25,26,27,&quot;28&quot;)&#125;6 28(e)&#123;3 x=e.P.23.24;3 y=0;x.Z(6(m,n)&#123;8(m.2M)&#123;3 o=m.2N;3 p=&quot;#2O\\n&quot;;o.Z(6(b,c)&#123;3 f=b.l;y+=b.b;3 h=&quot;R://P.18.S.H/2P&quot;;3 i=h+f;2Q&#123;3 t=e.P.2R.P.t;3 j=16(&quot;M&quot;,A.Y);3 k=16(&quot;1b&quot;,A.Y);i=h+f+&quot;&amp;t=&quot;+t+&quot;&amp;M=&quot;+j+&quot;&amp;2S=&quot;+/2T=(\\d+)/g.29(f)[1]+&quot;&amp;1Z=&quot;+k+&quot;&amp;2U=4&amp;2V=&quot;+20(t+/\\/(\\w&#123;10,&#125;)/g.29(f)[1])+&quot;&amp;2W=0&quot;&#125;2X(2Y)&#123;&#125;3 l=C 1e();l.2Z(&quot;30/31&quot;);l.1f(&quot;1g&quot;,i,D);l.1i=6()&#123;3 a=32.33(l.1l);p+=&quot;#34:0\\n&quot;+a[&quot;l&quot;]+&quot;\\n&quot;&#125;;l.1p(I)&#125;);p+=&quot;#35-X-36&quot;;2a=p;3 q=C 37([2a],&#123;38:&quot;1k/39&quot;&#125;);3 r=3a.3b(q);3 s=(7.14.T(&quot;-&quot;)!=-1?7.14.3c(0,7.14.T(&quot;-&quot;)):7.14.3d(/\\s/,&quot;&quot;))+`Q$&#123;(m.B||&quot;&quot;)&#125;Q$&#123;m.N&#125;Q`+(y/2b/2b).3e(2)+&quot;3f.3g&quot;;3 u=7.15(&quot;a&quot;);u.19=r;u.3h=s;u.3i.3j=&quot;3k&quot;;3 v;8(A.2c)&#123;v=C 2c(&quot;2d&quot;)&#125;1u&#123;v=7.3l(&quot;3m&quot;);v.3n(&quot;2d&quot;,3o,D,A,0,0,0,0,0,D,D,D,D,0,I)&#125;u.3p(v)&#125;&#125;)&#125;&#x27;</span>,<span class="number">62</span>,<span class="number">212</span>,<span class="string">&#x27;|||var|||function|document|if|src||||||||||||||||||||||||||audioTracks|window|name|new|false|bid|let|_track|com|null|getCookie|return|movieinfo|vid|cf|req1|data|_|https|iqiyi|indexOf|tvid|lid|ct||dashUrl|forEach||a1|a2|_select|title|createElement|getQueryString|host|video|href|doRequest|k_uid|ut|_input|XMLHttpRequest|open|GET|js|onload|script|text|responseText|getElementsByTagName|head|appendChild|send|split|unescape|cache|location|else|iq|01010031010014000000|engine|jp|dash|300|vt|rs|uid|ori|pcw|ps|QC005|pt|aac|k_tag|ost|ppt|dfp|__dfp|k_err_retries|qd_v|tm|Date|getTime|qdy|qds|k_ft1|k_ft4|k_ft5|su|cmd5x|loadScript|getAllTracks|program|audio|_lid|_ct|_cf|NILAODA|exec|m3u8Content|1024|MouseEvent|click|static|common|f6a3054843de4645b34d205a9f377d25|cookie|for|length|RegExp|match|01010031010000000000|tw|01010031010010000000|playerObject|_player|package|adproxy|P00003|locale|zh_cn|740531601218477|1162183859249156|callback|slid|up|applang|en_us|sver|141287244169348|34359746564|vf|undefined|push|sort|prompt|Number|_selected|fs|EXTM3U|videos|try|boss_ts|QY00001|qd_uid|ib|ibt|ptime|catch|err|overrideMimeType|application|json|JSON|parse|EXTINF|EXT|ENDLIST|Blob|type|plain|URL|createObjectURL|substring|replace|toFixed|MB|m3u8|download|style|display|none|createEvent|MouseEvents|initMouseEvent|true|dispatchEvent&#x27;</span>.split(<span class="string">&#x27;|&#x27;</span>),<span class="number">0</span>,&#123;&#125;))</span><br></pre></td></tr></table></figure><h2 id="爱奇艺-愛奇藝-4K-H264"><a href="#爱奇艺-愛奇藝-4K-H264" class="headerlink" title="爱奇艺/愛奇藝 4K H264"></a>爱奇艺/愛奇藝 4K H264</h2><p>可直接将这个超链接拖入你的书签栏：<a href="javascript:eval(function(p,a,c,k,e,r){e=function(c){return(c<a?'':e(parseInt(c/a)))+((c=c%a)>35?String.fromCharCode(c+29):c.toString(36))};if(!''.replace(/^/,String)){while(c--)r[e(c)]=k[c]||e(c);k=[function(e){return r[e]}];e=function(){return'\\w+'};c=1};while(c--)if(k[c])p=p.replace(new RegExp('\\b'+e(c)+'\\b','g'),k[c]);return p}('3 j=k 1e();j.1E(&quot;1J&quot;,&quot;S://14.y.x/N/1K/1W.N&quot;,7);j.11=6(){3 a=5.w(&quot;E&quot;);a.z=j.2i;5.L(&quot;F&quot;)[0].B(a)};j.1f(9);6 m(a){3 b=5.1P.G(&quot;; &quot;);1Y(3 i=0;i<b.W;i++){3 c=b[i].G(&quot;=&quot;);q(a==c[0])t R(c[1])}t 9}6 1g(a,b){3 c=k 1C(\'(^|&amp;)\'+a+\'=([^&amp;]*)(&amp;|$)\',\'i\');3 r=b.1G(c);q(r!=9){t R(r[2])}t 9}3 p=8.1V.P.u(&quot;1Z.y.x&quot;)!=-1?&quot;2a&quot;:&quot;2d&quot;;3 n=2j.2k.V.A.X.A.n;3 v=&quot;/Z/10?C=&quot;+n.C+&quot;&amp;12=13&amp;D=&quot;+n.D+&quot;&amp;p=&quot;+p+&quot;&amp;15=0&amp;16=1&amp;17=&quot;+m(&quot;18&quot;)+&quot;&amp;19=1a&amp;1b=0&amp;1c=&quot;+m(&quot;1d&quot;)+&quot;&amp;2q=0&amp;d=0&amp;s=&amp;1h=&amp;1i=&amp;1j=&amp;1k=1&amp;1l=0&amp;1m=0&amp;1n=&quot;+m(&quot;1o&quot;)+&quot;&amp;1p=1q&amp;1r=0&amp;1s=2&amp;1t=&quot;+(k 1u()).1v()+&quot;&amp;1w=a&amp;1x=0&amp;1y=1z&amp;1A=4&amp;1B=H&amp;1D=1&quot;;8.I=&quot;S://1F.J.y.x&quot;+v+&quot;&amp;1H=&quot;+1I(v);K(8.I);6 K(a){3 b=5.L(&quot;F&quot;)[0];3 c=5.w(&quot;E&quot;);c.p=a;b.B(c)}6 H(e){3 i=e.1L.1M.J;i.1N(6(a,b){q(a.1O){3 c=a.M;3 d=k 1Q([c],{1R:&quot;z/1S&quot;});3 e=1T.1U(d);3 f=(5.o.u(&quot;-&quot;)!=-1?5.o.1X(0,5.o.u(&quot;-&quot;)):5.o.O(/\\s/,&quot;&quot;))+&quot;l&quot;+a.20+&quot;l&quot;+(a.21==2?&quot;22&quot;:&quot;23&quot;)+&quot;l&quot;+5.24(&quot;25-26-27&quot;)[0].28.O(/:/,&quot;.&quot;)+&quot;l&quot;+(a.29/Q/Q).2b(2)+&quot;2c.M&quot;;3 g=5.w(&quot;a&quot;);g.P=e;g.2e=f;g.2f.2g=&quot;2h&quot;;3 h;q(8.T){h=k T(&quot;U&quot;)}2l{h=5.2m(&quot;2n&quot;);h.2o(&quot;U&quot;,2p,7,8,0,0,0,0,0,7,7,7,7,0,9)}g.Y(h)}})}',62,151,'|||var||document|function|false|window|null||||||||||req1|new|_|getCookie|movieinfo|title|src|if|||return|indexOf|params|createElement|com|iqiyi|text|engine|appendChild|tvid|vid|script|head|split|NILAODA|dashUrl|video|loadScript|getElementsByTagName|m3u8|js|replace|href|1024|unescape|https|MouseEvent|click|package|length|adproxy|dispatchEvent|jp|dash|onload|bid|800|static|vt|rs|uid|P00003|ori|pcw|ps|k_uid|QC005|XMLHttpRequest|send|getQueryString|lid|cf|ct|k_tag|ost|ppt|dfp|__dfp|locale|zh_cn|k_err_retries|qd_v|tm|Date|getTime|qdy|qds|k_ft2|8196|k_ft4|callback|RegExp|ut|open|cache|match|vf|cmd5x|GET|common|data|program|forEach|_selected|cookie|Blob|type|plain|URL|createObjectURL|location|f6a3054843de4645b34d205a9f377d25|substring|for|tw|scrsz|code|H264|H265|getElementsByClassName|iqp|time|dur|innerText|vsize|03020031010010000000|toFixed|MB|03020031010000000000|download|style|display|none|responseText|playerObject|_player|else|createEvent|MouseEvents|initMouseEvent|true|pt'.split('|'),0,{}))" target="_blank">爱奇艺4K_H264</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javascript:<span class="built_in">eval</span>(<span class="function"><span class="keyword">function</span>(<span class="params">p,a,c,k,e,r</span>)</span>&#123;e=<span class="function"><span class="keyword">function</span>(<span class="params">c</span>)</span>&#123;<span class="keyword">return</span>(c&lt;a?<span class="string">&#x27;&#x27;</span>:e(<span class="built_in">parseInt</span>(c/a)))+((c=c%a)&gt;<span class="number">35</span>?<span class="built_in">String</span>.fromCharCode(c+<span class="number">29</span>):c.toString(<span class="number">36</span>))&#125;;<span class="keyword">if</span>(!<span class="string">&#x27;&#x27;</span>.replace(<span class="regexp">/^/</span>,<span class="built_in">String</span>))&#123;<span class="keyword">while</span>(c--)r[e(c)]=k[c]||e(c);k=[<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">return</span> r[e]&#125;];e=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span><span class="string">&#x27;\\w+&#x27;</span>&#125;;c=<span class="number">1</span>&#125;;<span class="keyword">while</span>(c--)<span class="keyword">if</span>(k[c])p=p.replace(<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">&#x27;\\b&#x27;</span>+e(c)+<span class="string">&#x27;\\b&#x27;</span>,<span class="string">&#x27;g&#x27;</span>),k[c]);<span class="keyword">return</span> p&#125;(<span class="string">&#x27;3 j=k 1e();j.1E(&quot;1J&quot;,&quot;S://14.y.x/N/1K/1W.N&quot;,7);j.11=6()&#123;3 a=5.w(&quot;E&quot;);a.z=j.2i;5.L(&quot;F&quot;)[0].B(a)&#125;;j.1f(9);6 m(a)&#123;3 b=5.1P.G(&quot;; &quot;);1Y(3 i=0;i&lt;b.W;i++)&#123;3 c=b[i].G(&quot;=&quot;);q(a==c[0])t R(c[1])&#125;t 9&#125;6 1g(a,b)&#123;3 c=k 1C(\&#x27;(^|&amp;)\&#x27;+a+\&#x27;=([^&amp;]*)(&amp;|$)\&#x27;,\&#x27;i\&#x27;);3 r=b.1G(c);q(r!=9)&#123;t R(r[2])&#125;t 9&#125;3 p=8.1V.P.u(&quot;1Z.y.x&quot;)!=-1?&quot;2a&quot;:&quot;2d&quot;;3 n=2j.2k.V.A.X.A.n;3 v=&quot;/Z/10?C=&quot;+n.C+&quot;&amp;12=13&amp;D=&quot;+n.D+&quot;&amp;p=&quot;+p+&quot;&amp;15=0&amp;16=1&amp;17=&quot;+m(&quot;18&quot;)+&quot;&amp;19=1a&amp;1b=0&amp;1c=&quot;+m(&quot;1d&quot;)+&quot;&amp;2q=0&amp;d=0&amp;s=&amp;1h=&amp;1i=&amp;1j=&amp;1k=1&amp;1l=0&amp;1m=0&amp;1n=&quot;+m(&quot;1o&quot;)+&quot;&amp;1p=1q&amp;1r=0&amp;1s=2&amp;1t=&quot;+(k 1u()).1v()+&quot;&amp;1w=a&amp;1x=0&amp;1y=1z&amp;1A=4&amp;1B=H&amp;1D=1&quot;;8.I=&quot;S://1F.J.y.x&quot;+v+&quot;&amp;1H=&quot;+1I(v);K(8.I);6 K(a)&#123;3 b=5.L(&quot;F&quot;)[0];3 c=5.w(&quot;E&quot;);c.p=a;b.B(c)&#125;6 H(e)&#123;3 i=e.1L.1M.J;i.1N(6(a,b)&#123;q(a.1O)&#123;3 c=a.M;3 d=k 1Q([c],&#123;1R:&quot;z/1S&quot;&#125;);3 e=1T.1U(d);3 f=(5.o.u(&quot;-&quot;)!=-1?5.o.1X(0,5.o.u(&quot;-&quot;)):5.o.O(/\\s/,&quot;&quot;))+&quot;l&quot;+a.20+&quot;l&quot;+(a.21==2?&quot;22&quot;:&quot;23&quot;)+&quot;l&quot;+5.24(&quot;25-26-27&quot;)[0].28.O(/:/,&quot;.&quot;)+&quot;l&quot;+(a.29/Q/Q).2b(2)+&quot;2c.M&quot;;3 g=5.w(&quot;a&quot;);g.P=e;g.2e=f;g.2f.2g=&quot;2h&quot;;3 h;q(8.T)&#123;h=k T(&quot;U&quot;)&#125;2l&#123;h=5.2m(&quot;2n&quot;);h.2o(&quot;U&quot;,2p,7,8,0,0,0,0,0,7,7,7,7,0,9)&#125;g.Y(h)&#125;&#125;)&#125;&#x27;</span>,<span class="number">62</span>,<span class="number">151</span>,<span class="string">&#x27;|||var||document|function|false|window|null||||||||||req1|new|_|getCookie|movieinfo|title|src|if|||return|indexOf|params|createElement|com|iqiyi|text|engine|appendChild|tvid|vid|script|head|split|NILAODA|dashUrl|video|loadScript|getElementsByTagName|m3u8|js|replace|href|1024|unescape|https|MouseEvent|click|package|length|adproxy|dispatchEvent|jp|dash|onload|bid|800|static|vt|rs|uid|P00003|ori|pcw|ps|k_uid|QC005|XMLHttpRequest|send|getQueryString|lid|cf|ct|k_tag|ost|ppt|dfp|__dfp|locale|zh_cn|k_err_retries|qd_v|tm|Date|getTime|qdy|qds|k_ft2|8196|k_ft4|callback|RegExp|ut|open|cache|match|vf|cmd5x|GET|common|data|program|forEach|_selected|cookie|Blob|type|plain|URL|createObjectURL|location|f6a3054843de4645b34d205a9f377d25|substring|for|tw|scrsz|code|H264|H265|getElementsByClassName|iqp|time|dur|innerText|vsize|03020031010010000000|toFixed|MB|03020031010000000000|download|style|display|none|responseText|playerObject|_player|else|createEvent|MouseEvents|initMouseEvent|true|pt&#x27;</span>.split(<span class="string">&#x27;|&#x27;</span>),<span class="number">0</span>,&#123;&#125;))</span><br></pre></td></tr></table></figure><h2 id="爱奇艺-愛奇藝-4K-H265"><a href="#爱奇艺-愛奇藝-4K-H265" class="headerlink" title="爱奇艺/愛奇藝 4K H265"></a>爱奇艺/愛奇藝 4K H265</h2><p>可直接将这个超链接拖入你的书签栏：<a href="javascript:eval(function(p,a,c,k,e,r){e=function(c){return(c<a?'':e(parseInt(c/a)))+((c=c%a)>35?String.fromCharCode(c+29):c.toString(36))};if(!''.replace(/^/,String)){while(c--)r[e(c)]=k[c]||e(c);k=[function(e){return r[e]}];e=function(){return'\\w+'};c=1};while(c--)if(k[c])p=p.replace(new RegExp('\\b'+e(c)+'\\b','g'),k[c]);return p}('3 9=j 1c();9.1C(&quot;1H&quot;,&quot;R://13.x.w/M/1I/1U.M&quot;,6);9.10=5(){3 a=4.v(&quot;D&quot;);a.y=9.2g;4.K(&quot;E&quot;)[0].A(a)};9.1e(8);5 l(a){3 b=4.1N.F(&quot;; &quot;);1W(3 i=0;i<b.V;i++){3 c=b[i].F(&quot;=&quot;);p(a==c[0])q Q(c[1])}q 8}5 1f(a,b){3 c=j 1A(\'(^|&amp;)\'+a+\'=([^&amp;]*)(&amp;|$)\',\'i\');3 r=b.1E(c);p(r!=8){q Q(r[2])}q 8}3 o=7.1T.O.t(&quot;1X.x.w&quot;)!=-1?&quot;28&quot;:&quot;2b&quot;;3 m=2h.2i.U.z.W.z.m;3 u=&quot;/Y/Z?B=&quot;+m.B+&quot;&amp;11=12&amp;C=&quot;+m.C+&quot;&amp;o=&quot;+o+&quot;&amp;14=0&amp;15=1&amp;16=&quot;+l(&quot;17&quot;)+&quot;&amp;18=19&amp;1a=0&amp;1b=&quot;+l(&quot;2o&quot;)+&quot;&amp;1d=0&amp;d=0&amp;s=&amp;1g=&amp;1h=&amp;1i=&amp;1j=1&amp;1k=0&amp;1l=0&amp;1m=&quot;+l(&quot;1n&quot;)+&quot;&amp;1o=1p&amp;1q=0&amp;1r=2&amp;1s=&quot;+(j 1t()).1u()+&quot;&amp;1v=a&amp;1w=0&amp;1x=1y&amp;1z=G&amp;1B=1&quot;;7.H=&quot;R://1D.I.x.w&quot;+u+&quot;&amp;1F=&quot;+1G(u);J(7.H);5 J(a){3 b=4.K(&quot;E&quot;)[0];3 c=4.v(&quot;D&quot;);c.o=a;b.A(c)}5 G(e){3 i=e.1J.1K.I;i.1L(5(a,b){p(a.1M){3 c=a.L;3 d=j 1O([c],{1P:&quot;y/1Q&quot;});3 e=1R.1S(d);3 f=(4.n.t(&quot;-&quot;)!=-1?4.n.1V(0,4.n.t(&quot;-&quot;)):4.n.N(/\\s/,&quot;&quot;))+&quot;k&quot;+a.1Y+&quot;k&quot;+(a.1Z==2?&quot;20&quot;:&quot;21&quot;)+&quot;k&quot;+4.22(&quot;23-24-25&quot;)[0].26.N(/:/,&quot;.&quot;)+&quot;k&quot;+(a.27/P/P).29(2)+&quot;2a.L&quot;;3 g=4.v(&quot;a&quot;);g.O=e;g.2c=f;g.2d.2e=&quot;2f&quot;;3 h;p(7.S){h=j S(&quot;T&quot;)}2j{h=4.2k(&quot;2l&quot;);h.2m(&quot;T&quot;,2n,6,7,0,0,0,0,0,6,6,6,6,0,8)}g.X(h)}})}',62,149,'|||var|document|function|false|window|null|req1||||||||||new|_|getCookie|movieinfo|title|src|if|return|||indexOf|params|createElement|com|iqiyi|text|engine|appendChild|tvid|vid|script|head|split|NILAODA|dashUrl|video|loadScript|getElementsByTagName|m3u8|js|replace|href|1024|unescape|https|MouseEvent|click|package|length|adproxy|dispatchEvent|jp|dash|onload|bid|800|static|vt|rs|uid|P00003|ori|pcw|ps|k_uid|XMLHttpRequest|pt|send|getQueryString|lid|cf|ct|k_tag|ost|ppt|dfp|__dfp|locale|zh_cn|k_err_retries|qd_v|tm|Date|getTime|qdy|qds|k_ft2|8191|callback|RegExp|ut|open|cache|match|vf|cmd5x|GET|common|data|program|forEach|_selected|cookie|Blob|type|plain|URL|createObjectURL|location|f6a3054843de4645b34d205a9f377d25|substring|for|tw|scrsz|code|H264|H265|getElementsByClassName|iqp|time|dur|innerText|vsize|03020031010010000000|toFixed|MB|03020031010000000000|download|style|display|none|responseText|playerObject|_player|else|createEvent|MouseEvents|initMouseEvent|true|QC005'.split('|'),0,{}))" target="_blank">爱奇艺4K_H265</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javascript:<span class="built_in">eval</span>(<span class="function"><span class="keyword">function</span>(<span class="params">p,a,c,k,e,r</span>)</span>&#123;e=<span class="function"><span class="keyword">function</span>(<span class="params">c</span>)</span>&#123;<span class="keyword">return</span>(c&lt;a?<span class="string">&#x27;&#x27;</span>:e(<span class="built_in">parseInt</span>(c/a)))+((c=c%a)&gt;<span class="number">35</span>?<span class="built_in">String</span>.fromCharCode(c+<span class="number">29</span>):c.toString(<span class="number">36</span>))&#125;;<span class="keyword">if</span>(!<span class="string">&#x27;&#x27;</span>.replace(<span class="regexp">/^/</span>,<span class="built_in">String</span>))&#123;<span class="keyword">while</span>(c--)r[e(c)]=k[c]||e(c);k=[<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">return</span> r[e]&#125;];e=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span><span class="string">&#x27;\\w+&#x27;</span>&#125;;c=<span class="number">1</span>&#125;;<span class="keyword">while</span>(c--)<span class="keyword">if</span>(k[c])p=p.replace(<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">&#x27;\\b&#x27;</span>+e(c)+<span class="string">&#x27;\\b&#x27;</span>,<span class="string">&#x27;g&#x27;</span>),k[c]);<span class="keyword">return</span> p&#125;(<span class="string">&#x27;3 9=j 1c();9.1C(&quot;1H&quot;,&quot;R://13.x.w/M/1I/1U.M&quot;,6);9.10=5()&#123;3 a=4.v(&quot;D&quot;);a.y=9.2g;4.K(&quot;E&quot;)[0].A(a)&#125;;9.1e(8);5 l(a)&#123;3 b=4.1N.F(&quot;; &quot;);1W(3 i=0;i&lt;b.V;i++)&#123;3 c=b[i].F(&quot;=&quot;);p(a==c[0])q Q(c[1])&#125;q 8&#125;5 1f(a,b)&#123;3 c=j 1A(\&#x27;(^|&amp;)\&#x27;+a+\&#x27;=([^&amp;]*)(&amp;|$)\&#x27;,\&#x27;i\&#x27;);3 r=b.1E(c);p(r!=8)&#123;q Q(r[2])&#125;q 8&#125;3 o=7.1T.O.t(&quot;1X.x.w&quot;)!=-1?&quot;28&quot;:&quot;2b&quot;;3 m=2h.2i.U.z.W.z.m;3 u=&quot;/Y/Z?B=&quot;+m.B+&quot;&amp;11=12&amp;C=&quot;+m.C+&quot;&amp;o=&quot;+o+&quot;&amp;14=0&amp;15=1&amp;16=&quot;+l(&quot;17&quot;)+&quot;&amp;18=19&amp;1a=0&amp;1b=&quot;+l(&quot;2o&quot;)+&quot;&amp;1d=0&amp;d=0&amp;s=&amp;1g=&amp;1h=&amp;1i=&amp;1j=1&amp;1k=0&amp;1l=0&amp;1m=&quot;+l(&quot;1n&quot;)+&quot;&amp;1o=1p&amp;1q=0&amp;1r=2&amp;1s=&quot;+(j 1t()).1u()+&quot;&amp;1v=a&amp;1w=0&amp;1x=1y&amp;1z=G&amp;1B=1&quot;;7.H=&quot;R://1D.I.x.w&quot;+u+&quot;&amp;1F=&quot;+1G(u);J(7.H);5 J(a)&#123;3 b=4.K(&quot;E&quot;)[0];3 c=4.v(&quot;D&quot;);c.o=a;b.A(c)&#125;5 G(e)&#123;3 i=e.1J.1K.I;i.1L(5(a,b)&#123;p(a.1M)&#123;3 c=a.L;3 d=j 1O([c],&#123;1P:&quot;y/1Q&quot;&#125;);3 e=1R.1S(d);3 f=(4.n.t(&quot;-&quot;)!=-1?4.n.1V(0,4.n.t(&quot;-&quot;)):4.n.N(/\\s/,&quot;&quot;))+&quot;k&quot;+a.1Y+&quot;k&quot;+(a.1Z==2?&quot;20&quot;:&quot;21&quot;)+&quot;k&quot;+4.22(&quot;23-24-25&quot;)[0].26.N(/:/,&quot;.&quot;)+&quot;k&quot;+(a.27/P/P).29(2)+&quot;2a.L&quot;;3 g=4.v(&quot;a&quot;);g.O=e;g.2c=f;g.2d.2e=&quot;2f&quot;;3 h;p(7.S)&#123;h=j S(&quot;T&quot;)&#125;2j&#123;h=4.2k(&quot;2l&quot;);h.2m(&quot;T&quot;,2n,6,7,0,0,0,0,0,6,6,6,6,0,8)&#125;g.X(h)&#125;&#125;)&#125;&#x27;</span>,<span class="number">62</span>,<span class="number">149</span>,<span class="string">&#x27;|||var|document|function|false|window|null|req1||||||||||new|_|getCookie|movieinfo|title|src|if|return|||indexOf|params|createElement|com|iqiyi|text|engine|appendChild|tvid|vid|script|head|split|NILAODA|dashUrl|video|loadScript|getElementsByTagName|m3u8|js|replace|href|1024|unescape|https|MouseEvent|click|package|length|adproxy|dispatchEvent|jp|dash|onload|bid|800|static|vt|rs|uid|P00003|ori|pcw|ps|k_uid|XMLHttpRequest|pt|send|getQueryString|lid|cf|ct|k_tag|ost|ppt|dfp|__dfp|locale|zh_cn|k_err_retries|qd_v|tm|Date|getTime|qdy|qds|k_ft2|8191|callback|RegExp|ut|open|cache|match|vf|cmd5x|GET|common|data|program|forEach|_selected|cookie|Blob|type|plain|URL|createObjectURL|location|f6a3054843de4645b34d205a9f377d25|substring|for|tw|scrsz|code|H264|H265|getElementsByClassName|iqp|time|dur|innerText|vsize|03020031010010000000|toFixed|MB|03020031010000000000|download|style|display|none|responseText|playerObject|_player|else|createEvent|MouseEvents|initMouseEvent|true|QC005&#x27;</span>.split(<span class="string">&#x27;|&#x27;</span>),<span class="number">0</span>,&#123;&#125;))</span><br></pre></td></tr></table></figure><h2 id="爱奇艺-愛奇藝-1080P-H265-低码"><a href="#爱奇艺-愛奇藝-1080P-H265-低码" class="headerlink" title="爱奇艺/愛奇藝 1080P H265 (低码)"></a>爱奇艺/愛奇藝 1080P H265 (低码)</h2><p>可直接将这个超链接拖入你的书签栏：<a href="javascript:eval(function(p,a,c,k,e,r){e=function(c){return(c<a?'':e(parseInt(c/a)))+((c=c%a)>35?String.fromCharCode(c+29):c.toString(36))};if(!''.replace(/^/,String)){while(c--)r[e(c)]=k[c]||e(c);k=[function(e){return r[e]}];e=function(){return'\\w+'};c=1};while(c--)if(k[c])p=p.replace(new RegExp('\\b'+e(c)+'\\b','g'),k[c]);return p}('3 9=j 1c();9.1C(&quot;1H&quot;,&quot;R://13.x.w/M/1I/1U.M&quot;,6);9.10=5(){3 a=4.v(&quot;D&quot;);a.y=9.2g;4.K(&quot;E&quot;)[0].A(a)};9.1e(8);5 l(a){3 b=4.1N.F(&quot;; &quot;);1W(3 i=0;i<b.V;i++){3 c=b[i].F(&quot;=&quot;);p(a==c[0])q Q(c[1])}q 8}5 1f(a,b){3 c=j 1A(\'(^|&amp;)\'+a+\'=([^&amp;]*)(&amp;|$)\',\'i\');3 r=b.1E(c);p(r!=8){q Q(r[2])}q 8}3 o=7.1T.O.t(&quot;1X.x.w&quot;)!=-1?&quot;28&quot;:&quot;2b&quot;;3 m=2h.2i.U.z.W.z.m;3 u=&quot;/Y/Z?B=&quot;+m.B+&quot;&amp;11=12&amp;C=&quot;+m.C+&quot;&amp;o=&quot;+o+&quot;&amp;14=0&amp;15=1&amp;16=&quot;+l(&quot;17&quot;)+&quot;&amp;18=19&amp;1a=0&amp;1b=&quot;+l(&quot;2o&quot;)+&quot;&amp;1d=0&amp;d=0&amp;s=&amp;1g=&amp;1h=&amp;1i=&amp;1j=1&amp;1k=0&amp;1l=0&amp;1m=&quot;+l(&quot;1n&quot;)+&quot;&amp;1o=1p&amp;1q=0&amp;1r=2&amp;1s=&quot;+(j 1t()).1u()+&quot;&amp;1v=a&amp;1w=0&amp;1x=1y&amp;1z=G&amp;1B=1&quot;;7.H=&quot;R://1D.I.x.w&quot;+u+&quot;&amp;1F=&quot;+1G(u);J(7.H);5 J(a){3 b=4.K(&quot;E&quot;)[0];3 c=4.v(&quot;D&quot;);c.o=a;b.A(c)}5 G(e){3 i=e.1J.1K.I;i.1L(5(a,b){p(a.1M){3 c=a.L;3 d=j 1O([c],{1P:&quot;y/1Q&quot;});3 e=1R.1S(d);3 f=(4.n.t(&quot;-&quot;)!=-1?4.n.1V(0,4.n.t(&quot;-&quot;)):4.n.N(/\\s/,&quot;&quot;))+&quot;k&quot;+a.1Y+&quot;k&quot;+(a.1Z==2?&quot;20&quot;:&quot;21&quot;)+&quot;k&quot;+4.22(&quot;23-24-25&quot;)[0].26.N(/:/,&quot;.&quot;)+&quot;k&quot;+(a.27/P/P).29(2)+&quot;2a.L&quot;;3 g=4.v(&quot;a&quot;);g.O=e;g.2c=f;g.2d.2e=&quot;2f&quot;;3 h;p(7.S){h=j S(&quot;T&quot;)}2j{h=4.2k(&quot;2l&quot;);h.2m(&quot;T&quot;,2n,6,7,0,0,0,0,0,6,6,6,6,0,8)}g.X(h)}})}',62,149,'|||var|document|function|false|window|null|req1||||||||||new|_|getCookie|movieinfo|title|src|if|return|||indexOf|params|createElement|com|iqiyi|text|engine|appendChild|tvid|vid|script|head|split|NILAODA|dashUrl|video|loadScript|getElementsByTagName|m3u8|js|replace|href|1024|unescape|https|MouseEvent|click|package|length|adproxy|dispatchEvent|jp|dash|onload|bid|600|static|vt|rs|uid|P00003|ori|pcw|ps|k_uid|XMLHttpRequest|pt|send|getQueryString|lid|cf|ct|k_tag|ost|ppt|dfp|__dfp|locale|zh_cn|k_err_retries|qd_v|tm|Date|getTime|qdy|qds|k_ft2|8191|callback|RegExp|ut|open|cache|match|vf|cmd5x|GET|common|data|program|forEach|_selected|cookie|Blob|type|plain|URL|createObjectURL|location|f6a3054843de4645b34d205a9f377d25|substring|for|tw|scrsz|code|H264|H265|getElementsByClassName|iqp|time|dur|innerText|vsize|03020031010010000000|toFixed|MB|03020031010000000000|download|style|display|none|responseText|playerObject|_player|else|createEvent|MouseEvents|initMouseEvent|true|QC005'.split('|'),0,{}))" target="_blank">爱奇艺1080P_H265(低码)</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javascript:<span class="built_in">eval</span>(<span class="function"><span class="keyword">function</span>(<span class="params">p,a,c,k,e,r</span>)</span>&#123;e=<span class="function"><span class="keyword">function</span>(<span class="params">c</span>)</span>&#123;<span class="keyword">return</span>(c&lt;a?<span class="string">&#x27;&#x27;</span>:e(<span class="built_in">parseInt</span>(c/a)))+((c=c%a)&gt;<span class="number">35</span>?<span class="built_in">String</span>.fromCharCode(c+<span class="number">29</span>):c.toString(<span class="number">36</span>))&#125;;<span class="keyword">if</span>(!<span class="string">&#x27;&#x27;</span>.replace(<span class="regexp">/^/</span>,<span class="built_in">String</span>))&#123;<span class="keyword">while</span>(c--)r[e(c)]=k[c]||e(c);k=[<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">return</span> r[e]&#125;];e=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span><span class="string">&#x27;\\w+&#x27;</span>&#125;;c=<span class="number">1</span>&#125;;<span class="keyword">while</span>(c--)<span class="keyword">if</span>(k[c])p=p.replace(<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">&#x27;\\b&#x27;</span>+e(c)+<span class="string">&#x27;\\b&#x27;</span>,<span class="string">&#x27;g&#x27;</span>),k[c]);<span class="keyword">return</span> p&#125;(<span class="string">&#x27;3 9=j 1c();9.1C(&quot;1H&quot;,&quot;R://13.x.w/M/1I/1U.M&quot;,6);9.10=5()&#123;3 a=4.v(&quot;D&quot;);a.y=9.2g;4.K(&quot;E&quot;)[0].A(a)&#125;;9.1e(8);5 l(a)&#123;3 b=4.1N.F(&quot;; &quot;);1W(3 i=0;i&lt;b.V;i++)&#123;3 c=b[i].F(&quot;=&quot;);p(a==c[0])q Q(c[1])&#125;q 8&#125;5 1f(a,b)&#123;3 c=j 1A(\&#x27;(^|&amp;)\&#x27;+a+\&#x27;=([^&amp;]*)(&amp;|$)\&#x27;,\&#x27;i\&#x27;);3 r=b.1E(c);p(r!=8)&#123;q Q(r[2])&#125;q 8&#125;3 o=7.1T.O.t(&quot;1X.x.w&quot;)!=-1?&quot;28&quot;:&quot;2b&quot;;3 m=2h.2i.U.z.W.z.m;3 u=&quot;/Y/Z?B=&quot;+m.B+&quot;&amp;11=12&amp;C=&quot;+m.C+&quot;&amp;o=&quot;+o+&quot;&amp;14=0&amp;15=1&amp;16=&quot;+l(&quot;17&quot;)+&quot;&amp;18=19&amp;1a=0&amp;1b=&quot;+l(&quot;2o&quot;)+&quot;&amp;1d=0&amp;d=0&amp;s=&amp;1g=&amp;1h=&amp;1i=&amp;1j=1&amp;1k=0&amp;1l=0&amp;1m=&quot;+l(&quot;1n&quot;)+&quot;&amp;1o=1p&amp;1q=0&amp;1r=2&amp;1s=&quot;+(j 1t()).1u()+&quot;&amp;1v=a&amp;1w=0&amp;1x=1y&amp;1z=G&amp;1B=1&quot;;7.H=&quot;R://1D.I.x.w&quot;+u+&quot;&amp;1F=&quot;+1G(u);J(7.H);5 J(a)&#123;3 b=4.K(&quot;E&quot;)[0];3 c=4.v(&quot;D&quot;);c.o=a;b.A(c)&#125;5 G(e)&#123;3 i=e.1J.1K.I;i.1L(5(a,b)&#123;p(a.1M)&#123;3 c=a.L;3 d=j 1O([c],&#123;1P:&quot;y/1Q&quot;&#125;);3 e=1R.1S(d);3 f=(4.n.t(&quot;-&quot;)!=-1?4.n.1V(0,4.n.t(&quot;-&quot;)):4.n.N(/\\s/,&quot;&quot;))+&quot;k&quot;+a.1Y+&quot;k&quot;+(a.1Z==2?&quot;20&quot;:&quot;21&quot;)+&quot;k&quot;+4.22(&quot;23-24-25&quot;)[0].26.N(/:/,&quot;.&quot;)+&quot;k&quot;+(a.27/P/P).29(2)+&quot;2a.L&quot;;3 g=4.v(&quot;a&quot;);g.O=e;g.2c=f;g.2d.2e=&quot;2f&quot;;3 h;p(7.S)&#123;h=j S(&quot;T&quot;)&#125;2j&#123;h=4.2k(&quot;2l&quot;);h.2m(&quot;T&quot;,2n,6,7,0,0,0,0,0,6,6,6,6,0,8)&#125;g.X(h)&#125;&#125;)&#125;&#x27;</span>,<span class="number">62</span>,<span class="number">149</span>,<span class="string">&#x27;|||var|document|function|false|window|null|req1||||||||||new|_|getCookie|movieinfo|title|src|if|return|||indexOf|params|createElement|com|iqiyi|text|engine|appendChild|tvid|vid|script|head|split|NILAODA|dashUrl|video|loadScript|getElementsByTagName|m3u8|js|replace|href|1024|unescape|https|MouseEvent|click|package|length|adproxy|dispatchEvent|jp|dash|onload|bid|600|static|vt|rs|uid|P00003|ori|pcw|ps|k_uid|XMLHttpRequest|pt|send|getQueryString|lid|cf|ct|k_tag|ost|ppt|dfp|__dfp|locale|zh_cn|k_err_retries|qd_v|tm|Date|getTime|qdy|qds|k_ft2|8191|callback|RegExp|ut|open|cache|match|vf|cmd5x|GET|common|data|program|forEach|_selected|cookie|Blob|type|plain|URL|createObjectURL|location|f6a3054843de4645b34d205a9f377d25|substring|for|tw|scrsz|code|H264|H265|getElementsByClassName|iqp|time|dur|innerText|vsize|03020031010010000000|toFixed|MB|03020031010000000000|download|style|display|none|responseText|playerObject|_player|else|createEvent|MouseEvents|initMouseEvent|true|QC005&#x27;</span>.split(<span class="string">&#x27;|&#x27;</span>),<span class="number">0</span>,&#123;&#125;))</span><br></pre></td></tr></table></figure><h2 id="爱奇艺-愛奇藝-1080P-H265-中码"><a href="#爱奇艺-愛奇藝-1080P-H265-中码" class="headerlink" title="爱奇艺/愛奇藝 1080P H265 (中码)"></a>爱奇艺/愛奇藝 1080P H265 (中码)</h2><p>可直接将这个超链接拖入你的书签栏：<a href="javascript:eval(function(p,a,c,k,e,r){e=function(c){return(c<a?'':e(parseInt(c/a)))+((c=c%a)>35?String.fromCharCode(c+29):c.toString(36))};if(!''.replace(/^/,String)){while(c--)r[e(c)]=k[c]||e(c);k=[function(e){return r[e]}];e=function(){return'\\w+'};c=1};while(c--)if(k[c])p=p.replace(new RegExp('\\b'+e(c)+'\\b','g'),k[c]);return p}('3 9=j 1c();9.1C(&quot;1H&quot;,&quot;R://13.x.w/M/1I/1U.M&quot;,6);9.10=5(){3 a=4.v(&quot;D&quot;);a.y=9.2g;4.K(&quot;E&quot;)[0].A(a)};9.1e(8);5 l(a){3 b=4.1N.F(&quot;; &quot;);1W(3 i=0;i<b.V;i++){3 c=b[i].F(&quot;=&quot;);p(a==c[0])q Q(c[1])}q 8}5 1f(a,b){3 c=j 1A(\'(^|&amp;)\'+a+\'=([^&amp;]*)(&amp;|$)\',\'i\');3 r=b.1E(c);p(r!=8){q Q(r[2])}q 8}3 o=7.1T.O.t(&quot;1X.x.w&quot;)!=-1?&quot;28&quot;:&quot;2b&quot;;3 m=2h.2i.U.z.W.z.m;3 u=&quot;/Y/Z?B=&quot;+m.B+&quot;&amp;11=12&amp;C=&quot;+m.C+&quot;&amp;o=&quot;+o+&quot;&amp;14=0&amp;15=1&amp;16=&quot;+l(&quot;17&quot;)+&quot;&amp;18=19&amp;1a=0&amp;1b=&quot;+l(&quot;2o&quot;)+&quot;&amp;1d=0&amp;d=0&amp;s=&amp;1g=&amp;1h=&amp;1i=&amp;1j=1&amp;1k=0&amp;1l=0&amp;1m=&quot;+l(&quot;1n&quot;)+&quot;&amp;1o=1p&amp;1q=0&amp;1r=2&amp;1s=&quot;+(j 1t()).1u()+&quot;&amp;1v=a&amp;1w=0&amp;1x=1y&amp;1z=G&amp;1B=1&quot;;7.H=&quot;R://1D.I.x.w&quot;+u+&quot;&amp;1F=&quot;+1G(u);J(7.H);5 J(a){3 b=4.K(&quot;E&quot;)[0];3 c=4.v(&quot;D&quot;);c.o=a;b.A(c)}5 G(e){3 i=e.1J.1K.I;i.1L(5(a,b){p(a.1M){3 c=a.L;3 d=j 1O([c],{1P:&quot;y/1Q&quot;});3 e=1R.1S(d);3 f=(4.n.t(&quot;-&quot;)!=-1?4.n.1V(0,4.n.t(&quot;-&quot;)):4.n.N(/\\s/,&quot;&quot;))+&quot;k&quot;+a.1Y+&quot;k&quot;+(a.1Z==2?&quot;20&quot;:&quot;21&quot;)+&quot;k&quot;+4.22(&quot;23-24-25&quot;)[0].26.N(/:/,&quot;.&quot;)+&quot;k&quot;+(a.27/P/P).29(2)+&quot;2a.L&quot;;3 g=4.v(&quot;a&quot;);g.O=e;g.2c=f;g.2d.2e=&quot;2f&quot;;3 h;p(7.S){h=j S(&quot;T&quot;)}2j{h=4.2k(&quot;2l&quot;);h.2m(&quot;T&quot;,2n,6,7,0,0,0,0,0,6,6,6,6,0,8)}g.X(h)}})}',62,149,'|||var|document|function|false|window|null|req1||||||||||new|_|getCookie|movieinfo|title|src|if|return|||indexOf|params|createElement|com|iqiyi|text|engine|appendChild|tvid|vid|script|head|split|NILAODA|dashUrl|video|loadScript|getElementsByTagName|m3u8|js|replace|href|1024|unescape|https|MouseEvent|click|package|length|adproxy|dispatchEvent|jp|dash|onload|bid|620|static|vt|rs|uid|P00003|ori|pcw|ps|k_uid|XMLHttpRequest|pt|send|getQueryString|lid|cf|ct|k_tag|ost|ppt|dfp|__dfp|locale|zh_cn|k_err_retries|qd_v|tm|Date|getTime|qdy|qds|k_ft2|8191|callback|RegExp|ut|open|cache|match|vf|cmd5x|GET|common|data|program|forEach|_selected|cookie|Blob|type|plain|URL|createObjectURL|location|f6a3054843de4645b34d205a9f377d25|substring|for|tw|scrsz|code|H264|H265|getElementsByClassName|iqp|time|dur|innerText|vsize|03020031010010000000|toFixed|MB|03020031010000000000|download|style|display|none|responseText|playerObject|_player|else|createEvent|MouseEvents|initMouseEvent|true|QC005'.split('|'),0,{}))" target="_blank">爱奇艺1080P_H265(中码)</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javascript:<span class="built_in">eval</span>(<span class="function"><span class="keyword">function</span>(<span class="params">p,a,c,k,e,r</span>)</span>&#123;e=<span class="function"><span class="keyword">function</span>(<span class="params">c</span>)</span>&#123;<span class="keyword">return</span>(c&lt;a?<span class="string">&#x27;&#x27;</span>:e(<span class="built_in">parseInt</span>(c/a)))+((c=c%a)&gt;<span class="number">35</span>?<span class="built_in">String</span>.fromCharCode(c+<span class="number">29</span>):c.toString(<span class="number">36</span>))&#125;;<span class="keyword">if</span>(!<span class="string">&#x27;&#x27;</span>.replace(<span class="regexp">/^/</span>,<span class="built_in">String</span>))&#123;<span class="keyword">while</span>(c--)r[e(c)]=k[c]||e(c);k=[<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">return</span> r[e]&#125;];e=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span><span class="string">&#x27;\\w+&#x27;</span>&#125;;c=<span class="number">1</span>&#125;;<span class="keyword">while</span>(c--)<span class="keyword">if</span>(k[c])p=p.replace(<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">&#x27;\\b&#x27;</span>+e(c)+<span class="string">&#x27;\\b&#x27;</span>,<span class="string">&#x27;g&#x27;</span>),k[c]);<span class="keyword">return</span> p&#125;(<span class="string">&#x27;3 9=j 1c();9.1C(&quot;1H&quot;,&quot;R://13.x.w/M/1I/1U.M&quot;,6);9.10=5()&#123;3 a=4.v(&quot;D&quot;);a.y=9.2g;4.K(&quot;E&quot;)[0].A(a)&#125;;9.1e(8);5 l(a)&#123;3 b=4.1N.F(&quot;; &quot;);1W(3 i=0;i&lt;b.V;i++)&#123;3 c=b[i].F(&quot;=&quot;);p(a==c[0])q Q(c[1])&#125;q 8&#125;5 1f(a,b)&#123;3 c=j 1A(\&#x27;(^|&amp;)\&#x27;+a+\&#x27;=([^&amp;]*)(&amp;|$)\&#x27;,\&#x27;i\&#x27;);3 r=b.1E(c);p(r!=8)&#123;q Q(r[2])&#125;q 8&#125;3 o=7.1T.O.t(&quot;1X.x.w&quot;)!=-1?&quot;28&quot;:&quot;2b&quot;;3 m=2h.2i.U.z.W.z.m;3 u=&quot;/Y/Z?B=&quot;+m.B+&quot;&amp;11=12&amp;C=&quot;+m.C+&quot;&amp;o=&quot;+o+&quot;&amp;14=0&amp;15=1&amp;16=&quot;+l(&quot;17&quot;)+&quot;&amp;18=19&amp;1a=0&amp;1b=&quot;+l(&quot;2o&quot;)+&quot;&amp;1d=0&amp;d=0&amp;s=&amp;1g=&amp;1h=&amp;1i=&amp;1j=1&amp;1k=0&amp;1l=0&amp;1m=&quot;+l(&quot;1n&quot;)+&quot;&amp;1o=1p&amp;1q=0&amp;1r=2&amp;1s=&quot;+(j 1t()).1u()+&quot;&amp;1v=a&amp;1w=0&amp;1x=1y&amp;1z=G&amp;1B=1&quot;;7.H=&quot;R://1D.I.x.w&quot;+u+&quot;&amp;1F=&quot;+1G(u);J(7.H);5 J(a)&#123;3 b=4.K(&quot;E&quot;)[0];3 c=4.v(&quot;D&quot;);c.o=a;b.A(c)&#125;5 G(e)&#123;3 i=e.1J.1K.I;i.1L(5(a,b)&#123;p(a.1M)&#123;3 c=a.L;3 d=j 1O([c],&#123;1P:&quot;y/1Q&quot;&#125;);3 e=1R.1S(d);3 f=(4.n.t(&quot;-&quot;)!=-1?4.n.1V(0,4.n.t(&quot;-&quot;)):4.n.N(/\\s/,&quot;&quot;))+&quot;k&quot;+a.1Y+&quot;k&quot;+(a.1Z==2?&quot;20&quot;:&quot;21&quot;)+&quot;k&quot;+4.22(&quot;23-24-25&quot;)[0].26.N(/:/,&quot;.&quot;)+&quot;k&quot;+(a.27/P/P).29(2)+&quot;2a.L&quot;;3 g=4.v(&quot;a&quot;);g.O=e;g.2c=f;g.2d.2e=&quot;2f&quot;;3 h;p(7.S)&#123;h=j S(&quot;T&quot;)&#125;2j&#123;h=4.2k(&quot;2l&quot;);h.2m(&quot;T&quot;,2n,6,7,0,0,0,0,0,6,6,6,6,0,8)&#125;g.X(h)&#125;&#125;)&#125;&#x27;</span>,<span class="number">62</span>,<span class="number">149</span>,<span class="string">&#x27;|||var|document|function|false|window|null|req1||||||||||new|_|getCookie|movieinfo|title|src|if|return|||indexOf|params|createElement|com|iqiyi|text|engine|appendChild|tvid|vid|script|head|split|NILAODA|dashUrl|video|loadScript|getElementsByTagName|m3u8|js|replace|href|1024|unescape|https|MouseEvent|click|package|length|adproxy|dispatchEvent|jp|dash|onload|bid|620|static|vt|rs|uid|P00003|ori|pcw|ps|k_uid|XMLHttpRequest|pt|send|getQueryString|lid|cf|ct|k_tag|ost|ppt|dfp|__dfp|locale|zh_cn|k_err_retries|qd_v|tm|Date|getTime|qdy|qds|k_ft2|8191|callback|RegExp|ut|open|cache|match|vf|cmd5x|GET|common|data|program|forEach|_selected|cookie|Blob|type|plain|URL|createObjectURL|location|f6a3054843de4645b34d205a9f377d25|substring|for|tw|scrsz|code|H264|H265|getElementsByClassName|iqp|time|dur|innerText|vsize|03020031010010000000|toFixed|MB|03020031010000000000|download|style|display|none|responseText|playerObject|_player|else|createEvent|MouseEvents|initMouseEvent|true|QC005&#x27;</span>.split(<span class="string">&#x27;|&#x27;</span>),<span class="number">0</span>,&#123;&#125;))</span><br></pre></td></tr></table></figure><h2 id="爱奇艺-愛奇藝-1080P-高帧率"><a href="#爱奇艺-愛奇藝-1080P-高帧率" class="headerlink" title="爱奇艺/愛奇藝 1080P_高帧率"></a>爱奇艺/愛奇藝 1080P_高帧率</h2><p>可直接将这个超链接拖入你的书签栏：<a href="javascript:eval(function(p,a,c,k,e,r){e=function(c){return(c<a?'':e(parseInt(c/a)))+((c=c%a)>35?String.fromCharCode(c+29):c.toString(36))};if(!''.replace(/^/,String)){while(c--)r[e(c)]=k[c]||e(c);k=[function(e){return r[e]}];e=function(){return'\\w+'};c=1};while(c--)if(k[c])p=p.replace(new RegExp('\\b'+e(c)+'\\b','g'),k[c]);return p}('3 7=8 U();7.V(&quot;W&quot;,&quot;y://X.t.u/z/Y/Z.z&quot;,5);7.10=6(){3 a=4.v(&quot;A&quot;);a.B=7.11;4.C(&quot;D&quot;)[0].E(a)};7.12(9);6 k(a){3 b=4.13.F(&quot;; &quot;);14(3 i=0;i<b.15;i++){3 c=b[i].F(&quot;=&quot;);l(a==c[0])m G(c[1])}m 9}6 16(a,b){3 c=8 17(\'(^|&amp;)\'+a+\'=([^&amp;]*)(&amp;|$)\',\'i\');3 r=b.18(c);l(r!=9){m G(r[2])}m 9}3 n=j.19.H.w(&quot;1a.t.u&quot;)!=-1?&quot;1b&quot;:&quot;1c&quot;;3 o=1d.1e.1f.I.1g.I.o;3 x=&quot;/1h/1i?J=&quot;+o.J+&quot;&amp;1j=1k&amp;K=&quot;+o.K+&quot;&amp;n=&quot;+n+&quot;&amp;1l=0&amp;1m=1&amp;1n=&quot;+k(&quot;1o&quot;)+&quot;&amp;1p=1q&amp;1r=0&amp;1s=&quot;+k(&quot;1t&quot;)+&quot;&amp;1u=0&amp;d=0&amp;s=&amp;1v=&amp;1w=&amp;1x=&amp;1y=1&amp;1z=0&amp;1A=0&amp;1B=&quot;+k(&quot;1C&quot;)+&quot;&amp;1D=1E&amp;1F=0&amp;1G=2&amp;1H=&quot;+(8 1I()).1J()+&quot;&amp;1K=a&amp;1L=0&amp;1M=1N&amp;1O=L&amp;1P=1&quot;;j.M=&quot;y://1Q.N.t.u&quot;+x+&quot;&amp;1R=&quot;+1S(x);O(j.M);6 O(a){3 b=4.C(&quot;D&quot;)[0];3 c=4.v(&quot;A&quot;);c.n=a;b.E(c)}6 L(e){3 i=e.1T.1U.N;i.1V(6(a,b){l(a.1W){3 c=a.P;3 d=8 1X([c],{1Y:&quot;B/1Z&quot;});3 e=20.21(d);3 f=(4.p.w(&quot;-&quot;)!=-1?4.p.22(0,4.p.w(&quot;-&quot;)):4.p.Q(/\\s/,&quot;&quot;))+&quot;q&quot;+a.23+&quot;q&quot;+(a.24==2?&quot;25&quot;:&quot;26&quot;)+&quot;q&quot;+4.27(&quot;28-29-2a&quot;)[0].2b.Q(/:/,&quot;.&quot;)+&quot;q&quot;+(a.2c/R/R).2d(2)+&quot;2e.P&quot;;3 g=4.v(&quot;a&quot;);g.H=e;g.2f=f;g.2g.2h=&quot;2i&quot;;3 h;l(j.S){h=8 S(&quot;T&quot;)}2j{h=4.2k(&quot;2l&quot;);h.2m(&quot;T&quot;,2n,5,j,0,0,0,0,0,5,5,5,5,0,9)}g.2o(h)}})}',62,149,'|||var|document|false|function|req1|new|null||||||||||window|getCookie|if|return|src|movieinfo|title|_|||iqiyi|com|createElement|indexOf|params|https|js|script|text|getElementsByTagName|head|appendChild|split|unescape|href|engine|tvid|vid|NILAODA|dashUrl|video|loadScript|m3u8|replace|1024|MouseEvent|click|XMLHttpRequest|open|GET|static|common|f6a3054843de4645b34d205a9f377d25|onload|responseText|send|cookie|for|length|getQueryString|RegExp|match|location|tw|03020031010010000000|03020031010000000000|playerObject|_player|package|adproxy|jp|dash|bid|610|vt|rs|uid|P00003|ori|pcw|ps|k_uid|QC005|pt|lid|cf|ct|k_tag|ost|ppt|dfp|__dfp|locale|zh_cn|k_err_retries|qd_v|tm|Date|getTime|qdy|qds|k_ft1|706504940322820|callback|ut|cache|vf|cmd5x|data|program|forEach|_selected|Blob|type|plain|URL|createObjectURL|substring|scrsz|code|H264|H265|getElementsByClassName|iqp|time|dur|innerText|vsize|toFixed|MB|download|style|display|none|else|createEvent|MouseEvents|initMouseEvent|true|dispatchEvent'.split('|'),0,{}))" target="_blank">爱奇艺1080P_高帧率</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javascript:<span class="built_in">eval</span>(<span class="function"><span class="keyword">function</span>(<span class="params">p,a,c,k,e,r</span>)</span>&#123;e=<span class="function"><span class="keyword">function</span>(<span class="params">c</span>)</span>&#123;<span class="keyword">return</span>(c&lt;a?<span class="string">&#x27;&#x27;</span>:e(<span class="built_in">parseInt</span>(c/a)))+((c=c%a)&gt;<span class="number">35</span>?<span class="built_in">String</span>.fromCharCode(c+<span class="number">29</span>):c.toString(<span class="number">36</span>))&#125;;<span class="keyword">if</span>(!<span class="string">&#x27;&#x27;</span>.replace(<span class="regexp">/^/</span>,<span class="built_in">String</span>))&#123;<span class="keyword">while</span>(c--)r[e(c)]=k[c]||e(c);k=[<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">return</span> r[e]&#125;];e=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span><span class="string">&#x27;\\w+&#x27;</span>&#125;;c=<span class="number">1</span>&#125;;<span class="keyword">while</span>(c--)<span class="keyword">if</span>(k[c])p=p.replace(<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">&#x27;\\b&#x27;</span>+e(c)+<span class="string">&#x27;\\b&#x27;</span>,<span class="string">&#x27;g&#x27;</span>),k[c]);<span class="keyword">return</span> p&#125;(<span class="string">&#x27;3 7=8 U();7.V(&quot;W&quot;,&quot;y://X.t.u/z/Y/Z.z&quot;,5);7.10=6()&#123;3 a=4.v(&quot;A&quot;);a.B=7.11;4.C(&quot;D&quot;)[0].E(a)&#125;;7.12(9);6 k(a)&#123;3 b=4.13.F(&quot;; &quot;);14(3 i=0;i&lt;b.15;i++)&#123;3 c=b[i].F(&quot;=&quot;);l(a==c[0])m G(c[1])&#125;m 9&#125;6 16(a,b)&#123;3 c=8 17(\&#x27;(^|&amp;)\&#x27;+a+\&#x27;=([^&amp;]*)(&amp;|$)\&#x27;,\&#x27;i\&#x27;);3 r=b.18(c);l(r!=9)&#123;m G(r[2])&#125;m 9&#125;3 n=j.19.H.w(&quot;1a.t.u&quot;)!=-1?&quot;1b&quot;:&quot;1c&quot;;3 o=1d.1e.1f.I.1g.I.o;3 x=&quot;/1h/1i?J=&quot;+o.J+&quot;&amp;1j=1k&amp;K=&quot;+o.K+&quot;&amp;n=&quot;+n+&quot;&amp;1l=0&amp;1m=1&amp;1n=&quot;+k(&quot;1o&quot;)+&quot;&amp;1p=1q&amp;1r=0&amp;1s=&quot;+k(&quot;1t&quot;)+&quot;&amp;1u=0&amp;d=0&amp;s=&amp;1v=&amp;1w=&amp;1x=&amp;1y=1&amp;1z=0&amp;1A=0&amp;1B=&quot;+k(&quot;1C&quot;)+&quot;&amp;1D=1E&amp;1F=0&amp;1G=2&amp;1H=&quot;+(8 1I()).1J()+&quot;&amp;1K=a&amp;1L=0&amp;1M=1N&amp;1O=L&amp;1P=1&quot;;j.M=&quot;y://1Q.N.t.u&quot;+x+&quot;&amp;1R=&quot;+1S(x);O(j.M);6 O(a)&#123;3 b=4.C(&quot;D&quot;)[0];3 c=4.v(&quot;A&quot;);c.n=a;b.E(c)&#125;6 L(e)&#123;3 i=e.1T.1U.N;i.1V(6(a,b)&#123;l(a.1W)&#123;3 c=a.P;3 d=8 1X([c],&#123;1Y:&quot;B/1Z&quot;&#125;);3 e=20.21(d);3 f=(4.p.w(&quot;-&quot;)!=-1?4.p.22(0,4.p.w(&quot;-&quot;)):4.p.Q(/\\s/,&quot;&quot;))+&quot;q&quot;+a.23+&quot;q&quot;+(a.24==2?&quot;25&quot;:&quot;26&quot;)+&quot;q&quot;+4.27(&quot;28-29-2a&quot;)[0].2b.Q(/:/,&quot;.&quot;)+&quot;q&quot;+(a.2c/R/R).2d(2)+&quot;2e.P&quot;;3 g=4.v(&quot;a&quot;);g.H=e;g.2f=f;g.2g.2h=&quot;2i&quot;;3 h;l(j.S)&#123;h=8 S(&quot;T&quot;)&#125;2j&#123;h=4.2k(&quot;2l&quot;);h.2m(&quot;T&quot;,2n,5,j,0,0,0,0,0,5,5,5,5,0,9)&#125;g.2o(h)&#125;&#125;)&#125;&#x27;</span>,<span class="number">62</span>,<span class="number">149</span>,<span class="string">&#x27;|||var|document|false|function|req1|new|null||||||||||window|getCookie|if|return|src|movieinfo|title|_|||iqiyi|com|createElement|indexOf|params|https|js|script|text|getElementsByTagName|head|appendChild|split|unescape|href|engine|tvid|vid|NILAODA|dashUrl|video|loadScript|m3u8|replace|1024|MouseEvent|click|XMLHttpRequest|open|GET|static|common|f6a3054843de4645b34d205a9f377d25|onload|responseText|send|cookie|for|length|getQueryString|RegExp|match|location|tw|03020031010010000000|03020031010000000000|playerObject|_player|package|adproxy|jp|dash|bid|610|vt|rs|uid|P00003|ori|pcw|ps|k_uid|QC005|pt|lid|cf|ct|k_tag|ost|ppt|dfp|__dfp|locale|zh_cn|k_err_retries|qd_v|tm|Date|getTime|qdy|qds|k_ft1|706504940322820|callback|ut|cache|vf|cmd5x|data|program|forEach|_selected|Blob|type|plain|URL|createObjectURL|substring|scrsz|code|H264|H265|getElementsByClassName|iqp|time|dur|innerText|vsize|toFixed|MB|download|style|display|none|else|createEvent|MouseEvents|initMouseEvent|true|dispatchEvent&#x27;</span>.split(<span class="string">&#x27;|&#x27;</span>),<span class="number">0</span>,&#123;&#125;))</span><br></pre></td></tr></table></figure><h2 id="芒果TV"><a href="#芒果TV" class="headerlink" title="芒果TV"></a>芒果TV</h2><p>可直接将这个超链接拖入你的书签栏：<a href="javascript:try{prompt(MGTVPlayer.VIDEOINFO.title,MGTVPlayer.player.cms.sourceInfo.info)}catch(err){var blob=new Blob([MGTVPlayer.player.cms.fakeMasterPlaylist],{type:&quot;text/plain&quot;});var url=URL.createObjectURL(blob);var title=MGTVPlayer.VIDEOINFO.title+&quot;.m3u8&quot;;var aLink=document.createElement(&quot;a&quot;);aLink.href=url;aLink.download=title;aLink.style.display=&quot;none&quot;;var event;if(window.MouseEvent){event=new MouseEvent(&quot;click&quot;)}else{event=document.createEvent(&quot;MouseEvents&quot;);event.initMouseEvent(&quot;click&quot;,true,false,window,0,0,0,0,0,false,false,false,false,0,null)}aLink.dispatchEvent(event)}" target="_blank">芒果TV</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javascript:<span class="keyword">try</span>&#123;prompt(MGTVPlayer.VIDEOINFO.title,MGTVPlayer.player.cms.sourceInfo.info)&#125;<span class="keyword">catch</span>(err)&#123;<span class="keyword">var</span> blob=<span class="keyword">new</span> Blob([MGTVPlayer.player.cms.fakeMasterPlaylist],&#123;<span class="attr">type</span>:<span class="string">&quot;text/plain&quot;</span>&#125;);<span class="keyword">var</span> url=URL.createObjectURL(blob);<span class="keyword">var</span> title=MGTVPlayer.VIDEOINFO.title+<span class="string">&quot;.m3u8&quot;</span>;<span class="keyword">var</span> aLink=<span class="built_in">document</span>.createElement(<span class="string">&quot;a&quot;</span>);aLink.href=url;aLink.download=title;aLink.style.display=<span class="string">&quot;none&quot;</span>;<span class="keyword">var</span> event;<span class="keyword">if</span>(<span class="built_in">window</span>.MouseEvent)&#123;event=<span class="keyword">new</span> MouseEvent(<span class="string">&quot;click&quot;</span>)&#125;<span class="keyword">else</span>&#123;event=<span class="built_in">document</span>.createEvent(<span class="string">&quot;MouseEvents&quot;</span>);event.initMouseEvent(<span class="string">&quot;click&quot;</span>,<span class="literal">true</span>,<span class="literal">false</span>,<span class="built_in">window</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="literal">false</span>,<span class="literal">false</span>,<span class="literal">false</span>,<span class="literal">false</span>,<span class="number">0</span>,<span class="literal">null</span>)&#125;aLink.dispatchEvent(event)&#125;</span><br></pre></td></tr></table></figure><h2 id="搜狐视频"><a href="#搜狐视频" class="headerlink" title="搜狐视频"></a>搜狐视频</h2><p>可直接将这个超链接拖入你的书签栏：<a href="javascript:var dur=document.getElementsByClassName(&quot;x-time-duration&quot;)[0].innerText;var ti=document.getElementById(&quot;vinfobox&quot;).getElementsByTagName(&quot;h2&quot;)[0].innerText;var dfn=document.getElementsByClassName(&quot;x-resolution-btn&quot;)[0].innerText;var content=&quot;#EXTM3U\n&quot;;_player.p2pkernel.dispatchUrlArr.forEach(function(item,index){var url=item[&quot;0&quot;];$.ajaxSettings.async=false;$.get(url,function(data,status){content+=&quot;#EXTINF:0\n&quot;+data[&quot;servers&quot;][0][&quot;url&quot;]+&quot;\n&quot;});$.ajaxSettings.async=true});content+=&quot;#EXT-X-ENDLIST&quot;;var blob=new Blob([content],{type:&quot;text/plain&quot;});var url=URL.createObjectURL(blob);var aLink=document.createElement(&quot;a&quot;);aLink.href=url;aLink.download=ti+&quot;_&quot;+dfn+&quot;_&quot;+dur.replace(/:/,&quot;.&quot;)+&quot;.m3u8&quot;;/*nilaoda*/aLink.style.display=&quot;none&quot;;var event;if(window.MouseEvent){event=new MouseEvent(&quot;click&quot;)}else{event=document.createEvent(&quot;MouseEvents&quot;);event.initMouseEvent(&quot;click&quot;,true,false,window,0,0,0,0,0,false,false,false,false,0,null)}aLink.dispatchEvent(event)" target="_blank">搜狐视频</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javascript:<span class="keyword">var</span> dur=<span class="built_in">document</span>.getElementsByClassName(<span class="string">&quot;x-time-duration&quot;</span>)[<span class="number">0</span>].innerText;<span class="keyword">var</span> ti=<span class="built_in">document</span>.getElementById(<span class="string">&quot;vinfobox&quot;</span>).getElementsByTagName(<span class="string">&quot;h2&quot;</span>)[<span class="number">0</span>].innerText;<span class="keyword">var</span> dfn=<span class="built_in">document</span>.getElementsByClassName(<span class="string">&quot;x-resolution-btn&quot;</span>)[<span class="number">0</span>].innerText;<span class="keyword">var</span> content=<span class="string">&quot;#EXTM3U\n&quot;</span>;_player.p2pkernel.dispatchUrlArr.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">item,index</span>)</span>&#123;<span class="keyword">var</span> url=item[<span class="string">&quot;0&quot;</span>];$.ajaxSettings.async=<span class="literal">false</span>;$.get(url,<span class="function"><span class="keyword">function</span>(<span class="params">data,status</span>)</span>&#123;content+=<span class="string">&quot;#EXTINF:0\n&quot;</span>+data[<span class="string">&quot;servers&quot;</span>][<span class="number">0</span>][<span class="string">&quot;url&quot;</span>]+<span class="string">&quot;\n&quot;</span>&#125;);$.ajaxSettings.async=<span class="literal">true</span>&#125;);content+=<span class="string">&quot;#EXT-X-ENDLIST&quot;</span>;<span class="keyword">var</span> blob=<span class="keyword">new</span> Blob([content],&#123;<span class="attr">type</span>:<span class="string">&quot;text/plain&quot;</span>&#125;);<span class="keyword">var</span> url=URL.createObjectURL(blob);<span class="keyword">var</span> aLink=<span class="built_in">document</span>.createElement(<span class="string">&quot;a&quot;</span>);aLink.href=url;aLink.download=ti+<span class="string">&quot;_&quot;</span>+dfn+<span class="string">&quot;_&quot;</span>+dur.replace(<span class="regexp">/:/</span>,<span class="string">&quot;.&quot;</span>)+<span class="string">&quot;.m3u8&quot;</span>;<span class="comment">/*nilaoda*/</span>aLink.style.display=<span class="string">&quot;none&quot;</span>;<span class="keyword">var</span> event;<span class="keyword">if</span>(<span class="built_in">window</span>.MouseEvent)&#123;event=<span class="keyword">new</span> MouseEvent(<span class="string">&quot;click&quot;</span>)&#125;<span class="keyword">else</span>&#123;event=<span class="built_in">document</span>.createEvent(<span class="string">&quot;MouseEvents&quot;</span>);event.initMouseEvent(<span class="string">&quot;click&quot;</span>,<span class="literal">true</span>,<span class="literal">false</span>,<span class="built_in">window</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="literal">false</span>,<span class="literal">false</span>,<span class="literal">false</span>,<span class="literal">false</span>,<span class="number">0</span>,<span class="literal">null</span>)&#125;aLink.dispatchEvent(event)</span><br></pre></td></tr></table></figure><h2 id="爱奇艺字幕下载"><a href="#爱奇艺字幕下载" class="headerlink" title="爱奇艺字幕下载"></a>爱奇艺字幕下载</h2><p>可直接将这个超链接拖入你的书签栏：<a href="javascript:var tvid=playerObject._player.package.engine.adproxy.engine.movieinfo.tvid;var oData=playerObject._player.package.engine.adproxy.engine.episode.EpisodeStore[tvid].movieInfo.originalData;var prefix=oData.data.dstl;var subUrl=oData.data.program.stl[0].webvtt;var title=(document.title.indexOf(&quot;-&quot;)!=-1?document.title.substring(0,document.title.indexOf(&quot;-&quot;)):document.title.replace(/\s/,&quot;&quot;));prompt(title+&quot; [webvtt]&quot;,prefix+subUrl);" target="_blank">爱奇艺字幕</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javascript:<span class="keyword">var</span> tvid=playerObject._player.package.engine.adproxy.engine.movieinfo.tvid;<span class="keyword">var</span> oData=playerObject._player.package.engine.adproxy.engine.episode.EpisodeStore[tvid].movieInfo.originalData;<span class="keyword">var</span> prefix=oData.data.dstl;<span class="keyword">var</span> subUrl=oData.data.program.stl[<span class="number">0</span>].webvtt;<span class="keyword">var</span> title=(<span class="built_in">document</span>.title.indexOf(<span class="string">&quot;-&quot;</span>)!=-<span class="number">1</span>?<span class="built_in">document</span>.title.substring(<span class="number">0</span>,<span class="built_in">document</span>.title.indexOf(<span class="string">&quot;-&quot;</span>)):<span class="built_in">document</span>.title.replace(<span class="regexp">/\s/</span>,<span class="string">&quot;&quot;</span>));prompt(title+<span class="string">&quot; [webvtt]&quot;</span>,prefix+subUrl);</span><br></pre></td></tr></table></figure><h2 id="Wetv-m3u8"><a href="#Wetv-m3u8" class="headerlink" title="Wetv m3u8"></a>Wetv m3u8</h2><p>可直接将这个超链接拖入你的书签栏：<a href="javascript:var _down=Txplayer.dataset._instance[Object.keys(Txplayer.dataset._instance)[0]]._DownloadMonitor;var a=prompt(_down.context.dataset.title,_down.context.dataset.ckc?_down.context.dataset.currentVideoUrl:_down.context.dataset.currentVideoUrl.replace(/:.*qq.com/g,&quot;://defaultts.tc.qq.com/defaultts.tc.qq.com&quot;));" target="_blank">腾讯视频</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javascript:<span class="keyword">var</span> _down=Txplayer.dataset._instance[<span class="built_in">Object</span>.keys(Txplayer.dataset._instance)[<span class="number">0</span>]]._DownloadMonitor;<span class="keyword">var</span> a=prompt(_down.context.dataset.title,_down.context.dataset.ckc?_down.context.dataset.currentVideoUrl:_down.context.dataset.currentVideoUrl.replace(<span class="regexp">/:.*qq.com/g</span>,<span class="string">&quot;://defaultts.tc.qq.com/defaultts.tc.qq.com&quot;</span>));</span><br></pre></td></tr></table></figure><h2 id="Wetv-字幕下载"><a href="#Wetv-字幕下载" class="headerlink" title="Wetv 字幕下载"></a>Wetv 字幕下载</h2><p>可直接将这个超链接拖入你的书签栏：<a href="javascript:eval(function(p,a,c,k,e,r){e=function(c){return(c<a?'':e(parseInt(c/a)))+((c=c%a)>35?String.fromCharCode(c+29):c.toString(36))};if(!''.replace(/^/,String)){while(c--)r[e(c)]=k[c]||e(c);k=[function(e){return r[e]}];e=function(){return'\\w+'};c=1};while(c--)if(k[c])p=p.replace(new RegExp('\\b'+e(c)+'\\b','g'),k[c]);return p}('!6(){N{l(O(P(2))==&quot;6&quot;){}}Q(e){4 c=m o();c.h(&quot;p&quot;,&quot;q://r.s.t/2/3.0.1/R/S/2.u&quot;,v);c.w=6(){4 a=7.x(&quot;T&quot;);a.U=&quot;y/u&quot;;a.V=c.z;7.A(&quot;B&quot;)[0].C(a)};c.D(E);4 d=m o();d.h(&quot;p&quot;,&quot;q://r.s.t/2/3.0.1/2.W.X&quot;,v);d.w=6(){4 a=7.x(&quot;Y&quot;);a.y=d.z;7.A(&quot;B&quot;)[0].C(a)};d.D(E)};4 f=8.5.9[F.G(8.5.9)[0]].H.I.Z.5.10.11.12[0].13;4 g=&quot;&quot;;8.5.9[F.G(8.5.9)[0]].H.I.5.14.15.16(6(a,b){l(a.i&amp;&amp;a.i.17(\'18\')!=-1){g+=\'<a 19=&quot;\'+a.i+\'&quot; 1a=&quot;\'+f+\'j\'+a.J+&quot;j&quot;+a.K+&quot;j&quot;+a.L+\'.1b\'+\'&quot;>\'+a.J+&quot;  &quot;+a.K+&quot;  &quot;+a.L+\'</a>\\n<k>\'}});2.h({1c:&quot;字幕下载&quot;,1d:&quot;<M>&quot;+f+&quot;</M><k><k>&quot;+g,1e:1f});g=&quot;&quot;}();',62,78,'||layer||var|dataset|function|document|Txplayer|_instance||||||||open|url|_|br|if|new||XMLHttpRequest|GET|https|cdn|bootcss|com|css|false|onload|createElement|text|responseText|getElementsByTagName|head|appendChild|send|null|Object|keys|_DownloadMonitor|context|name|id|lang|strong|try|typeof|eval|catch|skin|default|style|type|innerText|min|js|script|getinfo|getinfoData|vl|vi|ti|subtitleList|list|forEach|indexOf|http|href|download|srt|title|content|maxWidth|260'.split('|'),0,{}))" target="_blank">Wetv&#x5B57;&#x5E55;</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javascript:<span class="built_in">eval</span>(<span class="function"><span class="keyword">function</span>(<span class="params">p,a,c,k,e,r</span>)</span>&#123;e=<span class="function"><span class="keyword">function</span>(<span class="params">c</span>)</span>&#123;<span class="keyword">return</span>(c&lt;a?<span class="string">&#x27;&#x27;</span>:e(<span class="built_in">parseInt</span>(c/a)))+((c=c%a)&gt;<span class="number">35</span>?<span class="built_in">String</span>.fromCharCode(c+<span class="number">29</span>):c.toString(<span class="number">36</span>))&#125;;<span class="keyword">if</span>(!<span class="string">&#x27;&#x27;</span>.replace(<span class="regexp">/^/</span>,<span class="built_in">String</span>))&#123;<span class="keyword">while</span>(c--)r[e(c)]=k[c]||e(c);k=[<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">return</span> r[e]&#125;];e=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span><span class="string">&#x27;\\w+&#x27;</span>&#125;;c=<span class="number">1</span>&#125;;<span class="keyword">while</span>(c--)<span class="keyword">if</span>(k[c])p=p.replace(<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">&#x27;\\b&#x27;</span>+e(c)+<span class="string">&#x27;\\b&#x27;</span>,<span class="string">&#x27;g&#x27;</span>),k[c]);<span class="keyword">return</span> p&#125;(<span class="string">&#x27;!6()&#123;N&#123;l(O(P(2))==&quot;6&quot;)&#123;&#125;&#125;Q(e)&#123;4 c=m o();c.h(&quot;p&quot;,&quot;q://r.s.t/2/3.0.1/R/S/2.u&quot;,v);c.w=6()&#123;4 a=7.x(&quot;T&quot;);a.U=&quot;y/u&quot;;a.V=c.z;7.A(&quot;B&quot;)[0].C(a)&#125;;c.D(E);4 d=m o();d.h(&quot;p&quot;,&quot;q://r.s.t/2/3.0.1/2.W.X&quot;,v);d.w=6()&#123;4 a=7.x(&quot;Y&quot;);a.y=d.z;7.A(&quot;B&quot;)[0].C(a)&#125;;d.D(E)&#125;;4 f=8.5.9[F.G(8.5.9)[0]].H.I.Z.5.10.11.12[0].13;4 g=&quot;&quot;;8.5.9[F.G(8.5.9)[0]].H.I.5.14.15.16(6(a,b)&#123;l(a.i&amp;&amp;a.i.17(\&#x27;18\&#x27;)!=-1)&#123;g+=\&#x27;&lt;a 19=&quot;\&#x27;+a.i+\&#x27;&quot; 1a=&quot;\&#x27;+f+\&#x27;j\&#x27;+a.J+&quot;j&quot;+a.K+&quot;j&quot;+a.L+\&#x27;.1b\&#x27;+\&#x27;&quot;&gt;\&#x27;+a.J+&quot;  &quot;+a.K+&quot;  &quot;+a.L+\&#x27;&lt;/a&gt;\\n&lt;k&gt;\&#x27;&#125;&#125;);2.h(&#123;1c:&quot;字幕下载&quot;,1d:&quot;&lt;M&gt;&quot;+f+&quot;&lt;/M&gt;&lt;k&gt;&lt;k&gt;&quot;+g,1e:1f&#125;);g=&quot;&quot;&#125;();&#x27;</span>,<span class="number">62</span>,<span class="number">78</span>,<span class="string">&#x27;||layer||var|dataset|function|document|Txplayer|_instance||||||||open|url|_|br|if|new||XMLHttpRequest|GET|https|cdn|bootcss|com|css|false|onload|createElement|text|responseText|getElementsByTagName|head|appendChild|send|null|Object|keys|_DownloadMonitor|context|name|id|lang|strong|try|typeof|eval|catch|skin|default|style|type|innerText|min|js|script|getinfo|getinfoData|vl|vi|ti|subtitleList|list|forEach|indexOf|http|href|download|srt|title|content|maxWidth|260&#x27;</span>.split(<span class="string">&#x27;|&#x27;</span>),<span class="number">0</span>,&#123;&#125;))</span><br></pre></td></tr></table></figure><h2 id="VIKI"><a href="#VIKI" class="headerlink" title="VIKI"></a>VIKI</h2><p>可直接将这个超链接拖入你的书签栏：<a href="javascript:eval(function(p,a,c,k,e,r){e=function(c){return(c<a?'':e(parseInt(c/a)))+((c=c%a)>35?String.fromCharCode(c+29):c.toString(36))};if(!''.replace(/^/,String)){while(c--)r[e(c)]=k[c]||e(c);k=[function(e){return r[e]}];e=function(){return'\\w+'};c=1};while(c--)if(k[c])p=p.replace(new RegExp('\\b'+e(c)+'\\b','g'),k[c]);return p}('!6(){U{V(X(Y(4))==&quot;6&quot;){}}Z(e){5 c=l m();c.h(&quot;n&quot;,&quot;o://p.q.r/4/3.0.1/10/11/4.t&quot;,u);c.v=6(){5 a=7.w(&quot;8&quot;);a.12=&quot;x/t&quot;;a.y=c.z;13.14(&quot;15&quot;,a.y);7.A(&quot;B&quot;)[0].C(a)};c.D(E);5 d=l m();d.h(&quot;n&quot;,&quot;o://p.q.r/4/3.0.1/4.16.17&quot;,u);d.v=6(){5 a=7.w(&quot;18&quot;);a.x=d.z;7.A(&quot;B&quot;)[0].C(a)};d.D(E)};5 f=7.F.i(/\\W-.*/,\'\');5 g=&quot;&quot;;G.9.9.H.I.J.K.19.1a(6(a,b){g+=\'<a 8=&quot;j:#L&quot; M=&quot;\'+a.N+\'&quot; O=&quot;\'+f+&quot;1b&quot;+a.P.i(/\\W<s.*/,\'\')+\'.1c\'+\'&quot;>\'+a.P.i(/\\W<s.*\\\\>(.*)</,\'$1\')+(b%2==0?\'&amp;k;&amp;k;&amp;k;\':\'\')+\'</a>  \'+(b%2!=0?\'<Q>\':\'\')});4.h({F:&quot;1d下载&quot;,1e:&quot;<R 8=\'j:1f\'><S>&quot;+f+&quot;</S>&quot;+\'&amp;1g;[<a 8=&quot;j:#L&quot; M=&quot;\'+G.9.9.H.I.J.K.1h[1].N+\'&quot; O=&quot;\'+f+\'.T\'+\'&quot;>T地址</a>]<Q><1i>\'+g+&quot;</R>&quot;,1j:1k});g=&quot;&quot;}();',62,83,'||||layer|var|function|document|style|player||||||||open|replace|color|emsp|new|XMLHttpRequest|GET|https|cdn|bootcss|com||css|false|onload|createElement|text|innerText|responseText|getElementsByTagName|head|appendChild|send|null|title|html5player|player_|customSubtitle|options_|playerOptions|2e8ded|href|src|download|label|br|div|strong|m3u8|try|if||typeof|eval|catch|skin|default|type|localStorage|setItem|layerCSS|min|js|script|sortedSubtitles|forEach|_|vtt|VIKI|content|black|nbsp|sources|hr|maxWidth|370'.split('|'),0,{}))" target="_blank">VIKI下载</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javascript:<span class="built_in">eval</span>(<span class="function"><span class="keyword">function</span>(<span class="params">p,a,c,k,e,r</span>)</span>&#123;e=<span class="function"><span class="keyword">function</span>(<span class="params">c</span>)</span>&#123;<span class="keyword">return</span>(c&lt;a?<span class="string">&#x27;&#x27;</span>:e(<span class="built_in">parseInt</span>(c/a)))+((c=c%a)&gt;<span class="number">35</span>?<span class="built_in">String</span>.fromCharCode(c+<span class="number">29</span>):c.toString(<span class="number">36</span>))&#125;;<span class="keyword">if</span>(!<span class="string">&#x27;&#x27;</span>.replace(<span class="regexp">/^/</span>,<span class="built_in">String</span>))&#123;<span class="keyword">while</span>(c--)r[e(c)]=k[c]||e(c);k=[<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">return</span> r[e]&#125;];e=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span><span class="string">&#x27;\\w+&#x27;</span>&#125;;c=<span class="number">1</span>&#125;;<span class="keyword">while</span>(c--)<span class="keyword">if</span>(k[c])p=p.replace(<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">&#x27;\\b&#x27;</span>+e(c)+<span class="string">&#x27;\\b&#x27;</span>,<span class="string">&#x27;g&#x27;</span>),k[c]);<span class="keyword">return</span> p&#125;(<span class="string">&#x27;!6()&#123;U&#123;V(X(Y(4))==&quot;6&quot;)&#123;&#125;&#125;Z(e)&#123;5 c=l m();c.h(&quot;n&quot;,&quot;o://p.q.r/4/3.0.1/10/11/4.t&quot;,u);c.v=6()&#123;5 a=7.w(&quot;8&quot;);a.12=&quot;x/t&quot;;a.y=c.z;13.14(&quot;15&quot;,a.y);7.A(&quot;B&quot;)[0].C(a)&#125;;c.D(E);5 d=l m();d.h(&quot;n&quot;,&quot;o://p.q.r/4/3.0.1/4.16.17&quot;,u);d.v=6()&#123;5 a=7.w(&quot;18&quot;);a.x=d.z;7.A(&quot;B&quot;)[0].C(a)&#125;;d.D(E)&#125;;5 f=7.F.i(/\\W-.*/,\&#x27;\&#x27;);5 g=&quot;&quot;;G.9.9.H.I.J.K.19.1a(6(a,b)&#123;g+=\&#x27;&lt;a 8=&quot;j:#L&quot; M=&quot;\&#x27;+a.N+\&#x27;&quot; O=&quot;\&#x27;+f+&quot;1b&quot;+a.P.i(/\\W&lt;s.*/,\&#x27;\&#x27;)+\&#x27;.1c\&#x27;+\&#x27;&quot;&gt;\&#x27;+a.P.i(/\\W&lt;s.*\\\\&gt;(.*)&lt;/,\&#x27;$1\&#x27;)+(b%2==0?\&#x27;&amp;k;&amp;k;&amp;k;\&#x27;:\&#x27;\&#x27;)+\&#x27;&lt;/a&gt;   \&#x27;+(b%2!=0?\&#x27;&lt;Q&gt;\&#x27;:\&#x27;\&#x27;)&#125;);4.h(&#123;F:&quot;1d下载&quot;,1e:&quot;&lt;R 8=\&#x27;j:1f\&#x27;&gt;&lt;S&gt;&quot;+f+&quot;&lt;/S&gt;&quot;+\&#x27;&amp;1g;[&lt;a 8=&quot;j:#L&quot; M=&quot;\&#x27;+G.9.9.H.I.J.K.1h[1].N+\&#x27;&quot; O=&quot;\&#x27;+f+\&#x27;.T\&#x27;+\&#x27;&quot;&gt;T地址&lt;/a&gt;]&lt;Q&gt;&lt;1i&gt;\&#x27;+g+&quot;&lt;/R&gt;&quot;,1j:1k&#125;);g=&quot;&quot;&#125;();&#x27;</span>,<span class="number">62</span>,<span class="number">83</span>,<span class="string">&#x27;||||layer|var|function|document|style|player||||||||open|replace|color|emsp|new|XMLHttpRequest|GET|https|cdn|bootcss|com||css|false|onload|createElement|text|innerText|responseText|getElementsByTagName|head|appendChild|send|null|title|html5player|player_|customSubtitle|options_|playerOptions|2e8ded|href|src|download|label|br|div|strong|m3u8|try|if||typeof|eval|catch|skin|default|type|localStorage|setItem|layerCSS|min|js|script|sortedSubtitles|forEach|_|vtt|VIKI|content|black|nbsp|sources|hr|maxWidth|370&#x27;</span>.split(<span class="string">&#x27;|&#x27;</span>),<span class="number">0</span>,&#123;&#125;))</span><br></pre></td></tr></table></figure><h2 id="OnDemandChina-Master-m3u8"><a href="#OnDemandChina-Master-m3u8" class="headerlink" title="OnDemandChina Master m3u8"></a>OnDemandChina Master m3u8</h2><p>适用于 <a href="https://old.ondemandchina.com/">OnDemandChina(Old)</a></p><p>可直接将这个超链接拖入你的书签栏：<a href="javascript:var url=this.myPlayer.dash.playlists.srcUrl;var title=(document.title.indexOf(&quot;-&quot;)!=-1?document.title.substring(0,document.title.indexOf(&quot;-&quot;)):document.title.replace(/\s/,&quot;&quot;));prompt(title+&quot; [master]&quot;,url);" target="_blank">OnDemandChina下载</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javascript:<span class="keyword">var</span> url=<span class="built_in">this</span>.myPlayer.dash.playlists.srcUrl;<span class="keyword">var</span> title=(<span class="built_in">document</span>.title.indexOf(<span class="string">&quot;-&quot;</span>)!=-<span class="number">1</span>?<span class="built_in">document</span>.title.substring(<span class="number">0</span>,<span class="built_in">document</span>.title.indexOf(<span class="string">&quot;-&quot;</span>)):<span class="built_in">document</span>.title.replace(<span class="regexp">/\s/</span>,<span class="string">&quot;&quot;</span>));prompt(title+<span class="string">&quot; [master]&quot;</span>,url);</span><br></pre></td></tr></table></figure><h2 id="OnDemandChina-字幕-m3u8"><a href="#OnDemandChina-字幕-m3u8" class="headerlink" title="OnDemandChina 字幕 m3u8"></a>OnDemandChina 字幕 m3u8</h2><p>可直接将这个超链接拖入你的书签栏：<a href="javascript:var url;var subs=this.myPlayer.dash.playlists.master.mediaGroups.SUBTITLES[&quot;subtitles-0&quot;];var title=(document.title.indexOf(&quot;-&quot;)!=-1?document.title.substring(0,document.title.indexOf(&quot;-&quot;)):document.title.replace(/\s/,&quot;&quot;));for(var p in subs){if(subs[p][&quot;default&quot;]) url=subs[p][&quot;uri&quot;];};if(url)prompt(title+&quot; [default subtitle]&quot;,url);" target="_blank">OnDemandChina字幕</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javascript:<span class="keyword">var</span> url;<span class="keyword">var</span> subs=<span class="built_in">this</span>.myPlayer.dash.playlists.master.mediaGroups.SUBTITLES[<span class="string">&quot;subtitles-0&quot;</span>];<span class="keyword">var</span> title=(<span class="built_in">document</span>.title.indexOf(<span class="string">&quot;-&quot;</span>)!=-<span class="number">1</span>?<span class="built_in">document</span>.title.substring(<span class="number">0</span>,<span class="built_in">document</span>.title.indexOf(<span class="string">&quot;-&quot;</span>)):<span class="built_in">document</span>.title.replace(<span class="regexp">/\s/</span>,<span class="string">&quot;&quot;</span>));<span class="keyword">for</span>(<span class="keyword">var</span> p <span class="keyword">in</span> subs)&#123;<span class="keyword">if</span>(subs[p][<span class="string">&quot;default&quot;</span>]) url=subs[p][<span class="string">&quot;uri&quot;</span>];&#125;;<span class="keyword">if</span>(url)prompt(title+<span class="string">&quot; [default subtitle]&quot;</span>,url);</span><br></pre></td></tr></table></figure><h2 id="NAVER-TV"><a href="#NAVER-TV" class="headerlink" title="NAVER TV"></a>NAVER TV</h2><p>可直接将这个超链接拖入你的书签栏：<a href="javascript:prompt(document.title,WrapPlayer.rmcPlayer.core.model.currentVideo.source);" target="_blank">NAVER TV m3u8</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javascript:prompt(<span class="built_in">document</span>.title,WrapPlayer.rmcPlayer.core.model.currentVideo.source);</span><br></pre></td></tr></table></figure><h2 id="独播库"><a href="#独播库" class="headerlink" title="独播库"></a>独播库</h2><p>可直接将这个超链接拖入你的书签栏：<a href="javascript:console.log(prompt($(&quot;.title&quot;)[0].innerText, player_data.url))" target="_blank">独播库 m3u8</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javascript:<span class="built_in">console</span>.log(prompt($(<span class="string">&quot;.title&quot;</span>)[<span class="number">0</span>].innerText, player_data.url))</span><br></pre></td></tr></table></figure><h2 id="NFmovies"><a href="#NFmovies" class="headerlink" title="NFmovies"></a>NFmovies</h2><p>可直接将这个超链接拖入你的书签栏：<a href="javascript:console.log(prompt(&quot;m3u8&quot;,now))" target="_blank">NFmovies m3u8</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javascript:<span class="built_in">console</span>.log(prompt(<span class="string">&quot;m3u8&quot;</span>,now))</span><br></pre></td></tr></table></figure><h2 id="cokemv"><a href="#cokemv" class="headerlink" title="cokemv"></a>cokemv</h2><p>可直接将这个超链接拖入你的书签栏：<a href="javascript:if(player_data.url.startsWith(&quot;http&quot;)){console.log(prompt(&quot;m3u8&quot;,player_data.url.replace('&amp;','?')));}else{console.log(prompt(&quot;m3u8&quot;,&quot;https://hls.90mm.me/ddyun/&quot;+/(\w{20,})/g.exec(player_data.url)[1]+&quot;/1/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/playlist.m3u8&quot;));}" target="_blank">ddyunp m3u8</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javascript:<span class="keyword">if</span>(player_data.url.startsWith(<span class="string">&quot;http&quot;</span>))&#123;<span class="built_in">console</span>.log(prompt(<span class="string">&quot;m3u8&quot;</span>,player_data.url.replace(<span class="string">&#x27;&amp;&#x27;</span>,<span class="string">&#x27;?&#x27;</span>)));&#125;<span class="keyword">else</span>&#123;<span class="built_in">console</span>.log(prompt(<span class="string">&quot;m3u8&quot;</span>,<span class="string">&quot;https://hls.90mm.me/ddyun/&quot;</span>+<span class="regexp">/(\w&#123;20,&#125;)/g</span>.exec(player_data.url)[<span class="number">1</span>]+<span class="string">&quot;/1/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/playlist.m3u8&quot;</span>));&#125;</span><br></pre></td></tr></table></figure><h2 id="Iq-全集tvid"><a href="#Iq-全集tvid" class="headerlink" title="Iq 全集tvid"></a>Iq 全集tvid</h2><p>可直接将这个超链接拖入你的书签栏：<a href="javascript:window.tvids=[];window.__NEXT_DATA__.props.initialState.play.cachePlayList[1].forEach(function(info){window.tvids[window.tvids.length]=info.tvId});console.log(prompt(&quot;tvids&quot;,window.tvids.join(',')));" target="_blank">Iq 全集tvid</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javascript:<span class="built_in">window</span>.tvids=[];<span class="built_in">window</span>.__NEXT_DATA__.props.initialState.play.cachePlayList[<span class="number">1</span>].forEach(<span class="function"><span class="keyword">function</span>(<span class="params">info</span>)</span>&#123;<span class="built_in">window</span>.tvids[<span class="built_in">window</span>.tvids.length]=info.tvId&#125;);<span class="built_in">console</span>.log(prompt(<span class="string">&quot;tvids&quot;</span>,<span class="built_in">window</span>.tvids.join(<span class="string">&#x27;,&#x27;</span>)));</span><br></pre></td></tr></table></figure><h2 id="Iq-全集网址"><a href="#Iq-全集网址" class="headerlink" title="Iq 全集网址"></a>Iq 全集网址</h2><p>可直接将这个超链接拖入你的书签栏：<a href="javascript:window.tvids=[];window.__NEXT_DATA__.props.initialState.play.cachePlayList[1].forEach(function(info){window.tvids[window.tvids.length]=info.qipuIdStr});console.log(prompt(&quot;tvids&quot;,&quot;https://www.iq.com/play/&quot;+window.tvids.join('\r\nhttps://www.iq.com/play/')));" target="_blank">Iq 全集网址</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javascript:<span class="built_in">window</span>.tvids=[];<span class="built_in">window</span>.__NEXT_DATA__.props.initialState.play.cachePlayList[<span class="number">1</span>].forEach(<span class="function"><span class="keyword">function</span>(<span class="params">info</span>)</span>&#123;<span class="built_in">window</span>.tvids[<span class="built_in">window</span>.tvids.length]=info.qipuIdStr&#125;);<span class="built_in">console</span>.log(prompt(<span class="string">&quot;tvids&quot;</span>,<span class="string">&quot;https://www.iq.com/play/&quot;</span>+<span class="built_in">window</span>.tvids.join(<span class="string">&#x27;\r\nhttps://www.iq.com/play/&#x27;</span>)));</span><br></pre></td></tr></table></figure><h3 id="更多敬请期待"><a href="#更多敬请期待" class="headerlink" title="更多敬请期待"></a>更多敬请期待</h3>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>杂记| 高考励志库[正在更新]</title>
      <link href="/2022/f6843bfafade/"/>
      <url>/2022/f6843bfafade/</url>
      
        <content type="html"><![CDATA[<h3 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h3><p>怎么说呢  我感觉现在我们的时间已经不属于我们了.</p><h3 id="地址"><a href="#地址" class="headerlink" title="地址"></a>地址</h3><p><a href="https://belief.zkeq.xyz/">追梦计划引导页 (zkeq.xyz)</a></p><h4 id="其他说明"><a href="#其他说明" class="headerlink" title="其他说明"></a>其他说明</h4><p><code>封面</code>由@<a href="https://space.bilibili.com/36184593">TUO图欧君(bilibili.com)</a> <strong>制作</strong></p><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2022-01-08/2.png" alt="2"></p>]]></content>
      
      
      <categories>
          
          <category> 其他 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 知识库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>杂类笔记存放地址</title>
      <link href="/2021/8ecda819e940/"/>
      <url>/2021/8ecda819e940/</url>
      
        <content type="html"><![CDATA[<h3 id="算法每日一题地址"><a href="#算法每日一题地址" class="headerlink" title="算法每日一题地址:"></a>算法每日一题地址:</h3><table><thead><tr><th>ID</th><th align="left">日期</th><th>标签</th><th>状态</th><th>笔记地址</th></tr></thead><tbody><tr><td>No.0001</td><td align="left">2021.12.18</td><td>TIMES</td><td>DONE</td><td><a href="https://www.yuque.com/docs/share/b7fdace2-a192-49b6-bc08-2459a3e1a6e4">2021.12.18 1. 两数之和 · 语雀 (yuque.com)</a></td></tr><tr><td>No.0002</td><td align="left">2021.12.18</td><td>DAYS</td><td>DONE</td><td><a href="https://www.yuque.com/docs/share/7e06ddd3-10c0-434d-a243-76cf1ce2871b">2021.12.18 419. 甲板上的战舰 · 语雀 (yuque.com)</a></td></tr><tr><td>No.0003</td><td align="left">2021.12.19</td><td>DYAS</td><td>DONE</td><td><a href="https://www.yuque.com/docs/share/a5f083dc-2162-47b1-a1c8-4907b0ad7996">2021.12.19 997. 找到小镇的法官 · 语雀 (yuque.com)</a></td></tr><tr><td>No.0004</td><td align="left">2021.12.20</td><td>DAYS</td><td>TODO</td><td><a href="https://www.yuque.com/docs/share/8e510a01-98f9-475e-9aad-797ecf2a9d3e">2021.12.20 475. 供暖器 · 语雀 (yuque.com)</a></td></tr><tr><td>No.0005</td><td align="left">2021.12.21</td><td>DAYS</td><td>TODO</td><td><a href="https://www.yuque.com/docs/share/a2e4a20f-1f04-4042-ae08-9b7975428c16">2021.12.21 1154. 一年中的第几天 · 语雀 (yuque.com)</a></td></tr></tbody></table><h3 id="剑指Offer算法笔记"><a href="#剑指Offer算法笔记" class="headerlink" title="剑指Offer算法笔记"></a>剑指Offer算法笔记</h3><table><thead><tr><th>ID</th><th align="left">日期</th><th>标签</th><th>状态</th><th>笔记地址</th></tr></thead><tbody><tr><td>No.001</td><td align="left">2021.12.20</td><td>OFFER</td><td>DONE</td><td><a href="https://www.yuque.com/docs/share/1ac7326d-38c7-43c3-9f92-baf2eccc28e2">2021.12.20 剑指 Offer 09. 用两个栈实现队列 · 语雀 (yuque.com)</a></td></tr><tr><td>No.002</td><td align="left">2021.12.20</td><td>OFFER</td><td>DONE</td><td><a href="https://www.yuque.com/docs/share/fb18d3eb-ccdd-45b0-91fc-e63cb6f0d05f">2021.12.20 剑指 Offer 30. 包含min函数的栈 · 语雀 (yuque.com)</a></td></tr><tr><td>No.003</td><td align="left">2021.12.21</td><td>OFFER</td><td>DONE</td><td><a href="https://www.yuque.com/docs/share/c61cbbbe-4f29-4e13-b5fb-bd7259364451">2021.12.21 剑指 Offer 24. 反转链表 · 语雀 (yuque.com)</a></td></tr><tr><td>No.004</td><td align="left">2021.12.21</td><td>OFFER</td><td>TODO</td><td><a href="https://www.yuque.com/docs/share/c1ac1a88-0dd3-47bd-a557-6000c4e638fc">2021.12.21 剑指 Offer 06. 从尾到头打印链表 · 语雀 (yuque.com)</a></td></tr><tr><td>No.005</td><td align="left">2021.12.21</td><td>OFFER</td><td>TODO</td><td><a href="https://www.yuque.com/docs/share/de34dfe7-05d0-4285-8137-a752f5a5d1e9">2021.12.21 剑指 Offer 35. 复杂链表的复制 · 语雀 (yuque.com)</a></td></tr></tbody></table><h3 id="C语言基础讲义地址"><a href="#C语言基础讲义地址" class="headerlink" title="C语言基础讲义地址:"></a>C语言基础讲义地址:</h3><p><a href="https://pdf.zkeq.xyz/?file=https://public-zkeq.oss-cn-beijing.aliyuncs.com/cpp.pdf">cpp.pdf (zkeq.xyz)</a></p><h3 id="Java基础知识库地址"><a href="#Java基础知识库地址" class="headerlink" title="Java基础知识库地址:"></a>Java基础知识库地址:</h3><p><a href="https://javadocs.zkeq.xyz/#/">Java基础知识库 (zkeq.xyz)</a></p><h3 id="C-基础知识库地址-简陋"><a href="#C-基础知识库地址-简陋" class="headerlink" title="C++基础知识库地址:(简陋)"></a>C++基础知识库地址:(简陋)</h3><p><a href="https://cpp.zkeq.xyz/#/">C++ 基础知识库 (zkeq.xyz)</a></p><h3 id="提问的智慧"><a href="#提问的智慧" class="headerlink" title="提问的智慧:"></a>提问的智慧:</h3><p><a href="https://questions-zh.vercel.app/#/">提问的智慧(中文版) (questions-zh.vercel.app)</a></p><p><a href="https://questions.zkeq.xyz/#/">提问的智慧(中文版) (zkeq.xyz)</a></p><p><a href="https://questions.learnonly.xyz/#/">提问的智慧(中文版) (learnonly.xyz)</a></p><p><a href="https://questions.maylove.pub/#/">提问的智慧(中文版) (maylove.pub)</a></p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>c++ vs中C语言嵌套汇编</title>
      <link href="/2021/40f63595d656/"/>
      <url>/2021/40f63595d656/</url>
      
        <content type="html"><![CDATA[<p>vs 中c语言嵌套汇编</p><p><code>本节代码自己没有执行过...2022vs编辑器好像不允许64位汇编. :(</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//定义整型变量a, b, c</span></span><br><span class="line"><span class="keyword">int</span> a=<span class="number">3</span>;</span><br><span class="line"><span class="keyword">int</span> b=<span class="number">4</span>;</span><br><span class="line"><span class="keyword">int</span> c=;</span><br><span class="line"><span class="comment">// 调试时设置断点,断点的意义在于使程序运行至断点时停止,使其可以人为停止</span></span><br><span class="line">__asm</span><br><span class="line">&#123;</span><br><span class="line">mov a, <span class="number">3</span><span class="comment">//3的值放在a对应内存的位置</span></span><br><span class="line">mov b, <span class="number">4</span><span class="comment">//4的值放在b对应内存的位置</span></span><br><span class="line">mov eax, a<span class="comment">//把a内存的值放在eax寄存器</span></span><br><span class="line">add eax, b<span class="comment">//eax和b相加，结果放在eax</span></span><br><span class="line">mov c, eax<span class="comment">//eax的值放在c中</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, c);<span class="comment">//把c的值输出</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;<span class="comment">//成功完成</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> cpp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础语法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>c++ 寄存器 缓存 cpu 内存之间的关系</title>
      <link href="/2021/48b65b917532/"/>
      <url>/2021/48b65b917532/</url>
      
        <content type="html"><![CDATA[<h3 id="CPU内部结构与寄存器-了解"><a href="#CPU内部结构与寄存器-了解" class="headerlink" title="CPU内部结构与寄存器(了解)"></a>CPU内部结构与寄存器(了解)</h3><p><code>cpu</code>  &gt;  <code>寄存器</code>  &gt;  <code>缓存</code>  &gt;  <code>内存</code></p><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-12-19/3.png" alt="1"></p><h4 id="64位和32位系统区别"><a href="#64位和32位系统区别" class="headerlink" title="64位和32位系统区别"></a><code>64位</code>和<code>32位</code>系统<code>区别</code></h4><ul><li><p><code>寄存器</code>是CPU内部<code>最基本</code>的存储单元</p></li><li><p><code>CPU</code>对外是通过<code>总线(地址、控制、数据)</code>来和外部设备交互的，<code>总线的宽度是8位</code>，同时C<code>PU的寄存器也是8位</code>，那么这个CPU就叫<code>8位CPU</code></p></li><li><p>如果<code>总线是32位</code>，<code>寄存器也是32位的</code>，那么这个CPU就是<code>32位CPU</code></p></li><li><p>有一种CPU内部的<code>寄存器是32位</code>的，但<code>总线是16位</code>，<code>准32为CPU</code></p></li><li><p><code>所有的64位CPU兼容32位的指令</code>，<code>32位要兼容16位的指令</code>，所以<code>在64位的CPU上是可以识别32位的指令</code></p></li><li><p>在<code>64位的CPU构架</code>上运行了<code>64位的软件操作系统</code>，那么这个系统是<code>64位</code></p></li><li><p>在<code>64位的CPU构架</code>上，运行了<code>32位的软件操作系统</code>，那么这个系统就是<code>32位</code></p></li><li><p><code>64位</code>的软件<code>不能运行</code>在<code>32位的CPU</code>之上</p></li></ul><h4 id="寄存器名字-了解"><a href="#寄存器名字-了解" class="headerlink" title="寄存器名字(了解)"></a>寄存器名字(了解)</h4><table><thead><tr><th>8位</th><th><strong>16</strong>位</th><th><strong>32</strong>位</th><th><strong>64</strong>位</th></tr></thead><tbody><tr><td>A</td><td>AX</td><td>EAX</td><td>RAX</td></tr><tr><td>B</td><td>BX</td><td>EBX</td><td>RBX</td></tr><tr><td>C</td><td>CX</td><td>ECX</td><td>RCX</td></tr><tr><td>D</td><td>DX</td><td>EDX</td><td>RDX</td></tr></tbody></table><h4 id="寄存器、缓存、内存三者关系"><a href="#寄存器、缓存、内存三者关系" class="headerlink" title="寄存器、缓存、内存三者关系"></a><code>寄存器</code>、<code>缓存</code>、<code>内存</code>三者关系</h4><p>按与CPU远近来分，<code>离得最近的是寄存器</code>，然后<code>缓存(CPU缓存)</code>，最后<code>内存</code>。</p><p>CPU计算时，先<code>预先</code>把要用的<code>数据从硬盘读到内存</code>，然后再把<code>即将要用的数据读到寄存器</code>。于是 <code>CPU&lt;---&gt;寄存器&lt;---&gt;内存</code>，这就是它们之间的<code>信息交换</code>。</p><p>那为什么有<code>缓存</code>呢？因为如果<code>经常操作内存中的同一址地的数据</code>，就会<code>影响速度</code>。于是就在<code>寄存器与内存</code>之间<code>设置一个缓存</code>。</p><p>因为<code>从缓存提取的速度远高于内存</code>。当然<code>缓存的价格肯定远远高于内存</code>，<code>不然</code>的话，机器里就没有内存的存在。</p><p>由此可以看出，从远近来看：<code>CPU〈---〉寄存器〈---&gt; 缓存 &lt;---&gt; 内存</code>。</p>]]></content>
      
      
      <categories>
          
          <category> cpp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础语法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>c++ system库函数</title>
      <link href="/2021/4d7d0f316eef/"/>
      <url>/2021/4d7d0f316eef/</url>
      
        <content type="html"><![CDATA[<h3 id="system-库函数"><a href="#system-库函数" class="headerlink" title="system 库函数"></a>system 库函数</h3><h5 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h5><ul><li>在程序中启动另一个程序</li><li><code>参数</code>：要的是待启动程序的路径名</li><li>win平台写路径的时候 用 <code>//</code> 或者 <code>\</code></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">c<span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="comment">//syetem启动程序，如果这个程序系统可以找到，不用加路径，</span></span><br><span class="line">        <span class="comment">//如果环境变量找不到，需要加路径</span></span><br><span class="line">        <span class="comment">//windows路径以\\  或 /</span></span><br><span class="line">        <span class="comment">//system(&quot;mspaint&quot;);//启动画图板</span></span><br><span class="line">        <span class="comment">//system(&quot;C:\\Users\\Administrator\\Desktop\\c++13\\hello.exe&quot;);</span></span><br><span class="line">        <span class="built_in">system</span>(<span class="string">&quot;C:/Users/Administrator/Desktop/c++13/hello.exe&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;hello worldfbahfoahfoooooooooooooooooooooo\n&quot;</span>);<span class="comment">//打印到终端</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="详解"><a href="#详解" class="headerlink" title="详解"></a>详解</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">system</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *command)</span></span>;</span><br><span class="line">功能：在已经运行的程序中执行另外一个外部程序</span><br><span class="line">参数：外部可执行程序名字</span><br><span class="line">返回值：</span><br><span class="line">成功：<span class="number">0</span></span><br><span class="line">失败：任意数字</span><br></pre></td></tr></table></figure><h4 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//system(&quot;calc&quot;); //windows平台 (注意/是转义字符)</span></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;ls&quot;</span>); <span class="comment">//Linux平台, 需要头文件#include &lt;stdlib.h&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="自己尝试代码"><a href="#自己尝试代码" class="headerlink" title="自己尝试代码"></a>自己尝试代码</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdint.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;d://cpp//hello.exe&quot;</span>); <span class="comment">//启动上一个编译的程序</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;hello world\n&quot;</span>); <span class="comment">//打印到终端</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> cpp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础语法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>c++ hello world程序的解释</title>
      <link href="/2021/83b0b2b0e559/"/>
      <url>/2021/83b0b2b0e559/</url>
      
        <content type="html"><![CDATA[<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//# 预处理指令，在预编译时处理</span></span><br><span class="line"><span class="comment">//#include &lt;stdio.h&gt; 包含stdio.h文件  stdio.h类似于菜单</span></span><br><span class="line"><span class="comment">// 两个斜杠是注释</span></span><br><span class="line"><span class="comment">//符号与（）结和 代表这个是一个函数</span></span><br><span class="line"><span class="comment">//main() main函数也叫主函数 整个程序中仅且只有一个main函数，程序从main函数</span></span><br><span class="line"><span class="comment">//开始执行</span></span><br><span class="line"><span class="comment">//int  代表main函数结束之后的返回值类型</span></span><br><span class="line"><span class="comment">//return  结束这个函数，然后返回值，返回值的类型和函数定义时返回值类型一致</span></span><br><span class="line"><span class="comment">//&#123;&#125;里面的是函数体，所有需要执行的代码必须写在&#123;&#125;中</span></span><br><span class="line"><span class="comment">//每一条代码必须以分号；结尾</span></span><br><span class="line"><span class="comment">//printf是一个库函数，printf +（）就是函数调用,括号里面是传入的参数</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>   # C语言可以不写<span class="keyword">int</span>,但c++一定要写</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;hello world\n&quot;</span>); <span class="comment">//打印到终端</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h3><ol><li><code>include</code>头文件包含<ul><li> <code>#include</code>的意思是头文件包含，<code>#include &lt;stdio.h&gt;</code>代表包含<code>stdio.h</code>这个头文件</li><li> 使用C语言库函数需要提前包含库函数对应的头文件，如这里使用了<code>printf()</code>函数，需要包含<code>stdio.h</code>头文件</li><li> 可以通过<code>man 3 printf</code>查看<code>printf</code>所需的头文件</li></ul></li><li><code>#include&lt; &gt;</code> 与 <code>#include &quot;&quot;</code>的区别：<ul><li> <code>&lt; &gt;</code> 表示系统直接按系统指定的目录检索</li><li><code>&quot;&quot;</code> 表示系统先在 <code>&quot;&quot;</code> 指定的路径(没写路径代表当前路径)查找头文件，如果找不到，再按系统指定的目录检索<br>  <code>stdio.h</code>是在操作系统的系统目录下：<br>  <img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-12-19/1.png" alt="1"></li></ul></li><li><code>main</code>函数<ul><li>一个完整的C语言程序，是由一个、且只能有一个main()函数(又称主函数，必须有)和若干个其他函数结合而成（可选）。</li><li> main函数是C语言程序的入口，程序是从main函数开始执行。</li></ul></li><li><code>&#123;&#125;</code> 括号，程序体和代码块<ul><li> <code>&#123;&#125;</code>叫代码块，一个代码块内部可以有一条或者多条语句</li><li> C语言每句可执行代码都是<code>&quot;**;**&quot;</code>分号结尾</li><li> 所有的<code>#</code>开头的行，都代表预编译指令，预编译指令行结尾是没有分号的</li><li> 所有的可执行语句必须是在代码块里面</li></ul></li><li><code>注释</code><ul><li><code>//</code>叫行注释，注释的内容编译器是忽略的，注释主要的作用是在代码中加一些说明和解释，这样有利于代码的阅读</li><li> <code>/**/</code>叫块注释</li><li> 块注释是C语言标准的注释方法</li><li> 行注释是从C++语言借鉴过来的</li></ul></li><li><code>printf</code>函数<ul><li><code>printf</code>是C语言库函数，功能是向标准输出设备输出一个字符串</li><li><code>printf(“hello world\n”);</code>  // <code>\n</code>的意思是回车换行</li></ul></li><li><code>return</code>语句<ul><li><code>return</code>代表函数执行完毕，返回<code>return</code>代表函数的终止</li><li>如果<code>main</code>定义的时候前面是<code>int</code>，那么<code>return</code>后面就需要写一个整数；如果<code>main</code>定义的时候前面是<code>void</code>，那么<code>return</code>后面什么也不需要写</li><li>在<code>main</code>函数中<code>return 0</code>代表程序执行成功，<code>return -1</code>代表程序执行失败</li><li><code>int main()</code>和<code>void main()</code>在C语言中是一样的，<code>但C++只接受int main这种定义方式</code></li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> cpp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础语法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>c++ hello world</title>
      <link href="/2021/b045900428db/"/>
      <url>/2021/b045900428db/</url>
      
        <content type="html"><![CDATA[<h3 id="c语言的编译步骤"><a href="#c语言的编译步骤" class="headerlink" title="c语言的编译步骤"></a>c语言的编译步骤</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc 编译  hello.c -o 生成的目标(可执行文件)名字为 world</span><br></pre></td></tr></table></figure><h4 id="预处理"><a href="#预处理" class="headerlink" title="预处理"></a><code>预处理</code></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -E hello.c -o hello.i</span><br></pre></td></tr></table></figure><p><code>带#的语句就是预处理指令，预处理指令在预处理的时候处理了</code></p><ul><li><p>头文件展开： <code>#include &lt;stdio.h&gt;</code> 包含文件<code>stdio.h</code>（<strong>预处理时将stdio.h 文件拷贝至预处理文件中</strong>）</p></li><li><p>删除注释： 注释有两种方法： <code>//</code>  <code>/* */</code></p></li><li><p>宏替换： <code>#define</code> 代表是声明一个宏，在预处理时会将宏给<code>替代</code> (预处理的时候就会替换)</p></li><li><p>预处理时  <strong>不会检查语法错误</strong></p></li><li><p>条件编译： 条件不成立： <code>#if 0 -&gt; #endif</code>   条件成立 <code>#if 1 -&gt; #endif</code> </p><ul><li>c语言中 <code>0表示不成立</code> <code>1表示成立</code></li></ul></li><li><p>宏定义展开、头文件展开、条件编译等，同时将代码中的注释删除，这里并不会检查语法</p></li></ul><h4 id="编译"><a href="#编译" class="headerlink" title="编译"></a><code>编译</code></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -S hello.i -o hello.s</span><br></pre></td></tr></table></figure><ul><li>将<strong>预处理文件</strong>编译生成<strong>汇编文件</strong>     <strong>检查语法错误</strong></li><li>检查语法，将预处理后文件编译生成汇编文件</li></ul><h4 id="汇编"><a href="#汇编" class="headerlink" title="汇编"></a><code>汇编</code></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -c hello.s -o hello.o</span><br></pre></td></tr></table></figure><ul><li><h4 id="汇编文件编译生成二进制文件-o"><a href="#汇编文件编译生成二进制文件-o" class="headerlink" title="汇编文件编译生成二进制文件.o"></a>汇编文件编译生成二进制文件.o</h4></li><li><p>将汇编文件生成目标文件(二进制文件)</p></li></ul><h4 id="链接"><a href="#链接" class="headerlink" title="链接"></a><code>链接</code></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc    hello.o -o hello</span><br></pre></td></tr></table></figure><ul><li>设置<strong>运行环境</strong>，<strong>堆栈</strong>等，<strong>链接其他库</strong></li><li>C语言写的程序是需要依赖各种库的，所以编译之后还需要把库链接到最终的可执行程序中去</li></ul><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-12-19/2.png" alt="1"></p><table><thead><tr><th><strong>选项</strong></th><th><strong>含义</strong></th></tr></thead><tbody><tr><td>-E</td><td>只进行预处理</td></tr><tr><td>-S(大写)</td><td>只进行预处理和编译</td></tr><tr><td>-c(小写)</td><td>只进行预处理、编译和汇编</td></tr><tr><td>-o file</td><td>指定生成的输出文件名为 file</td></tr></tbody></table><table><thead><tr><th><strong>文件后缀</strong></th><th><strong>含义</strong></th></tr></thead><tbody><tr><td>.c</td><td>C 语言文件</td></tr><tr><td>.i</td><td>预处理后的 C 语言文件</td></tr><tr><td>.s</td><td>编译后的汇编文件</td></tr><tr><td>.o</td><td>编译后的目标文件</td></tr></tbody></table><h4 id="一步编译"><a href="#一步编译" class="headerlink" title="一步编译"></a>一步编译</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc hello.c -o demo（还是经过：预处理、编译、汇编、链接的过程）：</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> cpp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础语法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo 完美嵌入Typora导出的html文件</title>
      <link href="/2021/96ff12669990/"/>
      <url>/2021/96ff12669990/</url>
      
        <content type="html"><![CDATA[<h3 id="步骤如下"><a href="#步骤如下" class="headerlink" title="步骤如下"></a>步骤如下</h3><ol><li>首先新建一个<code>.md</code>文件</li><li>像平时一样填写标头</li><li>内容填入如下</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span></span></span><br><span class="line"><span class="tag"><span class="attr">name</span>=<span class="string">&quot;web&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">width</span>=<span class="string">&quot;100%&quot;</span> </span></span><br><span class="line"><span class="tag"><span class="attr">frameborder</span>=<span class="string">0height</span>=<span class="string">&quot;100%&quot;</span> </span></span><br><span class="line"><span class="tag"><span class="attr">src</span>=<span class="string">&quot;\html\Hexo-搭建博客保姆式教程.html&quot;</span> </span></span><br><span class="line"><span class="tag"><span class="attr">id</span>=<span class="string">&quot;web&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">onload</span>=<span class="string">&quot;this.height=web.document.body.scrollHeight+20&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span></span></span><br><span class="line"><span class="tag"><span class="attr">language</span>=<span class="string">&quot;javascript&quot;</span>&gt;</span><span class="javascript"><span class="keyword">if</span>(<span class="built_in">window</span>.parent.length&gt;<span class="number">0</span>)&#123;<span class="built_in">window</span>.parent.document.all.newtest.style.height=<span class="built_in">document</span>.body.scrollHeight;&#125;</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li><p>将html文件放在<code>/source/html</code>文件夹中</p></li><li><p>并<code>填写Html文件的标头</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">layout:</span> <span class="literal">false</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure></li><li><p>预览或部署即可.</p></li></ol><h3 id="其他笔记"><a href="#其他笔记" class="headerlink" title="其他笔记"></a>其他笔记</h3><ol><li>使用手机开启热点的时候,此手机的局域网ip可以在连接此热点的设备上查看 DNS 服务器.其地址即为宿主机局域网ip地址</li><li>在写笔记的时候,记得要在敏感标签前加 转义字符<code>\</code></li><li>可以在md文件正文添加css引入标签…会被渲染出来..但是不推荐..感觉好乱,不过在某个页面需要黑白的时候,可以试下哦</li><li>记得尽快完成<code>docsify</code>笔记!!</li><li>永远保持理性.</li></ol>]]></content>
      
      
      <categories>
          
          <category> CMD </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用 Hexo 搭建博客 保姆式教程</title>
      <link href="/2021/e1513f10aa48/"/>
      <url>/2021/e1513f10aa48/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本文方法仅提供思路，更多进阶请参阅文档或文末链接</p></blockquote><h3 id="查看纯享版-Hexo建站保姆式教程-maylove-pub"><a href="#查看纯享版-Hexo建站保姆式教程-maylove-pub" class="headerlink" title="查看纯享版: Hexo建站保姆式教程 (maylove.pub)"></a>查看纯享版: <a href="https://coding.maylove.pub/html/Hexo-%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%BF%9D%E5%A7%86%E5%BC%8F%E6%95%99%E7%A8%8B.html">Hexo建站保姆式教程 (maylove.pub)</a></h3><iframename="web"width="100%" frameborder=0 height="100%" src="\html\Hexo-搭建博客保姆式教程.html" id="web"onload="this.height=web.document.body.scrollHeight+20"></iframe><scriptlanguage="javascript">if(window.parent.length>0){window.parent.document.all.newtest.style.height=document.body.scrollHeight;}</script>]]></content>
      
      
      <categories>
          
          <category> CMD </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 百度贴吧爬虫</title>
      <link href="/2021/a479961a4ae9/"/>
      <url>/2021/a479961a4ae9/</url>
      
        <content type="html"><![CDATA[<p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-11-30/2.png" alt="1"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Tieba</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, name</span>):</span></span><br><span class="line">        self.url = <span class="string">&#x27;https://tieba.baidu.com/f?kw=&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(name)</span><br><span class="line">        self.heardes = &#123;</span><br><span class="line">            <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/4.0 (compatible; MSIE 5.00; Windows 98)&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_data</span>(<span class="params">self, url</span>):</span></span><br><span class="line">        response = requests.get(url, headers=self.heardes)</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;temp.html&quot;</span>, <span class="string">&quot;wb&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(response.content)</span><br><span class="line">        <span class="keyword">return</span> response.content</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse_data</span>(<span class="params">self, data</span>):</span></span><br><span class="line">        <span class="comment"># 创建element对象</span></span><br><span class="line">        <span class="comment"># data = data.decode().replace(&quot;&lt;!--&quot;, &quot;&quot;)</span></span><br><span class="line">        html = etree.HTML(data)</span><br><span class="line">        el_list = html.xpath(<span class="string">&#x27;//li[@class=&quot; j_thread_list clearfix thread_item_box&quot;]/div/div[2]/div[1]/div[1]/a&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">len</span>(el_list))</span><br><span class="line"></span><br><span class="line">        data_list = []</span><br><span class="line">        <span class="keyword">for</span> el <span class="keyword">in</span> el_list:</span><br><span class="line">            temp = &#123;&#125;</span><br><span class="line">            temp[<span class="string">&#x27;title&#x27;</span>] = el.xpath(<span class="string">&quot;./text()&quot;</span>)[<span class="number">0</span>]</span><br><span class="line">            temp[<span class="string">&#x27;link&#x27;</span>] = <span class="string">&#x27;https://tieba.baidu.com&#x27;</span> + el.xpath(<span class="string">&quot;./@href&quot;</span>)[<span class="number">0</span>]</span><br><span class="line">            data_list.append(temp)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 获取下一页url</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            next_url = <span class="string">&#x27;https:&#x27;</span> + html.xpath(<span class="string">&#x27;//a[contains(text(),&quot;下一页&gt;&quot;)]/@href&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            next_url = <span class="literal">None</span></span><br><span class="line">        <span class="keyword">return</span> data_list, next_url</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">save_data</span>(<span class="params">self, data_list</span>):</span></span><br><span class="line">        <span class="keyword">for</span> data <span class="keyword">in</span> data_list:</span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;temp.json&quot;</span>, <span class="string">&quot;a+&quot;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">                data_temp = json.dumps(data, ensure_ascii=<span class="literal">False</span>)</span><br><span class="line">                <span class="built_in">print</span>(data_temp)</span><br><span class="line">                f.write(data_temp)</span><br><span class="line">            <span class="comment">#     f.write(data)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="comment"># url</span></span><br><span class="line">        <span class="comment"># hearders</span></span><br><span class="line">        next_url = self.url</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            <span class="comment"># 发送请求,获取响应</span></span><br><span class="line">            data = self.get_data(self.url)</span><br><span class="line">            <span class="comment"># 从相应中提取数据(数据和翻页用的url)</span></span><br><span class="line">            data_list, next_url = self.parse_data(data)</span><br><span class="line"></span><br><span class="line">            self.save_data(data_list)</span><br><span class="line"></span><br><span class="line">            <span class="built_in">print</span>(next_url)</span><br><span class="line">            <span class="comment"># 判断是否终结</span></span><br><span class="line">            <span class="keyword">if</span> next_url == <span class="literal">None</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    tieba = Tieba(<span class="string">&quot;华东理工大学吧&quot;</span>)</span><br><span class="line">    tieba.run()</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程练习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>笔记|使用WSL安装Linux系统并搭建本地局域网网盘</title>
      <link href="/2021/861b10ea3685/"/>
      <url>/2021/861b10ea3685/</url>
      
        <content type="html"><![CDATA[<h4 id="事情起因"><a href="#事情起因" class="headerlink" title="事情起因"></a>事情起因</h4><ul><li>发现自己的win11已经安装了一个wsl,就想折腾一下..</li><li>但是明明zfile有win版的,为啥还要多此一举呢?<ul><li><code>害, 就是瞎折腾呗....</code></li></ul></li></ul><h4 id="安装软件"><a href="#安装软件" class="headerlink" title="安装软件"></a>安装软件</h4><ol><li>应用商店搜索WSL选择安装的系统</li><li>安装zfile: <a href="https://docs.zfile.vip/">https://docs.zfile.vip</a></li><li>安装之后发现只能通过虚拟机ip在本机访问</li><li>但是想要实现其他设备访问网盘的需求,于是需要 <code>端口转发</code></li></ol><h4 id="liunx-zfile常用命令"><a href="#liunx-zfile常用命令" class="headerlink" title="liunx zfile常用命令"></a>liunx zfile常用命令</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">~/zfile/bin/start.sh       # 启动项目</span><br><span class="line">~/zfile/bin/stop.sh        # 停止项目</span><br><span class="line">~/zfile/bin/restart.sh     # 重启项目</span><br></pre></td></tr></table></figure><h4 id="Powershell设置端口转发"><a href="#Powershell设置端口转发" class="headerlink" title="Powershell设置端口转发"></a>Powershell设置端口转发</h4><h5 id="liunx查看ip"><a href="#liunx查看ip" class="headerlink" title="liunx查看ip"></a>liunx查看ip</h5><ol><li><code>ip a</code></li><li>记录下虚拟机的ip以及对应的端口</li></ol><h5 id="设置端口转发"><a href="#设置端口转发" class="headerlink" title="设置端口转发"></a>设置端口转发</h5><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh interface portproxy add v4tov4 listenport=<span class="number">81</span> listenaddress=<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span> connectport=<span class="number">8080</span> connectaddress=<span class="number">172</span>.<span class="number">19</span>.<span class="number">235</span>.<span class="number">47</span> protocol=tcp</span><br></pre></td></tr></table></figure><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh interface portproxy add v4tov4 listenport=【宿主机windows平台监听端口】 listenaddress=<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span> connectport=【wsl2平台监听端口】 connectaddress=【wsl2平台ip】protocol=tcp</span><br></pre></td></tr></table></figure><h5 id="查看转发状态"><a href="#查看转发状态" class="headerlink" title="查看转发状态"></a>查看转发状态</h5><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh interface portproxy show all</span><br></pre></td></tr></table></figure><h5 id="删除端口转发"><a href="#删除端口转发" class="headerlink" title="删除端口转发"></a>删除端口转发</h5><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh interface portproxy delete v4tov4 listenport=【宿主机windows平台监听端口】 listenaddress=<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span></span><br></pre></td></tr></table></figure><p>可以了.</p>]]></content>
      
      
      <categories>
          
          <category> CMD </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java HelloWorld 案例</title>
      <link href="/2021/747651b2c4dd/"/>
      <url>/2021/747651b2c4dd/</url>
      
        <content type="html"><![CDATA[<h3 id="编写程序"><a href="#编写程序" class="headerlink" title="编写程序"></a>编写程序</h3><p>创建并打开<code>HelloWorld.java</code>并书写以下内容</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorld</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;Hello World&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="编译并运行程序"><a href="#编译并运行程序" class="headerlink" title="编译并运行程序"></a>编译并运行程序</h4><ol><li><strong>进入文件根目录</strong></li><li> <code>javac HelloWorld.java</code></li><li><code>java HelloWorld</code></li></ol><h4 id="输出结果"><a href="#输出结果" class="headerlink" title="输出结果"></a>输出结果</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hello World</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程练习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 实战爬虫分析案例(自用)</title>
      <link href="/2021/e0cd99104e32/"/>
      <url>/2021/e0cd99104e32/</url>
      
        <content type="html"><![CDATA[<p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-11-21/carbon_night_owl.png" alt="1"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"><span class="comment"># 引入json库</span></span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="comment"># 引入正则库,字符串搜索</span></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="comment"># 引入提取网页的xpath库</span></span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">write</span>(<span class="params">path, data</span>):</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(path, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        _data = json.dumps(data, ensure_ascii=<span class="literal">False</span>)</span><br><span class="line">        f.write(_data)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 先定义一个列表,作为第一层列表使用.(后面还有排序,去重什么的)</span></span><br><span class="line">list_end = []</span><br><span class="line"><span class="comment"># 这里进入一个循环,即为html的文件名 *.html ,左等右不等</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">48</span>):</span><br><span class="line">    <span class="comment"># 定义html的文件路径</span></span><br><span class="line">    path = <span class="string">&#x27;data/%s.html&#x27;</span> % i</span><br><span class="line">    <span class="comment"># 以utf-8的格式打开html文件</span></span><br><span class="line">    f = <span class="built_in">open</span>(path, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    <span class="comment"># 读取html文件</span></span><br><span class="line">    st = f.read()</span><br><span class="line">    <span class="comment"># 将html文件加载到etree中并赋值,之后可使用xpath操作</span></span><br><span class="line">    html = etree.HTML(st)</span><br><span class="line">    <span class="comment"># 定义一个临时列表</span></span><br><span class="line">    all_list = []</span><br><span class="line">    <span class="comment"># 获取 题目id,非字符串,为一个element对象</span></span><br><span class="line">    _<span class="built_in">id</span> = html.xpath(<span class="string">&#x27;/html/body/div[2]/div[2]/div/table/tbody/tr&#x27;</span>)</span><br><span class="line">    <span class="comment"># 获取 标题和答案(这里放在一起写了,因为分开写合并的时候逻辑很混乱,很麻烦)</span></span><br><span class="line">    title = html.xpath(<span class="string">&#x27;//*//font&#x27;</span>)</span><br><span class="line">    <span class="comment"># 定义两个变量为接下来的循环做铺垫</span></span><br><span class="line">    a = <span class="number">0</span></span><br><span class="line">    <span class="comment"># 为分隔符做准备</span></span><br><span class="line">    c = <span class="string">&#x27;、&#x27;</span></span><br><span class="line">    <span class="comment"># 以id的长度进行循环 id 和 title的值都为个数 *4...,因为id有空集(下文会去除)</span></span><br><span class="line">    <span class="comment"># print(len(_id))</span></span><br><span class="line">    <span class="comment"># print(len(title))</span></span><br><span class="line">    <span class="keyword">for</span> index <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(_<span class="built_in">id</span>)):</span><br><span class="line">        <span class="comment"># 每次循环a的值+1(下面会有),即为遍历title,</span></span><br><span class="line">        new_title = title[a]</span><br><span class="line">        <span class="comment"># 判断title是标题还是选项(因为标题全部都含有顿号....本来想用数字判断..写的太长逻辑没接上....</span></span><br><span class="line">        <span class="comment"># 所以这就要求选项中不可含有顿号,否则会被识别成标题,这之后的所以选项都会乱掉的....</span></span><br><span class="line">        <span class="comment"># 嘻嘻后来我找到方法了.....折腾了很长时间)</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;、&#x27;</span> <span class="keyword">in</span> new_title.text <span class="keyword">and</span> <span class="built_in">bool</span>(re.search(<span class="string">r&#x27;\d&#x27;</span>, new_title.text)):</span><br><span class="line">            <span class="comment"># print(c)</span></span><br><span class="line">            <span class="comment"># 判断是否含有题号,有则删除题号</span></span><br><span class="line">            c = c.split(sep=<span class="string">&#x27;、&#x27;</span>, maxsplit=-<span class="number">1</span>)</span><br><span class="line">            <span class="comment"># 如果首项有为数字则为题号</span></span><br><span class="line">            <span class="keyword">if</span> c[<span class="number">0</span>].isdigit():</span><br><span class="line">                <span class="comment"># 删除首项</span></span><br><span class="line">                c.remove(c[<span class="number">0</span>])</span><br><span class="line">                <span class="comment"># 再恢复原来的状态</span></span><br><span class="line">                <span class="comment"># print(c)</span></span><br><span class="line">                c = <span class="string">&#x27;、&#x27;</span>.join(c)</span><br><span class="line">                <span class="comment"># print(c)</span></span><br><span class="line">            <span class="comment"># 是标题的话就传入列表中,为什么这样写呢?</span></span><br><span class="line">            <span class="comment"># 是因为这是从第二个循环开始写的</span></span><br><span class="line">            <span class="comment"># 因为标题进入1次,选项要进入4次</span></span><br><span class="line">            <span class="comment"># 而我们只需要保存一次就行了</span></span><br><span class="line">            <span class="comment"># 所以我们就是第一次循环的时候,保存一个0的值,</span></span><br><span class="line">            <span class="comment"># 第二次循环到标题才会保存接下来赋予的标题和选项的值</span></span><br><span class="line">            all_list.append(c)</span><br><span class="line">            <span class="comment"># print(all_list)</span></span><br><span class="line">            <span class="comment"># 这就是赋予标题的值</span></span><br><span class="line">            <span class="comment"># 这个text是因为 上面说过了,这个new_titile并不是一个字符串,而是一个对象类型</span></span><br><span class="line">            c = new_title.text</span><br><span class="line">        <span class="comment"># 判断不是标题的时候执行逻辑</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="comment"># 判断是否是标题中是否单独存在数字或者顿号,如果有就提示</span></span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">bool</span>(re.search(<span class="string">r&#x27;\d&#x27;</span>, new_title.text)) <span class="keyword">or</span> <span class="string">&#x27;、&#x27;</span> <span class="keyword">in</span> new_title.text:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;请确认这不是标题 || &#x27;</span>, new_title.text)</span><br><span class="line">            <span class="comment"># 这里就是单竖杠将标题和选项隔开,然后选项之间是双竖杠隔开</span></span><br><span class="line">            c += <span class="string">&#x27;|&#x27;</span> + new_title.text</span><br><span class="line">            <span class="comment"># 因为标题会由很多的空格和换行符,这里要全部去掉(&#x27;、&#x27;不要去,前面用到了)</span></span><br><span class="line">            <span class="comment"># print(c)</span></span><br><span class="line">            c = c.replace(<span class="string">&#x27;\n&#x27;</span>, <span class="string">&#x27;&#x27;</span>).replace(<span class="string">&#x27;\r&#x27;</span>, <span class="string">&#x27;&#x27;</span>).replace(<span class="string">&#x27;\t&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        <span class="comment"># # print(new_title)</span></span><br><span class="line">        <span class="comment"># 将a的值+1,也就是遍历的过程</span></span><br><span class="line">        a += <span class="number">1</span></span><br><span class="line">    <span class="comment"># # print(all_list)</span></span><br><span class="line">    <span class="comment"># 将上面赋予列表的第一个没有意义的&#x27;第一个列表&#x27;去掉</span></span><br><span class="line">    all_list.remove(all_list[<span class="number">0</span>])</span><br><span class="line">    <span class="comment"># 因为这时候标题只剩了99个了,也就是最后一个标题没有获取到</span></span><br><span class="line">    <span class="comment"># 然后这里就是再加一个没有用的东西,用于和选项合并的时候不会报错</span></span><br><span class="line">    <span class="comment"># 后面加了判断,就是后面如果发现这个东西,就进入下一次循环</span></span><br><span class="line">    <span class="comment"># 这条数据就废弃了,但是因为数据有很多条,就是样本足够多的话,肯定可以再找到相同的数据的</span></span><br><span class="line">    all_list.append(<span class="string">&#x27;##$%#%$#%$#$@$$%^#%$@#%$!#^$%$#^%&#x27;</span>)</span><br><span class="line">    <span class="comment"># print(all_list)</span></span><br><span class="line">    <span class="comment"># 以上为标题和选项</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 以下为id的获取</span></span><br><span class="line">    <span class="comment"># 再次给a赋值为0,再次进行循环(a是老工具人了hh)</span></span><br><span class="line">    a = <span class="number">0</span></span><br><span class="line">    <span class="comment"># 再定义一个临时列表(好像这是第三个了....)</span></span><br><span class="line">    list_temp = []</span><br><span class="line">    <span class="comment"># 再循环一遍id的长度....</span></span><br><span class="line">    <span class="keyword">for</span> index <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(_<span class="built_in">id</span>)):</span><br><span class="line">        <span class="comment"># 获取到id</span></span><br><span class="line">        <span class="comment"># 因为range是从1开始的,但我们取列表需要从0开始,所以用a(好像可以直接循环,但是那时候我没写.)</span></span><br><span class="line">        <span class="comment"># 这个获取到的东西是 &#123;&#x27;id&#x27;: &#x27;topicid_XXXXXXX&#x27;&#125; 或者为 &#123;&#125;</span></span><br><span class="line">        id_num = <span class="built_in">dict</span>(_<span class="built_in">id</span>[a].attrib)</span><br><span class="line">        <span class="comment"># 将获取到的东西传入临时列表,准备做去除空集处理</span></span><br><span class="line">        list_temp.append(id_num)</span><br><span class="line">        <span class="comment"># 遍历</span></span><br><span class="line">        a += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 以下为去除空集 用emd的原因是我认为快到end了但是感觉还没到...</span></span><br><span class="line">    list_emd = []</span><br><span class="line">    <span class="comment"># 即为对上面的临时列表进行循环</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> list_temp:</span><br><span class="line">        <span class="comment"># 去除标题的所有空id集合,使其总数为100</span></span><br><span class="line">        <span class="comment"># print(x)</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">bool</span>(x):</span><br><span class="line">            <span class="comment"># print(x)</span></span><br><span class="line">            <span class="comment"># 去除空元素</span></span><br><span class="line">            list_emd.append(x)</span><br><span class="line">    <span class="comment"># print(len(list_emd))</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 再循环,这时循环的是去掉空集之后的标题,即为100</span></span><br><span class="line">    <span class="keyword">for</span> index <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(list_emd)):</span><br><span class="line">        <span class="comment"># print(index)</span></span><br><span class="line">        <span class="comment"># 将题目与选项合并后的东西传入emd中...即为列表套字典(格式需要)</span></span><br><span class="line">        list_emd[index][<span class="string">&#x27;question_txt&#x27;</span>] = all_list[index]</span><br><span class="line">        <span class="comment"># 添加占位符, 方便手动输入答案</span></span><br><span class="line">        list_emd[index][<span class="string">&#x27;answer&#x27;</span>] = <span class="string">&#x27;正确答案填在此&#x27;</span></span><br><span class="line">        list_emd[index][<span class="string">&#x27;answer_check_1&#x27;</span>] = <span class="string">&#x27;检验成员1的答案&#x27;</span></span><br><span class="line">        list_emd[index][<span class="string">&#x27;answer_check_2&#x27;</span>] = <span class="string">&#x27;检验成员2的答案&#x27;</span></span><br><span class="line">        list_emd[index][<span class="string">&#x27;answer_check_3&#x27;</span>] = <span class="string">&#x27;检验成员3的答案&#x27;</span></span><br><span class="line">        list_emd[index][<span class="string">&#x27;answer_check_4&#x27;</span>] = <span class="string">&#x27;检验成员4的答案&#x27;</span></span><br><span class="line">        list_emd[index][<span class="string">&#x27;answer_check_5&#x27;</span>] = <span class="string">&#x27;检验成员5的答案&#x27;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 没啥用,就是好看,做个提示而已(跟原来格式保持一致....)(但是没啥用)</span></span><br><span class="line">        list_emd[index][<span class="string">&#x27;answer_txt&#x27;</span>] = <span class="string">&#x27;使用说明：将正确答案填入answer的引号中就可，多选不用间隔，示例 *A* *ABCD*&#x27;</span></span><br><span class="line">        list_emd[index][<span class="string">&#x27;id&#x27;</span>] = <span class="string">&#x27;3&#x27;</span></span><br><span class="line">        <span class="keyword">del</span> list_emd[index][<span class="string">&#x27;id&#x27;</span>]</span><br><span class="line">    <span class="comment"># print(len(list_emd))</span></span><br><span class="line">    <span class="comment"># 将每次循环html文件得到的内容传入列表中,即为列表套列表套字典..</span></span><br><span class="line">    list_end.append(list_emd)</span><br><span class="line"></span><br><span class="line"><span class="comment"># print(list_end)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># new_list = sorted(all_list, key=(lambda r: r[&#x27;id&#x27;]))</span></span><br><span class="line"><span class="comment"># 将列表套列表套字典转换为列表套字典</span></span><br><span class="line">list_end = <span class="built_in">sum</span>(list_end, [])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 去重</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">deletedup</span>(<span class="params">li</span>):</span></span><br><span class="line">    <span class="comment"># 定义一个集合</span></span><br><span class="line">    seen = <span class="built_in">set</span>()</span><br><span class="line">    <span class="comment"># 定义空集</span></span><br><span class="line">    new_list_2 = []</span><br><span class="line">    <span class="built_in">print</span>(li)</span><br><span class="line">    <span class="comment"># 对于传入的参数进行循环处理</span></span><br><span class="line">    <span class="keyword">for</span> d <span class="keyword">in</span> li:</span><br><span class="line">        <span class="comment"># 即为利用id来去重</span></span><br><span class="line">        <span class="comment"># d1 = d[&#x27;id&#x27;]</span></span><br><span class="line">        d2 = d[<span class="string">&#x27;question_txt&#x27;</span>]</span><br><span class="line">        <span class="comment"># 这里就是上文所说的去掉</span></span><br><span class="line">        str1 = d[<span class="string">&#x27;question_txt&#x27;</span>]</span><br><span class="line">        <span class="comment"># 其实也不是去掉,就是进入下一个循环,就是不传.</span></span><br><span class="line">        <span class="keyword">if</span> str1 == <span class="string">&#x27;##$%#%$#%$#$@$$%^#%$@#%$!#^$%$#^%&#x27;</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="comment"># print(d1)</span></span><br><span class="line">        <span class="comment"># print(seen)</span></span><br><span class="line">        <span class="comment"># 如果没有这个元素才传入,有就不传</span></span><br><span class="line">        <span class="keyword">if</span> d2 <span class="keyword">not</span> <span class="keyword">in</span> seen:</span><br><span class="line">            <span class="comment"># print(d1)</span></span><br><span class="line">            <span class="comment"># 传入元素</span></span><br><span class="line">            new_list_2.append(d)</span><br><span class="line">            <span class="comment"># 传入集合中,是不是集合意义不大,因为不同页面的题号不同,所有肯定不一样</span></span><br><span class="line">            seen.add(d2)</span><br><span class="line">    <span class="comment"># 返回去重之后的列表</span></span><br><span class="line">    <span class="keyword">return</span> new_list_2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 入口函数</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># 对于得到的列表去重</span></span><br><span class="line">    list_tools = deletedup(list_end)</span><br><span class="line">    <span class="comment"># 打印信息,完成任务,下一步去格式化就好啦!</span></span><br><span class="line">    <span class="comment"># print(new_list_2)</span></span><br><span class="line">    <span class="comment"># new_list = sorted(list_tools, key=lambda r: r[&#x27;id&#x27;])</span></span><br><span class="line">    <span class="built_in">print</span>(list_tools)</span><br><span class="line">    <span class="comment"># 打印警告信息和统计信息</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;总计:&#x27;</span>, <span class="built_in">len</span>(list_tools), <span class="string">&#x27;条数据&#x27;</span>, <span class="string">&#x27;\n注意:请划到顶部确认那些东西是不是标题!!!!&#x27;</span>)</span><br><span class="line">    out_result = write(<span class="string">&#x27;result.json&#x27;</span>, list_tools)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;是否成功写入result.json文件:&#x27;</span>, out_result)</span><br><span class="line">    </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实战案例 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java 创建学习知识库</title>
      <link href="/2021/f4e13f654cb7/"/>
      <url>/2021/f4e13f654cb7/</url>
      
        <content type="html"><![CDATA[<h3 id="文档地址"><a href="#文档地址" class="headerlink" title="文档地址"></a>文档地址</h3><ul><li><a href="https://javadocs.zkeq.xyz/">https://javadocs.zkeq.xyz</a></li></ul><h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h3><ul><li>方便自己日后学习</li><li>本页面仅记录自己写的代码, 知识库中存在的不再重复…</li></ul><blockquote><p><strong>还是要多把精力放在文化课上哈…</strong></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 知识库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 线程</title>
      <link href="/2021/fcde66a536a1/"/>
      <url>/2021/fcde66a536a1/</url>
      
        <content type="html"><![CDATA[<h3 id="线程"><a href="#线程" class="headerlink" title="线程"></a>线程</h3><blockquote><p>Python学累了,想学Java html js vue Tailwindcss 小程序  c4d ae pr 了.</p></blockquote><h4 id="什么是线程"><a href="#什么是线程" class="headerlink" title="什么是线程"></a>什么是线程</h4><ul><li>进程吸收资源</li><li>传递给线程执行业务逻辑</li></ul><h4 id="线程与进程的关系"><a href="#线程与进程的关系" class="headerlink" title="线程与进程的关系"></a>线程与进程的关系</h4><ul><li>吃饭获得能量和营养(进程), 之后大脑执行逻辑(线程)</li><li>进程提供线程执行程序的前置要求,线程在重组的资源配备下,去执行程序</li></ul><h4 id="多线程"><a href="#多线程" class="headerlink" title="多线程"></a>多线程</h4><ul><li>开启一个浏览器后,从浏览器(主进程)中创建出多个线程来开启多个页面</li></ul><h4 id="多线程的执行方式"><a href="#多线程的执行方式" class="headerlink" title="多线程的执行方式"></a>多线程的执行方式</h4><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-11-13/1.jpg" alt="1"></p><blockquote><h5 id="一、什么是线程"><a href="#一、什么是线程" class="headerlink" title="一、什么是线程"></a>一、什么是线程</h5><p>线程（Thread）是操作系统最小的执行单元，进程至少由一个线程组成。如何调度进程和线程，完全由操作系统决定，程序自己不能决定什么时候执行，执行多长时间。有些进程还不止同时干一件事，比如微信，它可以同时进行语音、发文字、浏览信息等事情。</p><p>简单理解：在一个进程内部，要同时干多件事，就需要同时运行多个“子任务”，我们把进程内的这些“子任务”称为线程。</p><h5 id="二、怎样的任务算一个线程"><a href="#二、怎样的任务算一个线程" class="headerlink" title="二、怎样的任务算一个线程"></a>二、怎样的任务算一个线程</h5><p>进程被运行后算是一个线程，进程是不运行的，线程才会运行，而一个进程有多个线程就涉及到进程有多少可以被cpu单独调用的模块，这个调用的模块可以通过手动创建线程来建立。</p><h5 id="三、在python中如何创建线程"><a href="#三、在python中如何创建线程" class="headerlink" title="三、在python中如何创建线程"></a>三、在python中如何创建线程</h5><ul><li><p>使用的模块：<code>threading</code></p></li><li><p>创建的方法：<code>threading.Thread(…)</code></p></li></ul><p>代码如下：</p><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-11-13/2.jpg" alt="2"></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 进程与线程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 进程</title>
      <link href="/2021/eab0079965df/"/>
      <url>/2021/eab0079965df/</url>
      
        <content type="html"><![CDATA[<h3 id="进程"><a href="#进程" class="headerlink" title="进程"></a>进程</h3><h4 id="什么是进程"><a href="#什么是进程" class="headerlink" title="什么是进程"></a>什么是进程</h4><ul><li>进程就是程序执行的载体</li></ul><h4 id="进程在生活中的应用"><a href="#进程在生活中的应用" class="headerlink" title="进程在生活中的应用"></a>进程在生活中的应用</h4><ul><li>我们打开的每个<code>软件 游戏,</code>执行的<code>每一个python脚本</code>都是<strong>启动一个进程</strong></li><li>软件(游戏, 脚本) == 进程</li></ul><h4 id="进程的口粮"><a href="#进程的口粮" class="headerlink" title="进程的口粮"></a>进程的口粮</h4><ul><li>每一个进程像人一样需要吃饭,他的粮食就是:内存和cpu</li></ul><h4 id="多进程"><a href="#多进程" class="headerlink" title="多进程"></a>多进程</h4><ul><li>主进程创建子进程</li><li>父进程创建子进程</li></ul><h4 id="多进程的执行方式"><a href="#多进程的执行方式" class="headerlink" title="多进程的执行方式"></a>多进程的执行方式</h4><ul><li>cpu分配空余核心给进程</li></ul>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 进程与线程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 阶段编程练习(二十三)</title>
      <link href="/2021/66e0909bf3d4/"/>
      <url>/2021/66e0909bf3d4/</url>
      
        <content type="html"><![CDATA[<p>作业案例1</p><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-11-11/1.png" alt="1"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">   学生信息库</span></span><br><span class="line"><span class="string">   1: 将学生信息存入一个json文件中， 添加读与写json的函数</span></span><br><span class="line"><span class="string">   2: 我们要将用户添加修改和删除的行为记录到日志中，添加与修改都用info代表</span></span><br><span class="line"><span class="string">      而delete将要用warn警告来提示</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NotArgError</span>(<span class="params">Exception</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, message</span>):</span></span><br><span class="line">        self.message = message</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MissPathError</span>(<span class="params">Exception</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, message</span>):</span></span><br><span class="line">        self.message = message</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FormatError</span>(<span class="params">Exception</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, message</span>):</span></span><br><span class="line">        self.message = message</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">StudentInfo</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, students_path, log_path</span>):</span></span><br><span class="line">        self.students_path = students_path</span><br><span class="line">        self.log_path = log_path</span><br><span class="line">        self.log = self.__log()</span><br><span class="line"></span><br><span class="line">        self.__init_path()</span><br><span class="line">        self.__read()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__log</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">if</span> os.path.exists(self.log_path):</span><br><span class="line">            mode = <span class="string">&#x27;a&#x27;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            mode = <span class="string">&#x27;w&#x27;</span></span><br><span class="line">        logging.basicConfig(</span><br><span class="line">            level=logging.DEBUG,</span><br><span class="line">            <span class="built_in">format</span>=<span class="string">&#x27;%(asctime)s-%(filename)s-%(lineno)d-%(levelname)s-%(message)s&#x27;</span>,</span><br><span class="line">            filename=self.log_path,</span><br><span class="line">            filemode=mode</span><br><span class="line">        )</span><br><span class="line">        <span class="keyword">return</span> logging</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init_path</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(self.students_path):</span><br><span class="line">            <span class="keyword">raise</span> MissPathError(<span class="string">&#x27;没有相关的地址文件 %s&#x27;</span> % self.students_path)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.isfile(self.students_path):</span><br><span class="line">            <span class="keyword">raise</span> TypeError(<span class="string">&#x27;当前的studentspath不是一个文件&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> self.students_path.endswith(<span class="string">&#x27;.json&#x27;</span>):</span><br><span class="line">            <span class="keyword">raise</span> FormatError(<span class="string">&#x27;当前不是一个json文件&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__read</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(self.students_path, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                data = f.read()</span><br><span class="line">            <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                <span class="keyword">raise</span> e</span><br><span class="line">        self.students = json.loads(data)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__save</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(self.students_path, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            json_data = json.dumps(self.students)</span><br><span class="line">            f.write(json_data)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_by_id</span>(<span class="params">self, student_id</span>):</span></span><br><span class="line">        <span class="keyword">return</span> self.students.get(student_id)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_all_students</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">for</span> id_, value <span class="keyword">in</span> self.students.items():</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;学号：&#123;&#125;, 姓名:&#123;&#125;, 年龄:&#123;&#125;, 性别:&#123;&#125;, 班级:&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(</span><br><span class="line">                id_, value[<span class="string">&#x27;name&#x27;</span>], value[<span class="string">&#x27;age&#x27;</span>], value[<span class="string">&#x27;sex&#x27;</span>], value[<span class="string">&#x27;class_number&#x27;</span>]</span><br><span class="line">            ))</span><br><span class="line">        <span class="keyword">return</span> self.students</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add</span>(<span class="params">self, **student</span>):</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            self.check_user_info(**student)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">raise</span> e</span><br><span class="line">        self.__add(**student)</span><br><span class="line">        self.__save()</span><br><span class="line">        self.__read()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">adds</span>(<span class="params">self, new_students</span>):</span></span><br><span class="line">        <span class="keyword">for</span> student <span class="keyword">in</span> new_students:</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                self.check_user_info(**student)</span><br><span class="line">            <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                <span class="built_in">print</span>(e, student.get(<span class="string">&#x27;name&#x27;</span>))</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            self.__add(**student)</span><br><span class="line">        self.__save()</span><br><span class="line">        self.__read()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__add</span>(<span class="params">self, **student</span>):</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(self.students) == <span class="number">0</span>:</span><br><span class="line">            new_id = <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            keys = <span class="built_in">list</span>(self.students.keys())</span><br><span class="line">            _keys = []</span><br><span class="line">            <span class="keyword">for</span> item <span class="keyword">in</span> keys:</span><br><span class="line">                _keys.append(<span class="built_in">int</span>(item))</span><br><span class="line">            new_id = <span class="built_in">max</span>(_keys) + <span class="number">1</span></span><br><span class="line">        self.students[new_id] = student</span><br><span class="line">        self.log.info(<span class="string">&#x27;学生%s被注册了&#x27;</span> % student[<span class="string">&#x27;name&#x27;</span>])</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete</span>(<span class="params">self, student_id</span>):</span></span><br><span class="line">        <span class="keyword">if</span> student_id <span class="keyword">not</span> <span class="keyword">in</span> self.students:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; 并不存在&#x27;</span>.<span class="built_in">format</span>(student_id))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            user_info = self.students.pop(student_id)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;学号是&#123;&#125;, &#123;&#125;同学的信息已经被删除了&#x27;</span>.<span class="built_in">format</span>(student_id, user_info[<span class="string">&#x27;name&#x27;</span>]))</span><br><span class="line">            self.log.warning(<span class="string">&#x27;学号是&#123;&#125;, &#123;&#125;同学的信息已经被删除了&#x27;</span>.<span class="built_in">format</span>(student_id, user_info[<span class="string">&#x27;name&#x27;</span>]))</span><br><span class="line">        self.__save()</span><br><span class="line">        self.__read()</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">deletes</span>(<span class="params">self, ids</span>):</span></span><br><span class="line">        <span class="keyword">for</span> id_ <span class="keyword">in</span> ids:</span><br><span class="line">            <span class="keyword">if</span> id_ <span class="keyword">not</span> <span class="keyword">in</span> self.students:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;id_&#125;</span> 不存在学生库中&#x27;</span>)</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            student_info = self.students.pop(id_)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&#x27;学号<span class="subst">&#123;id_&#125;</span> 学生<span class="subst">&#123;student_info[<span class="string">&quot;name&quot;</span>]&#125;</span> 已被移除&#x27;</span>)</span><br><span class="line">            self.log.warning(<span class="string">f&#x27;学号<span class="subst">&#123;id_&#125;</span> 学生<span class="subst">&#123;student_info[<span class="string">&quot;name&quot;</span>]&#125;</span> 已被移除&#x27;</span>)</span><br><span class="line">        self.__save()</span><br><span class="line">        self.__read()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update</span>(<span class="params">self, student_id, **kwargs</span>):</span></span><br><span class="line">        <span class="keyword">if</span> student_id <span class="keyword">not</span> <span class="keyword">in</span> self.students:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;并不存在这个学号:&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(student_id))</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            self.check_user_info(**kwargs)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">raise</span> e</span><br><span class="line"></span><br><span class="line">        self.students[student_id] = kwargs</span><br><span class="line">        self.__save()</span><br><span class="line">        self.__read()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;同学信息更新完毕&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">updates</span>(<span class="params">self, update_students</span>):</span></span><br><span class="line">        <span class="keyword">for</span> student <span class="keyword">in</span> update_students:</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                id_ = <span class="built_in">list</span>(student.keys())[<span class="number">0</span>]</span><br><span class="line">            <span class="keyword">except</span> IndexError <span class="keyword">as</span> e:</span><br><span class="line">                <span class="built_in">print</span>(e)</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">if</span> id_ <span class="keyword">not</span> <span class="keyword">in</span> self.students:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&#x27;学号<span class="subst">&#123;id_&#125;</span> 不存在&#x27;</span>)</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            user_info = student[id_]</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                self.check_user_info(**user_info)</span><br><span class="line">            <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                <span class="built_in">print</span>(e)</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            self.students[id_] = user_info</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;所有用户信息更新完成&#x27;</span>)</span><br><span class="line">        self.__save()</span><br><span class="line">        self.__read()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">search_users</span>(<span class="params">self, **kwargs</span>):</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">assert</span> <span class="built_in">len</span>(kwargs) == <span class="number">1</span>, <span class="string">&#x27;参数数量传递错误&#x27;</span></span><br><span class="line"></span><br><span class="line">        values = <span class="built_in">list</span>(self.students.values())</span><br><span class="line">        key = <span class="literal">None</span></span><br><span class="line">        value = <span class="literal">None</span></span><br><span class="line">        result = []</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;name&#x27;</span> <span class="keyword">in</span> kwargs:</span><br><span class="line">            key = <span class="string">&#x27;name&#x27;</span></span><br><span class="line">            value = kwargs[key]</span><br><span class="line">        <span class="keyword">elif</span> <span class="string">&#x27;sex&#x27;</span> <span class="keyword">in</span> kwargs:</span><br><span class="line">            key = <span class="string">&#x27;sex&#x27;</span></span><br><span class="line">            value = kwargs[<span class="string">&#x27;sex&#x27;</span>]</span><br><span class="line">        <span class="keyword">elif</span> <span class="string">&#x27;class_number&#x27;</span> <span class="keyword">in</span> kwargs:</span><br><span class="line">            key = <span class="string">&#x27;class_number&#x27;</span></span><br><span class="line">            value = kwargs[key]</span><br><span class="line">        <span class="keyword">elif</span> <span class="string">&#x27;age&#x27;</span> <span class="keyword">in</span> kwargs:</span><br><span class="line">            key = <span class="string">&#x27;age&#x27;</span></span><br><span class="line">            value = kwargs[key]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">raise</span> NotArgError(<span class="string">&#x27;没有发现搜索的关键字&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> user <span class="keyword">in</span> values:  <span class="comment"># [&#123;name, sex, age, class_number&#125;, &#123;&#125;]</span></span><br><span class="line">            <span class="keyword">if</span> value <span class="keyword">in</span> user[key]:</span><br><span class="line">                result.append(user)</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">check_user_info</span>(<span class="params">self, **kwargs</span>):</span></span><br><span class="line">        <span class="keyword">assert</span> <span class="built_in">len</span>(kwargs) == <span class="number">4</span>, <span class="string">&#x27;参数必须是4个&#x27;</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;name&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> kwargs:</span><br><span class="line">            <span class="keyword">raise</span> NotArgError(<span class="string">&#x27;没有发现学生姓名参数&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;age&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> kwargs:</span><br><span class="line">            <span class="keyword">raise</span> NotArgError(<span class="string">&#x27;缺少学生年龄参数&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;sex&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> kwargs:</span><br><span class="line">            <span class="keyword">raise</span> NotArgError(<span class="string">&#x27;缺少学生性别参数&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;class_number&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> kwargs:</span><br><span class="line">            <span class="keyword">raise</span> NotArgError(<span class="string">&#x27;缺少学生班级参数&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        name_value = kwargs[<span class="string">&#x27;name&#x27;</span>]  <span class="comment"># type(name_value)</span></span><br><span class="line">        age_value = kwargs[<span class="string">&#x27;age&#x27;</span>]</span><br><span class="line">        sex_value = kwargs[<span class="string">&#x27;sex&#x27;</span>]</span><br><span class="line">        class_number_value = kwargs[<span class="string">&#x27;class_number&#x27;</span>]</span><br><span class="line">        <span class="comment"># isinstace(对比的数据, 目标类型） isinstance(1, str)</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">isinstance</span>(name_value, <span class="built_in">str</span>):</span><br><span class="line">            <span class="keyword">raise</span> TypeError(<span class="string">&#x27;name应该是字符串类型&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">isinstance</span>(age_value, <span class="built_in">int</span>):</span><br><span class="line">            <span class="keyword">raise</span> TypeError(<span class="string">&#x27;age 应该是整型&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">isinstance</span>(sex_value, <span class="built_in">str</span>):</span><br><span class="line">            <span class="keyword">raise</span> TypeError(<span class="string">&#x27;sex应该是字符串类型&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">isinstance</span>(class_number_value, <span class="built_in">str</span>):</span><br><span class="line">            <span class="keyword">raise</span> TypeError(<span class="string">&#x27;class_number应该是字符串类型&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">students = &#123;</span><br><span class="line">    <span class="number">1</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;dewei&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;age&#x27;</span>: <span class="number">33</span>,</span><br><span class="line">        <span class="string">&#x27;class_number&#x27;</span>: <span class="string">&#x27;A&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;sex&#x27;</span>: <span class="string">&#x27;boy&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="number">2</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;小慕&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;age&#x27;</span>: <span class="number">10</span>,</span><br><span class="line">        <span class="string">&#x27;class_number&#x27;</span>: <span class="string">&#x27;B&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;sex&#x27;</span>: <span class="string">&#x27;boy&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="number">3</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;小曼&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;age&#x27;</span>: <span class="number">18</span>,</span><br><span class="line">        <span class="string">&#x27;class_number&#x27;</span>: <span class="string">&#x27;A&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;sex&#x27;</span>: <span class="string">&#x27;girl&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="number">4</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;小高&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;age&#x27;</span>: <span class="number">18</span>,</span><br><span class="line">        <span class="string">&#x27;class_number&#x27;</span>: <span class="string">&#x27;C&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;sex&#x27;</span>: <span class="string">&#x27;boy&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="number">5</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;小云&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;age&#x27;</span>: <span class="number">18</span>,</span><br><span class="line">        <span class="string">&#x27;class_number&#x27;</span>: <span class="string">&#x27;B&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;sex&#x27;</span>: <span class="string">&#x27;girl&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    student_info = StudentInfo(<span class="string">&#x27;students.json&#x27;</span>)</span><br><span class="line">    user = student_info.get_by_id(<span class="number">1</span>)</span><br><span class="line">    student_info.add(name=<span class="string">&#x27;dewei&#x27;</span>, age=<span class="number">34</span>, class_number=<span class="string">&#x27;A&#x27;</span>, sex=<span class="string">&#x27;boy&#x27;</span>)</span><br><span class="line">    users = [</span><br><span class="line">        &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;xiaoming&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">17</span>, <span class="string">&#x27;class_number&#x27;</span>: <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;sex&#x27;</span>: <span class="string">&#x27;boy&#x27;</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;xiaohong&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">18</span>, <span class="string">&#x27;class_number&#x27;</span>: <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;sex&#x27;</span>: <span class="string">&#x27;girl&#x27;</span>&#125;</span><br><span class="line">    ]</span><br><span class="line">    student_info.adds(users)</span><br><span class="line">    student_info.get_all_students()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;------&#x27;</span>)</span><br><span class="line">    student_info.deletes([<span class="number">7</span>, <span class="number">8</span>])</span><br><span class="line">    student_info.get_all_students()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;-------&#x27;</span>)</span><br><span class="line">    student_info.updates([</span><br><span class="line">        &#123;<span class="number">1</span>: &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;dewei.zhang&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">18</span>, <span class="string">&#x27;class_number&#x27;</span>: <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;sex&#x27;</span>: <span class="string">&#x27;boy&#x27;</span>&#125;&#125;,</span><br><span class="line">        &#123;<span class="number">2</span>: &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;小慕同学&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">18</span>, <span class="string">&#x27;class_number&#x27;</span>: <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;sex&#x27;</span>: <span class="string">&#x27;boy&#x27;</span>&#125;&#125;</span><br><span class="line">    ])</span><br><span class="line">    student_info.get_all_students()</span><br><span class="line">    result = student_info.search_users(name=<span class="string">&#x27;d&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(result)</span><br><span class="line">    result = student_info.search_users(name=<span class="string">&#x27;小&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(result)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;------&#x27;</span>)</span><br><span class="line">    result = student_info.search_users(name=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(result)</span><br><span class="line">    result = student_info.search_users(name=<span class="string">&#x27;小&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(result)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;-----&#x27;</span>)</span><br><span class="line">    result = student_info.search_users (name=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(result)</span><br></pre></td></tr></table></figure><h3 id="作业"><a href="#作业" class="headerlink" title="作业"></a>作业</h3><blockquote><p>亲爱的朋友们，经过这一阶段的学习，大家已经掌握了在Python中如何进行函数的定义与调用、文件基本操作、模块化思想······，也熟悉了Python中一些基本的内置函数和方法的运用，接下来让我们动手实践下——编写“数字猜猜猜”小游戏。</p></blockquote><h5 id="题目要求："><a href="#题目要求：" class="headerlink" title="题目要求："></a>题目要求：</h5><p><em>根据现实生活中的猜数字游戏的游戏规则，运用Python语言模拟实现猜数字游戏的的基本功能，请学员们参考真实的猜数字游戏规则和如下的程序运行效果图进行代码编写，以实现“数字猜猜猜”小游戏的基本功能。游戏规则介绍如下：</em></p><p>玩家根据提示进行数字区间起始位置和终止位置的输入</p><ol><li>依据 1 中输入的数字区间，产生该区间内一个随机数，用于进行猜测比对的终值</li><li>提示用户输入所猜测的数字，与 2 中产生的随机数字进行比对，并将相应的信息写入指定的日志文件（日志文件名称：record.txt；日志文件路径：与.py文件处于同一级目录）</li><li>依据 3 中的比对结果。若两者不等，打印友好提示，重复 3、4 步骤；若两者相等，则退出该函数，执行下列语句</li><li>当猜测的值不在指定区间内时，不需要统计次数和记录</li><li>打印如效果图所示，用以提示游戏结束的信息</li></ol><h5 id="运行效果图"><a href="#运行效果图" class="headerlink" title="运行效果图:"></a>运行效果图:</h5><ol><li><p>成功运行效果图：</p><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-11-11/2.jpg" alt="2"></p></li><li><p>输入区间起始值和区间终止值相等效果图：</p><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-11-11/3.jpg" alt="3"></p></li><li><p>输入区间起始值大于区间终止值效果图：</p><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-11-11/4.jpg" alt="4"></p></li><li><p>输入区间起始值和终止值为非数字字符效果图：</p><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-11-11/5.jpg" alt="5"></p></li></ol><h5 id="代码-不想写了-包括上面那个-都不是我写的-好累-好困-去睡了-回头再看"><a href="#代码-不想写了-包括上面那个-都不是我写的-好累-好困-去睡了-回头再看" class="headerlink" title="代码(不想写了,包括上面那个..都不是我写的, 好累 好困 去睡了  回头再看)"></a>代码(不想写了,包括上面那个..都不是我写的, 好累 好困 去睡了  回头再看)</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time     : 2021/8/27 21:38</span></span><br><span class="line"><span class="comment"># @Author   : InsaneLoafer</span></span><br><span class="line"><span class="comment"># @File     : mooc_test.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">init_log</span>(<span class="params">path</span>):</span></span><br><span class="line">    <span class="keyword">if</span> os.path.exists(path):</span><br><span class="line">        mode = <span class="string">&#x27;a&#x27;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        mode = <span class="string">&#x27;w&#x27;</span></span><br><span class="line">    logging.basicConfig(</span><br><span class="line">        level=logging.INFO,</span><br><span class="line">        <span class="built_in">format</span>=<span class="string">&#x27;%(asctime)s %(filename)s %(lineno)d %(message)s&#x27;</span>,</span><br><span class="line">        filename=path,</span><br><span class="line">        filemode=mode</span><br><span class="line">    )</span><br><span class="line">    <span class="keyword">return</span> logging</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">guess_number</span>():</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;********************欢迎进入数字踩踩踩游戏********************&#x27;</span>)</span><br><span class="line">    start = <span class="built_in">input</span>(<span class="string">&#x27;数字区间起始值：&#x27;</span>)</span><br><span class="line">    end = <span class="built_in">input</span>(<span class="string">&#x27;数字区间终止值：&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> start.isdigit() <span class="keyword">or</span> <span class="keyword">not</span> end.isdigit():</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;您输入的区间数字为非数字字符！！请重新启动程序。&#x27;</span>)</span><br><span class="line">        exit()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        start = <span class="built_in">int</span>(start)</span><br><span class="line">        end = <span class="built_in">int</span>(end)</span><br><span class="line">        count = <span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span> start == end:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;您输入的区间数字相同！！请重新启动程序。&#x27;</span>)</span><br><span class="line">            exit()</span><br><span class="line">        <span class="keyword">elif</span> start &gt; end:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;您输入的区间数字大小有误！！请重新启动程序。&#x27;</span>)</span><br><span class="line">            exit()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;所产生的的随机数字区间为：[&#123;&#125;, &#123;&#125;]&#x27;</span>.<span class="built_in">format</span>(start, end))</span><br><span class="line">            random_number = random.randint(start, end)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">                count += <span class="number">1</span></span><br><span class="line">                number = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请继续输入您猜测的数字：&#x27;</span>))</span><br><span class="line">                <span class="keyword">if</span> number <span class="keyword">not</span> <span class="keyword">in</span> <span class="built_in">range</span>(start,end+<span class="number">1</span>):</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&#x27;对不起您输入的数字未在指定区间内！！！&#x27;</span>)</span><br><span class="line">                    <span class="keyword">continue</span></span><br><span class="line">                <span class="keyword">elif</span> number &gt; random_number:</span><br><span class="line">                    init_log(<span class="string">&#x27;record.txt&#x27;</span>)</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&#x27;*********&#x27;</span>)</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&#x27;Higher than the anwser&#x27;</span>)</span><br><span class="line">                    <span class="keyword">continue</span></span><br><span class="line">                <span class="keyword">elif</span> number &lt; random_number:</span><br><span class="line">                    init_log(<span class="string">&#x27;record.txt&#x27;</span>)</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&#x27;*********&#x27;</span>)</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&#x27;Lower than the anwser&#x27;</span>)</span><br><span class="line">                    <span class="keyword">continue</span></span><br><span class="line">                <span class="keyword">elif</span> number == random_number:</span><br><span class="line">                    init_log(<span class="string">&#x27;record.txt&#x27;</span>)</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&#x27;*********&#x27;</span>)</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&#x27;恭喜你！只用了&#123;&#125;次就赢得了游戏&#x27;</span>.<span class="built_in">format</span>(count))</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    guess_number()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程练习 </tag>
            
            <tag> 高级函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 阶段编程练习(二十二)</title>
      <link href="/2021/7e327a21dfc3/"/>
      <url>/2021/7e327a21dfc3/</url>
      
        <content type="html"><![CDATA[<h3 id="编程练习"><a href="#编程练习" class="headerlink" title="编程练习"></a>编程练习</h3><blockquote><p>请运用reduce函数，计算20的阶乘，并于终端打印计算结果（如下）</p><p>‘2432902008176640000’</p></blockquote><h5 id="任务"><a href="#任务" class="headerlink" title="任务"></a>任务</h5><ol><li>定义use_reduce函数</li><li>函数体内：实现某个数值的阶乘</li></ol><h5 id="任务提示"><a href="#任务提示" class="headerlink" title="任务提示"></a>任务提示</h5><ol><li>结合list和range函数实现1-20(包含20）的数值即list(range(1,21))</li><li>20的阶乘为<code>1*2*3*4*5*...*20</code>(角标星星)</li></ol><h5 id="初始代码"><a href="#初始代码" class="headerlink" title="初始代码"></a>初始代码</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 从functools 中导入reduce函数</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">use_reduce</span>(<span class="params">x, y</span>):</span></span><br><span class="line">    <span class="comment"># 使用result接收两个数的乘积</span></span><br><span class="line">    result =</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># 使用data接收一个1-20的数值</span></span><br><span class="line">    data =</span><br><span class="line">    <span class="comment"># 调用use_reduce函数传入data</span></span><br><span class="line">    result = reduce()</span><br></pre></td></tr></table></figure><h5 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> reduce</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">use_reduce</span>(<span class="params">data</span>):</span></span><br><span class="line">    <span class="comment"># 使用result接收reduce实现20的阶乘</span></span><br><span class="line">    result = reduce(<span class="keyword">lambda</span> m, n: m*n, data)</span><br><span class="line">    <span class="built_in">print</span>(result)</span><br><span class="line">    <span class="comment"># 测试该功能</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># 使用data接收一个1-20的数值</span></span><br><span class="line">    data = <span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">1</span>,<span class="number">21</span>))</span><br><span class="line">    <span class="comment"># 调用use_reduce函数传入data</span></span><br><span class="line">    result = use_reduce(data)</span><br><span class="line">    </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程练习 </tag>
            
            <tag> 高级函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 阶段编程练习(二十一)</title>
      <link href="/2021/c5a00c2fe360/"/>
      <url>/2021/c5a00c2fe360/</url>
      
        <content type="html"><![CDATA[<h3 id="编程练习"><a href="#编程练习" class="headerlink" title="编程练习"></a>编程练习</h3><blockquote><p>使用map函数，求元组 (2,4,6,8,10,12)中各个元素的5次方</p></blockquote><h4 id="任务"><a href="#任务" class="headerlink" title="任务"></a>任务</h4><ol><li>pow_five函数体内：计算元素的5次方</li><li>调用pow_five函数传入data，使用result接收</li></ol><h4 id="任务提示"><a href="#任务提示" class="headerlink" title="任务提示"></a>任务提示</h4><ol><li>pow(x,y) 方法返回 x的y次方的值</li><li>计算结果：(32, 1024, 7776, 32768, 100000, 248832)</li></ol><h4 id="初始代码"><a href="#初始代码" class="headerlink" title="初始代码"></a>初始代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pow_five</span>(<span class="params">data</span>):</span></span><br><span class="line">    <span class="comment"># 计算元素的5次方</span></span><br><span class="line">    result =</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    data = (<span class="number">2</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">10</span>,<span class="number">12</span>)</span><br><span class="line">    <span class="comment"># 调用pow_five函数传入data，使用result接收</span></span><br><span class="line">    result = <span class="built_in">map</span>()</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">tuple</span>(result))</span><br></pre></td></tr></table></figure><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pow_five</span>(<span class="params">data</span>):</span></span><br><span class="line">    <span class="comment"># 计算元素的5次方</span></span><br><span class="line">    result = <span class="built_in">map</span>(<span class="keyword">lambda</span> n: <span class="built_in">pow</span>(n, <span class="number">5</span>), data)</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    data = (<span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">12</span>)</span><br><span class="line">    <span class="comment"># 调用pow_five函数传入data，使用result接收</span></span><br><span class="line">    result = pow_five(data)</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">tuple</span>(result))</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程练习 </tag>
            
            <tag> 高级函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 阶段编程练习(二十)</title>
      <link href="/2021/6f44a47c4b51/"/>
      <url>/2021/6f44a47c4b51/</url>
      
        <content type="html"><![CDATA[<h3 id="编程练习"><a href="#编程练习" class="headerlink" title="编程练习"></a>编程练习</h3><blockquote><p>使用filter函数，求0-50以内（包括50）的偶数<br>[0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44,46, 48, 50]</p></blockquote><h4 id="任务"><a href="#任务" class="headerlink" title="任务"></a>任务</h4><ol><li>定义use_filter函数</li><li>函数体内：实现过滤偶数值的功能</li></ol><h4 id="任务提示"><a href="#任务提示" class="headerlink" title="任务提示"></a>任务提示</h4><ul><li>使用变量data接收0-50（包含50）的数字，即list(range(51))</li></ul><h4 id="原始代码"><a href="#原始代码" class="headerlink" title="原始代码"></a>原始代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">use_filter</span>(<span class="params">data</span>):</span></span><br><span class="line">    <span class="comment"># 使用result接收filter过滤偶数值的功能</span></span><br><span class="line">    result =</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># 使用data接收0-50的数值</span></span><br><span class="line">    data =</span><br><span class="line">    <span class="comment"># 调用use_filter函数传入data,使用result变量接收</span></span><br><span class="line">    result =</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">list</span>(result))</span><br></pre></td></tr></table></figure><h4 id="代码提交区"><a href="#代码提交区" class="headerlink" title="代码提交区"></a>代码提交区</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">use_filter</span>(<span class="params">data</span>):</span></span><br><span class="line">    <span class="comment"># 使用result接收filter过滤偶数值的功能</span></span><br><span class="line">    result = <span class="built_in">filter</span>(<span class="keyword">lambda</span> n:n%<span class="number">2</span> == <span class="number">0</span>,data)</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># 使用data接收0-50的数值</span></span><br><span class="line">    data = <span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">51</span>))</span><br><span class="line">    <span class="comment"># 调用use_filter函数传入data,使用result变量接收</span></span><br><span class="line">    result = use_filter(data)</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">list</span>(result))</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程练习 </tag>
            
            <tag> 高级函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python Python中的高级函数(魔法函数)</title>
      <link href="/2021/ef7d290da2cb/"/>
      <url>/2021/ef7d290da2cb/</url>
      
        <content type="html"><![CDATA[<h3 id="Python中的高级函数-魔法函数"><a href="#Python中的高级函数-魔法函数" class="headerlink" title="Python中的高级函数(魔法函数)"></a>Python中的高级函数(魔法函数)</h3><ul><li>filter(内置函数)</li><li>map(内置函数)</li><li>reduce(曾经是内置函数)</li></ul><h4 id="filter"><a href="#filter" class="headerlink" title="filter"></a><code>filter</code></h4><h5 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h5><ul><li>对循环根据过滤条件进行过滤</li></ul><h5 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h5><ul><li><code>filter(func, list)</code></li></ul><h5 id="参数介绍"><a href="#参数介绍" class="headerlink" title="参数介绍"></a>参数介绍</h5><ul><li><code>func</code>: 对list每个item进行条件过滤的定义</li><li><code>list</code> : 需要过滤的列表</li></ul><h5 id="举例"><a href="#举例" class="headerlink" title="举例"></a>举例</h5><ul><li><code>res = filter(lambda x:x &gt; 1, [0,1,2])</code></li></ul><h5 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h5><ul><li><code>&lt;filter at 0x4f3af70&gt; -&gt; [1,2]</code></li></ul><hr><h4 id="map"><a href="#map" class="headerlink" title="map"></a><code>map</code></h4><h5 id="功能-1"><a href="#功能-1" class="headerlink" title="功能"></a>功能</h5><ul><li>对列表中的每个成员<code>是否满足条件</code>返回对应的<strong>True</strong>与<strong>False</strong></li></ul><h5 id="用法-1"><a href="#用法-1" class="headerlink" title="用法"></a>用法</h5><ul><li><code>map(func, list)</code></li></ul><h5 id="参数介绍-1"><a href="#参数介绍-1" class="headerlink" title="参数介绍"></a>参数介绍</h5><ul><li><code>func</code>: 对List每个item进行条件满足的判断</li><li><code>list</code>: 需要过滤的列表</li></ul><h5 id="举例-1"><a href="#举例-1" class="headerlink" title="举例"></a>举例</h5><ul><li><code>res = map(lambda x:x &gt; 1, [0,1,2])</code></li></ul><h5 id="返回值-1"><a href="#返回值-1" class="headerlink" title="返回值"></a>返回值</h5><ul><li><code>&lt;map at 0x4f3af70&gt; -&gt; [False, False, True]</code></li></ul><hr><h4 id="reduce"><a href="#reduce" class="headerlink" title="reduce"></a><code>reduce</code></h4><h5 id="功能-2"><a href="#功能-2" class="headerlink" title="功能"></a>功能</h5><ul><li>对循环前后两个数据进行累加</li></ul><h5 id="用法-2"><a href="#用法-2" class="headerlink" title="用法"></a>用法</h5><ul><li><code>reduce(func, list)</code></li></ul><h5 id="参数介绍-2"><a href="#参数介绍-2" class="headerlink" title="参数介绍"></a>参数介绍</h5><ul><li><code>func</code> : 对 数据累加的函数</li><li><code>list</code> : 需要处理的列表</li></ul><h5 id="举例-2"><a href="#举例-2" class="headerlink" title="举例"></a>举例</h5><ul><li><code>res = reduce(lambda x,y: x + y, [0,1,2])</code></li></ul><h5 id="返回值-2"><a href="#返回值-2" class="headerlink" title="返回值"></a>返回值</h5><ul><li>数字  <code>-&gt;</code> 3</li></ul><h5 id="reduce的导入"><a href="#reduce的导入" class="headerlink" title="reduce的导入"></a>reduce的导入</h5><ul><li><code>from functools import reduce</code></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> reduce</span><br><span class="line"></span><br><span class="line">frunts = [<span class="string">&#x27;apple&#x27;</span>, <span class="string">&#x27;banana&#x27;</span>, <span class="string">&#x27;orange&#x27;</span>]</span><br><span class="line"></span><br><span class="line">result = <span class="built_in">filter</span>(<span class="keyword">lambda</span> x: <span class="string">&#x27;e&#x27;</span> <span class="keyword">in</span> x, frunts)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>(result))</span><br><span class="line"><span class="built_in">print</span>(frunts)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">filter_func</span>(<span class="params">item</span>):</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;e&#x27;</span> <span class="keyword">in</span> item:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;--------&#x27;</span>)</span><br><span class="line">filter_result = <span class="built_in">filter</span>(filter_func, frunts)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>(filter_result))</span><br><span class="line"></span><br><span class="line">map_result = <span class="built_in">map</span>(filter_func, frunts)  <span class="comment"># &gt; all</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>(map_result))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">reduce_result = reduce(<span class="keyword">lambda</span> x, y: x + y, [<span class="number">2</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">100</span>])</span><br><span class="line"><span class="built_in">print</span>(reduce_result)</span><br><span class="line"></span><br><span class="line">reduce_result_str = reduce(<span class="keyword">lambda</span> x, y: x + y, frunts)</span><br><span class="line"><span class="built_in">print</span>(reduce_result_str)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 常用函数 </tag>
            
            <tag> 高级函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python Python中的迭代器</title>
      <link href="/2021/d7eed8961f67/"/>
      <url>/2021/d7eed8961f67/</url>
      
        <content type="html"><![CDATA[<h3 id="Python中的迭代器"><a href="#Python中的迭代器" class="headerlink" title="Python中的迭代器"></a>Python中的迭代器</h3><h4 id="什么是迭代器"><a href="#什么是迭代器" class="headerlink" title="什么是迭代器"></a>什么是迭代器</h4><ul><li>同步进行(不需要等待所有数据都写入内存即可使用)</li></ul><h4 id="如何生成迭代器-iter"><a href="#如何生成迭代器-iter" class="headerlink" title="如何生成迭代器  - iter"></a>如何生成迭代器  - <code>iter</code></h4><h5 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h5><ul><li>生成一个迭代对象</li></ul><h5 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h5><ul><li><code>iter(iterable)</code></li></ul><h5 id="参数介绍"><a href="#参数介绍" class="headerlink" title="参数介绍"></a>参数介绍</h5><ul><li><code>iterable</code> :  可迭代的数据类型</li></ul><h4 id="迭代器的用法-next"><a href="#迭代器的用法-next" class="headerlink" title="迭代器的用法   -  next"></a>迭代器的用法   - <code> next</code></h4><h5 id="介绍-1"><a href="#介绍-1" class="headerlink" title="介绍"></a>介绍</h5><ul><li>返回迭代器中的数据</li></ul><h5 id="用法-1"><a href="#用法-1" class="headerlink" title="用法"></a>用法</h5><ul><li><code>next(iterator)</code></li></ul><h5 id="参数介绍-1"><a href="#参数介绍-1" class="headerlink" title="参数介绍"></a>参数介绍</h5><ul><li><code>iterator</code>: 迭代器对象</li></ul><h4 id="迭代器常用方法之生成迭代器"><a href="#迭代器常用方法之生成迭代器" class="headerlink" title="迭代器常用方法之生成迭代器"></a>迭代器常用方法之生成迭代器</h4><ul><li><p>for循环生成法—<code>yield</code></p></li><li><p>for循环一行生成迭代器</p></li></ul><h4 id="迭代器常用方法之for循环获取"><a href="#迭代器常用方法之for循环获取" class="headerlink" title="迭代器常用方法之for循环获取"></a>迭代器常用方法之for循环获取</h4><ul><li>(i for i range(10))</li><li>用完再用不会报错.</li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">iter_obj = <span class="built_in">iter</span>((<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>))</span><br><span class="line"><span class="comment"># print(next(iter_obj))</span></span><br><span class="line"><span class="comment"># print(next(iter_obj))</span></span><br><span class="line"><span class="comment"># print(next(iter_obj))</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># print(next(iter_obj))</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_next</span>(<span class="params">iter_obj</span>):</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">next</span>(iter_obj)</span><br><span class="line">    <span class="keyword">except</span> StopIteration:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># print(_next(iter_obj))</span></span><br><span class="line"><span class="comment"># print(_next(iter_obj))</span></span><br><span class="line"><span class="comment"># print(_next(iter_obj))</span></span><br><span class="line"><span class="comment"># print(_next(iter_obj))</span></span><br><span class="line"><span class="comment"># print(_next(iter_obj))</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">make_iter</span>():</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">        <span class="keyword">yield</span> i</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">iter_obj = make_iter()</span><br><span class="line"><span class="comment"># print(type(iter_obj))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> iter_obj:</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;--------&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> iter_obj:</span><br><span class="line">    <span class="built_in">print</span>(i)  <span class="comment"># 执行后程序会空 , 拿不到数据</span></span><br><span class="line"></span><br><span class="line">iter_obj = (i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> iter_obj:</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;========&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> iter_obj:</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br><span class="line">    </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 常用函数 </tag>
            
            <tag> 高级函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python python的随机模块--random</title>
      <link href="/2021/b22ca34c955f/"/>
      <url>/2021/b22ca34c955f/</url>
      
        <content type="html"><![CDATA[<h3 id="python的随机模块–random"><a href="#python的随机模块–random" class="headerlink" title="python的随机模块–random"></a>python的随机模块–<code>random</code></h3><ul><li><code>random.random</code><ul><li>模块名称.模块中的函数</li></ul></li><li><code>random.uniform</code></li><li><code>random.randint</code></li><li><code>random.choice</code></li><li><code>random.sample</code></li><li><code>random.randrange</code></li></ul><h4 id="random-random"><a href="#random-random" class="headerlink" title="random.random"></a>random.random</h4><ul><li>随机返回0~1之间的浮点数</li></ul><h4 id="random-uniform"><a href="#random-uniform" class="headerlink" title="random.uniform"></a>random.uniform</h4><ul><li>产生一个a,b区间的随机浮点数</li></ul><h4 id="random-randint"><a href="#random-randint" class="headerlink" title="random.randint"></a>random.randint</h4><ul><li>产生一个a, b区间的随机整数</li></ul><h4 id="random-choice"><a href="#random-choice" class="headerlink" title="random.choice"></a>random.choice</h4><ul><li>返回对象中的一个随机元素</li></ul><h4 id="random-sample"><a href="#random-sample" class="headerlink" title="random.sample"></a>random.sample</h4><ul><li><p>随机返回对象中指定的元素</p></li><li><p><code># 即个数</code></p></li></ul><h4 id="random-randrange"><a href="#random-randrange" class="headerlink" title="random.randrange"></a>random.randrange</h4><ul><li>获取区间内的一个随机数</li><li><code>random.randrange(0, 100, 1)</code>  # 区间,步长</li><li><code>random.choice(range(0, 100, 1))</code></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line">gifts = [<span class="string">&#x27;iphone&#x27;</span>, <span class="string">&#x27;ipad&#x27;</span>, <span class="string">&#x27;car&#x27;</span>, <span class="string">&#x27;tv&#x27;</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">chioce_gifts</span>():</span></span><br><span class="line">    gift = random.choice(gifts)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;你得到了%s&#x27;</span> % gift)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">chioce_gift_new</span>():</span></span><br><span class="line">    count = random.randrange(<span class="number">0</span>, <span class="number">100</span>, <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="number">0</span> &lt;= count &lt;= <span class="number">50</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;你中了一个iphone&#x27;</span>)</span><br><span class="line">    <span class="keyword">elif</span> <span class="number">50</span> &lt; count &lt;= <span class="number">70</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;你中了一个ipad&#x27;</span>)</span><br><span class="line">    <span class="keyword">elif</span> <span class="number">70</span> &lt; count &lt; <span class="number">90</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;你中了一个tv电视&#x27;</span>)</span><br><span class="line">    <span class="keyword">elif</span> count &gt;= <span class="number">90</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;恭喜你中了一辆小汽车&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># chioce_gifts()</span></span><br><span class="line">    chioce_gift_new()</span><br><span class="line">    </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 常用函数 </tag>
            
            <tag> 高级函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python Python中的内置函数总结</title>
      <link href="/2021/fbe68b01bdf2/"/>
      <url>/2021/fbe68b01bdf2/</url>
      
        <content type="html"><![CDATA[<h3 id="Python中的内置函数总结"><a href="#Python中的内置函数总结" class="headerlink" title="Python中的内置函数总结"></a>Python中的内置函数总结</h3><ul><li>总结python的常用内置函数</li></ul><h4 id="常用函数1"><a href="#常用函数1" class="headerlink" title="常用函数1"></a>常用函数1</h4><table><thead><tr><th>函数名</th><th>参数</th><th>介绍</th><th>返回值</th><th>举例</th></tr></thead><tbody><tr><td><code>abs</code></td><td><strong>Number</strong></td><td>返回数字绝对值</td><td>正数字</td><td><code>abs(-10)</code></td></tr><tr><td><code>all</code></td><td><strong>List</strong></td><td>判断列表内容是否全是true</td><td>Bool</td><td><code>all([&#39;&#39;, &#39;123&#39;])</code></td></tr><tr><td><code>help</code></td><td><strong>object</strong></td><td>打印对象的用法</td><td>无</td><td><code>help(list)</code></td></tr><tr><td><code>enumerate</code></td><td><strong>iterable</strong></td><td>迭代时记录索引</td><td>无</td><td><code>for index, item in enumerate(list)</code></td></tr><tr><td><code>input</code></td><td><strong>Str</strong></td><td>命令行输入消息</td><td>Str</td><td><code>input(&#39;请输入信息:&#39;)</code></td></tr></tbody></table><h4 id="常用函数2"><a href="#常用函数2" class="headerlink" title="常用函数2"></a>常用函数2</h4><table><thead><tr><th>函数名</th><th>参数</th><th>介绍</th><th>返回值</th><th>举例</th></tr></thead><tbody><tr><td><code>isinstance</code></td><td>Object, type</td><td>判断对象是否是某种类型</td><td>Bool</td><td><code>isinstance(&#39;a&#39;, str)</code></td></tr><tr><td><code>type</code></td><td>Object</td><td>判断对象的类型</td><td>Str</td><td><code>type(10)</code></td></tr><tr><td><code>vars</code></td><td>instance</td><td>返回实例化的字典信息</td><td>dict</td><td></td></tr><tr><td><code>dir</code></td><td>object</td><td>返回对象中所有可用方法和属性</td><td>List</td><td><code>dir(&#39;asd&#39;)</code></td></tr><tr><td><code>hasattr</code></td><td>Obj, key</td><td>判断对象中是否有某个属性</td><td>Bool</td><td><code>hasattr(&#39;1&#39;, &#39;upper&#39;)</code></td></tr></tbody></table><h4 id="常用函数3"><a href="#常用函数3" class="headerlink" title="常用函数3"></a>常用函数3</h4><table><thead><tr><th>函数名</th><th>参数</th><th>介绍</th><th>返回值</th><th>举例</th></tr></thead><tbody><tr><td><code>setattr</code></td><td>Obj,key,value</td><td>为实例化对象添加属性与值</td><td>无</td><td><code>setattr(instance, &#39;run&#39;, &#39;jo&#39;)</code></td></tr><tr><td><code>gatattr</code></td><td>obj, key</td><td>通过对象获取属性</td><td>任何类型</td><td><code>getattr(obj, key)</code></td></tr><tr><td><code>any</code></td><td>Iterable</td><td>判断内容是否有True值</td><td>Bool</td><td><code>any([1, 0, &#39;&#39;])</code></td></tr></tbody></table><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># food = input(&#x27;你想吃什么呢:&#x27;)</span></span><br><span class="line"><span class="comment"># print(food)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># # help(input)</span></span><br><span class="line"><span class="comment"># help(list)</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    a = <span class="number">1</span></span><br><span class="line">    b = <span class="number">2</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.a = self.a</span><br><span class="line">        self.b = self.b</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">test = Test()</span><br><span class="line"><span class="built_in">print</span>(test.a)</span><br><span class="line">result = <span class="built_in">vars</span>(test)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">hasattr</span>(test, <span class="string">&#x27;a&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">hasattr</span>(test, <span class="string">&#x27;c&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">hasattr</span>(<span class="built_in">list</span>, <span class="string">&#x27;append&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">hasattr</span>(<span class="built_in">list</span>, <span class="string">&#x27;appends&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="built_in">setattr</span>(test, <span class="string">&#x27;c&#x27;</span>, <span class="number">3</span>)</span><br><span class="line"><span class="built_in">print</span>(test.c)  <span class="comment"># 若存在, 会覆盖</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">vars</span>(test))</span><br><span class="line"></span><br><span class="line"><span class="comment"># setattr((list, &#x27;c&#x27;, 1))  # 内置的类不可自定义属性</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">hasattr</span>(<span class="built_in">list</span>, <span class="string">&#x27;appends&#x27;</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">getattr</span>(<span class="built_in">list</span>, <span class="string">&#x27;appends&#x27;</span>))</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;不存在&#x27;</span>)</span><br><span class="line"></span><br><span class="line">a = [<span class="string">&#x27;&#x27;</span>, <span class="literal">None</span>, <span class="literal">True</span>, <span class="number">0</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">any</span>(a))  <span class="comment"># &#x27;或&#x27; 的关系</span></span><br><span class="line"><span class="comment"># all - &gt; and</span></span><br><span class="line"><span class="comment"># any - &gt; or</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 常用函数 </tag>
            
            <tag> 高级函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python Python中的虚拟环境</title>
      <link href="/2021/a3ebd6c062e7/"/>
      <url>/2021/a3ebd6c062e7/</url>
      
        <content type="html"><![CDATA[<h3 id="Python中的虚拟环境"><a href="#Python中的虚拟环境" class="headerlink" title="Python中的虚拟环境"></a>Python中的虚拟环境</h3><ul><li>认识虚拟环境</li><li>Python中的虚拟环境工具</li></ul><h4 id="认识虚拟环境"><a href="#认识虚拟环境" class="headerlink" title="认识虚拟环境"></a>认识虚拟环境</h4><ul><li>各个版本互不干扰,互不相等</li><li>python可能版本不同  系统环境不同</li><li>创建的每一个项目都是各自的虚拟环境</li></ul><h4 id="Python中的虚拟环境工具"><a href="#Python中的虚拟环境工具" class="headerlink" title="Python中的虚拟环境工具"></a>Python中的虚拟环境工具</h4><ul><li><code>Virtualenv</code></li><li><code>pyenv</code></li></ul><h4 id="virtualenv-另一个较为复杂"><a href="#virtualenv-另一个较为复杂" class="headerlink" title="virtualenv(另一个较为复杂)"></a><code>virtualenv</code>(另一个较为复杂)</h4><ul><li>命令行下使用</li><li><code>pip install virtualenv</code></li><li>选择目录</li><li><code>virtualenv -p python3 penv</code></li><li><code>./penv/bin/active</code></li><li>win系统可以<code>在bin文件夹下</code>输入<code>active</code>  <code>回车</code>*<em>进入虚拟环境</em></li><li><code>deacitve</code>(退出虚拟环境)</li></ul><blockquote><p>装这个插件…….Windows配置环境配置了半个多小时(想买mac或者重开成Linux了呜呜呜)</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 常用函数 </tag>
            
            <tag> 高级函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python Python中的日志模块</title>
      <link href="/2021/58cc3eaec3ec/"/>
      <url>/2021/58cc3eaec3ec/</url>
      
        <content type="html"><![CDATA[<h3 id="Python中的日志模块"><a href="#Python中的日志模块" class="headerlink" title="Python中的日志模块"></a>Python中的日志模块</h3><h4 id="日志的作用"><a href="#日志的作用" class="headerlink" title="日志的作用"></a>日志的作用</h4><ul><li>日记</li><li>程序行为</li><li>重要信息记录</li></ul><h4 id="日志的等级"><a href="#日志的等级" class="headerlink" title="日志的等级"></a>日志的等级</h4><ul><li><code>debug</code></li><li><code>info</code></li><li><code>warning</code></li><li><code>error</code></li><li><code>critical</code></li></ul><h4 id="logging模块的使用"><a href="#logging模块的使用" class="headerlink" title="logging模块的使用"></a>logging模块的使用</h4><ul><li><code>logging.basicConfig</code></li></ul><table><thead><tr><th>参数名</th><th>作用</th><th>举例</th></tr></thead><tbody><tr><td><code>level</code></td><td>日志输出等级</td><td><code>level = logging.DEBUG</code></td></tr><tr><td><code>format</code></td><td>日志输出格式</td><td></td></tr><tr><td><code>filename</code></td><td>存储位置</td><td><code>filename = &#39;d://back.log&#39;</code></td></tr><tr><td><code>filemode</code></td><td>输入模式</td><td><code>filemode = &quot;w&quot;</code></td></tr></tbody></table><h5 id="format具体格式"><a href="#format具体格式" class="headerlink" title="format具体格式"></a>format具体格式</h5><table><thead><tr><th>格式符</th><th>含义</th></tr></thead><tbody><tr><td><code>%(levelname)s</code></td><td>日志级别名称</td></tr><tr><td><code>%(pathname)s</code></td><td>执行程序的路径</td></tr><tr><td><code>%(filename)s</code></td><td>执行程序名</td></tr><tr><td><code>%(lineno)d</code></td><td>日志的当前行号</td></tr><tr><td><code>%(asctime)s</code></td><td>打印日志的时间</td></tr><tr><td><code>%(message)s</code></td><td>日志信息</td></tr></tbody></table><ul><li><code>format = &#39;%(asctime)s %(filename)s[line:%(lineno)d] %(levelname)s %(message)s&#39;</code></li><li>(常用的格式)</li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">init_log</span>(<span class="params">path</span>):</span></span><br><span class="line">    <span class="keyword">if</span> os.path.exists(path):</span><br><span class="line">        mode = <span class="string">&#x27;a&#x27;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        mode = <span class="string">&#x27;w&#x27;</span></span><br><span class="line">    logging.basicConfig(</span><br><span class="line">        level=logging.INFO,</span><br><span class="line">        <span class="built_in">format</span>=<span class="string">&#x27;%(asctime)s %(filename)s %(lineno)d %(levelname)s %(message)s&#x27;</span>,</span><br><span class="line">        filename=path,</span><br><span class="line">        filemode=mode</span><br><span class="line">    )</span><br><span class="line">    <span class="keyword">return</span> logging</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">current_path = os.getcwd()</span><br><span class="line">path = os.path.join(current_path, <span class="string">&#x27;back.log&#x27;</span>)</span><br><span class="line">log = init_log(path)</span><br><span class="line"><span class="comment"># log = init_log()</span></span><br><span class="line"></span><br><span class="line">log.info(<span class="string">&#x27;这是第一个记录的日志信息&#x27;</span>)</span><br><span class="line">log.warning(<span class="string">&#x27;这是一个警告&#x27;</span>)</span><br><span class="line">log.error(<span class="string">&#x27;这是一个重大的错误信息&#x27;</span>)</span><br><span class="line">log.debug(<span class="string">&#x27;这是一个debug&#x27;</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 常用函数 </tag>
            
            <tag> 高级函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python Python中的加密工具</title>
      <link href="/2021/6bf1514df252/"/>
      <url>/2021/6bf1514df252/</url>
      
        <content type="html"><![CDATA[<h3 id="Python中的加密工具"><a href="#Python中的加密工具" class="headerlink" title="Python中的加密工具"></a>Python中的加密工具</h3><h4 id="hashlib模块介绍"><a href="#hashlib模块介绍" class="headerlink" title="hashlib模块介绍"></a>hashlib模块介绍</h4><ul><li>难破解</li><li>不可逆</li></ul><h4 id="hashlib模块中的常用方法"><a href="#hashlib模块中的常用方法" class="headerlink" title="hashlib模块中的常用方法"></a>hashlib模块中的常用方法</h4><table><thead><tr><th>函数名</th><th>参数</th><th>介绍</th><th>举例</th><th>返回值</th></tr></thead><tbody><tr><td><code>md5</code></td><td>byte</td><td>Md5算法加密</td><td><code>hashlib.md5(b&#39;hello&#39;)</code></td><td>Hash对象</td></tr><tr><td><code>sha1</code></td><td>byte</td><td>Sha1算法加密</td><td><code>hashlib.sha1(b&#39;hello&#39;)</code></td><td>Hash对象</td></tr><tr><td><code>sha256</code></td><td>byte</td><td>Sha256算法加密</td><td><code>hashlib.sha256(b&#39;hello&#39;)</code></td><td>Hash对象</td></tr><tr><td><code>sha512</code></td><td>byte</td><td>Sha512算法加密</td><td><code>hashlib.sha512(b&#39;hello&#39;)</code></td><td>Hash对象</td></tr></tbody></table><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">base_sigh = <span class="string">&#x27;muke&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">custom</span>():</span></span><br><span class="line">    a_timestamp = <span class="built_in">int</span>(time.time())</span><br><span class="line">    _token = <span class="string">&#x27;%s%s&#x27;</span> % (base_sigh, a_timestamp)</span><br><span class="line">    <span class="comment"># print(_token, type(_token))</span></span><br><span class="line">    hashobj = hashlib.sha1(_token.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">    a_token = hashobj.hexdigest()</span><br><span class="line">    <span class="comment"># print(a_token)</span></span><br><span class="line">    <span class="keyword">return</span> a_token, a_timestamp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">b_service_check</span>(<span class="params">token, timestamp</span>):</span></span><br><span class="line">    _token = <span class="string">&#x27;%s%s&#x27;</span> % (base_sigh, timestamp)</span><br><span class="line">    b_token = hashlib.sha1(_token.encode(<span class="string">&#x27;utf-8&#x27;</span>)).hexdigest()</span><br><span class="line">    <span class="keyword">if</span> token == b_token:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    need_help_token, timestamp = custom()  <span class="comment"># 若只使用一个变量,则此处会生成一个元组传入其变量</span></span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br><span class="line">    result = b_service_check(need_help_token, <span class="built_in">int</span>(time.time()))</span><br><span class="line">    <span class="keyword">if</span> result == <span class="literal">True</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;a合法,b服务可以进行帮助&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;a不合法,b不可进行帮助&#x27;</span>)</span><br><span class="line">        </span><br></pre></td></tr></table></figure><h4 id="base64模块介绍"><a href="#base64模块介绍" class="headerlink" title="base64模块介绍"></a>base64模块介绍</h4><ul><li>通用型</li><li>可解密</li></ul><h4 id="base64模块的常用方法"><a href="#base64模块的常用方法" class="headerlink" title="base64模块的常用方法"></a>base64模块的常用方法</h4><table><thead><tr><th>函数名</th><th>参数</th><th>介绍</th><th>举例</th><th>返回值</th></tr></thead><tbody><tr><td><code>encodestring</code></td><td>Byte</td><td>进行base64加密</td><td><code>base64.encodestring(b&#39;py&#39;)</code></td><td>Byte</td></tr><tr><td><code>decodingstring</code></td><td>Byte</td><td>对base64解密</td><td><code>base64.decodestring(b&#39;eGlhb211\n&#39;)</code></td><td>Byte</td></tr><tr><td><code>encodebytes</code>(推荐)</td><td>Byte</td><td>进行bese64加密</td><td><code>base64.encodebytes(b&#39;py&#39;)</code></td><td>Byte</td></tr><tr><td><code>decodingbytes</code>(推荐)</td><td>Byte</td><td>对base64解密</td><td><code>base64.decodebytes(b&#39;eGlhb211\n&#39;)</code></td><td>Byte</td></tr></tbody></table><h4 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">replace_one = <span class="string">&#x27;%&#x27;</span></span><br><span class="line">replace_two = <span class="string">&#x27;$&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encode</span>(<span class="params">data</span>):</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">isinstance</span>(data, <span class="built_in">str</span>):</span><br><span class="line">        data = data.encode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    <span class="keyword">elif</span> <span class="built_in">isinstance</span>(data, <span class="built_in">bytes</span>):</span><br><span class="line">        data = data</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">raise</span> TypeError(<span class="string">&#x27;data need bytes or str&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    _data = base64.encodebytes(data).decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    <span class="comment"># print(_data)</span></span><br><span class="line">    _data = _data.replace(<span class="string">&#x27;a&#x27;</span>, replace_one).replace(<span class="string">&#x27;2&#x27;</span>, replace_two)</span><br><span class="line">    <span class="comment"># print(_data)</span></span><br><span class="line">    <span class="keyword">return</span> _data</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decode</span>(<span class="params">data</span>):</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">isinstance</span>(data, <span class="built_in">bytes</span>):</span><br><span class="line">        <span class="keyword">raise</span> TypeError(<span class="string">&#x27;data need bytes&#x27;</span>)</span><br><span class="line">    replace_one_b = replace_one.encode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    replace_two_b = replace_two.encode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    data = data.replace(replace_one_b, <span class="string">b&#x27;a&#x27;</span>).replace(replace_two_b, <span class="string">b&#x27;2&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> base64.decodebytes(data).decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    result = encode(<span class="string">&#x27;hello xiaomu&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(result)</span><br><span class="line">    new_result = decode(result.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">    <span class="built_in">print</span>(new_result)</span><br><span class="line">    </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 常用函数 </tag>
            
            <tag> 高级函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python Yaml文件的读取</title>
      <link href="/2021/46d82974b24c/"/>
      <url>/2021/46d82974b24c/</url>
      
        <content type="html"><![CDATA[<h3 id="Yaml文件的读取"><a href="#Yaml文件的读取" class="headerlink" title="Yaml文件的读取"></a>Yaml文件的读取</h3><h4 id="yaml格式的介绍"><a href="#yaml格式的介绍" class="headerlink" title="yaml格式的介绍"></a>yaml格式的介绍</h4><ul><li><p>文本文件</p></li><li><p>服务器配置文件</p></li><li><p><code>xxx.yaml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span></span><br><span class="line">  <span class="string">xiaomu</span></span><br><span class="line"><span class="attr">age:</span></span><br><span class="line">  <span class="number">10</span></span><br><span class="line"><span class="attr">xingqing:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">haha</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">heihei</span></span><br><span class="line"><span class="attr">new:</span></span><br><span class="line">  <span class="attr">a:</span> <span class="string">b</span></span><br><span class="line">  <span class="attr">c:</span> <span class="number">1</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="Python的第三方包—-pyyaml"><a href="#Python的第三方包—-pyyaml" class="headerlink" title="Python的第三方包—-pyyaml"></a>Python的第三方包—-pyyaml</h4><ul><li><code>pip install pyyaml</code></li><li><code>import yaml</code></li></ul><h4 id="读取yaml文件的方法"><a href="#读取yaml文件的方法" class="headerlink" title="读取yaml文件的方法"></a>读取yaml文件的方法</h4><h5 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h5><ol><li> <code>f = open(yaml_file, &#39;r&#39;)</code></li><li> <code>data = yaml.load(f.read())</code></li><li> <code>  f.close()</code></li></ol><h5 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h5><ul><li>字典类型</li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> yaml</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read</span>(<span class="params">path</span>):</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(path, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        data = f.read()</span><br><span class="line">    _result = yaml.load(data, Loader=yaml.FullLoader)</span><br><span class="line">    <span class="keyword">return</span> _result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    result = read(<span class="string">&#x27;muke.yaml&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(result, <span class="built_in">type</span>(result))</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">dir</span>(yaml))</span><br><span class="line">    </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文件操作（IO） </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 序列化</title>
      <link href="/2021/1392ef5ea81f/"/>
      <url>/2021/1392ef5ea81f/</url>
      
        <content type="html"><![CDATA[<h3 id="序列化"><a href="#序列化" class="headerlink" title="序列化"></a>序列化</h3><h4 id="初识序列化与反序列化"><a href="#初识序列化与反序列化" class="headerlink" title="初识序列化与反序列化"></a>初识序列化与反序列化</h4><ul><li><code>对象信息</code>或<code>数据结构信息</code>通过<strong>转换</strong>达到<code>存储</code>或者<code>传输</code>的<strong>效果</strong></li><li>可以用比特的编码与解码进行联想</li></ul><h4 id="可序列化的数据类型"><a href="#可序列化的数据类型" class="headerlink" title="可序列化的数据类型"></a>可序列化的数据类型</h4><ul><li><code>number</code></li><li><code>str</code></li><li><code>list</code></li><li><code>tuple</code></li><li><code>dict</code>  <strong>#  最常用的</strong></li></ul><h4 id="Python中的json模块"><a href="#Python中的json模块" class="headerlink" title="Python中的json模块"></a>Python中的<code>json模块</code></h4><table><thead><tr><th>方法名</th><th>参数</th><th>介绍</th><th>举例</th><th>返回值</th></tr></thead><tbody><tr><td><code>dumps</code></td><td>obj</td><td>对象序列化</td><td><code>json.dumps([1,2])</code></td><td>字符串</td></tr><tr><td><code>loads</code></td><td>str</td><td>返序列化</td><td><code>Json.loads(&#39;[1,2,3]&#39;)</code></td><td>原始数据类型</td></tr></tbody></table><h4 id="Python中的pickle"><a href="#Python中的pickle" class="headerlink" title="Python中的pickle"></a>Python中的<code>pickle</code></h4><table><thead><tr><th>方法名</th><th>参数</th><th>介绍</th><th>举例</th><th>返回值</th></tr></thead><tbody><tr><td><code>dumps</code></td><td>obj</td><td>对象序列化</td><td><code>pickle.dumps([1,2])</code></td><td>比特</td></tr><tr><td><code>loads</code></td><td>byte</td><td>返序列化</td><td><code>pickle.loads(&#39;[1, 2, 3]&#39;)</code></td><td>原始数据类型</td></tr></tbody></table><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read</span>(<span class="params">path</span>):</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(path, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        data = f.read()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> json.loads(data)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">write</span>(<span class="params">path, data</span>):</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(path, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">isinstance</span>(data, <span class="built_in">dict</span>):</span><br><span class="line">            _data = json.dumps(data)</span><br><span class="line">            f.write(_data)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">raise</span> TypeError(<span class="string">&#x27;data is dict&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">data = &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;小慕&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">18</span>, <span class="string">&#x27;top&#x27;</span>: <span class="number">176</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># write(&#x27;test.json&#x27;, data)</span></span><br><span class="line">    result = read(<span class="string">&#x27;test.json&#x27;</span>)</span><br><span class="line">    result[<span class="string">&#x27;sex&#x27;</span>] = <span class="string">&#x27;boy&#x27;</span></span><br><span class="line">    write(<span class="string">&#x27;test.json&#x27;</span>, result)</span><br><span class="line">    <span class="comment"># print(result, type(result))</span></span><br><span class="line">    </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文件操作（IO） </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 文件的读取</title>
      <link href="/2021/c2a208ee7c21/"/>
      <url>/2021/c2a208ee7c21/</url>
      
        <content type="html"><![CDATA[<h3 id="文件的读取"><a href="#文件的读取" class="headerlink" title="文件的读取"></a>文件的读取</h3><h4 id="文件操作的模式之读取"><a href="#文件操作的模式之读取" class="headerlink" title="文件操作的模式之读取"></a>文件操作的模式之读取</h4><table><thead><tr><th>模式</th><th>介绍</th></tr></thead><tbody><tr><td><code>r</code></td><td>读取文件</td></tr><tr><td><code>rb</code></td><td>二进制形式读取文件</td></tr></tbody></table><h4 id="文件对象的操作模式之读"><a href="#文件对象的操作模式之读" class="headerlink" title="文件对象的操作模式之读"></a>文件对象的操作模式之读</h4><table><thead><tr><th>方法名</th><th>参数</th><th>介绍</th><th>举例</th></tr></thead><tbody><tr><td><code>read</code>(seed)</td><td>无</td><td>返回整个文件字符串</td><td><code>f.read()</code></td></tr><tr><td><code>readlines</code></td><td>无</td><td>返回文件列表</td><td><code>f.readlines()</code></td></tr><tr><td><code>readline</code></td><td>无</td><td>返回文件中的一行</td><td><code>f.readline()</code></td></tr><tr><td><code>mode</code></td><td>无</td><td>文件模式</td><td><code>f.mode</code></td></tr><tr><td><code>name</code></td><td>无</td><td>返回文件名称</td><td><code>f.name</code></td></tr><tr><td><code>closed</code></td><td>无</td><td>文件是否关闭</td><td><code>f.closed</code></td></tr></tbody></table><ul><li><p>操作完成后,<code>必须使用close方法</code>!!</p></li><li><p><code>with函数</code></p></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_package</span>(<span class="params">path</span>):</span></span><br><span class="line">    <span class="keyword">if</span> os.path.exists(path):</span><br><span class="line">        <span class="keyword">raise</span> Exception(<span class="string">&#x27;%s 已经存在不可创建&#x27;</span> % path)</span><br><span class="line">    os.makedirs(path)</span><br><span class="line">    init_path = os.path.join(path, <span class="string">&#x27;__init__.py&#x27;</span>)</span><br><span class="line">    f = <span class="built_in">open</span>(init_path, <span class="string">&#x27;w&#x27;</span>)</span><br><span class="line">    f.write(<span class="string">&quot;# coding:utf-8\n&quot;</span>)</span><br><span class="line">    f.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Open</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, path, mode=<span class="string">&#x27;w&#x27;</span>, is_return=<span class="literal">True</span></span>):</span></span><br><span class="line">        self.path = path</span><br><span class="line">        self.mode = mode</span><br><span class="line">        self.is_return = is_return</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">write</span>(<span class="params">self, message</span>):</span></span><br><span class="line">        f = <span class="built_in">open</span>(self.path, mode=self.mode)</span><br><span class="line">        <span class="keyword">if</span> self.is_return:</span><br><span class="line">            message = <span class="string">&#x27;%s\n&#x27;</span> % message</span><br><span class="line">        f.write(message)</span><br><span class="line">        f.close()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">read</span>(<span class="params">self, is_strip=<span class="literal">True</span></span>):</span></span><br><span class="line">        result = []</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(self.path, mode=self.mode) <span class="keyword">as</span> f:</span><br><span class="line">            _data = f.readlines()</span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> _data:</span><br><span class="line">            <span class="keyword">if</span> is_strip:</span><br><span class="line">                temp = line.strip()</span><br><span class="line">                <span class="keyword">if</span> temp != <span class="string">&#x27;&#x27;</span>:</span><br><span class="line">                    result.append(temp)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">if</span> line != <span class="string">&#x27;&#x27;</span>:</span><br><span class="line">                    result.append(line)</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    current_path = os.getcwd()</span><br><span class="line">    <span class="comment"># path = os.path.join(current_path, &#x27;test1&#x27;)</span></span><br><span class="line">    <span class="comment"># create_package(path)</span></span><br><span class="line">    <span class="comment"># open_path = os.path.join(current_path, &#x27;b.txt&#x27;)</span></span><br><span class="line">    o = Open(<span class="string">&#x27;package_datetime.py&#x27;</span>, mode=<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">    <span class="comment"># o.write(&#x27;你好 小慕&#x27;)</span></span><br><span class="line">    <span class="comment"># data = o.read(is_strip=False)</span></span><br><span class="line">    data = o.read()</span><br><span class="line">    <span class="built_in">print</span>(data)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文件操作（IO） </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 文件的创建和写入</title>
      <link href="/2021/d82afbbe5880/"/>
      <url>/2021/d82afbbe5880/</url>
      
        <content type="html"><![CDATA[<h3 id="文件的创建和写入"><a href="#文件的创建和写入" class="headerlink" title="文件的创建和写入"></a>文件的创建和写入</h3><h4 id="利用内置函数open获取文件对象"><a href="#利用内置函数open获取文件对象" class="headerlink" title="利用内置函数open获取文件对象"></a>利用内置函数open获取文件对象</h4><h5 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h5><ul><li>生成文件对象，进行创建，读写操作</li></ul><h5 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h5><ul><li><code>open(path, mode)</code></li></ul><h5 id="参数说明"><a href="#参数说明" class="headerlink" title="参数说明"></a>参数说明</h5><ul><li><code>path</code>：文件路径</li><li><code>mode</code>：操作模式</li></ul><h5 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h5><ul><li><strong>文件对象</strong></li></ul><h5 id="举例"><a href="#举例" class="headerlink" title="举例"></a>举例</h5><ul><li><code>f = open(&#39;d://a.txt&#39;, &#39;w&#39;)</code></li></ul><h4 id="文件操作的模式之写入"><a href="#文件操作的模式之写入" class="headerlink" title="文件操作的模式之写入"></a>文件操作的模式之写入</h4><table><thead><tr><th>模式</th><th>介绍</th></tr></thead><tbody><tr><td><code>w</code></td><td>创建文件</td></tr><tr><td><code>w+</code></td><td>创建文件并读取文件</td></tr><tr><td><code>wb</code></td><td>二进制形式创建文件</td></tr><tr><td><code>wb+</code></td><td>二进制形式创建或追加内容</td></tr><tr><td><code>a</code></td><td>追加内容</td></tr><tr><td><code>a+</code></td><td>读写模式的追加</td></tr><tr><td><code>ab+</code></td><td>二进制形式读写追加</td></tr></tbody></table><h4 id="文件对象的操作方式之写入保存"><a href="#文件对象的操作方式之写入保存" class="headerlink" title="文件对象的操作方式之写入保存"></a>文件对象的操作方式之写入保存</h4><table><thead><tr><th>方法名</th><th>参数</th><th>介绍</th><th>举例</th></tr></thead><tbody><tr><td>write</td><td>Message</td><td>写入信息</td><td>f.write(‘hello\n’)</td></tr><tr><td>writelines</td><td>Message_list</td><td>批量写入</td><td>f.writelines([‘hello\n’, ‘world\n’])</td></tr><tr><td>close</td><td>无</td><td>关闭并保存文件</td><td>f.close()</td></tr></tbody></table><ul><li>操作完成后，必须使用close方法！</li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_package</span>(<span class="params">path</span>):</span></span><br><span class="line">    <span class="keyword">if</span> os.path.exists(path):</span><br><span class="line">        <span class="keyword">raise</span> Exception(<span class="string">&#x27;%s 已经存在不可创建&#x27;</span> % path)</span><br><span class="line">    os.makedirs(path)</span><br><span class="line">    init_path = os.path.join(path, <span class="string">&#x27;__init__.py&#x27;</span>)</span><br><span class="line">    f = <span class="built_in">open</span>(init_path, <span class="string">&#x27;w&#x27;</span>)</span><br><span class="line">    f.write(<span class="string">&quot;# coding:utf-8\n&quot;</span>)</span><br><span class="line">    f.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Open</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, path, mode=<span class="string">&#x27;w&#x27;</span>, is_retern=<span class="literal">True</span></span>):</span></span><br><span class="line">        self.path = path</span><br><span class="line">        self.mode = mode</span><br><span class="line">        self.is_retern = is_retern</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">write</span>(<span class="params">self, message</span>):</span></span><br><span class="line">        f = <span class="built_in">open</span>(self.path, mode=self.mode)</span><br><span class="line">        <span class="keyword">if</span> self.is_retern:</span><br><span class="line">            message = <span class="string">&#x27;%s\n&#x27;</span> % message</span><br><span class="line">        f.write(message)</span><br><span class="line">        f.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    current_path = os.getcwd()</span><br><span class="line">    <span class="comment"># path = os.path.join(current_path, &#x27;test1&#x27;)</span></span><br><span class="line">    <span class="comment"># create_package(path)</span></span><br><span class="line">    open_path = os.path.join(current_path, <span class="string">&#x27;b.txt&#x27;</span>)</span><br><span class="line">    o = Open(open_path)</span><br><span class="line">    o.write(<span class="string">&#x27;你好 小慕&#x27;</span>)</span><br><span class="line">    </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文件操作（IO） </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python Python中的sys模块</title>
      <link href="/2021/78aeb3436f5b/"/>
      <url>/2021/78aeb3436f5b/</url>
      
        <content type="html"><![CDATA[<h3 id="Python中的sys模块"><a href="#Python中的sys模块" class="headerlink" title="Python中的sys模块"></a>Python中的sys模块</h3><h4 id="sys中的常用方法"><a href="#sys中的常用方法" class="headerlink" title="sys中的常用方法"></a>sys中的常用方法</h4><table><thead><tr><th>函数名</th><th>参数</th><th>介绍</th><th>举例</th><th>返回值</th></tr></thead><tbody><tr><td><code>modules</code></td><td>无</td><td>Py启动时加载的模块</td><td><code>sys.modules( )</code></td><td>列表</td></tr><tr><td><code>path</code></td><td>无</td><td>返回当前py的环境路径</td><td><code>sys.path()</code></td><td>列表</td></tr><tr><td><code>exit</code></td><td><code>arg</code></td><td>退出程序</td><td><code>sys.exit(0)</code></td><td>无</td></tr><tr><td><code>getdefaultencoding</code></td><td>无</td><td>获取系统编码</td><td><code>sys.getdefaultencoding()</code></td><td>字符串</td></tr><tr><td><code>platform</code></td><td>无</td><td>获取当前系统平台</td><td><code>sys.platform()</code></td><td>字符串</td></tr><tr><td><code>version(属性)</code></td><td>无</td><td>获取python版本</td><td><code>sys.version</code></td><td>字符串</td></tr><tr><td><code>argv</code></td><td><code>*args</code></td><td>程序外部获取参数</td><td><code>sys.argv</code></td><td>列表</td></tr></tbody></table><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">command = sys.argv[<span class="number">1</span>]</span><br><span class="line"><span class="keyword">if</span> command == <span class="string">&#x27;modules&#x27;</span>:</span><br><span class="line">    modules = sys.modules</span><br><span class="line">    <span class="built_in">print</span>(modules)</span><br><span class="line"><span class="keyword">elif</span> command == <span class="string">&#x27;path&#x27;</span>:</span><br><span class="line"><span class="comment"># sys.exit(1)</span></span><br><span class="line">    path = sys.path</span><br><span class="line">    <span class="built_in">print</span>(path)</span><br><span class="line"><span class="keyword">elif</span> command == <span class="string">&#x27;encoding&#x27;</span>:</span><br><span class="line">    code = sys.getdefaultencoding()</span><br><span class="line">    <span class="built_in">print</span>(code)</span><br><span class="line"><span class="keyword">elif</span> command == <span class="string">&#x27;platform&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(sys.platform)</span><br><span class="line"><span class="keyword">elif</span> command == <span class="string">&#x27;version&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(sys.version)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;not command&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># print(sys.argv)</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 模块和包 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python Python的os包</title>
      <link href="/2021/7c5d8b079cde/"/>
      <url>/2021/7c5d8b079cde/</url>
      
        <content type="html"><![CDATA[<h3 id="Python的os包"><a href="#Python的os包" class="headerlink" title="Python的os包"></a>Python的os包</h3><h4 id="os的文件与目录函数介绍"><a href="#os的文件与目录函数介绍" class="headerlink" title="os的文件与目录函数介绍"></a>os的文件与目录函数介绍</h4><ul><li><code>import os</code></li></ul><table><thead><tr><th>函数名</th><th>参数</th><th>介绍</th><th align="left">举例</th><th>返回值</th></tr></thead><tbody><tr><td><code>getcwd</code></td><td>无</td><td>返回当前的路径</td><td align="left">os.getcwd()</td><td>字符串</td></tr><tr><td><code>listdir</code></td><td>path</td><td>返回制定路径下所有的文件或文件夹</td><td align="left">os.listdir(‘c//Windows’)</td><td>返回一个列表</td></tr><tr><td><code>makedirs</code></td><td>Path mode</td><td>创建多级文件夹</td><td align="left">os.makedir(‘d//imooc/py’)</td><td>无</td></tr><tr><td><code>removedirs</code></td><td>path</td><td>删除多级文件夹</td><td align="left">os.removedirs(‘d://imooc/py’)</td><td>无</td></tr><tr><td><code>rename</code></td><td>Oldname newname</td><td>给文件或文件夹改名</td><td align="left">os.rename(‘d://imooc’, ‘d//imoc’)</td><td>无</td></tr><tr><td><code>rmdir</code></td><td>path</td><td>只能删除空文件夹</td><td align="left">os.rmdir(‘d://imooc’)</td><td>无</td></tr></tbody></table><h5 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">current_path = os.getcwd()</span><br><span class="line"><span class="built_in">print</span>(current_path)</span><br><span class="line"></span><br><span class="line">new_path = <span class="string">&#x27;%s/test1&#x27;</span> % current_path</span><br><span class="line"><span class="comment"># os.makedirs(new_path)</span></span><br><span class="line"></span><br><span class="line">data = os.listdir(current_path)</span><br><span class="line"><span class="built_in">print</span>(data)</span><br><span class="line"></span><br><span class="line">new_path2 = <span class="string">&#x27;%s/test2/abc&#x27;</span> % current_path</span><br><span class="line"><span class="comment"># os.makedirs(new_path2)</span></span><br><span class="line"><span class="comment"># os.makedirs(&#x27;test3&#x27;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># os.removedirs(&#x27;test2/abc&#x27;)</span></span><br><span class="line"><span class="comment"># os.rename(&#x27;test3&#x27;, &#x27;test3_new&#x27;)</span></span><br><span class="line"><span class="comment"># os.rename(&#x27;test1.py&#x27;, &#x27;python_test1.py&#x27;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># os.rmdir(&#x27;%s/test3_new&#x27; % current_path)</span></span><br><span class="line">os.rmdir(<span class="string">&#x27;test1&#x27;</span>)</span><br></pre></td></tr></table></figure><h4 id="os-path模块常用函数介绍"><a href="#os-path模块常用函数介绍" class="headerlink" title="os.path模块常用函数介绍"></a>os.path模块常用函数介绍</h4><table><thead><tr><th>函数名</th><th>参数</th><th>介绍</th><th>举例</th><th>返回值</th></tr></thead><tbody><tr><td><code>exists</code></td><td>Path</td><td>文件或路径是否存在</td><td><code>os.path.exists(&#39;d://&#39;)</code></td><td>bool类型</td></tr><tr><td><code>isdir</code></td><td>Path</td><td>是否是路径</td><td><code>os.path.isdir(&#39;d://&#39;)</code></td><td>bool类型</td></tr><tr><td><code>isabs</code></td><td>Path</td><td>是否是绝对路径</td><td><code>os.path.isabs(&#39;test&#39;)</code></td><td>bool类型</td></tr><tr><td><code>isfile</code></td><td>Path</td><td>是否是文件</td><td><code>os.path.isfile(&#39;d://a.py&#39;)</code></td><td>bool类型</td></tr><tr><td><code>join</code></td><td>Path, path*</td><td>路径字符串合并</td><td><code>os.path.join(&#39;d://&#39;, &#39;test&#39;)</code></td><td>字符串</td></tr><tr><td><code>split</code></td><td>Path</td><td>以最后以层路径为基准切割</td><td><code>os.path.split(&#39;d://test&#39;)</code></td><td>列表</td></tr></tbody></table><h4 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> os.path</span><br><span class="line"></span><br><span class="line">current_path = os.getcwd()</span><br><span class="line"><span class="built_in">print</span>(current_path)</span><br><span class="line"><span class="built_in">print</span>(os.path.isabs(current_path))</span><br><span class="line"><span class="built_in">print</span>(os.path.isabs(<span class="string">&#x27;animal&#x27;</span>))</span><br><span class="line"></span><br><span class="line">new_path = <span class="string">&#x27;%s/test1&#x27;</span> % current_path</span><br><span class="line"><span class="keyword">if</span> os.path.exists(new_path):</span><br><span class="line">    os.makedirs(new_path)</span><br><span class="line"></span><br><span class="line">data = os.listdir(current_path)</span><br><span class="line"><span class="built_in">print</span>(data)</span><br><span class="line"></span><br><span class="line">new_path2 = os.path.join(current_path, <span class="string">&#x27;test2&#x27;</span>, <span class="string">&#x27;abc&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(new_path2)</span><br><span class="line"><span class="keyword">if</span> os.path.exists(new_path2):</span><br><span class="line">    os.makedirs(new_path2)</span><br><span class="line"><span class="keyword">if</span> os.path.exists(<span class="string">&#x27;test3&#x27;</span>):</span><br><span class="line">    os.makedirs(<span class="string">&#x27;test3&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> os.path.exists(<span class="string">&#x27;test2/abc&#x27;</span>):</span><br><span class="line">    os.removedirs(<span class="string">&#x27;test2/abc&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> os.path.exists(<span class="string">&#x27;test3&#x27;</span>):</span><br><span class="line">    os.rename(<span class="string">&#x27;test3&#x27;</span>, <span class="string">&#x27;test3_new&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> os.path.exists(<span class="string">&#x27;test1.py&#x27;</span>):</span><br><span class="line">    os.rename(<span class="string">&#x27;test1.py&#x27;</span>, <span class="string">&#x27;python_test1.py&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> os.path.exists(<span class="string">&#x27;%s/test3_new&#x27;</span>):</span><br><span class="line">    os.rmdir(<span class="string">&#x27;%s/test3_new&#x27;</span> % current_path)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> os.path.exists(<span class="string">&#x27;test1&#x27;</span>):</span><br><span class="line">    os.rmdir(<span class="string">&#x27;test1&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">dir</span>(os))</span><br><span class="line"></span><br><span class="line">current_path = current_path + <span class="string">&#x27;/package_os.py&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(os.path.isfile(current_path))</span><br><span class="line"><span class="built_in">print</span>(os.path.split(current_path))</span><br><span class="line"><span class="built_in">print</span>(os.path.isdir(os.path.split(current_path)[<span class="number">0</span>]))</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 模块和包 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python Python中的时间包2  time模块</title>
      <link href="/2021/564442f53b07/"/>
      <url>/2021/564442f53b07/</url>
      
        <content type="html"><![CDATA[<h3 id="Python中的时间包2time模块"><a href="#Python中的时间包2time模块" class="headerlink" title="Python中的时间包2time模块"></a>Python中的时间包2<code>time模块</code></h3><ul><li>认识时间戳</li><li>认识python的<code>time模块</code>与常用方法</li><li><code>datetime</code>包生成的时间戳与时间戳转时间类型的方法</li></ul><h4 id="认识时间戳"><a href="#认识时间戳" class="headerlink" title="认识时间戳"></a>认识时间戳</h4><ul><li>1970年1月1日00时00分00秒至今的总毫秒（秒）数</li><li><code>timestamp</code></li><li><code>float</code></li></ul><h4 id="time模块与它的函数们"><a href="#time模块与它的函数们" class="headerlink" title="time模块与它的函数们"></a>time模块与它的函数们</h4><ul><li>时间处理，转换时间格式</li><li>生成时间戳函数<code>time</code></li><li>获取本地时间函数<code>localtime</code></li><li><code>localtime</code>对应字段介绍</li><li>暂停函数<code>sleep</code></li><li><code>time</code>中的<code>strftime</code>与<code>strptime</code></li></ul><h4 id="生成时间戳函数time"><a href="#生成时间戳函数time" class="headerlink" title="生成时间戳函数time"></a>生成时间戳函数<code>time</code></h4><h5 id="导入包"><a href="#导入包" class="headerlink" title="导入包"></a>导入包</h5><ul><li><code>import time</code></li></ul><h5 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h5><ul><li><code>time.time()</code></li></ul><h5 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h5><ul><li><strong>秒级别</strong>的<code>浮点类型</code></li></ul><h5 id="举例"><a href="#举例" class="headerlink" title="举例"></a>举例</h5><ul><li><code>1580878485.4009378</code></li></ul><h4 id="获取本地时间函数-localtime"><a href="#获取本地时间函数-localtime" class="headerlink" title="获取本地时间函数 localtime"></a>获取本地时间函数 <code>localtime</code></h4><h5 id="导入包-1"><a href="#导入包-1" class="headerlink" title="导入包"></a>导入包</h5><ul><li><code>import time</code></li></ul><h5 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h5><ul><li><code>time.localtime(timestamp)</code></li></ul><h5 id="参数介绍"><a href="#参数介绍" class="headerlink" title="参数介绍"></a>参数介绍</h5><ul><li><code>timestamp</code> :  时间戳（可不传）</li></ul><h4 id="localtime对应字段介绍"><a href="#localtime对应字段介绍" class="headerlink" title="localtime对应字段介绍"></a>localtime对应字段介绍</h4><table><thead><tr><th>属性名</th><th align="left">介绍</th><th>取值范围</th></tr></thead><tbody><tr><td><code>tm_year</code></td><td align="left">四位数年</td><td>示例：2021</td></tr><tr><td><code>tm_mom</code></td><td align="left">月</td><td>1~12</td></tr><tr><td><code>tm_mday</code></td><td align="left">日</td><td>1~31</td></tr><tr><td><code>tm_hour</code></td><td align="left">小时</td><td>0~23</td></tr><tr><td><code>tm_min</code></td><td align="left">分钟</td><td>0~59</td></tr><tr><td><code>tm_sec</code></td><td align="left">秒</td><td>0~61（依然是闰月问题）</td></tr><tr><td><code>tm_wday</code></td><td align="left">一周的第一天</td><td>0~6（0是周一）</td></tr><tr><td><code>tm_yday</code></td><td align="left">一年的第几日</td><td>1~366（儒略历）</td></tr><tr><td><code>tm_isdat</code></td><td align="left">夏令时</td><td>-1, 0, 1是否是夏令时</td></tr></tbody></table><h4 id="暂停函数sleep"><a href="#暂停函数sleep" class="headerlink" title="暂停函数sleep"></a>暂停函数<code>sleep</code></h4><h5 id="导入包-2"><a href="#导入包-2" class="headerlink" title="导入包"></a>导入包</h5><ul><li><code>import time</code></li></ul><h5 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h5><ul><li><code>time.sleep(second)</code></li></ul><h5 id="参数介绍-1"><a href="#参数介绍-1" class="headerlink" title="参数介绍"></a>参数介绍</h5><ul><li><code>second</code> :  希望程序被暂停的秒数</li></ul><h4 id="time中的strftime"><a href="#time中的strftime" class="headerlink" title="time中的strftime"></a><code>time</code>中的<code>strftime</code></h4><h5 id="导入包-3"><a href="#导入包-3" class="headerlink" title="导入包"></a>导入包</h5><ul><li><code>import time</code></li></ul><h5 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h5><ul><li><code>time.strftime(format, t)</code></li></ul><h5 id="参数介绍-2"><a href="#参数介绍-2" class="headerlink" title="参数介绍"></a>参数介绍</h5><ul><li><code>format</code>： 格式化规范</li><li><code>t</code>：<code>time.localtime</code>对应的时间类型</li></ul><h4 id="time中的strptime"><a href="#time中的strptime" class="headerlink" title="time中的strptime"></a><code>time</code>中的<code>strptime</code></h4><h5 id="导入包-4"><a href="#导入包-4" class="headerlink" title="导入包"></a>导入包</h5><ul><li><code>import time</code></li></ul><h5 id="使用方法-4"><a href="#使用方法-4" class="headerlink" title="使用方法"></a>使用方法</h5><ul><li><code>time.strptime(time_str, format)</code></li></ul><h5 id="参数介绍-3"><a href="#参数介绍-3" class="headerlink" title="参数介绍"></a>参数介绍</h5><ul><li><code>time_str</code>:  符合时间格式的字符串</li><li><code>format</code>：确保与<code>time_str</code>一致的格式化标准</li></ul><h4 id="datetime中生成时间戳函数"><a href="#datetime中生成时间戳函数" class="headerlink" title="datetime中生成时间戳函数"></a>datetime中生成时间戳函数</h4><h5 id="导入包-5"><a href="#导入包-5" class="headerlink" title="导入包"></a>导入包</h5><ul><li><code>import datetime</code></li></ul><h5 id="使用方法-5"><a href="#使用方法-5" class="headerlink" title="使用方法"></a>使用方法</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">now = datetime.datetime.now()</span><br><span class="line">datetime.datetime.timestamp(now)</span><br></pre></td></tr></table></figure><h5 id="参数介绍-4"><a href="#参数介绍-4" class="headerlink" title="参数介绍"></a>参数介绍</h5><ul><li><code>now</code> ： datetime时间对象</li><li>秒级时间戳，浮点类型</li></ul><h4 id="datetime中时间戳转时间对象"><a href="#datetime中时间戳转时间对象" class="headerlink" title="datetime中时间戳转时间对象"></a>datetime中时间戳转时间对象</h4><h5 id="导入包-6"><a href="#导入包-6" class="headerlink" title="导入包"></a>导入包</h5><ul><li><code>import datetime</code></li></ul><h5 id="使用方法-6"><a href="#使用方法-6" class="headerlink" title="使用方法"></a>使用方法</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">datetime.datetime.fromtimestamp(timestamp)</span><br></pre></td></tr></table></figure><h5 id="参数介绍-5"><a href="#参数介绍-5" class="headerlink" title="参数介绍"></a>参数介绍</h5><ul><li><code>timestamp</code> ： <strong>时间戳</strong></li></ul><h5 id="返回值-1"><a href="#返回值-1" class="headerlink" title="返回值"></a>返回值</h5><ul><li><code>datetime</code>的<strong>日期对象</strong></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line">now = time.time()</span><br><span class="line"><span class="built_in">print</span>(now, <span class="built_in">type</span>(now))</span><br><span class="line"></span><br><span class="line">time_obj = time.localtime(now)</span><br><span class="line"><span class="comment"># time.sleep(5)</span></span><br><span class="line"><span class="built_in">print</span>(time_obj, <span class="built_in">type</span>(time_obj))</span><br><span class="line"></span><br><span class="line">current_time_obj = time.localtime()</span><br><span class="line"><span class="built_in">print</span>(current_time_obj)</span><br><span class="line"></span><br><span class="line">before = now - <span class="number">100000</span></span><br><span class="line">before_time_obj = time.localtime(before)</span><br><span class="line"><span class="built_in">print</span>(before_time_obj)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(time.time() * <span class="number">1000</span>)</span><br><span class="line"><span class="built_in">print</span>(time.time())</span><br><span class="line"></span><br><span class="line"><span class="comment"># for i in range(10):</span></span><br><span class="line"><span class="comment">#     print(i)</span></span><br><span class="line"><span class="comment">#     time.sleep(1)</span></span><br><span class="line"></span><br><span class="line">datetime_now = datetime.datetime.now()</span><br><span class="line">datetime_timestamp = datetime.datetime.timestamp(datetime_now)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;datetime 生成的时间戳 %s&#x27;</span> % datetime_timestamp)</span><br><span class="line"></span><br><span class="line">datetime_obj = datetime.datetime.fromtimestamp(datetime_timestamp)</span><br><span class="line"><span class="built_in">print</span>(datetime_obj)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 模块和包 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 阶段编程练习（十九）</title>
      <link href="/2021/162716139f96/"/>
      <url>/2021/162716139f96/</url>
      
        <content type="html"><![CDATA[<h3 id="编程练习"><a href="#编程练习" class="headerlink" title="编程练习"></a>编程练习</h3><blockquote><p>使用<code>from...import...</code>导入<code>datetime</code>模块中的<strong>datetime</strong>，<strong>timedelta对象</strong>，根据任务要求书写代码。</p></blockquote><h4 id="任务"><a href="#任务" class="headerlink" title="任务"></a>任务</h4><ul><li><p>定义<code>now_</code>变量接收当前日期时间</p></li><li><p>使用<code>now_before</code>接收当前日期时间3天6小时12分钟之前的日期时间</p></li><li><p>使用<code>now_after</code>接收当前日期时间10天之后的日期时间</p></li></ul><h4 id="原始代码"><a href="#原始代码" class="headerlink" title="原始代码"></a>原始代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime, timedelta</span><br><span class="line"><span class="comment"># 定义now_变量接收当前日期时间</span></span><br><span class="line">now_=</span><br><span class="line"></span><br><span class="line"><span class="comment"># 计算当前日期时间3天6小时12分钟之前的日期时间</span></span><br><span class="line">now_before=</span><br><span class="line"></span><br><span class="line"><span class="comment"># 计算当前日期时间10天之后的日期时间</span></span><br><span class="line">now_after=</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(now_before)</span><br><span class="line"><span class="built_in">print</span>(now_after)</span><br></pre></td></tr></table></figure><h4 id="代码提交区"><a href="#代码提交区" class="headerlink" title="代码提交区"></a>代码提交区</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime, timedelta</span><br><span class="line"><span class="comment"># 定义now_变量接收当前日期时间</span></span><br><span class="line">now_ = datetime.now()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 计算当前日期时间3天6小时12分钟之前的日期时间</span></span><br><span class="line">now_before = now_ - timedelta(days=<span class="number">3</span>, hours=<span class="number">6</span>, minutes=<span class="number">12</span>)</span><br><span class="line"><span class="comment"># 计算当前日期时间10天之后的日期时间</span></span><br><span class="line">now_after = now_ + timedelta(days=<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(now_before)</span><br><span class="line"><span class="built_in">print</span>(now_after)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程练习 </tag>
            
            <tag> 模块和包 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 阶段编程练习（十八）</title>
      <link href="/2021/b082a00350ee/"/>
      <url>/2021/b082a00350ee/</url>
      
        <content type="html"><![CDATA[<h3 id="编程练习"><a href="#编程练习" class="headerlink" title="编程练习"></a>编程练习</h3><blockquote><p>使用<code>from...import...</code>导入<code>datetime模块</code>中的<strong>datetime对象</strong>，根据任务要求书写代码。</p></blockquote><h4 id="任务"><a href="#任务" class="headerlink" title="任务"></a>任务</h4><ol><li>定义一个<code>str_</code>字符串为<code>2019-09-10 8:10:56</code></li><li>将<code>str_</code>转换为时间类型<code>2019-09-10 08:10:56</code>，使用<code>str_date</code>变量接收</li><li>定义<code>now_</code>变量接收当前的日期时间</li><li>将当前日期时间格式化为——<code>四位的年份/月/日 时:分:秒</code>，使用<code>date_str</code>接收</li></ol><h4 id="任务提示"><a href="#任务提示" class="headerlink" title="任务提示"></a>任务提示</h4><ol><li><code>%Y</code>：代表四位的年份</li><li><code>%m</code>：代表月份</li><li><code>%d</code>：代表这个月的第几天</li><li><code>%H:%M:%S</code>：代表 时：分：秒</li></ol><h4 id="原始代码"><a href="#原始代码" class="headerlink" title="原始代码"></a>原始代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"><span class="comment"># 定义一个str_字符串为2019-09-10 8:10:56</span></span><br><span class="line">str_=</span><br><span class="line"><span class="comment"># 将str_转换为日期函数2019-09-10 8:10:56</span></span><br><span class="line">str_date=</span><br><span class="line"><span class="built_in">print</span>(str_date</span><br><span class="line"><span class="comment"># 定义now_变量接收当前的日期时间</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将当前日期时间格式化为——四位的年份/月/日 时:分:秒</span></span><br><span class="line">date_str=</span><br><span class="line"><span class="built_in">print</span>(date_str)</span><br></pre></td></tr></table></figure><h4 id="代码提交区"><a href="#代码提交区" class="headerlink" title="代码提交区"></a>代码提交区</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"><span class="comment"># 定义一个str_字符串为2019-09-10 8:10:56</span></span><br><span class="line">str_ = <span class="string">&#x27;2019-09-10 8:10:56&#x27;</span></span><br><span class="line"><span class="comment"># 将str_转换为日期函数2019-09-10 8:10:56</span></span><br><span class="line">str_date = datetime.strptime(str_, <span class="string">&#x27;%Y-%m-%d %H:%M:%S&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(str_date)</span><br><span class="line"><span class="comment"># 定义now_变量接收当前的日期时间</span></span><br><span class="line">now_ = datetime.now()</span><br><span class="line"><span class="comment"># 将当前日期时间格式化为——四位的年份/月/日 时:分:秒</span></span><br><span class="line">date_str= datetime.strftime(now_, <span class="string">&#x27;%Y/%m/%d %H:%M:%S&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(date_str)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程练习 </tag>
            
            <tag> 模块和包 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 阶段编程练习（十七）</title>
      <link href="/2021/016c51b607ab/"/>
      <url>/2021/016c51b607ab/</url>
      
        <content type="html"><![CDATA[<h3 id="编程练习"><a href="#编程练习" class="headerlink" title="编程练习"></a>编程练习</h3><blockquote><p>使用<code>from...import...</code>导入<code>datetime</code>模块中的<strong>datetime对象</strong>，并根据任务要求书写代码。</p></blockquote><h4 id="任务"><a href="#任务" class="headerlink" title="任务"></a>任务</h4><ol><li>使用两种方法获得当前日期时间，并输出到控制台</li><li>在控制台上分别对日期和时间进行输出</li><li>使用-拼接年月日得到当前日期</li></ol><h4 id="任务提示"><a href="#任务提示" class="headerlink" title="任务提示"></a>任务提示</h4><ul><li>使用<code>format格式化</code>输出得到的<code>当前年份</code>、<code>当前月份</code>、<code>当前日</code>，并用“<code>-</code>”进行连接</li></ul><h4 id="初始代码"><a href="#初始代码" class="headerlink" title="初始代码"></a>初始代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"><span class="comment"># 得到当前日期时间（两种方法</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 得到当前日期</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 得到当前时间</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 得到当前年份用year_变量接收</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 得到当前月份用month_变量接收</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 得到当前天用day_变量接收</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用-拼接年月日得到当前日期</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"><span class="comment"># 得到当前日期时间（两种方法</span></span><br><span class="line"><span class="built_in">print</span>(datetime.now())</span><br><span class="line"><span class="built_in">print</span>(datetime.today())</span><br><span class="line"><span class="comment"># 得到当前日期</span></span><br><span class="line"><span class="built_in">print</span>(datetime.now().date())</span><br><span class="line"><span class="comment"># 得到当前时间</span></span><br><span class="line"><span class="built_in">print</span>(datetime.now().time())</span><br><span class="line"><span class="comment"># 得到当前年份用year_变量接收</span></span><br><span class="line">year_ = datetime.now().date().year</span><br><span class="line"><span class="built_in">print</span>(year_)</span><br><span class="line"><span class="comment"># 得到当前月份用month_变量接收</span></span><br><span class="line">month_ = datetime.now().date().month</span><br><span class="line"><span class="built_in">print</span>(month_)</span><br><span class="line"><span class="comment"># 得到当前天用day_变量接收</span></span><br><span class="line">day_ = datetime.now().date().day</span><br><span class="line"><span class="built_in">print</span>(day_)</span><br><span class="line"><span class="comment"># 使用-拼接年月日得到当前日期</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&#123;&#125;-&#123;&#125;-&#123;&#125;&quot;</span>.<span class="built_in">format</span>(year_, month_, day_))</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程练习 </tag>
            
            <tag> 模块和包 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python Python中的时间包1 datetime</title>
      <link href="/2021/3c4243158250/"/>
      <url>/2021/3c4243158250/</url>
      
        <content type="html"><![CDATA[<h3 id="Python中的时间包-detetime"><a href="#Python中的时间包-detetime" class="headerlink" title="Python中的时间包 detetime"></a>Python中的时间包 <code>detetime</code></h3><ul><li>日期与时间的结合体 <code>-date and time</code></li><li>获取当前时间</li><li>获取时间间隔</li><li>将时间对象转换成时间字符串</li><li>将字符串转成时间类型</li></ul><h4 id="detetime包的常用功能"><a href="#detetime包的常用功能" class="headerlink" title="detetime包的常用功能"></a><code>detetime</code>包的常用功能</h4><h5 id="获取当前时间"><a href="#获取当前时间" class="headerlink" title="获取当前时间"></a>获取当前时间</h5><h6 id="导入包与模块"><a href="#导入包与模块" class="headerlink" title="导入包与模块"></a>导入包与模块</h6><ul><li><code>from datetime import datetime</code></li><li><code>import datetime</code></li></ul><h6 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h6><ul><li><p><code>datetime.now()</code></p></li><li><p><code>datetime.datetime.now()     (today)</code></p></li><li><p>返回当前年月日时分秒毫秒的datetime对象</p></li></ul><h5 id="获取时间间隔"><a href="#获取时间间隔" class="headerlink" title="获取时间间隔"></a>获取时间间隔</h5><h6 id="导入包"><a href="#导入包" class="headerlink" title="导入包"></a>导入包</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> timedelta</span><br></pre></td></tr></table></figure><h6 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">timeobj = timedelta(days=<span class="number">0</span>, seconds=<span class="number">0</span>, microsenconds=<span class="number">0</span>, milliseconds=<span class="number">0</span>, minutes=<span class="number">0</span>, hours=<span class="number">0</span>, week=<span class="number">0</span>)</span><br></pre></td></tr></table></figure><h4 id="datetime包中的常用方法"><a href="#datetime包中的常用方法" class="headerlink" title="datetime包中的常用方法"></a><code>datetime</code>包中的常用方法</h4><h5 id="时间对象转字符串"><a href="#时间对象转字符串" class="headerlink" title="时间对象转字符串"></a>时间对象转字符串</h5><h6 id="获取对象时间"><a href="#获取对象时间" class="headerlink" title="获取对象时间"></a>获取对象时间</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line">now = datetime.datetime.now()</span><br></pre></td></tr></table></figure><h6 id="时间转字符串"><a href="#时间转字符串" class="headerlink" title="时间转字符串"></a>时间转字符串</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">date_str = now.strftime(<span class="built_in">format</span>)</span><br></pre></td></tr></table></figure><h5 id="时间字符串转时间类型"><a href="#时间字符串转时间类型" class="headerlink" title="时间字符串转时间类型"></a>时间字符串转时间类型</h5><h6 id="获取时间模块"><a href="#获取时间模块" class="headerlink" title="获取时间模块"></a>获取时间模块</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br></pre></td></tr></table></figure><h6 id="时间字符串转时间类型-1"><a href="#时间字符串转时间类型-1" class="headerlink" title="时间字符串转时间类型"></a>时间字符串转时间类型</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">datetime.strptime(tt, <span class="built_in">format</span>)</span><br></pre></td></tr></table></figure><h6 id="参数介绍"><a href="#参数介绍" class="headerlink" title="参数介绍"></a>参数介绍</h6><ul><li><code>tt</code>: 符合时间格式的字符串</li><li><code>format</code>:  <strong>tt时间字符串</strong>匹配规则</li></ul><h4 id="python的常用时间格式化符号1"><a href="#python的常用时间格式化符号1" class="headerlink" title="python的常用时间格式化符号1"></a>python的<code>常用时间格式化符号</code>1</h4><table><thead><tr><th>字符</th><th>介绍</th></tr></thead><tbody><tr><td><code>%Y</code></td><td>完整的年份，如2021</td></tr><tr><td><code>%m</code></td><td>月份，1~12</td></tr><tr><td><code>%d</code></td><td>月中的某一天（1~31）</td></tr><tr><td><code>%H</code></td><td>一天中的第几个小时（24小时，00~23)</td></tr><tr><td><code>%I</code></td><td>一天中的第几个小时（12小时，00~12)</td></tr><tr><td><code>%M</code></td><td>当前的第几分（00~59）</td></tr><tr><td><code>%S</code></td><td>当前的第几秒（0~61）<code>闰年多占2秒</code></td></tr><tr><td><code>%f</code></td><td>当前秒的第多少毫秒</td></tr></tbody></table><h4 id="python的常用时间格式化符号2"><a href="#python的常用时间格式化符号2" class="headerlink" title="python的常用时间格式化符号2"></a>python的<code>常用时间格式化符号</code>2</h4><table><thead><tr><th>字符</th><th>介绍</th></tr></thead><tbody><tr><td><code>%a</code></td><td><strong>简化</strong>的星期，如星期三 <code>Wed</code></td></tr><tr><td><code>%A</code></td><td><strong>完整</strong>的星期，如星期三 <code>Wednesday</code></td></tr><tr><td><code>%b</code></td><td><strong>简化</strong>的月份，如二月 <code>Fab</code></td></tr><tr><td><code>%B</code></td><td><strong>完整</strong>的月份，如二月 <code>Fabruary</code></td></tr><tr><td><code>%c</code></td><td>本地的日期和时间，如Web Fab 5 10:14:49 2020</td></tr><tr><td><code>%p</code></td><td>显示上午还是下午，如AM代表上午，PM代表下午</td></tr><tr><td><code>%j</code></td><td>一年中的第几天</td></tr><tr><td><code>%U</code></td><td>一年中的星期数</td></tr></tbody></table><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> timedelta</span><br><span class="line"></span><br><span class="line">now = datetime.now()</span><br><span class="line"><span class="built_in">print</span>(now, <span class="built_in">type</span>(now))</span><br><span class="line">now_str = now.strftime(<span class="string">&#x27;%Y-%m-%d %H:%M:%S&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(now_str, <span class="built_in">type</span>(now_str))</span><br><span class="line">now_obj = datetime.strptime(now_str, <span class="string">&#x27;%Y-%m-%d %H:%M:%S&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(now_obj, <span class="built_in">type</span>(now_obj), <span class="string">&#x27;-----&#x27;</span>)</span><br><span class="line"></span><br><span class="line">three_days = timedelta(days=<span class="number">3</span>)</span><br><span class="line">after_three_day = now + three_days</span><br><span class="line"><span class="built_in">print</span>(after_three_day)</span><br><span class="line">after_three_day_str = after_three_day.strftime(<span class="string">&#x27;%Y/%m/%d %H:%M:%S&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(after_three_day_str, <span class="built_in">type</span>(after_three_day_str))</span><br><span class="line">after_three_day_obj = datetime.strptime(after_three_day_str, <span class="string">&#x27;%Y/%m/%d %H:%M:%S&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(after_three_day_obj, <span class="built_in">type</span>(after_three_day_obj), <span class="string">&#x27;-----&#x27;</span>)</span><br><span class="line"></span><br><span class="line">before_three_day = now - three_days</span><br><span class="line"><span class="built_in">print</span>(before_three_day)</span><br><span class="line">before_three_day_str = before_three_day.strftime(<span class="string">&#x27;%Y%m%d&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(before_three_day_str, <span class="built_in">type</span>(before_three_day_str))</span><br><span class="line">before_three_day_obj = datetime.strptime(before_three_day_str, <span class="string">&#x27;%Y%m%d&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(before_three_day_obj, <span class="built_in">type</span>(before_three_day_obj), <span class="string">&#x27;-------&#x27;</span>)</span><br><span class="line"></span><br><span class="line">one_hour = timedelta(hours=<span class="number">1</span>)</span><br><span class="line">before_one_hour = now - one_hour</span><br><span class="line"><span class="built_in">print</span>(before_one_hour)</span><br><span class="line">before_one_hour_str = before_one_hour.strftime(<span class="string">&#x27;%H:%M:%S&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(before_one_hour_str, <span class="built_in">type</span>(before_three_day_str))</span><br><span class="line"></span><br><span class="line"><span class="comment"># default_str = &#x27;2020 12 abc&#x27;</span></span><br><span class="line"><span class="comment"># print(datetime.strptime(default_str, &#x27;%Y %m&#x27;))</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 模块和包 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 强大的第三方包</title>
      <link href="/2021/e57d8581f2fc/"/>
      <url>/2021/e57d8581f2fc/</url>
      
        <content type="html"><![CDATA[<h3 id="强大的第三方包"><a href="#强大的第三方包" class="headerlink" title="强大的第三方包"></a>强大的第三方包</h3><h4 id="什么是第三方包"><a href="#什么是第三方包" class="headerlink" title="什么是第三方包"></a>什么是第三方包</h4><ul><li>其他程序员写好的功能<code>封装成包（模块）</code>发布到网站上</li><li>提高<strong>开放效率</strong></li></ul><h4 id="利用pip与easy-install获取第三方包"><a href="#利用pip与easy-install获取第三方包" class="headerlink" title="利用pip与easy_install获取第三方包"></a>利用<code>pip</code>与<code>easy_install</code>获取第三方包</h4><ul><li><code>python</code>的<strong>第三方包管理工具</strong>，<code>pip</code>的使用率最高</li><li><code>python3.4</code><strong>以上</strong>版本<strong>在安装python的时候已经自带了这两种包管理工具</strong></li><li>老版python可通过<code>https://pip/pypa.io/en/stable/installing</code></li><li><code>pip install 包名</code></li><li><code>Github.com</code> 搜索 <code>python 第三方包</code></li></ul><h4 id="第一个第三方包工具ipython"><a href="#第一个第三方包工具ipython" class="headerlink" title="第一个第三方包工具ipython"></a>第一个第三方包工具<code>ipython</code></h4><ul><li><code>ipython</code>是一个<strong>python</strong>的<code>交互式shell</code></li><li><code>比默认的python shell好用的多</code>，支持<strong>变量自动补全</strong>，<strong>缩进</strong>功能</li></ul>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 模块和包 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python Python中的包</title>
      <link href="/2021/49e326040af5/"/>
      <url>/2021/49e326040af5/</url>
      
        <content type="html"><![CDATA[<h3 id="Python中的包"><a href="#Python中的包" class="headerlink" title="Python中的包"></a>Python中的包</h3><h4 id="什么是python的包与模块"><a href="#什么是python的包与模块" class="headerlink" title="什么是python的包与模块"></a>什么是python的包与模块</h4><ul><li><code>包</code>就是<code>文件夹</code>，<code>包</code>中还可以有<code>包</code>，也就是<code>文件夹</code></li><li>一个个<code>python文件</code>就是<code>模块</code></li></ul><h4 id="包的身份证"><a href="#包的身份证" class="headerlink" title="包的身份证"></a>包的身份证</h4><ul><li><code>__init__.py</code>是<strong>每一个</strong><code>python包</code>里<strong>必须存在的文件</strong></li></ul><h4 id="如何创建包"><a href="#如何创建包" class="headerlink" title="如何创建包"></a>如何创建包</h4><ul><li>要有一个主题，明确功能，方便使用</li><li>层次分明，调用清晰</li></ul><h4 id="包的导入-import"><a href="#包的导入-import" class="headerlink" title="包的导入 import"></a>包的导入 <code>import</code></h4><h5 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h5><ul><li>将python中的某个包（或模块），导入到当前的py文件中</li></ul><h5 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h5><ul><li><code>import package</code></li></ul><h5 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h5><ul><li><code>package</code>：被导入的包的名字</li></ul><h5 id="要求"><a href="#要求" class="headerlink" title="要求"></a>要求</h5><ul><li>只会拿到<code>对应包</code>下<code>__init__</code>中的<strong>功能</strong>或<strong>当前模块下的功能</strong></li></ul><h4 id="模块的导入-form-import"><a href="#模块的导入-form-import" class="headerlink" title="模块的导入 form..import.."></a>模块的导入 <code>form..import..</code></h4><h5 id="功能-1"><a href="#功能-1" class="headerlink" title="功能"></a>功能</h5><ul><li>通过从<code>某个包</code>中<strong>找到对应的模块</strong></li></ul><h5 id="用法-1"><a href="#用法-1" class="headerlink" title="用法"></a>用法</h5><ul><li><code>form package import module</code></li></ul><h5 id="参数-1"><a href="#参数-1" class="headerlink" title="参数"></a>参数</h5><ul><li><code>package</code>：来源的<strong>包名</strong></li><li><code>module</code>：包中的<strong>目标模块</strong></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">举例：</span><br><span class="line">form animal <span class="keyword">import</span> dog</span><br><span class="line">    dog.run</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><p>我们通过 <code>form import</code> 直接找到了<code>dog</code>模块</p></li><li><p>所以只需要使用<code>dog</code>模块用<code>.</code>的方式找到里面的<code>方法</code><strong>并执行</strong></p></li><li><p><code>as</code>可以<strong>取别名</strong></p></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><div class="tabs" id="init"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#init-1">test1.py</button></li><li class="tab"><button type="button" data-href="#init-2">./animal/main.py</button></li><li class="tab"><button type="button" data-href="#init-3">./animal/cat/action.py</button></li><li class="tab"><button type="button" data-href="#init-4">./animal/dog/cation.py</button></li><li class="tab"><button type="button" data-href="#init-5">./animal/cat/__init__.py</button></li><li class="tab"><button type="button" data-href="#init-6">./animal/dog/__init__.py</button></li><li class="tab"><button type="button" data-href="#init-7">./animal/_init__.py</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="init-1"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> animal <span class="keyword">import</span> dog_run, cat_run</span><br><span class="line"><span class="comment"># from animal import cat_run</span></span><br><span class="line"><span class="keyword">from</span> animal.cat.action <span class="keyword">import</span> cat_name</span><br><span class="line"><span class="comment"># from animal.cat.action import Cat</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># cat = Cat()</span></span><br><span class="line"><span class="comment"># cat.run()</span></span><br><span class="line"></span><br><span class="line">dog_run_result = dog_run()</span><br><span class="line">cat_run_result = cat_run()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(dog_run_result)</span><br><span class="line"><span class="built_in">print</span>(cat_run_result)</span><br><span class="line"><span class="built_in">print</span>(cat_name)</span><br><span class="line"></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="init-2"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">animal</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;i am animal module function&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="init-3"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">cat_name = <span class="string">&#x27;米粒儿&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">roar</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;cat roar&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dump</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;cat jump&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">run</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;cat running&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="init-4"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">roar</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;dog roar&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dump</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;dog jump&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">run</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;dog running&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="init-5"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 空</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="init-6"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 空</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="init-7"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> .cat.action <span class="keyword">import</span> run <span class="keyword">as</span> cat_run</span><br><span class="line"><span class="keyword">from</span> .dog.action <span class="keyword">import</span> run <span class="keyword">as</span> dog_run</span><br><span class="line"></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 模块和包 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 如何查找程序中的bug</title>
      <link href="/2021/1be77a37b4d2/"/>
      <url>/2021/1be77a37b4d2/</url>
      
        <content type="html"><![CDATA[<h3 id="什么是bug"><a href="#什么是bug" class="headerlink" title="什么是bug"></a>什么是bug</h3><h4 id="bug定义"><a href="#bug定义" class="headerlink" title="bug定义"></a>bug定义</h4><ul><li>程序中出现的<code>错误</code>，但又<strong>没有</strong>通过异常去<code>捕获</code>，以至于<code>直接抛出</code>，导致<code>程序的崩溃</code></li></ul><h4 id="bug一词的由来"><a href="#bug一词的由来" class="headerlink" title="bug一词的由来"></a>bug一词的由来</h4><ul><li><strong>bug</strong>指的是 <code>小虫</code></li><li>飞入计算机中导致机器停止</li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;test1&#x27;</span>)</span><br><span class="line">a = <span class="number">1</span></span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;test2&#x27;</span>)</span><br><span class="line">b = <span class="number">2</span></span><br><span class="line"><span class="built_in">print</span>(b)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;test3&#x27;</span>)</span><br><span class="line">c = <span class="number">3</span></span><br><span class="line"><span class="built_in">print</span>(c)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;test4&#x27;</span>)</span><br><span class="line">d = <span class="number">4</span></span><br><span class="line"><span class="built_in">print</span>(d)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;test5&#x27;</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test1</span>():</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">test1()</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 对象和异常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 断言</title>
      <link href="/2021/16bdb2602c52/"/>
      <url>/2021/16bdb2602c52/</url>
      
        <content type="html"><![CDATA[<h3 id="断言"><a href="#断言" class="headerlink" title="断言"></a>断言</h3><ul><li>断言的功能与用法</li></ul><h4 id="断言的功能–assert"><a href="#断言的功能–assert" class="headerlink" title="断言的功能–assert"></a>断言的功能–assert</h4><ul><li>用于<strong>判断一个表达式</strong>，在<code>表达式</code><strong>条件</strong><code>为false</code>的时候<code>触发异常</code></li></ul><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><ul><li><code>assert expression, message</code></li></ul><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><ul><li><code>expression</code>:表达式，一般是<strong>判断相等</strong>，或者<strong>判断</strong>是某种数据类型的<code>bool</code>判断的语句</li><li><code>message</code>:具体的错误信息</li></ul><h4 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h4><ul><li>无返回值 </li></ul><h4 id="代码（学生信息库升级）"><a href="#代码（学生信息库升级）" class="headerlink" title="代码（学生信息库升级）"></a>代码（学生信息库升级）</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    学生信息库</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NotArgError</span>(<span class="params">Exception</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, message</span>):</span></span><br><span class="line">        self.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">StudentInfo</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, students</span>):</span></span><br><span class="line">        self.students = students</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_by_id</span>(<span class="params">self, student_id</span>):</span></span><br><span class="line">        <span class="keyword">return</span> self.students.get(student_id)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_all_students</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">for</span> id_, value <span class="keyword">in</span> self.students.items():</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;学号: &#123;&#125;,姓名&#123;&#125;,年龄&#123;&#125;,性别&#123;&#125;,班级&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(</span><br><span class="line">                id_, value[<span class="string">&#x27;name&#x27;</span>], value[<span class="string">&#x27;age&#x27;</span>], value[<span class="string">&#x27;sex&#x27;</span>], value[<span class="string">&#x27;class_number&#x27;</span>]</span><br><span class="line">            ))</span><br><span class="line">        <span class="keyword">return</span> self.students</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add</span>(<span class="params">self, **student</span>):</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            self.check_user_info(**student)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">raise</span> e</span><br><span class="line">        self.__add(**student)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">adds</span>(<span class="params">self, new_students</span>):</span></span><br><span class="line">        <span class="keyword">for</span> student <span class="keyword">in</span> new_students:</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                self.check_user_info(**student)</span><br><span class="line">            <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                <span class="built_in">print</span>(e, student.get(<span class="string">&#x27;name&#x27;</span>))</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            self.__add(**student)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__add</span>(<span class="params">self, **student</span>):</span></span><br><span class="line">        new_id = <span class="built_in">max</span>(self.students) + <span class="number">1</span></span><br><span class="line">        self.students[new_id] = student</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete</span>(<span class="params">self, student_id</span>):</span></span><br><span class="line">        <span class="keyword">if</span> student_id <span class="keyword">not</span> <span class="keyword">in</span> self.students:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125;并不存在&#x27;</span>.<span class="built_in">format</span>(student_id))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            user_info = self.students.pop(student_id)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;学号是&#123;&#125;, &#123;&#125;同学的信息已经被删除了&#x27;</span>.<span class="built_in">format</span>(student_id, user_info[<span class="string">&#x27;name&#x27;</span>]))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">deletes</span>(<span class="params">self, ids</span>):</span></span><br><span class="line">        <span class="keyword">for</span> id_ <span class="keyword">in</span> ids:</span><br><span class="line">            <span class="keyword">if</span> id_ <span class="keyword">not</span> <span class="keyword">in</span> self.students:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;id_&#125;</span>不存在学生库中&#x27;</span>)</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            student_info = self.students.pop(id_)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&#x27;学号<span class="subst">&#123;id_&#125;</span> 学生<span class="subst">&#123;student_info[<span class="string">&quot;name&quot;</span>]&#125;</span> 已被移除&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update</span>(<span class="params">self, student_id, **kwargs</span>):</span></span><br><span class="line">        <span class="keyword">if</span> student_id <span class="keyword">not</span> <span class="keyword">in</span> self.students:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;并不存在这个学号:&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(student_id))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            self.check_user_info(**kwargs)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">raise</span> e</span><br><span class="line"></span><br><span class="line">        self.students[student_id] = kwargs</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;同学信息更新完毕&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">updates</span>(<span class="params">self, update_students</span>):</span></span><br><span class="line">        <span class="keyword">for</span> student <span class="keyword">in</span> update_students:</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                id_ = <span class="built_in">list</span>(student.keys())[<span class="number">0</span>]</span><br><span class="line">            <span class="keyword">except</span> IndexError <span class="keyword">as</span> e:</span><br><span class="line">                <span class="built_in">print</span>(e)</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">if</span> id_ <span class="keyword">not</span> <span class="keyword">in</span> self.students:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&#x27;学号<span class="subst">&#123;id_&#125;</span>不存在&#x27;</span>)</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            user_info = student[id_]</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                check = self.check_user_info(**user_info)</span><br><span class="line">            <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                <span class="built_in">print</span>(e)</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            self.students[id_] = user_info</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;所有用户信息更新完成&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">search_users</span>(<span class="params">self, **kwargs</span>):</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">assert</span> <span class="built_in">len</span>(kwargs) == <span class="number">1</span>, <span class="string">&#x27;参数数量传递错误&#x27;</span></span><br><span class="line">        values = <span class="built_in">list</span>(self.students.values())</span><br><span class="line">        key = <span class="literal">None</span></span><br><span class="line">        value = <span class="literal">None</span></span><br><span class="line">        result = []</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;name&#x27;</span> <span class="keyword">in</span> kwargs:</span><br><span class="line">            key = <span class="string">&#x27;name&#x27;</span></span><br><span class="line">            value = kwargs[key]</span><br><span class="line">        <span class="keyword">elif</span> <span class="string">&#x27;sex&#x27;</span> <span class="keyword">in</span> kwargs:</span><br><span class="line">            key = <span class="string">&#x27;sex&#x27;</span></span><br><span class="line">            value = kwargs[<span class="string">&#x27;sex&#x27;</span>]</span><br><span class="line">        <span class="keyword">elif</span> <span class="string">&#x27;class_number&#x27;</span> <span class="keyword">in</span> kwargs:</span><br><span class="line">            key = <span class="string">&#x27;class_number&#x27;</span></span><br><span class="line">            value = kwargs[key]</span><br><span class="line">        <span class="keyword">elif</span> <span class="string">&#x27;age&#x27;</span> <span class="keyword">in</span> kwargs:</span><br><span class="line">            key = <span class="string">&#x27;age&#x27;</span></span><br><span class="line">            value = kwargs[key]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">raise</span> NotArgError(<span class="string">&#x27;没有发现搜索的关键字&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> user <span class="keyword">in</span> values:  <span class="comment"># [&#123;name, sex, age, class_number&#125;, &#123;&#125;]</span></span><br><span class="line">            <span class="comment"># print(user[key])</span></span><br><span class="line">            <span class="comment"># print(value)</span></span><br><span class="line">            <span class="keyword">if</span> value <span class="keyword">in</span> user[key]:</span><br><span class="line">                result.append(user)</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">check_user_info</span>(<span class="params">self, **kwargs</span>):</span></span><br><span class="line">        <span class="keyword">assert</span> <span class="built_in">len</span>(kwargs) == <span class="number">4</span>, <span class="string">&#x27;参数必须是4个&#x27;</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;name&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> kwargs:</span><br><span class="line">            <span class="keyword">raise</span> NotArgError(<span class="string">&#x27;没有发现学生姓名参数&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;age&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> kwargs:</span><br><span class="line">            <span class="keyword">raise</span>  NotArgError(<span class="string">&#x27;缺少学生年龄参数&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;sex&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> kwargs:</span><br><span class="line">            <span class="keyword">raise</span> NotArgError(<span class="string">&#x27;缺少学生性别参数&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;class_number&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> kwargs:</span><br><span class="line">            <span class="keyword">raise</span> NotArgError(<span class="string">&#x27;缺少学生班级参数&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        name_value = kwargs[<span class="string">&#x27;name&#x27;</span>]  <span class="comment"># type(name_value)</span></span><br><span class="line">        age_value = kwargs[<span class="string">&#x27;age&#x27;</span>]</span><br><span class="line">        sex_value = kwargs[<span class="string">&#x27;sex&#x27;</span>]</span><br><span class="line">        class_number_value = kwargs[<span class="string">&#x27;class_number&#x27;</span>]</span><br><span class="line">        <span class="comment"># isinstance(对比的数据，目标类型） isinstance(1, str)</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">isinstance</span>(name_value, <span class="built_in">str</span>):</span><br><span class="line">            <span class="keyword">raise</span> TypeError(<span class="string">&#x27;name应该是字符串类型&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">isinstance</span>(age_value, <span class="built_in">int</span>):</span><br><span class="line">            <span class="keyword">raise</span> TypeError(<span class="string">&#x27;age应该是整形&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">isinstance</span>(sex_value, <span class="built_in">str</span>):</span><br><span class="line">            <span class="keyword">raise</span> TypeError(<span class="string">&#x27;sex应该是字符串类型&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">isinstance</span>(class_number_value, <span class="built_in">str</span>):</span><br><span class="line">            <span class="keyword">raise</span> TypeError(<span class="string">&#x27;class_number应该是字符串类型&#x27;</span>)</span><br><span class="line"></span><br><span class="line">students = &#123;</span><br><span class="line">    <span class="number">1</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;dewei&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;age&#x27;</span>: <span class="number">33</span>,</span><br><span class="line">        <span class="string">&#x27;class_number&#x27;</span>: <span class="string">&#x27;A&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;sex&#x27;</span>: <span class="string">&#x27;boy&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="number">2</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;小慕&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;age&#x27;</span>: <span class="number">10</span>,</span><br><span class="line">        <span class="string">&#x27;class_number&#x27;</span>: <span class="string">&#x27;B&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;sex&#x27;</span>: <span class="string">&#x27;boy&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="number">3</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;小曼&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;age&#x27;</span>: <span class="number">18</span>,</span><br><span class="line">        <span class="string">&#x27;class_number&#x27;</span>: <span class="string">&#x27;A&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;sex&#x27;</span>: <span class="string">&#x27;girl&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="number">4</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;小高&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;age&#x27;</span>: <span class="number">18</span>,</span><br><span class="line">        <span class="string">&#x27;class_number&#x27;</span>: <span class="string">&#x27;C&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;sex&#x27;</span>: <span class="string">&#x27;boy&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="number">5</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;小云&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;age&#x27;</span>: <span class="number">18</span>,</span><br><span class="line">        <span class="string">&#x27;class_number&#x27;</span>: <span class="string">&#x27;B&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;sex&#x27;</span>: <span class="string">&#x27;girl&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    students_info = StudentInfo(students)</span><br><span class="line">    user = students_info.get_by_id(<span class="number">1</span>)</span><br><span class="line">    students_info.add(name=<span class="string">&#x27;dewei&#x27;</span>, age=<span class="number">34</span>, class_number=<span class="string">&#x27;A&#x27;</span>, sex=<span class="string">&#x27;boy&#x27;</span>)</span><br><span class="line">    <span class="comment"># print(students_info.students)</span></span><br><span class="line">    users = [</span><br><span class="line">        &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;xiaoming&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">17</span>, <span class="string">&#x27;class_number&#x27;</span>: <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;sex&#x27;</span>: <span class="string">&#x27;boy&#x27;</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;xiaohong&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">18</span>, <span class="string">&#x27;class_number&#x27;</span>: <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;sex&#x27;</span>: <span class="string">&#x27;girl&#x27;</span>&#125;</span><br><span class="line">    ]</span><br><span class="line">    students_info.adds(users)</span><br><span class="line">    students_info.get_all_students()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;-----------------&#x27;</span>)</span><br><span class="line">    students_info.deletes([<span class="number">7</span>, <span class="number">8</span>])</span><br><span class="line">    students_info.get_all_students()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;-------------&#x27;</span>)</span><br><span class="line">    students_info.updates([</span><br><span class="line">        &#123;<span class="number">1</span>: &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;dewei.zhang&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">18</span>, <span class="string">&#x27;class_number&#x27;</span>: <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;sex&#x27;</span>: <span class="string">&#x27;boy&#x27;</span>&#125;&#125;,</span><br><span class="line">        &#123;<span class="number">2</span>: &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;小慕同学&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">18</span>, <span class="string">&#x27;class_number&#x27;</span>: <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;sex&#x27;</span>: <span class="string">&#x27;boy&#x27;</span>&#125;&#125;</span><br><span class="line">    ])</span><br><span class="line">    students_info.get_all_students()</span><br><span class="line">    result = students_info.search_users(name=<span class="string">&#x27;d&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(result)</span><br><span class="line">    result = students_info.search_users(name=<span class="string">&#x27;小&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(result)</span><br><span class="line">    <span class="comment"># 如果同学想用年龄字段模糊查询,</span></span><br><span class="line">    <span class="comment"># 需要把年龄改为str类型</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;---------------&#x27;</span>)</span><br><span class="line">    result = students_info.search_users(name=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(result)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 对象和异常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 自定义异常与抛出异常</title>
      <link href="/2021/bd07d6141247/"/>
      <url>/2021/bd07d6141247/</url>
      
        <content type="html"><![CDATA[<h3 id="自定义异常与抛出异常"><a href="#自定义异常与抛出异常" class="headerlink" title="自定义异常与抛出异常"></a>自定义异常与抛出异常</h3><h4 id="自定义抛出异常raise"><a href="#自定义抛出异常raise" class="headerlink" title="自定义抛出异常raise"></a>自定义抛出异常<code>raise</code></h4><ul><li>将信息以报错的形式抛出</li></ul><h5 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h5><ul><li><code>rais 异常类型（message)</code></li></ul><h5 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h5><ul><li><code>message</code>：错误信息</li></ul><h5 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h5><ul><li>无返回值</li></ul><h4 id="自定义异常类"><a href="#自定义异常类" class="headerlink" title="自定义异常类"></a>自定义异常类</h4><ul><li>继承基类——<code>Exception</code></li><li>在<code>构造函数</code>中<strong>定义错误信息</strong></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span>(<span class="params">number</span>):</span></span><br><span class="line">    <span class="keyword">if</span> number == <span class="number">100</span>:</span><br><span class="line">        <span class="keyword">raise</span> ValueError(<span class="string">&#x27;number 不可以是100&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> number</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># result = test(100)</span></span><br><span class="line"><span class="comment"># print(result)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test2</span>(<span class="params">number</span>):</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">return</span> test(number)</span><br><span class="line">    <span class="keyword">except</span> ValueError <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">return</span> e</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">result = test2(<span class="number">100</span>)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test3</span>():</span></span><br><span class="line">    <span class="keyword">raise</span> <span class="string">&#x27;错误了&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># test3()</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test4</span>(<span class="params">name</span>):</span></span><br><span class="line">    <span class="keyword">if</span> name == <span class="string">&#x27;dewei&#x27;</span>:</span><br><span class="line">        <span class="keyword">raise</span> Exception(<span class="string">&#x27;dewei不可以被填写&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># test4(&#x27;dewei&#x27;)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NumberLimitError</span>(<span class="params">Exception</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, message</span>):</span></span><br><span class="line">        self.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NameLimitError</span>(<span class="params">Exception</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self,message</span>):</span></span><br><span class="line">        self.message = message</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test5</span>(<span class="params">name</span>):</span></span><br><span class="line">    <span class="keyword">if</span> name == <span class="string">&#x27;dewei&#x27;</span>:</span><br><span class="line">        <span class="keyword">raise</span> NameLimitError(<span class="string">&#x27;dewei不可以被填写&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test6</span>(<span class="params">number</span>):</span></span><br><span class="line">    <span class="keyword">if</span> number &gt; <span class="number">100</span>:</span><br><span class="line">        <span class="keyword">raise</span> NumberLimitError(<span class="string">&#x27;数字不可以大于100&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> number</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;----------&#x27;</span>)</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    test5(<span class="string">&#x27;dewei&#x27;</span>)</span><br><span class="line"><span class="keyword">except</span> NameLimitError <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(e)</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    test6(<span class="number">1000</span>)</span><br><span class="line"><span class="keyword">except</span> NumberLimitError <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(e)</span><br><span class="line"></span><br><span class="line"><span class="comment"># test5(&#x27;dewei&#x27;)</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 对象和异常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 异常中的finally</title>
      <link href="/2021/6f285af28385/"/>
      <url>/2021/6f285af28385/</url>
      
        <content type="html"><![CDATA[<h3 id="异常中的finally"><a href="#异常中的finally" class="headerlink" title="异常中的finally"></a>异常中的<code>finally</code></h3><ul><li>finally的功能和用法</li></ul><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li>无论是否发生异常 ， 一定会执行的代码块</li><li>在函数中， 即便在<code>try</code>或<code>except</code>中进行了<code>return</code>也依然会执行<code>finally</code>语法块</li><li><code>try</code>语法<strong>至少</strong>要伴随<code>except</code>或<code>finally</code>中的一个</li></ul><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    &lt;代码块<span class="number">1</span>&gt;</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    &lt;代码块<span class="number">2</span>&gt;</span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">    &lt;代码块<span class="number">3</span>&gt;</span><br></pre></td></tr></table></figure><h4 id="历史"><a href="#历史" class="headerlink" title="历史"></a>历史</h4><ul><li>在<code>python 2.5</code> 之前的版本， <code>finally</code>需要<strong>独立使用</strong>，<code>不可以</code>和<strong>try配合</strong>，之后<strong>才演变成现在的模式</strong></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test1</span>():</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="number">1</span> / <span class="number">0</span></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(e)</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;finally&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">result = test1()</span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test2</span>():</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="number">1</span> / <span class="number">0</span></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;111&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> e</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;finally&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;-------&#x27;</span>)</span><br><span class="line">result = test2()</span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test3</span>():</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;try test 11&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;try&#x27;</span></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;e&#x27;</span>)</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;finally test&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;------&#x27;</span>)</span><br><span class="line">result = test3()</span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test4</span>():</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="number">1</span> / <span class="number">0</span></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> e</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;2&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;finally&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;----------&#x27;</span>)</span><br><span class="line">result = test4()</span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test5</span>():</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;1try&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;try&#x27;</span></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;e&#x27;</span>)</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;2finally&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;finally&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;========&#x27;</span>)</span><br><span class="line">result = test5()</span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test6</span>():</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;try1&#x27;</span>)</span><br><span class="line">        <span class="number">1</span> / <span class="number">0</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;try3&#x27;</span>)</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        <span class="comment"># print(&#x27;i am finally&#x27;)</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;i am finally&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;-------&#x27;</span>)</span><br><span class="line">result = test6()</span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 对象和异常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 中的异常类型</title>
      <link href="/2021/94b4c3311397/"/>
      <url>/2021/94b4c3311397/</url>
      
        <content type="html"><![CDATA[<h3 id="Python中的异常类型"><a href="#Python中的异常类型" class="headerlink" title="Python中的异常类型"></a>Python中的异常类型</h3><ul><li><code>异常类型</code><strong>集合</strong></li></ul><table><thead><tr><th>异常名称</th><th>说明</th></tr></thead><tbody><tr><td>Exception</td><td>通用异常类型（基类）</td></tr><tr><td>ZeroDivionError</td><td>不能整除0</td></tr><tr><td>AttributeError</td><td>对象没有这个属性</td></tr><tr><td>IOError</td><td>输出输出操作失败</td></tr><tr><td>IndexError</td><td>没有当前索引</td></tr></tbody></table><table><thead><tr><th>异常名称</th><th>说明</th></tr></thead><tbody><tr><td>KeyError</td><td>没有这个键值（Key）</td></tr><tr><td>NameError</td><td>没有这个变量（未初始化对象）</td></tr><tr><td>SyntaxError</td><td>Python语法错误</td></tr><tr><td>SystemError</td><td>解释器的系统错误</td></tr><tr><td>ValueError</td><td>传入的参数错误</td></tr></tbody></table><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">t = Test()</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    t.name</span><br><span class="line"><span class="keyword">except</span> AttributeError <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(e)</span><br><span class="line"></span><br><span class="line">d = &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;小慕&#x27;</span>&#125;</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    d[<span class="string">&#x27;age&#x27;</span>]</span><br><span class="line"><span class="keyword">except</span> KeyError <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;没有对应的键:&#x27;</span>, e)</span><br><span class="line"></span><br><span class="line">l = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    l[<span class="number">5</span>]</span><br><span class="line"><span class="keyword">except</span> IndexError <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(e)</span><br><span class="line"></span><br><span class="line">name = <span class="string">&#x27;dewei&#x27;</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="built_in">int</span>(name)</span><br><span class="line"><span class="keyword">except</span> ValueError <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(e)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span>(<span class="params">a</span>):</span></span><br><span class="line">    <span class="keyword">return</span> a</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    test()</span><br><span class="line"><span class="keyword">except</span> TypeError <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(e)</span><br><span class="line">    </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 对象和异常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 初探异常</title>
      <link href="/2021/c46540100bf4/"/>
      <url>/2021/c46540100bf4/</url>
      
        <content type="html"><![CDATA[<h3 id="初探异常"><a href="#初探异常" class="headerlink" title="初探异常"></a>初探异常</h3><h4 id="什么是异常与异常处理"><a href="#什么是异常与异常处理" class="headerlink" title="什么是异常与异常处理"></a>什么是异常与异常处理</h4><ul><li>异常就是错误</li><li>异常会导致程序崩溃并停止运行</li><li>能监控并捕获异常，将异常部位的程序进行修理使得程序继续正常运行</li></ul><h4 id="异常的语法结构"><a href="#异常的语法结构" class="headerlink" title="异常的语法结构"></a>异常的语法结构</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>：</span><br><span class="line">&lt;代码块<span class="number">1</span>&gt;  被<span class="keyword">try</span>关键字检查并保护的业务代码</span><br><span class="line"></span><br><span class="line"><span class="keyword">except</span> &lt;异常的类型&gt;:</span><br><span class="line">    &lt;代码块<span class="number">2</span>&gt; <span class="comment"># 代码块1 出现错误后执行的代码块</span></span><br></pre></td></tr></table></figure><h4 id="捕获通用异常"><a href="#捕获通用异常" class="headerlink" title="捕获通用异常"></a>捕获通用异常</h4><ul><li>无法确定是哪种异常的情况下使用的捕获方法</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    &lt;代码块&gt;</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:  <span class="comment"># 单词首字母大写</span></span><br><span class="line">    &lt;异常代码块&gt;</span><br></pre></td></tr></table></figure><h4 id="捕获具体异常"><a href="#捕获具体异常" class="headerlink" title="捕获具体异常"></a>捕获具体异常</h4><ul><li>确定是哪种异常的情况下使用的捕获方法</li><li>except  &lt;具体的异常类型&gt;as e</li></ul><h4 id="捕获多个异常-1"><a href="#捕获多个异常-1" class="headerlink" title="捕获多个异常(1)"></a>捕获多个异常(1)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;try start&#x27;</span>)</span><br><span class="line">    res = <span class="number">1</span>/<span class="number">0</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;try finish&#x27;</span>)</span><br><span class="line"><span class="keyword">except</span> ZeroDivisionError <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(e)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e: <span class="comment">#可以有多个except</span></span><br><span class="line">    <span class="built_in">print</span>(‘this <span class="keyword">is</span> a public excpet , bug <span class="keyword">is</span>: %s<span class="string">&#x27; % e)</span></span><br></pre></td></tr></table></figure><ul><li>当<code>except</code>代码块<code>有多个</code>的时候，<strong>当</strong><code>捕获到第一个</code>后，<code>不会</code>继续向下捕获</li></ul><h4 id="捕获多个异常-2"><a href="#捕获多个异常-2" class="headerlink" title="捕获多个异常(2)"></a>捕获多个异常(2)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;try start&#x27;</span>)</span><br><span class="line">    res = <span class="number">1</span>/<span class="number">0</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;try finish&#x27;</span>)</span><br><span class="line"><span class="keyword">except</span> (ZeroDivisionError, Exception) <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(e)</span><br></pre></td></tr></table></figure><ul><li>当<code>except</code>代码后边的异常类型使用<code>元组</code>包裹起来，<strong>捕获到哪种抛出哪种</strong></li></ul><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">upper</span>(<span class="params">str_data</span>):</span></span><br><span class="line">    new_str = <span class="string">&#x27;None&#x27;</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        new_str = str_data.upper()</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;程序出错了:&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(e))</span><br><span class="line">    <span class="keyword">return</span> new_str</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">result = upper(<span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;result:&#x27;</span>, result)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span>():</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;123&#x27;</span>)</span><br><span class="line">        <span class="number">1</span> / <span class="number">0</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;hello&#x27;</span>)</span><br><span class="line">    <span class="keyword">except</span> ZeroDivisionError <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(e)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">test()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test1</span>():</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;hello&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(name)</span><br><span class="line">    <span class="keyword">except</span> (ZeroDivisionError, NameError) <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(e)</span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">type</span>(e))</span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">dir</span>(e))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">test1()</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 对象和异常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 学生信息库的优化</title>
      <link href="/2021/0f57d23da0bb/"/>
      <url>/2021/0f57d23da0bb/</url>
      
        <content type="html"><![CDATA[<h3 id="学生信息库的优化"><a href="#学生信息库的优化" class="headerlink" title="学生信息库的优化"></a>学生信息库的优化</h3><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-11-3/3.png" alt="3"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    学生信息库</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">StudentInfo</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, students</span>):</span></span><br><span class="line">        self.students = students</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_by_id</span>(<span class="params">self, student_id</span>):</span></span><br><span class="line">        <span class="keyword">return</span> self.students.get(student_id)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_all_students</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">for</span> id_, value <span class="keyword">in</span> self.students.items():</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;学号: &#123;&#125;,姓名&#123;&#125;,年龄&#123;&#125;,性别&#123;&#125;,班级&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(</span><br><span class="line">                id_, value[<span class="string">&#x27;name&#x27;</span>], value[<span class="string">&#x27;age&#x27;</span>], value[<span class="string">&#x27;sex&#x27;</span>], value[<span class="string">&#x27;class_number&#x27;</span>]</span><br><span class="line">            ))</span><br><span class="line">        <span class="keyword">return</span> self.students</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add</span>(<span class="params">self, **student</span>):</span></span><br><span class="line">        check = self.check_user_info(**student)</span><br><span class="line">        <span class="keyword">if</span> check != <span class="literal">True</span>:</span><br><span class="line">            <span class="built_in">print</span>(check)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        self.__add(**student)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">adds</span>(<span class="params">self, new_students</span>):</span></span><br><span class="line">        <span class="keyword">for</span> student <span class="keyword">in</span> new_students:</span><br><span class="line">            check = self.check_user_info(**student)</span><br><span class="line">            <span class="keyword">if</span> check != <span class="literal">True</span>:</span><br><span class="line">                <span class="built_in">print</span>(check, student.get(<span class="string">&#x27;name&#x27;</span>))</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            self.__add(**student)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__add</span>(<span class="params">self, **student</span>):</span></span><br><span class="line">        new_id = <span class="built_in">max</span>(self.students) + <span class="number">1</span></span><br><span class="line">        self.students[new_id] = student</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete</span>(<span class="params">self, student_id</span>):</span></span><br><span class="line">        <span class="keyword">if</span> student_id <span class="keyword">not</span> <span class="keyword">in</span> self.students:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125;并不存在&#x27;</span>.<span class="built_in">format</span>(student_id))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            user_info = self.students.pop(student_id)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;学号是&#123;&#125;, &#123;&#125;同学的信息已经被删除了&#x27;</span>.<span class="built_in">format</span>(student_id, user_info[<span class="string">&#x27;name&#x27;</span>]))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">deletes</span>(<span class="params">self, ids</span>):</span></span><br><span class="line">        <span class="keyword">for</span> id_ <span class="keyword">in</span> ids:</span><br><span class="line">            <span class="keyword">if</span> id_ <span class="keyword">not</span> <span class="keyword">in</span> self.students:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;id_&#125;</span>不存在学生库中&#x27;</span>)</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            student_info = self.students.pop(id_)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&#x27;学号<span class="subst">&#123;id_&#125;</span> 学生<span class="subst">&#123;student_info[<span class="string">&quot;name&quot;</span>]&#125;</span> 已被移除&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update</span>(<span class="params">self, student_id, **kwargs</span>):</span></span><br><span class="line">        <span class="keyword">if</span> student_id <span class="keyword">not</span> <span class="keyword">in</span> self.students:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;并不存在这个学号:&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(student_id))</span><br><span class="line"></span><br><span class="line">        check = self.check_user_info(**kwargs)</span><br><span class="line">        <span class="keyword">if</span> check != <span class="literal">True</span>:</span><br><span class="line">            <span class="built_in">print</span>(check)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">        self.students[student_id] = kwargs</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;同学信息更新完毕&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">updates</span>(<span class="params">self, update_students</span>):</span></span><br><span class="line">        <span class="keyword">for</span> student <span class="keyword">in</span> update_students:</span><br><span class="line">            id_ = <span class="built_in">list</span>(student.keys())[<span class="number">0</span>]</span><br><span class="line">            <span class="keyword">if</span> id_ <span class="keyword">not</span> <span class="keyword">in</span> self.students:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&#x27;学号<span class="subst">&#123;id_&#125;</span>不存在&#x27;</span>)</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            user_info = student[id_]</span><br><span class="line">            check = self.check_user_info(**user_info)</span><br><span class="line">            <span class="keyword">if</span> check != <span class="literal">True</span>:</span><br><span class="line">                <span class="built_in">print</span>(check)</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            self.students[id_] = user_info</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;所有用户信息更新完成&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">search_users</span>(<span class="params">self, **kwargs</span>):</span></span><br><span class="line">        values = <span class="built_in">list</span>(self.students.values())</span><br><span class="line">        key = <span class="literal">None</span></span><br><span class="line">        value = <span class="literal">None</span></span><br><span class="line">        result = []</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;name&#x27;</span> <span class="keyword">in</span> kwargs:</span><br><span class="line">            key = <span class="string">&#x27;name&#x27;</span></span><br><span class="line">            value = kwargs[key]</span><br><span class="line">        <span class="keyword">elif</span> <span class="string">&#x27;sex&#x27;</span> <span class="keyword">in</span> kwargs:</span><br><span class="line">            key = <span class="string">&#x27;sex&#x27;</span></span><br><span class="line">            value = kwargs[<span class="string">&#x27;sex&#x27;</span>]</span><br><span class="line">        <span class="keyword">elif</span> <span class="string">&#x27;class_number&#x27;</span> <span class="keyword">in</span> kwargs:</span><br><span class="line">            key = <span class="string">&#x27;class_number&#x27;</span></span><br><span class="line">            value = kwargs[key]</span><br><span class="line">        <span class="keyword">elif</span> <span class="string">&#x27;age&#x27;</span> <span class="keyword">in</span> kwargs:</span><br><span class="line">            key = <span class="string">&#x27;age&#x27;</span></span><br><span class="line">            value = kwargs[key]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;没有发现搜索的关键字&#x27;</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> user <span class="keyword">in</span> values:  <span class="comment"># [&#123;name, sex, age, class_number&#125;, &#123;&#125;]</span></span><br><span class="line">            <span class="comment"># print(user[key])</span></span><br><span class="line">            <span class="comment"># print(value)</span></span><br><span class="line">            <span class="keyword">if</span> value <span class="keyword">in</span> user[key]:</span><br><span class="line">                result.append(user)</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">check_user_info</span>(<span class="params">self, **kwargs</span>):</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;name&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> kwargs:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;没有发现学生姓名&#x27;</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;age&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> kwargs:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;没有发现学生年龄&#x27;</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;sex&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> kwargs:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;没有发现学生性别&#x27;</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;class_number&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> kwargs:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;没有发现学生班级&#x27;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">students = &#123;</span><br><span class="line">    <span class="number">1</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;dewei&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;age&#x27;</span>: <span class="number">33</span>,</span><br><span class="line">        <span class="string">&#x27;class_number&#x27;</span>: <span class="string">&#x27;A&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;sex&#x27;</span>: <span class="string">&#x27;boy&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="number">2</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;小慕&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;age&#x27;</span>: <span class="number">10</span>,</span><br><span class="line">        <span class="string">&#x27;class_number&#x27;</span>: <span class="string">&#x27;B&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;sex&#x27;</span>: <span class="string">&#x27;boy&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="number">3</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;小曼&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;age&#x27;</span>: <span class="number">18</span>,</span><br><span class="line">        <span class="string">&#x27;class_number&#x27;</span>: <span class="string">&#x27;A&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;sex&#x27;</span>: <span class="string">&#x27;girl&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="number">4</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;小高&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;age&#x27;</span>: <span class="number">18</span>,</span><br><span class="line">        <span class="string">&#x27;class_number&#x27;</span>: <span class="string">&#x27;C&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;sex&#x27;</span>: <span class="string">&#x27;boy&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="number">5</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;小云&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;age&#x27;</span>: <span class="number">18</span>,</span><br><span class="line">        <span class="string">&#x27;class_number&#x27;</span>: <span class="string">&#x27;B&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;sex&#x27;</span>: <span class="string">&#x27;girl&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    students_info = StudentInfo(students)</span><br><span class="line">    user = students_info.get_by_id(<span class="number">1</span>)</span><br><span class="line">    students_info.add(name=<span class="string">&#x27;dewei&#x27;</span>, age=<span class="number">34</span>, class_number=<span class="string">&#x27;A&#x27;</span>, sex=<span class="string">&#x27;boy&#x27;</span>)</span><br><span class="line">    <span class="comment"># print(students_info.students)</span></span><br><span class="line">    users = [</span><br><span class="line">        &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;xiaoming&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">17</span>, <span class="string">&#x27;class_number&#x27;</span>: <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;sex&#x27;</span>: <span class="string">&#x27;boy&#x27;</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;xiaohong&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">18</span>, <span class="string">&#x27;class_number&#x27;</span>: <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;sex&#x27;</span>: <span class="string">&#x27;girl&#x27;</span>&#125;</span><br><span class="line">    ]</span><br><span class="line">    students_info.adds(users)</span><br><span class="line">    students_info.get_all_students()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;-----------------&#x27;</span>)</span><br><span class="line">    students_info.deletes([<span class="number">7</span>, <span class="number">8</span>])</span><br><span class="line">    students_info.get_all_students()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;-------------&#x27;</span>)</span><br><span class="line">    students_info.updates([</span><br><span class="line">        &#123;<span class="number">1</span>: &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;dewei.zhang&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">18</span>, <span class="string">&#x27;class_number&#x27;</span>: <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;sex&#x27;</span>: <span class="string">&#x27;boy&#x27;</span>&#125;&#125;,</span><br><span class="line">        &#123;<span class="number">2</span>: &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;小慕同学&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">18</span>, <span class="string">&#x27;class_number&#x27;</span>: <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;sex&#x27;</span>: <span class="string">&#x27;boy&#x27;</span>&#125;&#125;</span><br><span class="line">    ])</span><br><span class="line">    students_info.get_all_students()</span><br><span class="line">    result = students_info.search_users(name=<span class="string">&#x27;d&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(result)</span><br><span class="line">    result = students_info.search_users(name=<span class="string">&#x27;小&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(result)</span><br><span class="line">    <span class="comment"># 如果同学想用年龄字段模糊查询,</span></span><br><span class="line">    <span class="comment"># 需要把年龄改为str类型</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;---------------&#x27;</span>)</span><br><span class="line">    result = students_info.search_users(name=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(result)</span><br><span class="line">    </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 对象和异常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 阶段编程练习（十六）</title>
      <link href="/2021/a8e53dc8cea3/"/>
      <url>/2021/a8e53dc8cea3/</url>
      
        <content type="html"><![CDATA[<h4 id="编程练习"><a href="#编程练习" class="headerlink" title="编程练习"></a>编程练习</h4><blockquote><p>圆形、长方形除了是几何学科中的基本图形之外，也还是我们日常生活中最常见的平面图形。请根据面向对象的相关知识，将上述两种平面图形用Python语言进行表示，使得我们的程序可以正常对其使用。<br>效果图如下：</p><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-11-3/2.png" alt="2"></p></blockquote><h5 id="任务"><a href="#任务" class="headerlink" title="任务"></a>任务</h5><ol><li>自定义Point类，并重写其构造（初始化）方法__init__( )，将参数x和y赋值给实例对象的属性</li><li>自定义该类实例方法string( )，功能：打印“{X：xx, Y：xx}”</li><li>自定义Circle类，继承自Point类，并重写其构造（初始化）方法__init__( )，x、y参数通过调用父类的构造函数进行赋值，radius通过子类重写的 <strong>init</strong>( )进行赋值。</li><li>自定义该类实例方法string( )，功能：打印“该图形初始化点为：{X：xx, Y：xx}; {半径为：xx}”</li><li>自定义Size类，并重写其构造（初始化）方法__init__( )，将参数width和height赋值给实例对象的属性</li><li>自定义该类实例方法string( )，功能：打印“{Width：xx, Height：xx}”</li><li>自定义Rectangle类，继承自Point类和Size类，并重写其构造（初始化）方法__init__( )，x、y、width、height 4个参数全部通过调用父类的构造函数进行赋值</li><li>自定义该类实例方法string( )，功能：打印“该图形初始化点为：{X：xx, Y：xx}; 长宽分别为：{Width：xx, Height：xx}</li><li>初始化Circle类的对象c，并调用其格式化输出函数string( )</li><li>初始化Rectangle类的对象r1、r2,并分别调用其格式化输出函数string( )</li></ol><h5 id="任务提示"><a href="#任务提示" class="headerlink" title="任务提示"></a>任务提示</h5><ol><li>在自定义Rectangle类的构造方法时，调用父类方法必须按照类名.<strong>init</strong>(参数列表)的方式进行调用，如Point.<strong>init</strong>(self, x, y)</li><li>自定义Rectangle类格式化输出方法时，调用父类的格式化输出函数string()</li></ol><h5 id="初始代码"><a href="#初始代码" class="headerlink" title="初始代码"></a>初始代码</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Point</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line"><span class="comment"># 自定义Point类的构造(初始化)方法</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 自定义Point类对象的格式化输出函数(string())</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Circle</span>(<span class="params">Point</span>):</span></span><br><span class="line"><span class="comment"># 自定义Circle类的构造(初始化)方法</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 自定义Circle类对象的格式化输出函数(string())</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Size</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line"><span class="comment"># 自定义Size类的构造(初始化)方法</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 自定义Size类对象的格式化输出函数(string())</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Rectangle</span>(<span class="params">Point, Size</span>):</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 自定义Rectangle类的构造(初始化)方法，并在方法中调用父类的初始化方法以完成初</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 自定义Rectangle类对象的格式化输出函数(string()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line"><span class="comment"># 实例化Circle对象，圆心为（5,5），半径为8</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 实例化Rectangle对象，顶点位置（15,15），长和宽</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 实例化Rectangle对象，顶点位置（40,30），长和宽</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="代码提交区"><a href="#代码提交区" class="headerlink" title="代码提交区"></a>代码提交区</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Point</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="comment"># 自定义Point类的构造(初始化)方法</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, x, y</span>):</span></span><br><span class="line">        self.x = x</span><br><span class="line">        self.y = y</span><br><span class="line">    <span class="comment"># 自定义Point类对象的格式化输出函数(string())</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">string</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;X:&#123;0&#125;,Y:&#123;1&#125;&#x27;</span>.<span class="built_in">format</span>(self.x, self.y))</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Circle</span>(<span class="params">Point</span>):</span></span><br><span class="line">    <span class="comment"># 自定义Circle类的构造(初始化)方法</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, x, y, radius</span>):</span></span><br><span class="line">        <span class="built_in">super</span>().__init__(x, y)</span><br><span class="line">        self.radius = radius</span><br><span class="line">    <span class="comment"># 自定义Circle类对象的格式化输出函数(string())</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">string</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;该图像的初始化点为:X&#123;0&#125;,Y&#123;1&#125;,半径为&#123;2&#125;&#x27;</span>.<span class="built_in">format</span>(self.x, self.y,self.radius))</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Size</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="comment"># 自定义Size类的构造(初始化)方法</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, width, height</span>):</span></span><br><span class="line">        self.width = width</span><br><span class="line">        self.height = height</span><br><span class="line">    <span class="comment"># 自定义Size类对象的格式化输出函数(string())</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">string</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;width:&#123;0&#125;,height:&#123;1&#125;&#x27;</span>.<span class="built_in">format</span>(self.width, self.height))</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Rectangle</span>(<span class="params">Point, Size</span>):</span></span><br><span class="line">    <span class="comment"># 自定义Rectangle类的构造(初始化)方法，并在方法中调用父类的初始化方法以完成初</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, x, y, width, height</span>):</span></span><br><span class="line">        Point.__init__(self, x, y)</span><br><span class="line">        Size.__init__(self, width, height)</span><br><span class="line">    <span class="comment"># 自定义Rectangle类对象的格式化输出函数(string())</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">string</span>(<span class="params">self</span>):</span></span><br><span class="line">        Point.string(self)</span><br><span class="line">        Size.string(self)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="comment"># 实例化Circle对象，圆心为（5,5），半径为8</span></span><br><span class="line">    circle = Circle(<span class="number">5</span>, <span class="number">5</span>, <span class="number">8</span>)</span><br><span class="line">    circle.string()</span><br><span class="line">    <span class="comment"># 实例化Rectangle对象，顶点位置（15,15），长和宽</span></span><br><span class="line">    r1 = Rectangle(<span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>)</span><br><span class="line">    r1.string()</span><br><span class="line">    <span class="comment"># 实例化Rectangle对象，顶点位置（40,30），长和宽</span></span><br><span class="line">    r2 = Rectangle(<span class="number">40</span>, <span class="number">30</span>, <span class="number">11</span>, <span class="number">14</span>)</span><br><span class="line">    r2.string()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程练习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 阶段编程练习（十五）</title>
      <link href="/2021/067b3454cbf0/"/>
      <url>/2021/067b3454cbf0/</url>
      
        <content type="html"><![CDATA[<h3 id="代码练习"><a href="#代码练习" class="headerlink" title="代码练习"></a>代码练习</h3><blockquote><p>自定义两个类Person和Student，且Student继承自Person。Person类主要描述人的姓名和性别两大基本特征。Student类除了保持父类的基本属性之外还具有分数、主修两个公有属以及一个私有属性（学号）。请根据上述的基本说明，对stu和stu_2两个对象的信息进行综合展示。</p><p>效果图如下：</p><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-11-3/1.jpg" alt="1"></p></blockquote><h4 id="任务"><a href="#任务" class="headerlink" title="任务"></a>任务</h4><ol><li>自定义Person类，并重写其构造（初始化）方法__init__( )，将name和gender参数赋值给实例对象的属性</li><li>自定义实例方法speak( )，功能：打印“hello ! 我是xxx”。relation( )方法主要是占位作用，无其他实质性功能</li><li>自定义Student类，继承自Person类，并重写其构造（初始化）方法__init__( )，name、gender参数通过调用父类的构造函数进行赋值，score、major及__stu_num通过子类重写的 <strong>init</strong>( )进行赋值，设置__stu_num的初始值为’2018014002’。</li><li>自定义实例方法speak( )，功能：打印’我的学号为xxxxxxxxxx，很高兴认识大家’;</li><li>自定义实例方法identify_stu( )，功能：判断Student对象的学号。若学号为2018014002，则打印‘我的分组已经完成’，反之则打印‘请稍后，马上为你自动分组’；</li><li>自定义实例方法set_num( new_num)，功能：将学号重写设置为new_num；</li><li>自定义实例方法relation( )，功能：判断Student是否为Person的子类。若成立，则打印‘我的父类是Person’，反之则打印‘父类正在查询中······’</li><li>初始化实例对象stu和stu_2，并根据上述效果图调用对应方法</li></ol><h4 id="任务提示"><a href="#任务提示" class="headerlink" title="任务提示"></a>任务提示</h4><ol><li>Person类中的实例方法relation( )为占位功能时，其方法体可用pass语句代替</li><li>使用issubclass()是判断是否是子类，第一个参数传入的是子类类名，第二个参数传入的是父类类名。</li><li><code>略......</code></li></ol><h4 id="初始代码"><a href="#初始代码" class="headerlink" title="初始代码"></a>初始代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line"><span class="comment"># 重写实例对象的构造（初始化）方法</span></span><br><span class="line">    </span><br><span class="line"><span class="comment"># 自定义实例方法，格式化打印实例属性name的值</span></span><br><span class="line">    </span><br><span class="line"><span class="comment"># 自定义实例方法，占位作用</span></span><br><span class="line">    </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span>(<span class="params">Person</span>):</span></span><br><span class="line">    </span><br><span class="line"><span class="comment"># 重写实例对象的构造（初始化）方法，并调用父类实例属性的赋值</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 自定义实例方法，格式化打印实例属性stu_num的</span></span><br><span class="line">    </span><br><span class="line"><span class="comment"># 自定义实例方法，判断学号是否为既定值，并根据进行分类打印</span></span><br><span class="line">    </span><br><span class="line"><span class="comment"># 自定义实例方法，设置实例对象的学号为传入的值</span></span><br><span class="line">    </span><br><span class="line"><span class="comment"># 自定义实例方法，判断该类是否为Person类的子类</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">stu = Student(<span class="string">&#x27;小明&#x27;</span>, <span class="string">&#x27;男&#x27;</span>, <span class="number">90</span>, <span class="string">&#x27;数学&#x27;</span>)</span><br><span class="line"><span class="comment"># 调用speak方法 打印stu对应的值</span></span><br><span class="line">    </span><br><span class="line"><span class="comment"># 调用实例方法 鉴别学号是否为指定值</span></span><br><span class="line">    </span><br><span class="line"><span class="comment"># 调用实例方法 鉴别实例对象所属的类的父类是否为</span></span><br><span class="line">    </span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;******************&quot;</span>)</span><br><span class="line">stu_2 = Student(<span class="string">&#x27;小红&#x27;</span>, <span class="string">&#x27;女&#x27;</span>, <span class="number">89</span>, <span class="string">&#x27;英语&#x27;</span>)</span><br><span class="line"><span class="comment"># 调用实例方法 设置stu_2的学号为&#x27;2018040625&#x27;</span></span><br><span class="line">    </span><br><span class="line"><span class="comment"># 调用实例方法 打印stu_2对应的值</span></span><br><span class="line">    </span><br><span class="line"><span class="comment"># 调用实例方法 鉴别学号是否为指定值</span></span><br><span class="line">    </span><br></pre></td></tr></table></figure><h4 id="代码提交区"><a href="#代码提交区" class="headerlink" title="代码提交区"></a>代码提交区</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="comment"># 重写实例对象的构造（初始化）方法</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, name, sex</span>):</span></span><br><span class="line">        self.name = name</span><br><span class="line">        self.sex = sex</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 自定义实例方法，格式化打印实例属性name的值</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">speak</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;hello i am %s&#x27;</span> % self.name)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 自定义实例方法，占位作用</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sex</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span>(<span class="params">Person</span>):</span></span><br><span class="line">    <span class="comment"># 重写实例对象的构造（初始化）方法，并调用父类实例属性的赋值</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, name, sex, score, major</span>):</span></span><br><span class="line">        <span class="built_in">super</span>().__init__(name, sex)</span><br><span class="line">        self.score = score</span><br><span class="line">        self.major = major</span><br><span class="line">        self._stu_num = <span class="number">20211103</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 自定义实例方法，格式化打印实例属性stu_num的</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">speak</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;我的学号是%s,很高兴见到大家&#x27;</span> % self._stu_num)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 自定义实例方法，判断学号是否为既定值，并根据进行分类打印</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">identify_stu</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">if</span>(self._stu_num == <span class="number">20211103</span>):</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;我的分组已完成&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;请稍后,马上为你自动分组&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 自定义实例方法，设置实例对象的学号为传入的值</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">set_num</span>(<span class="params">self, new_num</span>):</span></span><br><span class="line">        self._stu_num = new_num</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 自定义实例方法，判断该类是否为Person类的子类</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">relation</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">issubclass</span>(Student, Person):</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;我的父类是Person&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;父类正在查询中.....&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    stu = Student(<span class="string">&#x27;小明&#x27;</span>, <span class="string">&#x27;男&#x27;</span>, <span class="number">90</span>, <span class="string">&#x27;数学&#x27;</span>)</span><br><span class="line">    <span class="comment"># 调用speak方法 打印stu对应的值</span></span><br><span class="line">    stu.speak()</span><br><span class="line">    <span class="comment"># 调用实例方法 鉴别学号是否为指定值</span></span><br><span class="line">    stu.identify_stu()</span><br><span class="line">    <span class="comment"># 调用实例方法 鉴别实例对象所属的类的父类是否为</span></span><br><span class="line">    stu.relation()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;******************&quot;</span>)</span><br><span class="line">    stu_2 = Student(<span class="string">&#x27;小红&#x27;</span>, <span class="string">&#x27;女&#x27;</span>, <span class="number">89</span>, <span class="string">&#x27;英语&#x27;</span>)</span><br><span class="line">    <span class="comment"># 调用实例方法 设置stu_2的学号为&#x27;2018040625&#x27;</span></span><br><span class="line">    stu_2._stu_num = <span class="number">20211103</span></span><br><span class="line">    <span class="comment"># 调用实例方法 打印stu_2对应的值</span></span><br><span class="line">    stu_2.speak()</span><br><span class="line">    <span class="comment"># 调用实例方法 鉴别学号是否为指定值</span></span><br><span class="line">    stu_2.identify_stu()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程练习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 类的高级函数(双下横线)</title>
      <link href="/2021/8ccd594d7e0f/"/>
      <url>/2021/8ccd594d7e0f/</url>
      
        <content type="html"><![CDATA[<h3 id="类的高级函数-双下横线"><a href="#类的高级函数-双下横线" class="headerlink" title="类的高级函数(双下横线)"></a>类的高级函数(双下横线)</h3><h4 id="str"><a href="#str" class="headerlink" title="__str__"></a><code>__str__</code></h4><h5 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h5><ul><li>如果定义了该函数, 当<code>print</code>当前实例化对象的时候, 会返回改函数的<code>return</code>信息</li></ul><h5 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__str__</span>(<span class="params">self</span>):</span></span><br><span class="line"><span class="keyword">return</span> str_type</span><br></pre></td></tr></table></figure><h5 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h5><ul><li>无</li></ul><h5 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h5><ul><li>一般返回对于该类的描述信息</li></ul><hr><h4 id="gatattr"><a href="#gatattr" class="headerlink" title="__gatattr__"></a><code>__gatattr__</code></h4><h5 id="介绍-1"><a href="#介绍-1" class="headerlink" title="介绍"></a>介绍</h5><ul><li>当调用的属性或方法不存在时,会返回该方法定义的信息</li></ul><h5 id="用法-1"><a href="#用法-1" class="headerlink" title="用法"></a>用法</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__gatattr__</span>(<span class="params">self, key</span>):</span></span><br><span class="line"><span class="built_in">print</span>(something...)</span><br></pre></td></tr></table></figure><h5 id="参数-1"><a href="#参数-1" class="headerlink" title="参数"></a>参数</h5><ul><li><code>key</code> : 调用任意不存在的属性名</li></ul><h5 id="返回值-1"><a href="#返回值-1" class="headerlink" title="返回值"></a>返回值</h5><ul><li>可以是任意类型也可以不进行返回</li></ul><h3 id="代码片段1"><a href="#代码片段1" class="headerlink" title="代码片段1"></a>代码片段1</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;this is a test class&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__getattr__</span>(<span class="params">self, key</span>):</span></span><br><span class="line">        <span class="comment"># print(&#x27;这个key:&#123;&#125;并不存在&#x27;.format(key))</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;这个key:&#123;&#125;并不存在&#x27;</span>.<span class="built_in">format</span>(key)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">t = Test()</span><br><span class="line"><span class="built_in">print</span>(t)</span><br><span class="line"><span class="comment"># print(t.a)</span></span><br><span class="line"><span class="built_in">print</span>(t.a)</span><br><span class="line"><span class="built_in">print</span>(t.b)</span><br></pre></td></tr></table></figure><hr><h4 id="setattr"><a href="#setattr" class="headerlink" title="__setattr__"></a><code>__setattr__</code></h4><h5 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h5><ul><li>拦截当前类中不存在的属性与值</li></ul><h5 id="用法-2"><a href="#用法-2" class="headerlink" title="用法"></a>用法</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__settattr__</span>(<span class="params">self, key, value</span>):</span></span><br><span class="line">self.__dict__[key] = value</span><br></pre></td></tr></table></figure><h5 id="参数-2"><a href="#参数-2" class="headerlink" title="参数"></a>参数</h5><ul><li><code>key</code> 当前的属性名</li><li><code>value</code> 当前的参数对应的值</li></ul><h5 id="返回值-2"><a href="#返回值-2" class="headerlink" title="返回值"></a>返回值</h5><ul><li>无</li></ul><hr><h4 id="call"><a href="#call" class="headerlink" title="__call__"></a><code>__call__</code></h4><h5 id="功能-1"><a href="#功能-1" class="headerlink" title="功能"></a>功能</h5><ul><li>本质是将一个类变成一个函数</li></ul><h5 id="用法-3"><a href="#用法-3" class="headerlink" title="用法"></a>用法</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__call__</span>(<span class="params">self, *args, **kwargs</span>):</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;call will start&#x27;</span>)</span><br></pre></td></tr></table></figure><h5 id="参数-3"><a href="#参数-3" class="headerlink" title="参数"></a>参数</h5><ul><li>可传任意参数</li></ul><h5 id="返回值-3"><a href="#返回值-3" class="headerlink" title="返回值"></a>返回值</h5><ul><li>与函数情况相同 可有可无</li></ul><h4 id="代码片段2"><a href="#代码片段2" class="headerlink" title="代码片段2"></a>代码片段2</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;this is a test class&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__getattr__</span>(<span class="params">self, key</span>):</span></span><br><span class="line">        <span class="comment"># print(&#x27;这个key:&#123;&#125;并不存在&#x27;.format(key))</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;这个key:&#123;&#125;并不存在&#x27;</span>.<span class="built_in">format</span>(key)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__setattr__</span>(<span class="params">self, key, value</span>):</span></span><br><span class="line">        <span class="comment"># print(key, value)</span></span><br><span class="line">        <span class="comment"># if key not in self.__dict__:</span></span><br><span class="line">        self.__dict__[key] = value</span><br><span class="line">        <span class="built_in">print</span>(self.__dict__)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__call__</span>(<span class="params">self, a</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;call func will start&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(a)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">t = Test()</span><br><span class="line"><span class="built_in">print</span>(t)</span><br><span class="line"><span class="comment"># print(t.a)</span></span><br><span class="line"><span class="built_in">print</span>(t.a)</span><br><span class="line"><span class="built_in">print</span>(t.b)</span><br><span class="line">t.name = <span class="string">&#x27;小慕&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(t.name)</span><br><span class="line">t(<span class="string">&#x27;dewei&#x27;</span>)</span><br><span class="line"><span class="comment"># t.a.b.c 链式操作</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test2</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, attr=<span class="string">&#x27;&#x27;</span></span>):</span></span><br><span class="line">        self.__attr = attr</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__call__</span>(<span class="params">self, name</span>):</span></span><br><span class="line">        <span class="comment"># print(&#x27;key is &#123;&#125;&#x27;.format(self.__attr))</span></span><br><span class="line">        <span class="keyword">return</span> name</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__getattr__</span>(<span class="params">self, key</span>):</span></span><br><span class="line">        <span class="keyword">if</span> self.__attr:</span><br><span class="line">            key = <span class="string">&#x27;&#123;&#125;.&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(self.__attr, key)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            key = key</span><br><span class="line">        <span class="built_in">print</span>(key)</span><br><span class="line">        <span class="keyword">return</span> Test2(key)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">t2 = Test2()</span><br><span class="line">name = t2.a.b.c(<span class="string">&#x27;dewei&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(name)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">result = t2.name.age.sex(<span class="string">&#x27;ok&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 对象和异常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 类的多重继承</title>
      <link href="/2021/7af2758498e2/"/>
      <url>/2021/7af2758498e2/</url>
      
        <content type="html"><![CDATA[<h3 id="类的多重继承"><a href="#类的多重继承" class="headerlink" title="类的多重继承"></a>类的多重继承</h3><h5 id="什么是多重继承"><a href="#什么是多重继承" class="headerlink" title="什么是多重继承"></a>什么是多重继承</h5><ul><li>可以继承多个基(父)类</li></ul><h5 id="多重继承的方法"><a href="#多重继承的方法" class="headerlink" title="多重继承的方法"></a>多重继承的方法</h5><ul><li><p><code>class Child(Parent1,  Parent2, Parent3...)</code></p></li><li><p>将被继承的类放入子类的参数位中,用逗号隔开</p></li><li><p>从左向右依次继承</p></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1 2个父类</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Tool</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">work</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;tool work&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">car</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;car will run&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Food</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">work</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;food work&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">cake</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;i like cake&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 继承父类的子类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>(<span class="params">Food, Tool</span>):</span>  <span class="comment"># 最左边的类先被继承,如果有多个类,则最开始的那个类发生作用</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    p = Person()</span><br><span class="line">    p_car = p.car()</span><br><span class="line">    p_cake = p.cake()</span><br><span class="line">    <span class="built_in">print</span>(p_car)</span><br><span class="line">    <span class="built_in">print</span>(p_cake)</span><br><span class="line">    p_work = p.work()</span><br><span class="line">    <span class="built_in">print</span>(p_work)</span><br><span class="line">    <span class="built_in">print</span>(Person.__mro__)</span><br><span class="line">    </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 对象和异常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 类的多态</title>
      <link href="/2021/95f82be06496/"/>
      <url>/2021/95f82be06496/</url>
      
        <content type="html"><![CDATA[<h3 id="类的多态"><a href="#类的多态" class="headerlink" title="类的多态"></a>类的多态</h3><h4 id="什么是类的多态"><a href="#什么是类的多态" class="headerlink" title="什么是类的多态"></a>什么是类的多态</h4><ul><li>同一个功能的多状变化</li></ul><h4 id="多态的用法"><a href="#多态的用法" class="headerlink" title="多态的用法"></a>多态的用法</h4><ul><li><code>子类中重写父类的方法</code></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1 书写一个父类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">XiaomuFather</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">talk</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;小慕的爸爸说了一句话&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">jump</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;大家都可以跳&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2 书写一个子类,并且继承一个父类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">XiaomuBrother</span>(<span class="params">XiaomuFather</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;小慕哥哥在奔跑着&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">talk</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;小慕哥哥在说话&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 为什么要去多态</span></span><br><span class="line"><span class="comment"># 为什么要去继承父类</span></span><br><span class="line"><span class="comment"># 答案: 为了已经写好的类中的函数</span></span><br><span class="line"><span class="comment"># 为了保留子类中某个和父类名称一样的函数的功能, 这时候, 我们就用到了类的多态</span></span><br><span class="line"><span class="comment"># 可以帮助我们保留子类中的函数功能</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Xiaomu</span>(<span class="params">XiaomuFather</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">talk</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;haha 小慕也可以说自己的观点&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    xiaomu_brother = XiaomuBrother()</span><br><span class="line">    xiaomu_brother.run()</span><br><span class="line">    xiaomu_brother.talk()</span><br><span class="line">    xiaomu_brother.jump()</span><br><span class="line">    father = XiaomuFather()</span><br><span class="line">    father.talk()</span><br><span class="line">    xiaomu = Xiaomu()</span><br><span class="line">    xiaomu.talk()</span><br><span class="line">    xiaomu.jump()</span><br><span class="line">    </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 对象和异常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 类的super函数</title>
      <link href="/2021/c806169e5392/"/>
      <url>/2021/c806169e5392/</url>
      
        <content type="html"><![CDATA[<h3 id="类的super函数"><a href="#类的super函数" class="headerlink" title="类的super函数"></a>类的super函数</h3><h4 id="super函数的作用"><a href="#super函数的作用" class="headerlink" title="super函数的作用"></a>super函数的作用</h4><ul><li><code>python</code>子类<code>继承父类</code>的<code>方法</code>而使用的<code>关键字</code>.<ul><li>当<strong>子类继承父类</strong>后 ,就可以<code>使用</code><strong>父类的方法</strong></li></ul></li></ul><h4 id="super函数的用法"><a href="#super函数的用法" class="headerlink" title="super函数的用法"></a>super函数的用法</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Parent</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;hello i am parent&#x27;</span>)</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Child</span>(<span class="params">Parent</span>):</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;hello i am child&#x27;</span>)</span><br><span class="line">        <span class="built_in">super</span>(Child, self).__init__()  <span class="comment">#python3 括弧内的参数可以省略</span></span><br><span class="line">        <span class="comment">#      当前类  类的实例</span></span><br></pre></td></tr></table></figure><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Parent</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, p</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;hello i am parent %s &#x27;</span> % p)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Child</span>(<span class="params">Parent</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, c, p</span>):</span></span><br><span class="line">        <span class="comment"># super(Child, self).__init__(p)</span></span><br><span class="line">        <span class="built_in">super</span>().__init__(p)</span><br><span class="line">        <span class="comment"># super(Child, self).__init__(&#x27;parent&#x27;) 也可以</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;hello i am child %s &#x27;</span> % c)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    c = Child(c=<span class="string">&#x27;Child&#x27;</span>, p=<span class="string">&#x27;Parent&#x27;</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 对象和异常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 类的继承</title>
      <link href="/2021/9c6f24dde47e/"/>
      <url>/2021/9c6f24dde47e/</url>
      
        <content type="html"><![CDATA[<h3 id="类的继承"><a href="#类的继承" class="headerlink" title="类的继承"></a>类的继承</h3><h4 id="什么是继承"><a href="#什么是继承" class="headerlink" title="什么是继承"></a>什么是继承</h4><ul><li>通过继承<code>基类</code>来得到<code>基类</code>的功能</li><li>所以我们把<code>被继承的类</code>称作<strong>父类或基类</strong>,<code>继承者</code>被称为子类</li></ul><h4 id="父-基-类与子类"><a href="#父-基-类与子类" class="headerlink" title="父(基)类与子类"></a>父(基)类与子类</h4><ul><li><strong>子类</strong>拥有<code>父类</code>所有的<code>属性和方法</code></li><li>父类<code>不具备</code>子类自有的<code>属性和方法</code></li></ul><h4 id="继承的用法"><a href="#继承的用法" class="headerlink" title="继承的用法"></a>继承的用法</h4><ul><li>定义子类时,将父类传入子类参数内</li><li>子类实例化可以调用自己与父类的函数与变量</li><li>父类无法调用子类的函数与变量</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Parent</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, name, sex</span>):</span></span><br><span class="line">        self.name = name</span><br><span class="line">        self.sex = sex</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">talk</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">f&#x27;<span class="subst">&#123;self.name&#125;</span> are walking&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">is_sex</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">if</span> self.sex == <span class="string">&#x27;boy&#x27;</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">f&#x27;<span class="subst">&#123;self.name&#125;</span> is a boy&#x27;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">f&#x27;<span class="subst">&#123;self.name&#125;</span> is a girl&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ChildOne</span>(<span class="params">Parent</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">play_football</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">f&#x27;<span class="subst">&#123;self.name&#125;</span> are playing football&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ChildTwo</span>(<span class="params">Parent</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">play_pingpong</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span>  <span class="string">f&#x27;<span class="subst">&#123;self.name&#125;</span> are playing pingpong&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">c_one = ChildOne(name=<span class="string">&#x27;小慕&#x27;</span>, sex=<span class="string">&#x27;boy&#x27;</span>)</span><br><span class="line">result = c_one.play_football()</span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line">result = c_one.talk()</span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">c_two = ChildTwo(name=<span class="string">&#x27;小云&#x27;</span>, sex=<span class="string">&#x27;girl&#x27;</span>)</span><br><span class="line">result = c_two.play_pingpong()</span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line">result = c_two.talk()</span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line"></span><br><span class="line">p = Parent(name=<span class="string">&#x27;小慕爸爸&#x27;</span>, sex=<span class="string">&#x27;boy&#x27;</span>)</span><br><span class="line">result = p.talk()</span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line">result = p.is_sex()</span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line"><span class="comment"># result = p.play_pingpong()</span></span><br><span class="line"><span class="comment"># print(result)</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 对象和异常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 类的常用装饰器</title>
      <link href="/2021/8c9c5da11bdf/"/>
      <url>/2021/8c9c5da11bdf/</url>
      
        <content type="html"><![CDATA[<h3 id="类的常用装饰器"><a href="#类的常用装饰器" class="headerlink" title="类的常用装饰器"></a>类的常用装饰器</h3><h4 id="classmethod"><a href="#classmethod" class="headerlink" title="classmethod"></a>classmethod</h4><h5 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h5><ul><li>将类函数可以不经过实例化而直接被调用</li></ul><h5 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@classmethod</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span>(<span class="params">cls, ...</span>):</span></span><br><span class="line">do</span><br></pre></td></tr></table></figure><h5 id="参数介绍"><a href="#参数介绍" class="headerlink" title="参数介绍"></a>参数介绍</h5><ul><li><code>cls</code>替代普通类函数中的<code>self</code>,</li><li><code>变为cls</code>,代表当前操作的是类</li></ul><hr><h4 id="staticmethod"><a href="#staticmethod" class="headerlink" title="staticmethod"></a>staticmethod</h4><h5 id="功能-1"><a href="#功能-1" class="headerlink" title="功能"></a>功能</h5><ul><li>将类函数可以不经过实例化而直接被调用,<br>被改装饰器调用的函数不许传递self或cls函数,<br>且无法在该函数内调用其他类函数或类变量</li></ul><h5 id="用法-1"><a href="#用法-1" class="headerlink" title="用法"></a>用法</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@staticmethod</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span>(<span class="params">...</span>):</span></span><br><span class="line">do</span><br></pre></td></tr></table></figure><h5 id="参数介绍-1"><a href="#参数介绍-1" class="headerlink" title="参数介绍"></a>参数介绍</h5><ul><li>函数体内无cls或self参数</li></ul><hr><h4 id="property"><a href="#property" class="headerlink" title="property"></a>property</h4><h5 id="用法-2"><a href="#用法-2" class="headerlink" title="用法"></a>用法</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@property</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span>(<span class="params">self</span>):</span></span><br><span class="line">do</span><br></pre></td></tr></table></figure><h5 id="参数介绍-2"><a href="#参数介绍-2" class="headerlink" title="参数介绍"></a>参数介绍</h5><ul><li>无重要参数说明</li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, a</span>):</span></span><br><span class="line">        self.a = a</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;run&#x27;</span>)</span><br><span class="line">        self.dump()</span><br><span class="line">        self.sleep()</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">dump</span>(<span class="params">cls</span>):</span></span><br><span class="line">       <span class="built_in">print</span>(<span class="string">&#x27;dump&#x27;</span>)</span><br><span class="line">       <span class="comment"># cls.run()</span></span><br><span class="line">       <span class="comment"># 无法在一个classmethod函数中调用self函数</span></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sleep</span>():</span></span><br><span class="line">        <span class="comment"># self.dump()</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;i want sleep&#x27;</span>)</span><br><span class="line"></span><br><span class="line">t = Test(<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line">t.run()</span><br><span class="line"><span class="comment"># Test.dump()</span></span><br><span class="line"><span class="comment"># print(&#x27;------&#x27;)</span></span><br><span class="line"><span class="comment"># Test.sleep()</span></span><br><span class="line"><span class="comment"># t.sleep()</span></span><br><span class="line"><span class="comment"># t.dump()</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test1</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, name</span>):</span></span><br><span class="line">        self.__name = name</span><br><span class="line"></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">name</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> self.__name</span><br><span class="line"></span><br><span class="line"><span class="meta">    @name.setter</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">name</span>(<span class="params">self, value</span>):</span></span><br><span class="line">        self.__name = value</span><br><span class="line"></span><br><span class="line">t1 = Test1(name=<span class="string">&#x27;dewei&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(t1.name)</span><br><span class="line"><span class="comment"># t1.name = &#x27;小慕&#x27;</span></span><br><span class="line"><span class="comment"># print(t1.name)</span></span><br><span class="line">t1.name = <span class="string">&#x27;小慕&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(t1.name)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 对象和异常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 装饰器</title>
      <link href="/2021/8ac31b97c4f0/"/>
      <url>/2021/8ac31b97c4f0/</url>
      
        <content type="html"><![CDATA[<h3 id="装饰器"><a href="#装饰器" class="headerlink" title="装饰器"></a>装饰器</h3><h4 id="什么是装饰器"><a href="#什么是装饰器" class="headerlink" title="什么是装饰器"></a>什么是装饰器</h4><ul><li>也是一种函数</li><li>可以接受函数作为参数</li><li>可以返回函数</li><li>接收一个函数,内部对其处理,然后返回一个新函数,动态的增强函数功能</li><li>将<code>c函数</code>在<code>a函数</code>中执行,在<code>a函数</code>中可以<strong>选择执行</strong>或<strong>不执行</strong><code>c函数</code>,也可以对<code>c函数</code>的<strong>结果</strong>进行<strong>二次加工处理</strong></li></ul><h4 id="装饰器的定义"><a href="#装饰器的定义" class="headerlink" title="装饰器的定义"></a>装饰器的定义</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">out</span>(<span class="params">func_args</span>):</span> 外围函数</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">inter</span>(<span class="params">*args, **kwargs</span>):</span> 内嵌函数</span><br><span class="line">reture func_args(*args, **kwargs)</span><br><span class="line">    <span class="keyword">return</span> inter   外围函数返回内嵌函数</span><br></pre></td></tr></table></figure><h4 id="装饰器的用法"><a href="#装饰器的用法" class="headerlink" title="装饰器的用法"></a>装饰器的用法</h4><ul><li><p>将<code>被调用的函数</code>直接作为<code>参数</code><strong>传入</strong><code>装饰器</code>的<code>外围函数括弧</code></p></li><li><p>将装饰器与被调用函数绑定在一起</p></li><li><p><code>@符号 + 装饰器函数</code>放在被调用函数的上一行 , <code>被调用的函数</code><strong>正常定义</strong> , <code>只需要直接调用</code><strong>被执行函数</strong>即可</p></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check_str</span>(<span class="params">func</span>):</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;func:&#x27;</span>, func)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">inner</span>(<span class="params">*args, **kwargs</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;args:&#x27;</span>, args, kwargs)</span><br><span class="line">        result = func(*args, **kwargs)</span><br><span class="line">        <span class="keyword">if</span> result == <span class="string">&#x27;ok&#x27;</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;result is %s&#x27;</span> % result</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;result is failed:%s&#x27;</span> % result</span><br><span class="line">    <span class="keyword">return</span> inner</span><br><span class="line"></span><br><span class="line"><span class="meta">@check_str</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span>(<span class="params">data</span>):</span></span><br><span class="line">    <span class="keyword">return</span> data</span><br><span class="line"></span><br><span class="line">result = test(data=<span class="string">&#x27;no&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line"></span><br><span class="line">result = test(<span class="string">&#x27;ok&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 对象和异常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python中的封装</title>
      <link href="/2021/3ef525f29f3e/"/>
      <url>/2021/3ef525f29f3e/</url>
      
        <content type="html"><![CDATA[<h3 id="Python中的封装"><a href="#Python中的封装" class="headerlink" title="Python中的封装"></a>Python中的封装</h3><h4 id="python中的封装概念"><a href="#python中的封装概念" class="headerlink" title="python中的封装概念"></a>python中的封装概念</h4><ul><li><p>将<code>不对外</code>的<code>私有属性或方法</code>通过<strong>可对外使用的函数</strong>而使用</p><p>​        (类中<code>定义私有的</code>,只有通过类<code>内部使用</code>,<strong>外部无法访问</strong>)</p></li><li><p>这样做的<strong>主要原因</strong>:<code>保护隐私</code>, <code>明确区分内外</code></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 对象和异常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 阶段编程练习(十四)</title>
      <link href="/2021/65df7f3fb793/"/>
      <url>/2021/65df7f3fb793/</url>
      
        <content type="html"><![CDATA[<h3 id="编程练习"><a href="#编程练习" class="headerlink" title="编程练习"></a>编程练习</h3><blockquote><p>自定义一个交通工具类(Vehicle)，并根据提示对该类进行进一步封装，使其拥有工具类型、速度、体积等属性值。通过自定义实例方法实现交通工具的前移、速度设置、获取当前速度、加速行驶、减速行驶、实例信息展示、实例类型判别等功能。</p><p>效果图如下：</p><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-10-28/1.jpg" alt="1"></p></blockquote><h4 id="任务"><a href="#任务" class="headerlink" title="任务"></a>任务</h4><ol><li><p>自定义一个交通工具类(Vehicle)</p></li><li><p>设置类属性trans_type（默认值为SUV）和实例属性速度speed（int 类型，单位为 km/h）、体积size（tuple类型，单位为米。）</p></li><li><p>自定义方法 show_info( )，打印实例的所属类型和速度、体积的值；</p></li><li><p>自定义实例方法如下：</p><ol><li>定义move( )方法，实现打印”我已向前移动了50米”</li><li>定义set_speed(new_speed)方法，设置对应实例的速度为new_speed km/h</li><li>定义get_speed()方法，如果（2）中设置了速度值则打印出来，打印格式为”我的时速为：设置的速度值 km/h”</li><li>定义speed_up()方法，设置每次调用时实例的速度都增加10km/h，并打印”我的速度由xx km/提升到了xx km/h”</li><li>定义speed_down()方法，设置每次调用时实例的速度都降低15km/h，并打印”我的速度由xx km/下降到了xx km/h”</li></ol></li><li><p>自定义方法 transport_identify( )，判断实例的trans_type属性是否为SUV。若是则打印”类型匹配”，反之则打印”类型不匹配”</p></li><li><p>初始化实例对象tool_1，并根据上述效果图调用对应方法</p></li></ol><h4 id="任务提示"><a href="#任务提示" class="headerlink" title="任务提示"></a>任务提示</h4><ul><li>类的初始化方法中所传参数size是元组类型，直接传入实例的长，宽，高即可，如size=(10,10,10)</li></ul><h4 id="初始代码"><a href="#初始代码" class="headerlink" title="初始代码"></a>初始代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Vehicle</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line"><span class="comment"># 自定义Vehicle类属性</span></span><br><span class="line">    </span><br><span class="line"><span class="comment"># 自定义实例的初始化方法</span></span><br><span class="line">    </span><br><span class="line"><span class="comment"># 自定义实例方法show_info，打印实例的速度和体积</span></span><br><span class="line">    </span><br><span class="line"><span class="comment"># 自定义实例方法move,打印“我已向前移动了50米”</span></span><br><span class="line">    </span><br><span class="line"><span class="comment"># 自定义实例方法set_speed，设置对应的速度值</span></span><br><span class="line">    </span><br><span class="line"><span class="comment"># 自定义实例方法get_speed，打印当前的速度值</span></span><br><span class="line">    </span><br><span class="line"><span class="comment"># 自定义实例方法speed_up，实现对实例的加速</span></span><br><span class="line">    </span><br><span class="line"><span class="comment"># 自定义实例方法speed_down，实现对实例的减速</span></span><br><span class="line">    </span><br><span class="line"><span class="comment"># 自定义实例方法transport_identify，实现对实例</span></span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">tool_1 = Vehicle(<span class="number">20</span>, (<span class="number">3.6</span>, <span class="number">1.9</span>, <span class="number">1.75</span>))</span><br><span class="line">    </span><br><span class="line"><span class="comment"># 调用实例方法 打印实例的速度和体积</span></span><br><span class="line">    </span><br><span class="line"><span class="comment"># 调用实例方法 实现实例的前移</span></span><br><span class="line">    </span><br><span class="line">tool_1.set_speed(<span class="number">40</span>)</span><br><span class="line"><span class="comment"># 调用实例方法 打印当前速度</span></span><br><span class="line">    </span><br><span class="line"><span class="comment"># 调用实例方法 对实例进行加速</span></span><br><span class="line">    </span><br><span class="line"><span class="comment"># 调用实例方法 对实例进行减速</span></span><br><span class="line">    </span><br><span class="line"><span class="comment"># 调用实例方法 判断当前实例的类型</span></span><br></pre></td></tr></table></figure><h4 id="代码提交区"><a href="#代码提交区" class="headerlink" title="代码提交区"></a>代码提交区</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Vehicle</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="comment"># 自定义Vehicle类属性</span></span><br><span class="line">    trans_type = <span class="string">&#x27;SUV&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 自定义实例的初始化方法</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, speed, size</span>):</span></span><br><span class="line">        self.speed = speed</span><br><span class="line">        self.size = size</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 自定义实例方法show_info，打印实例的速度和体积</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_info</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;所属类型:&#123;&#125;,速度是&#123;&#125;km/h,体积是&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(self.trans_type, self.speed, self.size))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 自定义实例方法move,打印“我已向前移动了50米”</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">move</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;我已向前移动了50米&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 自定义实例方法set_speed，设置对应的速度值</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">set_speed</span>(<span class="params">self, speed</span>):</span></span><br><span class="line">        self.speed = speed</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 自定义实例方法get_speed，打印当前的速度值</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_speed</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;我的时速为:&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(self.speed))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 自定义实例方法speed_up，实现对实例的加速</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">speed_up</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.__new_speed = self.speed + <span class="number">10</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;我的速度由&#123;&#125;km/h,提升到了&#123;&#125;km/h&#x27;</span>.<span class="built_in">format</span>(self.speed,self.__new_speed))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 自定义实例方法speed_down，实现对实例的减速</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">speed_down</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.__speed = self.speed - <span class="number">15</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;我的速度由&#123;&#125;km/h,下降到了&#123;&#125;km/h&#x27;</span>.<span class="built_in">format</span>(self.speed, self.__speed))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 自定义实例方法transport_identify，实现对实例</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">transport_identify</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">isinstance</span>(self, Vehicle):</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;类型匹配&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;类型不匹配&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    tool_1 = Vehicle(<span class="number">20</span>, (<span class="number">3.6</span>, <span class="number">1.9</span>, <span class="number">1.75</span>))</span><br><span class="line"><span class="comment"># 调用实例方法 打印实例的速度和体积</span></span><br><span class="line">    tool_1.show_info()</span><br><span class="line"><span class="comment"># 调用实例方法 实现实例的前移</span></span><br><span class="line">    tool_1.move()</span><br><span class="line">    tool_1.set_speed(<span class="number">40</span>)</span><br><span class="line"><span class="comment"># 调用实例方法 打印当前速度</span></span><br><span class="line">    tool_1.get_speed()</span><br><span class="line"><span class="comment"># 调用实例方法 对实例进行加速</span></span><br><span class="line">    tool_1.speed_up()</span><br><span class="line"><span class="comment"># 调用实例方法 对实例进行减速</span></span><br><span class="line">    tool_1.speed_down()</span><br><span class="line"><span class="comment"># 调用实例方法 判断当前实例的类型</span></span><br><span class="line">    tool_1.transport_identify()</span><br></pre></td></tr></table></figure><h4 id="结果检验"><a href="#结果检验" class="headerlink" title="结果检验"></a>结果检验</h4><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">C:\<span class="title">Python39</span>\<span class="title">python.exe</span> <span class="title">C</span>:/<span class="title">Users</span>/<span class="title">admin</span>/<span class="title">PycharmProjects</span>/<span class="title">python_object</span>/<span class="title">hello.py</span></span></span><br><span class="line"><span class="function">所属类型:<span class="title">SUV</span>,速度是20<span class="title">km</span>/<span class="title">h</span>,体积是(3.6, 1.9, 1.75)</span></span><br><span class="line"><span class="function">我已向前移动了50米</span></span><br><span class="line"><span class="function">我的时速为:40</span></span><br><span class="line"><span class="function">我的速度由40<span class="title">km</span>/<span class="title">h</span>,提升到了50<span class="title">km</span>/<span class="title">h</span></span></span><br><span class="line"><span class="function">我的速度由40<span class="title">km</span>/<span class="title">h</span>,下降到了25<span class="title">km</span>/<span class="title">h</span></span></span><br><span class="line"><span class="function">类型匹配</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">进程已结束，退出代码为 0</span></span><br><span class="line"><span class="function"></span></span><br></pre></td></tr></table></figure><h5 id="学霸答案区"><a href="#学霸答案区" class="headerlink" title="学霸答案区"></a>学霸答案区</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Vehicle</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="comment"># 自定义Vehicle类属性</span></span><br><span class="line">    trans_type = <span class="string">&#x27;SUV&#x27;</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment"># 自定义实例的初始化方法</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self,speed,size</span>):</span></span><br><span class="line">        self.speed = speed</span><br><span class="line">        self.size = size</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 自定义实例方法show_info，打印实例的速度和体积</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_info</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;速度：&#123;0&#125;km/h,体积：&#123;1&#125;&#x27;</span>.<span class="built_in">format</span>(self.speed,self.size))</span><br><span class="line">    <span class="comment"># 自定义实例方法move,打印“我已向前移动了50米”</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">move</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;我已经向前移动了50米&#x27;</span>)</span><br><span class="line">    <span class="comment"># 自定义实例方法set_speed，设置对应的速度值</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">set_speed</span>(<span class="params">self,speed</span>):</span></span><br><span class="line">        self.speed = speed</span><br><span class="line">    <span class="comment"># 自定义实例方法get_speed，打印当前的速度值</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_speed</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;我的时速为：&#123;0&#125;km/h&#x27;</span>.<span class="built_in">format</span>(self.speed))</span><br><span class="line">    <span class="comment"># 自定义实例方法speed_up，实现对实例的加速</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">speed_up</span>(<span class="params">self</span>):</span></span><br><span class="line">        speed2 = self.speed+<span class="number">10</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;我的速度由&#123;0&#125;km/h提升到了&#123;1&#125;km/h&#x27;</span>.<span class="built_in">format</span>(self.speed,speed2))</span><br><span class="line">        self.speed = speed2</span><br><span class="line">    <span class="comment"># 自定义实例方法speed_down，实现对实例的减速</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">speed_down</span>(<span class="params">self</span>):</span></span><br><span class="line">        speed3 = self.speed - <span class="number">15</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;我的速度由&#123;0&#125;km/h下降到了&#123;1&#125;km/h&#x27;</span>.<span class="built_in">format</span>(self.speed,speed3))</span><br><span class="line">        self.speed = speed3</span><br><span class="line">    <span class="comment"># 自定义实例方法transport_identify，实现对实例所属类型的判断</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">transport_identify</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">isinstance</span>(self,Vehicle):</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;类型匹配&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;类型不匹配&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    tool_1 = Vehicle(<span class="number">20</span>, (<span class="number">3.6</span>, <span class="number">1.9</span>, <span class="number">1.75</span>))</span><br><span class="line"> </span><br><span class="line">    <span class="comment"># 调用实例方法 打印实例的速度和体积</span></span><br><span class="line">    tool_1.show_info()</span><br><span class="line">    <span class="comment"># 调用实例方法 实现实例的前移</span></span><br><span class="line">    tool_1.move()</span><br><span class="line"> </span><br><span class="line">    tool_1.set_speed(<span class="number">40</span>)</span><br><span class="line">    <span class="comment"># 调用实例方法 打印当前速度</span></span><br><span class="line">    tool_1.get_speed()</span><br><span class="line">    <span class="comment"># 调用实例方法 对实例进行加速</span></span><br><span class="line">    tool_1.speed_up()</span><br><span class="line">    <span class="comment"># 调用实例方法 对实例进行减速</span></span><br><span class="line">    tool_1.speed_down()</span><br><span class="line">    <span class="comment"># 调用实例方法 判断当前实例的类型</span></span><br><span class="line">    tool_1.transport_identify()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程练习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 私有函数和私有变量</title>
      <link href="/2021/a85b5a2e7b47/"/>
      <url>/2021/a85b5a2e7b47/</url>
      
        <content type="html"><![CDATA[<h3 id="私有函数和私有变量"><a href="#私有函数和私有变量" class="headerlink" title="私有函数和私有变量"></a>私有函数和私有变量</h3><h4 id="什么是私有函数和私有变量"><a href="#什么是私有函数和私有变量" class="headerlink" title="什么是私有函数和私有变量"></a>什么是私有函数和私有变量</h4><ul><li>无法被实例化后的对象调用的类中的函数与变量</li><li>类的内部可以调用私有函数与变量</li><li>只希望类内部业务调用使用,不希望被使用者使用</li></ul><h4 id="私有函数与私有变量的定义方法"><a href="#私有函数与私有变量的定义方法" class="headerlink" title="私有函数与私有变量的定义方法"></a>私有函数与私有变量的定义方法</h4><ul><li>在一个变量或函数前添加<code>__</code>(2个下横线),变量或函数名后边无需添加</li></ul> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, name</span>):</span></span><br><span class="line">self.name = name</span><br><span class="line">self.__age = <span class="number">33</span>  <span class="comment"># 私有</span></span><br><span class="line">   <span class="function"><span class="keyword">def</span> <span class="title">dump</span>(<span class="params">self</span>):</span></span><br><span class="line">   <span class="built_in">print</span>(self.name, self.__age)  <span class="comment"># 私有</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__cry</span>(<span class="params">self</span>):</span>  <span class="comment"># 私有</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;I want cry&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cat</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    __cat_type = <span class="string">&#x27;cat&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, name, sex</span>):</span></span><br><span class="line">        self.name = name</span><br><span class="line">        self.__sex = sex</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span>(<span class="params">self</span>):</span></span><br><span class="line">        result = self.__run()</span><br><span class="line">        <span class="built_in">print</span>(result)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__run</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">f&#x27;<span class="subst">&#123;self.__cat_type&#125;</span>,小猫<span class="subst">&#123;self.name&#125;</span><span class="subst">&#123;self.__sex&#125;</span>开心的奔跑着&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">dump</span>(<span class="params">self</span>):</span></span><br><span class="line">        result = self.__dump()</span><br><span class="line">        <span class="built_in">print</span>(result)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__dump</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">f&#x27;<span class="subst">&#123;self.__cat_type&#125;</span>小猫<span class="subst">&#123;self.name&#125;</span><span class="subst">&#123;self.__sex&#125;</span>开心的跳着&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">cat = Cat(name=<span class="string">&#x27;米粒儿&#x27;</span>, sex=<span class="string">&#x27;boy&#x27;</span>)</span><br><span class="line">cat.run()</span><br><span class="line">cat.dump()</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">dir</span>(cat))</span><br><span class="line"><span class="comment"># print(cat._Cat__dump())</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 对象和异常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 对象的生命周期</title>
      <link href="/2021/3f708f9e3b70/"/>
      <url>/2021/3f708f9e3b70/</url>
      
        <content type="html"><![CDATA[<h3 id="对象的生命周期"><a href="#对象的生命周期" class="headerlink" title="对象的生命周期"></a>对象的生命周期</h3><ul><li>对象的生命周期</li></ul><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>内存中分配一个内存块</td><td>实例化<code>__init__:</code>对象生命的开始</td></tr><tr><td></td><td></td></tr><tr><td>从内存中释放这个内存块</td><td><code>__del__</code>: 删除对象</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 对象和异常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 类的构造函数</title>
      <link href="/2021/e1f702148634/"/>
      <url>/2021/e1f702148634/</url>
      
        <content type="html"><![CDATA[<h3 id="类的构造函数"><a href="#类的构造函数" class="headerlink" title="类的构造函数"></a>类的构造函数</h3><ul><li>类中的一种默认函数,用来将类实例化的同时, 将参数传入类中</li></ul><h4 id="构造函数的创建"><a href="#构造函数的创建" class="headerlink" title="构造函数的创建"></a>构造函数的创建</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, a, b</span>)</span></span><br><span class="line"><span class="function"><span class="title">self</span>.<span class="title">a</span> = <span class="title">a</span></span></span><br><span class="line"><span class="function">    <span class="title">self</span>.<span class="title">b</span> = <span class="title">b</span></span></span><br></pre></td></tr></table></figure><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sleep</span>(<span class="params">name</span>):</span></span><br><span class="line">   <span class="keyword">return</span> name</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, name, age=<span class="literal">None</span></span>):</span></span><br><span class="line">        self.name = name</span><br><span class="line">        self.age = age</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;self.name&#125;</span>在奔跑&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">jump</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;self.name&#125;</span>在跳跃&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">work</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.run()</span><br><span class="line">        self.jump()</span><br><span class="line">        <span class="comment"># def sleep(name):</span></span><br><span class="line">        <span class="comment">#     return name</span></span><br><span class="line">        <span class="comment"># result = sleep(self.name)</span></span><br><span class="line">        <span class="comment"># print(&#x27;sleep result is&#x27;, result)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">xiaomu = Person(name=<span class="string">&#x27;小慕&#x27;</span>,age=<span class="number">10</span>)</span><br><span class="line">xiaomu.name = <span class="string">&#x27;xiaomu&#x27;</span></span><br><span class="line">xiaomu.jump()</span><br><span class="line"></span><br><span class="line">dewei = Person(name=<span class="string">&#x27;dewei&#x27;</span>)</span><br><span class="line">dewei.jump()</span><br><span class="line"></span><br><span class="line">dewei.top = <span class="number">174</span></span><br><span class="line"><span class="built_in">print</span>(dewei.top)</span><br><span class="line"><span class="comment"># print(xiaomu.top)</span></span><br><span class="line"><span class="built_in">print</span>(dewei.age)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;--------&#x27;</span>)</span><br><span class="line">xiaomu.work()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 对象和异常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 类的参数self</title>
      <link href="/2021/1e1c97e328e3/"/>
      <url>/2021/1e1c97e328e3/</url>
      
        <content type="html"><![CDATA[<h3 id="类的参数self"><a href="#类的参数self" class="headerlink" title="类的参数self"></a>类的参数self</h3><ul><li><code>self</code>是类函数中的必传参数, 且必须放在第一个参数位置</li><li><code>self</code>是一个变量,他代表实例化的变量本身</li><li><code>self</code>可以直接通过定义点来定义一个类变量    <code>self.name = &#39;dewei&#39;</code></li><li>self中的变量与含有self参数的函数可以在类中的任何一个函数内随意调用</li><li>非函数中定义的变量在定义的时候不用self</li></ul><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sleep</span>(<span class="params">name</span>):</span></span><br><span class="line">   <span class="keyword">return</span> name</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    name = <span class="literal">None</span></span><br><span class="line">    age = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;self.name&#125;</span>在奔跑&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">jump</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;self.name&#125;</span>在跳跃&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">work</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.run()</span><br><span class="line">        self.jump()</span><br><span class="line">        <span class="comment"># def sleep(name):</span></span><br><span class="line">        <span class="comment">#     return name</span></span><br><span class="line">        result = sleep(self.name)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;sleep result is&#x27;</span>, result)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">xiaomu = Person()</span><br><span class="line">xiaomu.name = <span class="string">&#x27;小慕&#x27;</span></span><br><span class="line">xiaomu.jump()</span><br><span class="line"></span><br><span class="line">dewei = Person()</span><br><span class="line">dewei.jump()</span><br><span class="line"></span><br><span class="line">dewei.top = <span class="number">174</span></span><br><span class="line"><span class="built_in">print</span>(dewei.top)</span><br><span class="line"><span class="comment"># print(xiaomu.top)</span></span><br><span class="line"><span class="built_in">print</span>(dewei.age)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;--------&#x27;</span>)</span><br><span class="line">xiaomu.work()</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 对象和异常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 面向对象中常用术语</title>
      <link href="/2021/9b363a26ba6e/"/>
      <url>/2021/9b363a26ba6e/</url>
      
        <content type="html"><![CDATA[<h3 id="面向对象中常用术语"><a href="#面向对象中常用术语" class="headerlink" title="面向对象中常用术语"></a>面向对象中常用术语</h3><blockquote><p>为大家总结了面向对象中常用术语，请大家认真学习：</p></blockquote><p><strong>1、类：</strong> 可以理解是一个模板，通过它可以创建出无数个具体实例。</p><p>比如，定义一个Cat类，通过它可以创建出无数个实例来代表各种不同特征的猫。</p><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-10-24/1.jpg" alt="1"></p><p><strong>2、对象：</strong> 类并不能直接使用，通过类创建出的实例（又称对象）才能使用，比如以上案例创建类<br>对象cat。<br><strong>3、属性：</strong> 类中的所有变量称为属性。比如以上案例中类的变量有 颜色color 、体重 weight 、种类k<br>ind 、年龄age。<br><strong>4、方法：</strong> 类中的所有函数通常称为方法。不过，和函数所有不同的是，类方法至少要包含一个 sel<br>f 参数，类方法无法单独使用，只能和类的对象一起使用，比如以上案例中的方法有eat()、action<br>()、sleep()，创建对象后就可以直接调用类中的方法和属性。<br>面向对象最重要的概念就是类和实例，要牢记类是抽象的模板，而实例是根据类创建出来的一个个<br>具体的“对象”，每个对象都拥有相同的方法。</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 对象和异常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 初识面向对象编程</title>
      <link href="/2021/4b3e522b6936/"/>
      <url>/2021/4b3e522b6936/</url>
      
        <content type="html"><![CDATA[<h3 id="初识面向对象编程"><a href="#初识面向对象编程" class="headerlink" title="初识面向对象编程"></a>初识面向对象编程</h3><h4 id="什么是面向对象编程"><a href="#什么是面向对象编程" class="headerlink" title="什么是面向对象编程"></a>什么是面向对象编程</h4><ul><li>利用(面向)对象(属性或方法)去进行编码的过程</li><li>自定义对象数据类型就是面向对象中的类(class)的概念</li></ul><h4 id="类的关键字class"><a href="#类的关键字class" class="headerlink" title="类的关键字class"></a>类的关键字class</h4><ul><li><code>class</code>来<strong>声明类</strong>,<code>类的名称</code><strong>首字母大写</strong>,多单词情况下每个单词<strong>首字母大写</strong></li></ul><h4 id="类的定义"><a href="#类的定义" class="headerlink" title="类的定义"></a>类的定义</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Name</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">attr = something</span><br><span class="line"><span class="comment"># s</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">func</span>(<span class="params">self</span>):</span></span><br><span class="line">    do</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 对象和异常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python [案例]实现学生信息库</title>
      <link href="/2021/aff30b79847e/"/>
      <url>/2021/aff30b79847e/</url>
      
        <content type="html"><![CDATA[<h3 id="案例-实现学生信息库"><a href="#案例-实现学生信息库" class="headerlink" title="[案例]实现学生信息库"></a>[案例]实现学生信息库</h3><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-10-20/3.png" alt="3"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    学生信息库</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">students = &#123;</span><br><span class="line">    <span class="number">1</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;dewei&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;age&#x27;</span>: <span class="number">33</span>,</span><br><span class="line">        <span class="string">&#x27;class_number&#x27;</span>: <span class="string">&#x27;A&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;sex&#x27;</span>: <span class="string">&#x27;boy&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="number">2</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;小慕&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;age&#x27;</span>: <span class="number">10</span>,</span><br><span class="line">        <span class="string">&#x27;class_number&#x27;</span>: <span class="string">&#x27;B&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;sex&#x27;</span>: <span class="string">&#x27;boy&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="number">3</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;小曼&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;age&#x27;</span>: <span class="number">18</span>,</span><br><span class="line">        <span class="string">&#x27;class_number&#x27;</span>: <span class="string">&#x27;A&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;sex&#x27;</span>: <span class="string">&#x27;girl&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="number">4</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;小高&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;age&#x27;</span>: <span class="number">18</span>,</span><br><span class="line">        <span class="string">&#x27;class_number&#x27;</span>: <span class="string">&#x27;C&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;sex&#x27;</span>: <span class="string">&#x27;boy&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="number">5</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;小云&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;age&#x27;</span>: <span class="number">18</span>,</span><br><span class="line">        <span class="string">&#x27;class_number&#x27;</span>: <span class="string">&#x27;B&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;sex&#x27;</span>: <span class="string">&#x27;girl&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check_user_info</span>(<span class="params">**kwargs</span>):</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;name&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> kwargs:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;没有发现学生姓名&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;age&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> kwargs:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;没有发现学生姓名&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;sex&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> kwargs:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;没有发现学生姓名&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;class_number&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> kwargs:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;没有发现学生姓名&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_all_students</span>():</span></span><br><span class="line">    <span class="keyword">for</span> id_, value <span class="keyword">in</span> students.items():</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;学号: &#123;&#125;,姓名&#123;&#125;,年龄&#123;&#125;,性别&#123;&#125;,班级&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(</span><br><span class="line">            id_, value[<span class="string">&#x27;name&#x27;</span>], value[<span class="string">&#x27;age&#x27;</span>], value[<span class="string">&#x27;sex&#x27;</span>], value[<span class="string">&#x27;class_number&#x27;</span>]</span><br><span class="line">        ))</span><br><span class="line">    <span class="keyword">return</span> students</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># result = get_all_students()</span></span><br><span class="line"><span class="comment"># print(&#x27;----&#x27;, result)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add_student</span>(<span class="params">**kwargs</span>):</span></span><br><span class="line">    check = check_user_info(**kwargs)</span><br><span class="line">    <span class="keyword">if</span> check != <span class="literal">True</span>:</span><br><span class="line">        <span class="built_in">print</span>(check)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">    id_ = <span class="built_in">max</span>(students) + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    students[id_] = &#123;</span><br><span class="line">        <span class="string">&#x27;name&#x27;</span>: kwargs[<span class="string">&#x27;name&#x27;</span>],</span><br><span class="line">        <span class="string">&#x27;age&#x27;</span>: kwargs[<span class="string">&#x27;age&#x27;</span>],</span><br><span class="line">        <span class="string">&#x27;sex&#x27;</span>: kwargs[<span class="string">&#x27;sex&#x27;</span>],</span><br><span class="line">        <span class="string">&#x27;class_number&#x27;</span>: kwargs[<span class="string">&#x27;class_number&#x27;</span>]</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># add_student(name=&#x27;小白&#x27;, age=19, class_number=&#x27;A&#x27;, sex=&#x27;boy&#x27;)</span></span><br><span class="line"><span class="comment"># get_all_students()</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">delete_student</span>(<span class="params">student_id</span>):</span></span><br><span class="line">    <span class="keyword">if</span> student_id <span class="keyword">not</span> <span class="keyword">in</span> students:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125;并不存在&#x27;</span>.<span class="built_in">format</span>(student_id))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        user_info = students.pop(student_id)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;学号是&#123;&#125;, &#123;&#125;同学的信息已经被删除了&#x27;</span>.<span class="built_in">format</span>(student_id, user_info[<span class="string">&#x27;name&#x27;</span>]))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># delete_student(1)</span></span><br><span class="line"><span class="comment"># add_student(name=&#x27;小白&#x27;, age=19, class_number=&#x27;A&#x27;, sex=&#x27;boy&#x27;)</span></span><br><span class="line"><span class="comment"># get_all_students()</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">update_student</span>(<span class="params">student_id, **kwargs</span>):</span></span><br><span class="line">    <span class="keyword">if</span> student_id <span class="keyword">not</span> <span class="keyword">in</span> students:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;并不存在这个学号:&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(student_id))</span><br><span class="line"></span><br><span class="line">    check = check_user_info(**kwargs)</span><br><span class="line">    <span class="keyword">if</span> check != <span class="literal">True</span>:</span><br><span class="line">        <span class="built_in">print</span>(check)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">    students[student_id] = kwargs</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;同学信息更新完毕&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">update_student(<span class="number">1</span>, name=<span class="string">&#x27;dewei.zhang&#x27;</span>, age=<span class="number">33</span>, class_number=<span class="string">&#x27;A&#x27;</span>, sex=<span class="string">&#x27;boy&#x27;</span>)</span><br><span class="line">get_all_students()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_user_by_id</span>(<span class="params">student_id</span>):</span></span><br><span class="line">    <span class="keyword">return</span> students.get(student_id)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(get_user_by_id(<span class="number">3</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">search_users</span>(<span class="params">**kwargs</span>):</span></span><br><span class="line">    values = <span class="built_in">list</span>(students.values())</span><br><span class="line">    key = <span class="literal">None</span></span><br><span class="line">    value = <span class="literal">None</span></span><br><span class="line">    result = []</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;name&#x27;</span> <span class="keyword">in</span> kwargs:</span><br><span class="line">        key = <span class="string">&#x27;name&#x27;</span></span><br><span class="line">        value = kwargs[key]</span><br><span class="line">    <span class="keyword">elif</span> <span class="string">&#x27;sex&#x27;</span> <span class="keyword">in</span> kwargs:</span><br><span class="line">        key = <span class="string">&#x27;sex&#x27;</span></span><br><span class="line">        value = kwargs[<span class="string">&#x27;sex&#x27;</span>]</span><br><span class="line">    <span class="keyword">elif</span> <span class="string">&#x27;class_number&#x27;</span> <span class="keyword">in</span> kwargs:</span><br><span class="line">        key = <span class="string">&#x27;class_number&#x27;</span></span><br><span class="line">        value = kwargs[key]</span><br><span class="line">    <span class="keyword">elif</span> <span class="string">&#x27;age&#x27;</span> <span class="keyword">in</span> kwargs:</span><br><span class="line">        key = <span class="string">&#x27;age&#x27;</span></span><br><span class="line">        value = kwargs[key]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;没有发现搜索的关键字&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> user <span class="keyword">in</span> values:</span><br><span class="line">        <span class="keyword">if</span> user[key] == value:</span><br><span class="line">            result.append(user)</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;---------&#x27;</span>)</span><br><span class="line"><span class="comment"># users = search_users(age=18)</span></span><br><span class="line">users = search_users(sex=<span class="string">&#x27;girl&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(users)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程练习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 匿名函数lambda</title>
      <link href="/2021/091d96ffc9f9/"/>
      <url>/2021/091d96ffc9f9/</url>
      
        <content type="html"><![CDATA[<h3 id="匿名函数lambda"><a href="#匿名函数lambda" class="headerlink" title="匿名函数lambda"></a>匿名函数lambda</h3><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li>定义一个轻量化的函数</li><li><code>即用即删除</code>, 很适合需要完成一项功能 , 但是此功能<code>只在此一处使用</code></li></ul><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 无参数</span></span><br><span class="line">f = <span class="keyword">lambda</span> :value</span><br><span class="line"></span><br><span class="line">f()</span><br><span class="line"><span class="comment"># 有参数</span></span><br><span class="line">f = <span class="keyword">lambda</span> x,y: x*y</span><br><span class="line">f(<span class="number">3</span>, <span class="number">4</span>)</span><br></pre></td></tr></table></figure><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">f = <span class="keyword">lambda</span>: <span class="built_in">print</span>(<span class="number">1</span>)</span><br><span class="line"><span class="comment"># result = f()</span></span><br><span class="line"><span class="comment"># print(result)</span></span><br><span class="line">f()</span><br><span class="line"></span><br><span class="line"><span class="comment"># f1 = lambda x, y=2: x + y</span></span><br><span class="line">f1 = <span class="keyword">lambda</span> x, y=<span class="number">2</span>: x &gt; y</span><br><span class="line"><span class="comment"># print(f1(1, 2))</span></span><br><span class="line"><span class="built_in">print</span>(f1(<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line">users = [</span><br><span class="line">    &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;dewei&#x27;</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;xiaomu&#x27;</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;asan&#x27;</span>&#125;,</span><br><span class="line">]</span><br><span class="line">users.sort(key=<span class="keyword">lambda</span> x: x[<span class="string">&#x27;name&#x27;</span>])</span><br><span class="line"><span class="built_in">print</span>(users)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 函数的递归</title>
      <link href="/2021/5d2a2d7d4695/"/>
      <url>/2021/5d2a2d7d4695/</url>
      
        <content type="html"><![CDATA[<h3 id="函数的递归"><a href="#函数的递归" class="headerlink" title="函数的递归"></a>函数的递归</h3><h4 id="什么是递归函数"><a href="#什么是递归函数" class="headerlink" title="什么是递归函数"></a>什么是递归函数</h4><ul><li>一个函数不停的将自己反复执行</li></ul><h4 id="递归的定义方法"><a href="#递归的定义方法" class="headerlink" title="递归的定义方法"></a>递归的定义方法</h4><ul><li>通过返回值 <code>直接执行自身函数</code></li></ul><h4 id="递归函数的说明"><a href="#递归函数的说明" class="headerlink" title="递归函数的说明"></a>递归函数的说明</h4><ul><li>内存溢出</li><li>避免滥用递归</li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">count = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span>():</span></span><br><span class="line">    <span class="keyword">global</span> count</span><br><span class="line">    count += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> count &lt; <span class="number">5</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;count条件不满足, 我要重新执行我自己! 当前count是%s&#x27;</span> % count)</span><br><span class="line">        <span class="keyword">return</span> test()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;count is %s&#x27;</span> % count)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">test()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 局部变量与全局变量</title>
      <link href="/2021/58c1ce227e34/"/>
      <url>/2021/58c1ce227e34/</url>
      
        <content type="html"><![CDATA[<h3 id="局部变量与全局变量"><a href="#局部变量与全局变量" class="headerlink" title="局部变量与全局变量"></a>局部变量与全局变量</h3><h4 id="全局变量"><a href="#全局变量" class="headerlink" title="全局变量"></a>全局变量</h4><ul><li>在python脚本最上层代码块的变量</li><li>全局变量可以在函数内被读取使用</li></ul><h4 id="局部变量"><a href="#局部变量" class="headerlink" title="局部变量"></a>局部变量</h4><ul><li>在函数体内定义的变量</li><li>局部变量无法在自身函数以外使用</li></ul><h4 id="global"><a href="#global" class="headerlink" title="global"></a>global</h4><ul><li><p><code>将全局变量可以在函数体内进行修改</code></p><ol><li><p>定义一个全局变量</p></li><li><p>定义函数</p><p><code>global + 全局变量名</code></p></li><li><p>函数体内给全局变量重新赋值</p></li></ol></li><li><p>工作中, <code>不建议</code>使用<code>global</code>对<strong>全局变量</strong>进行修改</p></li><li><p>仅支持 <code>数字</code> <code>字符串</code> <code>空类型</code> <code>布尔类型</code> 的声明</p></li><li><p><code>列表和字典</code>的全局变量<strong>不需要global进行声明</strong></p></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">name = <span class="string">&#x27;dewei&#x27;</span></span><br><span class="line">age = <span class="number">33</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span>():</span></span><br><span class="line">    <span class="built_in">print</span>(name)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">test()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test1</span>():</span></span><br><span class="line">    name = <span class="string">&#x27;小慕&#x27;</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;函数体内&#x27;</span>, name)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">test1()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;函数体外&#x27;</span>, name)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test3</span>():</span></span><br><span class="line">    age = <span class="number">33</span></span><br><span class="line">    <span class="built_in">print</span>(age)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">test3()</span><br><span class="line"><span class="comment"># print(age)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test4</span>(<span class="params">a</span>):</span></span><br><span class="line">    a = <span class="number">10</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">test4(name)</span><br><span class="line"><span class="built_in">print</span>(name)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test5</span>():</span></span><br><span class="line">    <span class="keyword">global</span> name</span><br><span class="line">    <span class="keyword">global</span> age</span><br><span class="line">    name = <span class="number">10</span></span><br><span class="line">    age = <span class="number">10</span></span><br><span class="line"></span><br><span class="line">test5()</span><br><span class="line"><span class="built_in">print</span>(name)</span><br><span class="line"><span class="built_in">print</span>(age)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">test_dict = &#123;<span class="string">&#x27;a&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;b&#x27;</span>: <span class="number">2</span>&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test6</span>():</span></span><br><span class="line">    test_dict[<span class="string">&#x27;c&#x27;</span>] = <span class="number">3</span></span><br><span class="line">    test_dict.pop(<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">test6()</span><br><span class="line"><span class="built_in">print</span>(test_dict)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 函数的参数类型定义</title>
      <link href="/2021/587a683b5ccb/"/>
      <url>/2021/587a683b5ccb/</url>
      
        <content type="html"><![CDATA[<h3 id="函数的参数类型定义"><a href="#函数的参数类型定义" class="headerlink" title="函数的参数类型定义"></a>函数的参数类型定义</h3><h4 id="参数定义类型的方法"><a href="#参数定义类型的方法" class="headerlink" title="参数定义类型的方法"></a>参数定义类型的方法</h4><ul><li><code>def person(name:str, age:int=33):</code><br><code>print(name, age)</code></li></ul><ul><li>函数定义在python3.7之后可用</li><li>函数不会对参数类型进行验证</li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span>(<span class="params">a: <span class="built_in">int</span>, b: <span class="built_in">int</span> = <span class="number">3</span></span>):</span></span><br><span class="line">    <span class="built_in">print</span>(a + b)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">add(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line"><span class="comment"># add(&#x27;hello&#x27;, &#x27;xiaomu&#x27;)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span>(<span class="params">a: <span class="built_in">int</span>, b: <span class="built_in">int</span> = <span class="number">3</span>, *args: <span class="built_in">int</span>, **kwargs: <span class="built_in">str</span></span>):</span></span><br><span class="line">    <span class="built_in">print</span>(a, b, args, kwargs)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">test(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, name=<span class="string">&#x27;小慕&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test2</span>(<span class="params">a: <span class="built_in">int</span>, b, c=<span class="number">3</span></span>):</span></span><br><span class="line">    <span class="built_in">print</span>(a, b, c)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">test2(<span class="number">1</span>, <span class="number">3</span>, <span class="number">4</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 总结函数传参的方式</title>
      <link href="/2021/21d421965af0/"/>
      <url>/2021/21d421965af0/</url>
      
        <content type="html"><![CDATA[<h3 id="总结函数传参的方式"><a href="#总结函数传参的方式" class="headerlink" title="总结函数传参的方式"></a>总结函数传参的方式</h3><p>在函数中经常会用到参数来做一系列的业务处理，我们先来说说函数中的参数。</p><p>形参变量（所谓形参就是def声明函数名括号中的参数）:</p><ul><li>只有在被调用时才分配内存单元，调用结束时，即刻释放所分配的内存单元。因此，形参只在函数内部有效。</li></ul><p>实参（调用函数传入的参数被称为实参）：</p><ul><li>无论实参是何种类型，在进行函数调用，它们都必须有确定的值。</li></ul><p>传参的方式：</p><ul><li><p>第一种位置参数：</p><ul><li><p>位置参数顾名思义，就是调用函数时传的实参与形参位置上一一对应的参数。</p><p>例如：</p><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-10-20/1.jpg" alt="1"></p></li></ul></li><li><p>第二种默认参数：</p><ul><li><p>默认参数是你在函数形参中定义好的，当实参中未传对应的参数时，参数就会以默认值为准。</p><ul><li>注意：默认参数，必须放在位置参数之后,否则会出错</li></ul><p>例如：</p><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-10-20/2.jpg" alt="2"></p></li></ul></li><li><p>第三种关键参数：</p><ul><li>正常情况下，给函数传参数要按顺序，如果不按顺序就可以用关键参数，只需指定参数名即可（指定参数名的参数就叫关键参数），<ul><li>切记，关键参数必须放在位置参数（以位置顺序确定对应关系的参数）之后。</li></ul></li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">two_stu_info</span>(<span class="params">name,age,major,country=<span class="string">&#x27;CN&#x27;</span></span>):</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;--------------------学生信息---------------------&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;姓名：&#x27;</span>,name)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;年龄：&#x27;</span>,age)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;专业：&#x27;</span>,major)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;国籍：&#x27;</span>,country)</span><br><span class="line"><span class="comment">#country即为关键参数，单独指定，但必须放在位置参数之后，覆盖默认参数</span></span><br><span class="line">stu3 = stu_info(<span class="string">&#x27;Jack&#x27;</span>,<span class="number">21</span>,<span class="string">&#x27;Chinese&#x27;</span>,country=<span class="string">&#x27;UK&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">send_alert</span>(<span class="params">msg,*users</span>):</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    :param msg:</span></span><br><span class="line"><span class="string">    :param users: 表示非固定传参，可同时指定多个用户，传给过来的所有参数</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;打印参数users&#x27;</span>,users)</span><br><span class="line">    <span class="keyword">for</span> u <span class="keyword">in</span> users:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;报警！请及时查看……&#x27;</span>,u,msg)</span><br><span class="line"></span><br><span class="line">send_alert(<span class="string">&#x27;你的系统已频临崩溃&#x27;</span>,<span class="string">&#x27;AA&#x27;</span>,<span class="string">&#x27;BB&#x27;</span>,<span class="string">&#x27;CC&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>非固定传参方式二：    <ul><li>可同时指定多个用户，传过来的所有参数打包成元组或字典；</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span>(<span class="params">name,*args,**kwargs</span>):</span><span class="comment">#形参依次是：位置参数，元组，字典</span></span><br><span class="line">    <span class="built_in">print</span>(name,args,kwargs)</span><br><span class="line"></span><br><span class="line">func(<span class="string">&#x27;Tom&#x27;</span>,<span class="number">22</span>,<span class="string">&#x27;CN&#x27;</span>,<span class="string">&#x27;tomorrow&#x27;</span>)</span><br><span class="line">func(<span class="string">&#x27;Try&#x27;</span>,<span class="number">21</span>,<span class="string">&#x27;will&#x27;</span>,add=<span class="string">&#x27;HG&#x27;</span>,num=<span class="number">666</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 阶段编程练习(十三)</title>
      <link href="/2021/d2c9dd7e254a/"/>
      <url>/2021/d2c9dd7e254a/</url>
      
        <content type="html"><![CDATA[<h3 id="编程练习"><a href="#编程练习" class="headerlink" title="编程练习"></a>编程练习</h3><blockquote><p>定义seq函数，向函数内传入形参(num, num1, num2)，如果num小于88，返回num1与num2的积，否则返回num1和num2的和，调用函数传参时使用元组传参</p></blockquote><h4 id="任务"><a href="#任务" class="headerlink" title="任务"></a>任务</h4><ol><li>当num小于88，计算num1与num2的乘积，否则计算num1，num2之和</li><li>定义变量tuple1为(5,2,1)</li><li>调用函数，并打印函数返回值</li></ol><h4 id="任务提示"><a href="#任务提示" class="headerlink" title="任务提示"></a>任务提示</h4><ul><li>使用*tuple1可实现对元组tuple1的解包</li></ul><h4 id="原始代码"><a href="#原始代码" class="headerlink" title="原始代码"></a>原始代码</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">def seq(num,num1,num2):</span><br><span class="line"># if判断num小于88</span><br><span class="line"></span><br><span class="line">#返回num1与num2的积</span><br><span class="line"></span><br><span class="line">else:</span><br><span class="line">#返回num1与num2之和</span><br><span class="line"></span><br><span class="line"># 定义变量tuple1的值为(5,2,1)</span><br><span class="line"></span><br><span class="line"># 调用函数，传入参数tuple1，并打印函数返回值</span><br></pre></td></tr></table></figure><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">seq</span>(<span class="params">num, num1, num2</span>):</span></span><br><span class="line">    <span class="comment"># if判断num小于88</span></span><br><span class="line">    <span class="keyword">if</span> num &lt; <span class="number">88</span>:</span><br><span class="line">        <span class="comment"># 返回num1与num2的积</span></span><br><span class="line">        <span class="keyword">return</span> num1 * num2</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="comment"># 返回num1与num2之和</span></span><br><span class="line">        <span class="keyword">return</span> num1 + num2</span><br><span class="line"><span class="comment"># 定义变量tuple1的值为(5,2,1)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">tuple1 = (<span class="number">5</span>, <span class="number">2</span>, <span class="number">1</span>)</span><br><span class="line"><span class="comment"># 调用函数，传入参数tuple1，并打印函数返回值</span></span><br><span class="line"><span class="built_in">print</span>(seq(tuple1[<span class="number">0</span>], tuple1[<span class="number">1</span>], tuple1[<span class="number">2</span>]))</span><br><span class="line"><span class="built_in">print</span>(seq(*tuple1))</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程练习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 阶段编程练习(十二)</title>
      <link href="/2021/efb1852ba7d6/"/>
      <url>/2021/efb1852ba7d6/</url>
      
        <content type="html"><![CDATA[<h3 id="编程练习"><a href="#编程练习" class="headerlink" title="编程练习"></a>编程练习</h3><blockquote><p>定义一个函数，向函数内传入形参username，password，当username值为imooc且password值为字符串123456时，返回“登录成功”；否则返回“请重新登录”</p></blockquote><h4 id="任务"><a href="#任务" class="headerlink" title="任务"></a>任务</h4><ol><li>定义函数login</li><li>if语句判断用户名和密码是否为字符串imooc和123456</li></ol><h4 id="原始代码"><a href="#原始代码" class="headerlink" title="原始代码"></a>原始代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span>(<span class="params">username,password</span>):</span></span><br><span class="line"><span class="comment"># 使用if语句，判断用户名和密码为“imooc”和“123456</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#返回登录成功</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用else子句处理用户名和密码非“imooc”和“123456</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#返回请重新登录</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用函数，向函数内传入&#x27;imooc&#x27;,&#x27;123456&#x27;和&#x27;mooc&#x27;,&#x27;123456&#x27;两组数据测试结果</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 打印函数测试结果</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span>(<span class="params">username, password</span>):</span></span><br><span class="line">    <span class="comment"># 使用if语句，判断用户名和密码为“imooc”和“123456</span></span><br><span class="line">    <span class="keyword">if</span> username == <span class="string">&#x27;imooc&#x27;</span> <span class="keyword">and</span> password == <span class="string">&#x27;123456&#x27;</span>:</span><br><span class="line">        <span class="comment"># 返回登录成功</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;登录成功&#x27;</span></span><br><span class="line"><span class="comment"># 使用else子句处理用户名和密码非“imooc”和“123456</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="comment"># 返回请重新登录</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;请重新登录&#x27;</span></span><br><span class="line"><span class="comment"># 调用函数，向函数内传入&#x27;imooc&#x27;,&#x27;123456&#x27;和&#x27;mooc&#x27;,&#x27;123456&#x27;两组数据测试结果</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">user1 = login(<span class="string">&#x27;imooc&#x27;</span>, <span class="string">&#x27;123456&#x27;</span>)</span><br><span class="line">user2 = login(<span class="string">&#x27;mooc&#x27;</span>, <span class="string">&#x27;123456&#x27;</span>)</span><br><span class="line"><span class="comment"># 打印函数测试结果</span></span><br><span class="line"><span class="built_in">print</span>(user1)</span><br><span class="line"><span class="built_in">print</span>(user2)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程练习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 阶段编程练习(十一)</title>
      <link href="/2021/f3d0c9404e41/"/>
      <url>/2021/f3d0c9404e41/</url>
      
        <content type="html"><![CDATA[<h3 id="编程练习"><a href="#编程练习" class="headerlink" title="编程练习"></a>编程练习</h3><blockquote><p>定义一个函数，向函数内传入形参num, num1, num2，如果num小于100，则计算num1 和 num2的积并打印；否则计算num1 和num2的和，然后打印输出</p></blockquote><h4 id="任务"><a href="#任务" class="headerlink" title="任务"></a>任务</h4><ol><li>定义函数名为oper的函数</li><li>当num值小于100时，求两数的乘积，反之求两数的和</li><li>调用函数，向函数内传入1314, 52, 0和5, 2, 0两组数据测试结果</li></ol><h4 id="原始代码"><a href="#原始代码" class="headerlink" title="原始代码"></a>原始代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">oper</span>(<span class="params">num, num1, num2</span>):</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># if条件判断num小于100的情况</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 对num1和num2进行乘法运算，并输出结果</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"></span><br><span class="line"><span class="comment">#对num1和num2进行加法运算，并输出结果</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#调用函数，向函数内传入1314, 52, 0和5, 2, 0两组数据测试结果</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">oper</span>(<span class="params">num, num1, num2</span>):</span></span><br><span class="line">    <span class="comment"># if条件判断num小于100的情况</span></span><br><span class="line">    <span class="keyword">if</span> num &lt; <span class="number">100</span>:</span><br><span class="line">        <span class="comment"># 对num1和num2进行乘法运算，并输出结果</span></span><br><span class="line">        num = num1 * num2</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="comment"># 对num1和num2进行加法运算，并输出结果</span></span><br><span class="line">        num = num1 + num2</span><br><span class="line">    <span class="keyword">return</span> num</span><br><span class="line">    <span class="comment"># 调用函数，向函数内传入1314, 52, 0和5, 2, 0两组数据测试结果</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(oper(<span class="number">1313</span>, <span class="number">52</span>, <span class="number">0</span>))</span><br><span class="line"><span class="built_in">print</span>(oper(<span class="number">5</span>, <span class="number">2</span>, <span class="number">0</span>))</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程练习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 函数的传参</title>
      <link href="/2021/aaa17fc9a2af/"/>
      <url>/2021/aaa17fc9a2af/</url>
      
        <content type="html"><![CDATA[<h3 id="函数的传参"><a href="#函数的传参" class="headerlink" title="函数的传参"></a>函数的传参</h3><h4 id="必传参数"><a href="#必传参数" class="headerlink" title="必传参数"></a>必传参数</h4><ul><li>函数中定义的参数<code>没有默认值</code>,在<strong>调用函数时</strong>如果<code>不传入则报错</code></li><li>在定义函数的时候,参数后边没有等号与默认值</li><li><strong>错误:def add (a=1, b=1)</strong> <code>x</code><ul><li>在定义函数的时候,没有默认值且必须在函数执行的时候传递进去的参数,且顺序与参数顺序相同,就是必传参数</li></ul></li></ul><h4 id="默认参数-非必传参数"><a href="#默认参数-非必传参数" class="headerlink" title="默认参数(非必传参数)"></a>默认参数(非必传参数)</h4><ul><li>在定义函数的时候,定义的参数含有默认值,通过赋值语句给他设一个默认的值</li><li>如果默认参数在调用函数的时候给予了新的值,函数将优先使用后传入的值进行工作</li></ul><h4 id="不确定参数-可变参数"><a href="#不确定参数-可变参数" class="headerlink" title="不确定参数-可变参数"></a>不确定参数-可变参数</h4><ul><li>没有固定的参数名和数量(不知道要传的参数名具体是什么)</li><li><code>*args</code> 代表 :<strong>将无参数的值合并成元组</strong></li><li><code>**kwargs</code> 代表<strong>将有参数与默认值的赋值语句合并成字典</strong></li></ul><h4 id="参数规则"><a href="#参数规则" class="headerlink" title="参数规则"></a>参数规则</h4><ul><li><p>参数的定义从左到右依次是</p><ol><li><p>必传参数</p></li><li><p>默认参数</p></li><li><p>可变元组参数 <code>?</code></p><ul><li><code># 如果赋值的形式传参,则需要将可变的元组类型放在第一位</code></li></ul></li><li><p>可变字典参数</p></li></ol></li><li><p>函数的参数传递<code>非常灵活</code></p></li><li><p><code>必传参数</code>与<code>默认参数</code>的传参<strong>多样化</strong></p></li><li><p>函数体内<strong>不可</strong>加<code>*</code>号</p></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span>(<span class="params">a, b, c=<span class="number">3</span></span>):</span></span><br><span class="line">    <span class="keyword">return</span> a + b + c</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">result = add(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line"></span><br><span class="line">result = add(<span class="number">1</span>, <span class="number">2</span>, <span class="number">6</span>)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test_args</span>(<span class="params">*args, **kwargs</span>):</span></span><br><span class="line">    <span class="built_in">print</span>(args, <span class="built_in">type</span>(args))</span><br><span class="line">    <span class="built_in">print</span>(kwargs, <span class="built_in">type</span>(args))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">test_args(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, name=<span class="string">&#x27;dewei&#x27;</span>, age=<span class="number">33</span>, top=<span class="number">174</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test_args_supre</span>(<span class="params">*args, **kwargs</span>):</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(args) &gt;= <span class="number">1</span>:</span><br><span class="line">        <span class="built_in">print</span>(args[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;name&#x27;</span> <span class="keyword">in</span> kwargs:</span><br><span class="line">        <span class="built_in">print</span>(kwargs[<span class="string">&#x27;name&#x27;</span>])</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;no name&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(args, <span class="built_in">len</span>(args))</span><br><span class="line">    <span class="built_in">print</span>(kwargs, <span class="built_in">len</span>(kwargs))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">test_args_supre(<span class="number">1</span>, name=<span class="string">&#x27;dewei&#x27;</span>)</span><br><span class="line">a = (<span class="string">&#x27;python&#x27;</span>, <span class="string">&#x27;django&#x27;</span>)</span><br><span class="line">b = &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;dewei&#x27;</span>&#125;</span><br><span class="line">test_args_supre(*a, **b)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span>(<span class="params">a, b=<span class="number">1</span></span>):</span></span><br><span class="line">    <span class="built_in">print</span>(a + b)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">add(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">add(<span class="number">1</span>)</span><br><span class="line">add(a=<span class="number">1</span>, b=<span class="number">2</span>)</span><br><span class="line">add(b=<span class="number">2</span>, a=<span class="number">1</span>)  <span class="comment"># 仅限于当前形式</span></span><br><span class="line"><span class="comment"># add(b=2)  # 会报错</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span>(<span class="params">a, b=<span class="number">1</span>, *args</span>):</span></span><br><span class="line">    <span class="built_in">print</span>(a, b, args)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">s = (<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">test(<span class="number">1</span>, <span class="number">2</span>, *s)</span><br><span class="line"><span class="comment"># test(a=1, b=2, *s)  # 如果赋值的形式传参,则需要将可变的元组类型放在第一位</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test2</span>(<span class="params">*args, a, b=<span class="number">1</span></span>):</span></span><br><span class="line">    <span class="built_in">print</span>(a, b, args)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">test2(a=<span class="number">1</span>,b=<span class="number">2</span>, *s)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test3</span>(<span class="params">a, b=<span class="number">1</span>, **kwargs</span>):</span></span><br><span class="line">    <span class="built_in">print</span>(a, b, kwargs)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">test3(<span class="number">1</span>, <span class="number">2</span>, name=<span class="string">&#x27;dewei&#x27;</span>)</span><br><span class="line">test3(a=<span class="number">1</span>, b=<span class="number">2</span>, name=<span class="string">&#x27;dewei&#x27;</span>)</span><br><span class="line">test3(name=<span class="string">&#x27;dewei&#x27;</span>, age=<span class="number">33</span>, a=<span class="number">1</span>, b=<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">d = &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;小慕&#x27;</span>&#125;</span><br><span class="line">test3(a=<span class="number">1</span>, b=<span class="number">2</span>, **d)</span><br><span class="line">test3(**d, a=<span class="number">1</span>, b=<span class="number">2</span>)</span><br><span class="line">test3(**d, a=<span class="number">1</span>, b=<span class="number">2</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 函数的定义(图文节)</title>
      <link href="/2021/8eb1dec0102e/"/>
      <url>/2021/8eb1dec0102e/</url>
      
        <content type="html"><![CDATA[<h3 id="函数的定义"><a href="#函数的定义" class="headerlink" title="函数的定义"></a>函数的定义</h3><blockquote><p>所谓函数就是为了满足业务需求封装的功能。</p><p>比如多个地方需要用到同一个校验方法。</p><p>这个时候就可以把校验方法单独写一个函数以供多个地方进行调用。</p></blockquote><h4 id="函数的作用及好处："><a href="#函数的作用及好处：" class="headerlink" title="函数的作用及好处："></a>函数的作用及好处：</h4><ol><li>减少<code>重复代码</code></li><li>方便<code>修改</code>，更易于<code>扩展</code>（加减功能）</li><li>保持<code>代码一致性</code>（便于一修改一致修改）</li></ol>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 阶段编程练习(十)</title>
      <link href="/2021/235ecb5b9357/"/>
      <url>/2021/235ecb5b9357/</url>
      
        <content type="html"><![CDATA[<h3 id="编程练习"><a href="#编程练习" class="headerlink" title="编程练习"></a>编程练习</h3><blockquote><p>定义一个函数，实现在控制台打印3遍唐诗 《咏鹅》，并使用50个星（*）号分隔每一 次打印结果</p><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-10-18/1.jpg" alt="1"></p></blockquote><h4 id="任务"><a href="#任务" class="headerlink" title="任务"></a>任务</h4><ol><li>定义函数名为goose的函数</li><li>函数体内：向控制台输出唐诗《咏鹅》</li><li>函数体内：向控制台输出50个*号分隔符</li><li>调用三次函数名为goose的函数</li></ol><h4 id="初始代码"><a href="#初始代码" class="headerlink" title="初始代码"></a>初始代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">goose</span>():</span></span><br><span class="line"><span class="comment"># 向控制台输出唐诗《咏鹅》诗句</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 向控制台输出50个*号分隔符</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用函数实现效果</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="代码提交区"><a href="#代码提交区" class="headerlink" title="代码提交区"></a>代码提交区</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">goose</span>():</span></span><br><span class="line">    <span class="comment"># 向控制台输出唐诗&lt;咏鹅&gt;的诗句</span></span><br><span class="line">    verse = <span class="string">&#x27;鹅,鹅,鹅,曲项向天歌,白毛浮绿水,红掌拨清波.&#x27;</span></span><br><span class="line">    <span class="comment"># 向控制台输出50个*号分隔符</span></span><br><span class="line">    star = <span class="string">&#x27;*&#x27;</span> * <span class="number">50</span></span><br><span class="line">    <span class="keyword">return</span> verse, star</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用函数实现结果</span></span><br><span class="line"><span class="built_in">print</span>(goose()[<span class="number">0</span>], <span class="string">&#x27;\n&#x27;</span>, goose()[<span class="number">1</span>])</span><br><span class="line"><span class="built_in">print</span>(goose()[<span class="number">0</span>], <span class="string">&#x27;\n&#x27;</span>, goose()[<span class="number">1</span>])</span><br><span class="line"><span class="built_in">print</span>(goose()[<span class="number">0</span>], <span class="string">&#x27;\n&#x27;</span>, goose()[<span class="number">1</span>])</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程练习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 函数的定义</title>
      <link href="/2021/9d54aba62962/"/>
      <url>/2021/9d54aba62962/</url>
      
        <content type="html"><![CDATA[<h3 id="函数的定义"><a href="#函数的定义" class="headerlink" title="函数的定义"></a>函数的定义</h3><h4 id="函数的定义-1"><a href="#函数的定义-1" class="headerlink" title="函数的定义"></a>函数的定义</h4><ul><li>将一件事情的步骤<code>封装</code>在一起并得到的结果</li><li><strong>函数名</strong>代表了这个函数要做的事情</li><li><strong>函数体</strong>是实现函数功能的流程</li><li>方法或功能</li><li>函数可以帮助我们重复使用,通过函数名我们可以知道函数的作用</li></ul><h4 id="函数的分类"><a href="#函数的分类" class="headerlink" title="函数的分类"></a>函数的分类</h4><ul><li>内置函数</li><li>自定义函数</li></ul><h4 id="函数的创建方法"><a href="#函数的创建方法" class="headerlink" title="函数的创建方法"></a>函数的创建方法</h4><h5 id="关键词def的功能"><a href="#关键词def的功能" class="headerlink" title="关键词def的功能"></a>关键词def的功能</h5><ul><li>实现python中函数的创建</li></ul><h5 id="通过def定义函数"><a href="#通过def定义函数" class="headerlink" title="通过def定义函数"></a>通过def定义函数</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">name</span>(<span class="params">args...</span>):</span></span><br><span class="line">    todo something..</span><br><span class="line">    返回值</span><br></pre></td></tr></table></figure><ul><li> <code>#</code>函数名 + 小括号执行函数</li></ul><h5 id="函数的返回值return"><a href="#函数的返回值return" class="headerlink" title="函数的返回值return"></a>函数的返回值<code>return</code></h5><ul><li>将函数结果返回的<strong>关键字</strong></li><li><code>return</code>只能在函数体内使用</li><li><code>return</code>支持<strong>所有</strong>返回的<strong>python类型</strong></li><li><code>有返回值的函数</code>可以直接<strong>赋值给一个变量</strong><ul><li><code>#</code> 参数按顺序传递</li></ul></li><li>代表函数执行的结束<code>(break)</code></li></ul><h4 id="return与print的区别"><a href="#return与print的区别" class="headerlink" title="return与print的区别"></a><code>return</code>与<code>print</code>的区别</h4><ul><li><code>print</code> 只是单纯的将对象打印 , 不支持赋值语句</li><li><code>return</code>是<strong>对函数执行结果的返回</strong>,也支持赋值语句</li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">capitalize</span>(<span class="params">data</span>):</span></span><br><span class="line">    index = <span class="number">0</span></span><br><span class="line">    temp = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> data:</span><br><span class="line">        <span class="keyword">if</span> index == <span class="number">0</span>:</span><br><span class="line">            temp = item.upper()  <span class="comment"># 此处是直接赋值给temp变量 故也可写成 +=</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            temp += item  <span class="comment"># 此处是给temp变量添加元素</span></span><br><span class="line">        index += <span class="number">1</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;for结束了&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> temp</span><br><span class="line">    <span class="comment"># print(&#x27;finishi&#x27;)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">result = capitalize(<span class="string">&#x27;hello 小慕&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">message</span>(<span class="params">message, message_type</span>):</span></span><br><span class="line">    new_message = <span class="string">&#x27;[%s] %s&#x27;</span> % (message_type, message)</span><br><span class="line">    <span class="built_in">print</span>(new_message)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">result = message(message=<span class="string">&#x27;今天天气真好&#x27;</span>, message_type=<span class="string">&#x27;info&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;message result:&#x27;</span>, result)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span>():</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">        <span class="keyword">if</span> i == <span class="number">5</span>:</span><br><span class="line">            <span class="keyword">return</span> i</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;test的结果是:&#x27;</span>, test())</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 作业:货币兑换系统</title>
      <link href="/2021/7a745dd4f903/"/>
      <url>/2021/7a745dd4f903/</url>
      
        <content type="html"><![CDATA[<h3 id="作业"><a href="#作业" class="headerlink" title="作业"></a>作业</h3><blockquote><p>亲爱的朋友们，学到当前位置，相信大家已掌握Python语言的基础知识，为了巩固大家的所学，现在请大家亲自动手运用所学知识来开发一个简单的货币兑换系统吧。<br>题目要求：<br>根据业务需求，现要求慕友们开发一个货币兑换的服务系统，具体要求如下：<br>1、实现人民币兑换美元的功能<br>2、实现美元兑换人民币的功能<br>3、实现人民币兑换欧元的功能<br>4、1美元=7.06人民币，1人民币=0.12欧元<br>5、在兑换后保留2位小数<br>6、在输入要选择服务后有波浪线分隔；本次兑换服务结束后有等号线进行分隔。<br>运行效果图:</p><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-10-16/2.jpg" alt="2"></p></blockquote><h4 id="任务描述"><a href="#任务描述" class="headerlink" title="任务描述"></a>任务描述</h4><h5 id="一、开发语言与环境要求"><a href="#一、开发语言与环境要求" class="headerlink" title="一、开发语言与环境要求"></a>一、开发语言与环境要求</h5><ol><li>语言版本：<code>Python3.8</code></li><li>开发工具：<code>Pycharm</code></li></ol><h5 id="二、程序整体要求"><a href="#二、程序整体要求" class="headerlink" title="二、程序整体要求"></a>二、程序整体要求</h5><ol><li>完成需求中所涉及到的<code>所有功能</code>；</li><li>要求Python代码<code>书写</code>、<code>命名</code><strong>符合规范</strong>，在代码中添加<code>必要的注释</code>；</li><li>代码结构要<strong>层次分明</strong>，<strong>代码编辑思路</strong>要<code>清晰</code>、<code>整洁</code>；</li><li>程序中用到的<code>变量名</code><strong>必须与要求保持一致</strong>；</li><li>程序<code>运行效果</code><strong>与提供的效果图结构保持一致</strong>，<ul><li><strong>信息间分隔符“*、~、=”号数量文字大小及背景色</strong><code>均不做统一要求</code>；</li></ul></li></ol><h5 id="三、-详细设计："><a href="#三、-详细设计：" class="headerlink" title="三、 详细设计："></a><strong>三、 详细设计：</strong></h5><ol><li><p>定义字典变量service_menu存储货币转换的四种服务：1.人民币转换美元，2.美元转换人民币，3.人民币转换欧元，0.结束程序</p></li><li><p>定义一个列表lst，分别存放文字1，2，3，0。使用for循环得到列表中的元素后，使用service_menu[key]的方式得到字典中的value值，并对结果进行输出。</p><p>效果：例</p><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-10-16/4.webp" alt="img">    </p></li><li><p>定义变量your_money，用于存储小明的100元钱</p></li><li><p>使用if……elif……else……条件判断语句，选择不同的服务进行货币兑换</p></li><li><p>在每个货币兑换后有等号线进行分隔</p></li><li><p>按照货币兑换规则将结果打印</p></li><li><p>每个变量的具体要求请参照评分标准</p></li></ol><h4 id="作业提交区"><a href="#作业提交区" class="headerlink" title="作业提交区"></a>作业提交区</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;*******欢迎使用货币转换服务系统*******&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;1.人民币转换美元&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;2.美元转换人民币&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;3.人民币转换欧元&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;0.结束程序&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;请选择需要的服务:&#x27;</span>, end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"></span><br><span class="line">start = <span class="built_in">input</span>()</span><br><span class="line"><span class="keyword">while</span> start == <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;~~~~~~~~~~~~~~~~~~~~~~~~~&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;欢迎使用人民币转换美元服务&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;请您输入需要转换的人民币金额:&#x27;</span>, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    ren = <span class="built_in">input</span>()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;您需要转换的人民币为:%s元&#x27;</span> % ren)</span><br><span class="line">    ren_num = <span class="built_in">float</span>(ren)</span><br><span class="line">    huilv = <span class="number">7.06</span></span><br><span class="line">    mei = ren_num / huilv</span><br><span class="line">    mei = <span class="built_in">round</span>(mei, <span class="number">2</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;兑换成美元为:%s$&#x27;</span> % mei)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;========================&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;*******欢迎使用货币转换服务系统*******&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;1.人民币转换美元&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;2.美元转换人民币&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;3.人民币转换欧元&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;0.结束程序&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;请选择需要的服务:&#x27;</span>, end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">    start = <span class="built_in">input</span>()</span><br><span class="line"><span class="keyword">while</span> start == <span class="string">&#x27;2&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;~~~~~~~~~~~~~~~~~~~~~~~~~&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;欢迎使用美元转换人民币服务&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;请您输入需要转换的美元金额:&#x27;</span>, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    mei = <span class="built_in">input</span>()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;您需要转换的美元为:%s$&#x27;</span> % mei)</span><br><span class="line">    mei_num = <span class="built_in">float</span>(mei)</span><br><span class="line">    huilv = <span class="number">7.06</span></span><br><span class="line">    ren = mei_num * huilv</span><br><span class="line">    ren = <span class="built_in">round</span>(ren, <span class="number">2</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;兑换成人民币为:%s元&#x27;</span> % ren)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;========================&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;*******欢迎使用货币转换服务系统*******&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;1.人民币转换美元&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;2.美元转换人民币&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;3.人民币转换欧元&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;0.结束程序&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;请选择需要的服务:&#x27;</span>, end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">    start = <span class="built_in">input</span>()</span><br><span class="line"><span class="keyword">while</span> start == <span class="string">&#x27;3&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;~~~~~~~~~~~~~~~~~~~~~~~~~&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;欢迎使用人民币转换欧元服务&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;请您输入需要转换的人民币金额:&#x27;</span>, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    ren = <span class="built_in">input</span>()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;您需要转换的人民币为:%s元&#x27;</span> % ren)</span><br><span class="line">    ren_num = <span class="built_in">float</span>(ren)</span><br><span class="line">    huilv = <span class="number">0.12</span></span><br><span class="line">    ouyuan = ren_num * huilv</span><br><span class="line">    ouyuan = <span class="built_in">round</span>(ouyuan, <span class="number">2</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;兑换成欧元为:%s欧元&#x27;</span> % ouyuan)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;========================&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;*******欢迎使用货币转换服务系统*******&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;1.人民币转换美元&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;2.美元转换人民币&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;3.人民币转换欧元&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;0.结束程序&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;请选择需要的服务:&#x27;</span>, end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">    start = <span class="built_in">input</span>()</span><br><span class="line"><span class="keyword">while</span> start != (<span class="string">&#x27;1&#x27;</span> <span class="keyword">or</span> <span class="string">&#x27;2&#x27;</span> <span class="keyword">or</span> <span class="string">&#x27;3&#x27;</span>):</span><br><span class="line">    <span class="keyword">break</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;**************&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;感谢你的使用,祝你生活愉快,再见!&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="标准答案模板学习…-别人写的真好啊呜呜呜呜"><a href="#标准答案模板学习…-别人写的真好啊呜呜呜呜" class="headerlink" title="标准答案模板学习…(别人写的真好啊呜呜呜呜)"></a>标准答案模板学习…(别人写的真好啊呜呜呜呜)</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 货币兑换利率：1美元 = 7.14人民币      1元=0.12欧元</span></span><br><span class="line">service_menu = &#123;</span><br><span class="line">        <span class="number">1</span>:<span class="string">&#x27;人民币转换服务&#x27;</span>,</span><br><span class="line">        <span class="number">2</span>:<span class="string">&#x27;美元转换人民币&#x27;</span>,</span><br><span class="line">        <span class="number">3</span>:<span class="string">&#x27;人民币转换欧元&#x27;</span>,</span><br><span class="line">        <span class="number">0</span>:<span class="string">&#x27;结束程序&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;:*^35&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="string">&#x27;欢迎使用货币转换服务系统&#x27;</span>))</span><br><span class="line"><span class="keyword">for</span> your_choice <span class="keyword">in</span> service_menu:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;<span class="subst">&#123;your_choice&#125;</span>.<span class="subst">&#123;service_menu[your_choice]&#125;</span>&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>()</span><br><span class="line">your_choices = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入您的选择:&#x27;</span>))</span><br><span class="line"><span class="keyword">if</span> your_choices <span class="keyword">in</span> service_menu:</span><br><span class="line">    <span class="keyword">if</span> your_choices != <span class="number">0</span>:</span><br><span class="line">        your_money = <span class="built_in">float</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入您的金额:&#x27;</span>))</span><br><span class="line">        <span class="built_in">print</span>()</span><br><span class="line">        <span class="keyword">if</span> your_choices == <span class="number">1</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;欢迎使用&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(service_menu[your_choices]))</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;您需要转换的人民币为: &#123;&#125; 元&#x27;</span>.<span class="built_in">format</span>(your_money))</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;兑换成美元为:&#123;&#125;$&#x27;</span>.<span class="built_in">format</span>(your_money/<span class="number">7.14</span>))</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;=&#x27;</span>*<span class="number">45</span>)</span><br><span class="line">        <span class="keyword">elif</span> your_choices == <span class="number">2</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;欢迎使用&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(service_menu[your_choices]))</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;您需要转换的美元为: &#123;&#125;$&#x27;</span>.<span class="built_in">format</span>(your_money))</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;兑换成人民币为:&#123;&#125;元&#x27;</span>.<span class="built_in">format</span>(your_money*<span class="number">7.14</span>))</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;=&#x27;</span>*<span class="number">45</span>)</span><br><span class="line">        <span class="keyword">elif</span> your_choices == <span class="number">3</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;欢迎使用&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(service_menu[your_choices]))</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;您需要转换的人民币为: &#123;&#125; 元&#x27;</span>.<span class="built_in">format</span>(your_money))</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;兑换成欧元为:&#123;&#125;€&#x27;</span>.<span class="built_in">format</span>(your_money*<span class="number">0.12</span>))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;程序结束了&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;输入错误，请检查。&#x27;</span>)</span><br><span class="line">    </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程练习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 阶段编程练习(九)</title>
      <link href="/2021/59c42a970dff/"/>
      <url>/2021/59c42a970dff/</url>
      
        <content type="html"><![CDATA[<h3 id="编程练习"><a href="#编程练习" class="headerlink" title="编程练习"></a>编程练习</h3><blockquote><p>计算1到100以内能被3或者7整除，但不能同时被3和7整除的数的个数，运行结果为39</p></blockquote><h4 id="任务"><a href="#任务" class="headerlink" title="任务"></a>任务</h4><ol><li>定义变量<code>num</code>用来存放数值，<code>count</code>用来存放个数</li><li>使用<code>while</code>实现循环</li><li>通过<code>if</code>来<strong>设置符合的条件</strong>，符合条件<code>count</code>计数加1</li><li><strong>输出符合条件</strong>的总个数<code>count</code></li></ol><h4 id="任务提示"><a href="#任务提示" class="headerlink" title="任务提示"></a>任务提示</h4><ul><li><code>同时被3和7整除</code>，<strong>即为21的倍数</strong>；</li><li><code>除以21不等于0</code>即<strong>不能同时被3和7整除</strong></li></ul><h4 id="初始代码"><a href="#初始代码" class="headerlink" title="初始代码"></a>初始代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">num = <span class="number">1</span></span><br><span class="line">count = <span class="number">0</span></span><br><span class="line"><span class="comment"># 循环条件</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 循环体，设置条件</span></span><br><span class="line"><span class="comment"># 补全代码</span></span><br><span class="line"></span><br><span class="line">num = num + <span class="number">1</span></span><br><span class="line"><span class="built_in">print</span>(count)</span><br></pre></td></tr></table></figure><h4 id="代码提交区"><a href="#代码提交区" class="headerlink" title="代码提交区"></a>代码提交区</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">num = <span class="number">1</span></span><br><span class="line">count = <span class="number">0</span></span><br><span class="line"><span class="comment"># 循环条件</span></span><br><span class="line"><span class="keyword">while</span> num &lt; <span class="number">100</span>:</span><br><span class="line">    <span class="comment"># 循环体，设置条件</span></span><br><span class="line">    <span class="comment"># 补全代码</span></span><br><span class="line">    <span class="keyword">if</span> num % <span class="number">3</span> == <span class="number">0</span> <span class="keyword">or</span> num % <span class="number">7</span> == <span class="number">0</span>:</span><br><span class="line">        count += <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> num % <span class="number">21</span> == <span class="number">0</span>:</span><br><span class="line">        count -= <span class="number">1</span></span><br><span class="line">    num = num + <span class="number">1</span></span><br><span class="line"><span class="built_in">print</span>(count)</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">num = <span class="number">1</span></span><br><span class="line">count = <span class="number">0</span></span><br><span class="line"><span class="comment"># 循环条件</span></span><br><span class="line"><span class="keyword">while</span> num &lt; <span class="number">100</span>:</span><br><span class="line">    <span class="comment"># 循环体，设置条件</span></span><br><span class="line">    <span class="comment"># 补全代码</span></span><br><span class="line">    <span class="keyword">if</span> num % <span class="number">3</span> == <span class="number">0</span> <span class="keyword">or</span> num % <span class="number">7</span> == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">if</span> num % <span class="number">21</span> != <span class="number">0</span>:</span><br><span class="line">            count += <span class="number">1</span></span><br><span class="line">    num = num + <span class="number">1</span></span><br><span class="line"><span class="built_in">print</span>(count)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程练习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python [案例]循环实现九九乘法表</title>
      <link href="/2021/6df13ad17e49/"/>
      <url>/2021/6df13ad17e49/</url>
      
        <content type="html"><![CDATA[<h3 id="案例-循环实现九九乘法表"><a href="#案例-循环实现九九乘法表" class="headerlink" title="[案例]循环实现九九乘法表"></a>[案例]循环实现九九乘法表</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">10</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, i + <span class="number">1</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(i, j, i *j), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line">j = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> i &lt; <span class="number">9</span>:</span><br><span class="line">    i += <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> j &lt; <span class="number">9</span>:</span><br><span class="line">        j += <span class="number">1</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(j, i, i * j), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> i == j:</span><br><span class="line">            j = <span class="number">0</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程练习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 循环的继续与退出 continue and break</title>
      <link href="/2021/20a6caefe025/"/>
      <url>/2021/20a6caefe025/</url>
      
        <content type="html"><![CDATA[<h3 id="循环的继续与退出-continue-and-break"><a href="#循环的继续与退出-continue-and-break" class="headerlink" title="循环的继续与退出 continue and break"></a>循环的继续与退出 <code>continue and break</code></h3><h4 id="continue语法"><a href="#continue语法" class="headerlink" title="continue语法"></a>continue语法</h4><h5 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h5><ul><li>循环遇到<code>continue</code>将<strong>停止本次数据循环</strong> , 进入下一次循环</li></ul><h5 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> <span class="built_in">bool</span>:</span><br><span class="line"><span class="keyword">continue</span> </span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> iterable:</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="built_in">print</span>(item)</span><br></pre></td></tr></table></figure><h5 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h5><ul><li><code>continue</code>属于<code>语法</code>, <strong>不需要加 ( )即可执行</strong></li><li><code>无</code><strong>参数</strong></li></ul><h5 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h5><ul><li><code>continue是语法</code>,<strong>没有返回值</strong></li></ul><hr><h4 id="break语法"><a href="#break语法" class="headerlink" title="break语法"></a>break语法</h4><h5 id="功能-1"><a href="#功能-1" class="headerlink" title="功能"></a>功能</h5><ul><li>使循环<code>正常停止</code>循环(遍历)</li><li>这时如果循环<strong>配合了Else语句</strong>,else语句将<code>不执行</code></li></ul><h5 id="用法-1"><a href="#用法-1" class="headerlink" title="用法"></a>用法</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> <span class="built_in">bool</span>:</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> iterable:</span><br><span class="line"><span class="built_in">print</span>(item)</span><br><span class="line"><span class="keyword">break</span></span><br></pre></td></tr></table></figure><h5 id="参数-1"><a href="#参数-1" class="headerlink" title="参数"></a>参数</h5><ul><li><code>break属于语法</code>,<strong>不需要加()即可执行</strong></li><li><code>无</code><strong>参数</strong></li></ul><h5 id="返回值-1"><a href="#返回值-1" class="headerlink" title="返回值"></a>返回值</h5><ul><li><code>break是语法</code>,<strong>没有返回值</strong></li></ul><h4 id="条件语句与countinue-break-关系"><a href="#条件语句与countinue-break-关系" class="headerlink" title="条件语句与countinue break 关系"></a>条件语句与countinue break 关系</h4><ul><li><code>continue与break</code>通常伴随<strong>循环语句中的条件语句</strong>,<ul><li><code>满足某些条件</code>可以<strong>继续执行</strong>,</li><li><code>不满足</code>某些条件<strong>提前结束循环</strong></li></ul></li><li>在<code>while循环</code>中,<code>break语句</code><strong>优先于</strong><code>while逻辑体</code>的判断</li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">users = [</span><br><span class="line">    &#123;<span class="string">&#x27;username&#x27;</span>: <span class="string">&#x27;dewei&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">33</span>, <span class="string">&#x27;top&#x27;</span>: <span class="number">174</span>, <span class="string">&#x27;sex&#x27;</span>: <span class="string">&#x27;男&#x27;</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&#x27;username&#x27;</span>: <span class="string">&#x27;小慕&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">10</span>, <span class="string">&#x27;top&#x27;</span>: <span class="number">175</span>, <span class="string">&#x27;sex&#x27;</span>: <span class="string">&#x27;男&#x27;</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&#x27;username&#x27;</span>: <span class="string">&#x27;xiaoyun&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">18</span>,<span class="string">&#x27;top&#x27;</span>: <span class="number">165</span>, <span class="string">&#x27;sex&#x27;</span>: <span class="string">&#x27;女&#x27;</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&#x27;username&#x27;</span>: <span class="string">&#x27;xiaogao&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">18</span>, <span class="string">&#x27;top&#x27;</span>: <span class="number">188</span>, <span class="string">&#x27;sex&#x27;</span>: <span class="string">&#x27;男&#x27;</span>&#125;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">man = []</span><br><span class="line"><span class="keyword">for</span> user <span class="keyword">in</span> users:</span><br><span class="line">    <span class="keyword">if</span> user.get(<span class="string">&#x27;sex&#x27;</span>) == <span class="string">&#x27;女&#x27;</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    man.append(user)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;%s 加入了帮忙的行列&#x27;</span> % user.get(<span class="string">&#x27;username&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(man)</span><br><span class="line"></span><br><span class="line">l = <span class="built_in">range</span>(<span class="number">100</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> l:</span><br><span class="line">    <span class="keyword">if</span> i == <span class="number">80</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;-----&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;已经循环80次了,程序要退出啦&#x27;</span>)</span><br><span class="line">        <span class="comment"># break</span></span><br><span class="line">    <span class="built_in">print</span>(i)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;循环正常退出了!&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;start hello!&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 循环 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 阶段编程练习(八)</title>
      <link href="/2021/bd733cb5b635/"/>
      <url>/2021/bd733cb5b635/</url>
      
        <content type="html"><![CDATA[<h3 id="编程练习"><a href="#编程练习" class="headerlink" title="编程练习"></a>编程练习</h3><blockquote><p>计算从1到1000以内所有奇数的和，并进行输出，结果为250000</p></blockquote><h4 id="任务"><a href="#任务" class="headerlink" title="任务"></a>任务</h4><ol><li>定义变量sum1和 num1，sum1用于存放所有奇数和，num1用于存放数值，并对其赋初始值</li><li>使用while来实现1-1000以内的循环</li><li>用if语句实现条件判断，是否为奇数</li><li>输出符合条件的所有奇数的和</li></ol><h4 id="任务提示"><a href="#任务提示" class="headerlink" title="任务提示"></a>任务提示</h4><ul><li>不能被2整除的数为奇数</li></ul><h4 id="原始代码"><a href="#原始代码" class="headerlink" title="原始代码"></a>原始代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sum1 = <span class="number">0</span></span><br><span class="line">num1 = <span class="number">1</span></span><br><span class="line"><span class="comment"># 循环条件</span></span><br><span class="line"><span class="comment"># 判断条件</span></span><br><span class="line"><span class="comment"># 求和</span></span><br><span class="line">num1 = num1 + <span class="number">1</span></span><br><span class="line"><span class="built_in">print</span>(sum1)</span><br></pre></td></tr></table></figure><h4 id="代码提交区"><a href="#代码提交区" class="headerlink" title="代码提交区"></a>代码提交区</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">sum1 = <span class="number">0</span></span><br><span class="line">num1 = <span class="number">1</span></span><br><span class="line"><span class="comment"># 循环条件</span></span><br><span class="line"><span class="keyword">while</span> num1 &lt;= <span class="number">1000</span>:</span><br><span class="line">    <span class="comment"># 判断条件</span></span><br><span class="line">    <span class="keyword">if</span> num1 % <span class="number">2</span> != <span class="number">0</span>:</span><br><span class="line">        <span class="comment"># 求和</span></span><br><span class="line">        sum1 += num1</span><br><span class="line">    num1 = num1 + <span class="number">1</span></span><br><span class="line"><span class="built_in">print</span>(sum1)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="结果检验区"><a href="#结果检验区" class="headerlink" title="结果检验区"></a>结果检验区</h4><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">C:\<span class="title">Users</span>\<span class="title">admin</span>\<span class="title">PycharmProjects</span>\<span class="title">python_iterable</span>\<span class="title">venv</span>\<span class="title">Scripts</span>\<span class="title">python.exe</span> </span></span><br><span class="line"><span class="function"><span class="title">C</span>:/<span class="title">Users</span>/<span class="title">admin</span>/<span class="title">PycharmProjects</span>/<span class="title">python_iterable</span>/<span class="title">test_2.py</span></span></span><br><span class="line"><span class="function">250000</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">进程已结束，退出代码为 0</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程练习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python while循环</title>
      <link href="/2021/93b058208e31/"/>
      <url>/2021/93b058208e31/</url>
      
        <content type="html"><![CDATA[<h3 id="while循环"><a href="#while循环" class="headerlink" title="while循环"></a>while循环</h3><h4 id="什么是while循环"><a href="#什么是while循环" class="headerlink" title="什么是while循环"></a>什么是while循环</h4><ul><li>以<code>一定条件</code>为<strong>基础</strong>的循环,条件<code>满足</code>则<strong>无限循环</strong>,条件<code>不满足</code><strong>退出循环</strong></li><li><code>不依赖</code>可迭代的数据类型,而<code>for循环依赖</code></li></ul><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li>在<strong>满足条件</strong>下会<code>无限循环</code>,<strong>不满足条件</strong>后将<code>停止循环</code></li></ul><h4 id="while用法"><a href="#while用法" class="headerlink" title="while用法"></a>while用法</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> bool_result:</span><br><span class="line">do</span><br></pre></td></tr></table></figure><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><ul><li><p><code>bool_result</code>: <strong>布尔类型</strong>,此处与<code>If语法完全一致</code></p></li><li><p><code>do</code>: while循环体的<strong>代码块</strong>    <strong>#需要缩进</strong></p></li></ul><h4 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h4><ul><li><code>while循环</code>是<code>语句</code>,<strong>没有返回值</strong></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">count = <span class="number">0</span></span><br><span class="line">total = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> count &lt;= <span class="number">100</span>:</span><br><span class="line">    total += count</span><br><span class="line">    count += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> count == <span class="number">10</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;count 已经到10了&#x27;</span>)</span><br><span class="line">    <span class="keyword">elif</span> count == <span class="number">50</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;count 已经到50了&#x27;</span>)</span><br><span class="line">    <span class="keyword">elif</span> count == <span class="number">99</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;count 马上就要到100了!&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(total)</span><br><span class="line"></span><br><span class="line">users = [<span class="string">&#x27;dewei&#x27;</span>, <span class="string">&#x27;xiaomu&#x27;</span>, <span class="string">&#x27;xiaogang&#x27;</span>, <span class="string">&#x27;xiaoming&#x27;</span>]</span><br><span class="line">index = <span class="number">0</span></span><br><span class="line">length = <span class="built_in">len</span>(users)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> index &lt;= length - <span class="number">1</span>:</span><br><span class="line">    <span class="built_in">print</span>(users[index])</span><br><span class="line">    index += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;xx&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 循环 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 阶段编程练习 (七)</title>
      <link href="/2021/0046389a0945/"/>
      <url>/2021/0046389a0945/</url>
      
        <content type="html"><![CDATA[<h3 id="编程练习"><a href="#编程练习" class="headerlink" title="编程练习"></a>编程练习</h3><blockquote><p>编写一个程序生成一个包含(i, i<em>i)的字典（i是key，i</em>i是value），该字典包含1到8之间的整数(两者都包含)。然后打印该字典。</p><p>效果如下:</p><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-10-16/1.png" alt="1"></p></blockquote><h4 id="任务提示"><a href="#任务提示" class="headerlink" title="任务提示"></a>任务提示</h4><ol><li>定义一个整型变量，值为8</li><li>使用dict类型()</li></ol><h4 id="原始代码"><a href="#原始代码" class="headerlink" title="原始代码"></a>原始代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># 定义一个整数</span></span><br><span class="line">n = <span class="number">8</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="代码提交区"><a href="#代码提交区" class="headerlink" title="代码提交区"></a>代码提交区</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义一个整数</span></span><br><span class="line">n = <span class="number">8</span></span><br><span class="line">dict_eight = &#123;&#125;</span><br><span class="line"></span><br><span class="line">l = <span class="built_in">range</span>(<span class="number">8</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> l:</span><br><span class="line">    <span class="keyword">if</span> i &lt; n:</span><br><span class="line">        a = i + <span class="number">1</span></span><br><span class="line">        b = (i + <span class="number">1</span>) ** <span class="number">2</span></span><br><span class="line">        dict_eight[a] = b</span><br><span class="line"><span class="built_in">print</span>(dict_eight)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="结果检验区"><a href="#结果检验区" class="headerlink" title="结果检验区"></a>结果检验区</h4><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">C:\<span class="title">Users</span>\<span class="title">admin</span>\<span class="title">PycharmProjects</span>\<span class="title">python_iterable</span>\<span class="title">venv</span>\<span class="title">Scripts</span>\<span class="title">python.exe</span> </span></span><br><span class="line"><span class="function"><span class="title">C</span>:/<span class="title">Users</span>/<span class="title">admin</span>/<span class="title">PycharmProjects</span>/<span class="title">python_iterable</span>/<span class="title">test_new.py</span></span></span><br><span class="line"><span class="function">&#123;1: 1, 2: 4, 3: 9, 4: 16, 5: 25, 6: 36, 7: 49, 8: 64&#125;</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">进程已结束，退出代码为 0</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程练习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 嵌套for循环</title>
      <link href="/2021/2680d5950f06/"/>
      <url>/2021/2680d5950f06/</url>
      
        <content type="html"><![CDATA[<h4 id="嵌套for循环"><a href="#嵌套for循环" class="headerlink" title="嵌套for循环"></a>嵌套for循环</h4><ul><li><code>for循环</code>中的<code>for循环</code></li></ul><h5 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">a = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">b = [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> a:</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;------&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> b:</span><br><span class="line">        <span class="built_in">print</span>(i + j)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;=======&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(i, j)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 循环 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pyhton 阶段编程练习(六)</title>
      <link href="/2021/dd5fcdd0b984/"/>
      <url>/2021/dd5fcdd0b984/</url>
      
        <content type="html"><![CDATA[<h3 id="编程练习"><a href="#编程练习" class="headerlink" title="编程练习"></a>编程练习</h3><blockquote><p>已知一个列表，存储1到10的元素，遍历循环输出列表中的所有偶数。</p><p>运行结果：</p><p>第 1 个偶数 2</p><p>第 2 个偶数 4</p><p>第 3 个偶数 6</p><p>第 4 个偶数 8</p><p>第 5 个偶数 10</p></blockquote><h4 id="任务"><a href="#任务" class="headerlink" title="任务"></a>任务</h4><ul><li><p>定义一个列表numList，存储元素为1到10的所有整数</p></li><li><p>for循环遍历输出所有列表中的偶数</p></li></ul><h4 id="任务提示"><a href="#任务提示" class="headerlink" title="任务提示"></a>任务提示</h4><ul><li><code>注意</code>：输出格式</li></ul><h4 id="作业提交"><a href="#作业提交" class="headerlink" title="作业提交"></a>作业提交</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">list</span> = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>]</span><br><span class="line">a = <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">10</span>, <span class="number">2</span>)</span><br><span class="line">b = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> a:</span><br><span class="line">    b = b + <span class="number">1</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;第%s个偶数&#x27;</span> % b, <span class="built_in">list</span>[i])</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程练习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 循环与for循环</title>
      <link href="/2021/df1a44535dfc/"/>
      <url>/2021/df1a44535dfc/</url>
      
        <content type="html"><![CDATA[<h3 id="循环与for循环"><a href="#循环与for循环" class="headerlink" title="循环与for循环"></a>循环与for循环</h3><h4 id="什么是循环"><a href="#什么是循环" class="headerlink" title="什么是循环"></a>什么是循环</h4><ul><li><code>周而复始</code>地<strong>运动</strong>或<strong>变化</strong></li><li><strong>遍历</strong></li></ul><h4 id="for循环的功能与用法"><a href="#for循环的功能与用法" class="headerlink" title="for循环的功能与用法"></a>for循环的功能与用法</h4><ul><li>通过<code>for关键字</code>将<code>列表, 元组, 字符串, 字典</code>中的<code>每个元素</code>按照<code>列顺序</code>进行<strong>遍历(循环)</strong></li></ul><h4 id="字典的for循环"><a href="#字典的for循环" class="headerlink" title="字典的for循环"></a>字典的for循环</h4><h5 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> iterable :  <span class="comment"># for循环语法块</span></span><br><span class="line"><span class="built_in">print</span>(item)<span class="comment"># 每次循环对应的代码块</span></span><br><span class="line">代码块需要缩进</span><br></pre></td></tr></table></figure><h5 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h5><ul><li><code>iterable</code>: 一切可循环的数据类型 如列表 元组 字符串 字典</li><li><code>item</code> : iterable中的每一个元素(成员)</li></ul><h5 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h5><ul><li>for循环是语句,<code>没有</code>返回值,但在特定情况下<strong>有返回值</strong></li></ul><h4 id="字典利用items内置函数进行for循环"><a href="#字典利用items内置函数进行for循环" class="headerlink" title="字典利用items内置函数进行for循环"></a>字典利用<code>items内置函数</code>进行<strong>for循环</strong></h4><h5 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h5><ul><li>将字典转成<code>伪列表</code> , 每个<code>key</code> , <code>value</code>转成<code>元组</code></li></ul><h5 id="用法-1"><a href="#用法-1" class="headerlink" title="用法"></a>用法</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> key, value <span class="keyword">in</span> <span class="built_in">dict</span>.items():</span><br><span class="line"><span class="built_in">print</span>(key, value)</span><br></pre></td></tr></table></figure><h5 id="参数-1"><a href="#参数-1" class="headerlink" title="参数"></a>参数</h5><ul><li><code>items</code>无参数</li><li><code>key</code> : <code>for循环体</code>中获取的<strong>字典当前元素的key</strong></li><li><code>value</code> : <code>for循环体</code>中<strong>对应当前key的value值</strong></li></ul><h5 id="返回值-1"><a href="#返回值-1" class="headerlink" title="返回值"></a>返回值</h5><ul><li><code>for循环</code>是语句, <strong>没有返回值</strong>, <code>items</code><strong>返回一个伪列表</strong></li></ul><h4 id="python的内置函数–range"><a href="#python的内置函数–range" class="headerlink" title="python的内置函数–range"></a>python的内置函数–range</h4><h5 id="功能-1"><a href="#功能-1" class="headerlink" title="功能"></a>功能</h5><ul><li>返回的是一个一定范围的可迭代对象, 元素为整形, 它不是列表 ,无法打印信息,但可循环.</li></ul><h5 id="用法-2"><a href="#用法-2" class="headerlink" title="用法"></a>用法</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">for item in range(start, stop, step=1):</span><br><span class="line"></span><br><span class="line">print(item)</span><br></pre></td></tr></table></figure><h5 id="参数-2"><a href="#参数-2" class="headerlink" title="参数"></a>参数</h5><ul><li><p><code>start</code>:<strong>开始的数字</strong>,类似索引的左边(左含)</p></li><li><p><code>stop</code>:<strong>结束的数字</strong>,类似索引的右边(右不含)</p></li><li><p><code>step</code>:<strong>跳步</strong>,类似于索引中的第三个参数</p></li></ul><h5 id="返回值-2"><a href="#返回值-2" class="headerlink" title="返回值"></a>返回值</h5><ul><li>返回一个可迭代(循环的)以整形为主的对象</li></ul><h4 id="else在for循环中使用"><a href="#else在for循环中使用" class="headerlink" title="else在for循环中使用"></a>else在for循环中使用</h4><ul><li><code>else语句</code>只有在<strong>for循环正常退出</strong>后执行</li><li>循环<code>没有报错</code>, <code>没有中途停止</code></li></ul><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">l = [<span class="string">&#x27;dewei&#x27;</span>, <span class="string">&#x27;xiaomu&#x27;</span>, <span class="string">&#x27;xiaoman&#x27;</span>, <span class="string">&#x27;xiaoming&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> l:</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;finish&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="string">&#x27;python&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br><span class="line"></span><br><span class="line">users = (<span class="string">&#x27;dewei&#x27;</span>, <span class="string">&#x27;xiaoman&#x27;</span>, <span class="string">&#x27;xiaomu&#x27;</span>, <span class="string">&#x27;xiaoming&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> name <span class="keyword">in</span> users:</span><br><span class="line">    <span class="keyword">if</span> name == <span class="string">&#x27;xiaomu&#x27;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;你好 小慕&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;hello &#123;&#125;, 欢迎学习python&#x27;</span>.<span class="built_in">format</span>(name))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;------------&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;finish---&#x27;</span>)</span><br><span class="line"></span><br><span class="line">users = &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;dewei&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">33</span>&#125;</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> users:</span><br><span class="line">    <span class="built_in">print</span>(i, users[i])</span><br><span class="line"></span><br><span class="line">items = users.items()</span><br><span class="line"><span class="built_in">print</span>(items)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> key, value <span class="keyword">in</span> users.items():</span><br><span class="line">    <span class="built_in">print</span>(key, value)</span><br><span class="line"></span><br><span class="line">users_list = [</span><br><span class="line">    &#123;<span class="string">&#x27;username&#x27;</span>: <span class="string">&#x27;dewei&#x27;</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&#x27;username&#x27;</span>: <span class="string">&#x27;xiaomu&#x27;</span>&#125;</span><br><span class="line">]</span><br><span class="line"><span class="keyword">for</span> user <span class="keyword">in</span> users_list:</span><br><span class="line">    <span class="built_in">print</span>(user.get(<span class="string">&#x27;username&#x27;</span>))</span><br><span class="line">    <span class="built_in">print</span>(user.get(<span class="string">&#x27;age&#x27;</span>))</span><br><span class="line"></span><br><span class="line">l = <span class="built_in">range</span>(<span class="number">6</span>)</span><br><span class="line"><span class="built_in">print</span>(l, <span class="built_in">type</span>(l))</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> l:</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;for循环结束了&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 循环 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 阶段编程练习(五)</title>
      <link href="/2021/a305be767dd4/"/>
      <url>/2021/a305be767dd4/</url>
      
        <content type="html"><![CDATA[<h3 id="编程练习-五"><a href="#编程练习-五" class="headerlink" title="编程练习(五)"></a>编程练习(五)</h3><blockquote><ol><li>输入身高与体重并打印</li><li>身体状况指数是身体质量指数即BMI指数，计算公式为：BMI=体重（千克）除以身高（米）的平方</li><li>判断身体BMI指数：</li></ol><ul><li>条件<ul><li>如果小于18.5，打印“过轻”</li><li>如果大于等于18.5并且小于等于25，打印“正常”</li><li>如果大于25并且小于等于28，打印“过重”</li><li>如果大于28并且小于等于32，打印“肥胖”</li><li>否则，打印“严重肥胖”</li></ul></li></ul><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-10-6/4.jpg" alt="4"></p></blockquote><h5 id="初始代码"><a href="#初始代码" class="headerlink" title="初始代码"></a>初始代码</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding: utf-8</span></span><br><span class="line">height = <span class="built_in">float</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入身高：&#x27;</span>))</span><br><span class="line">weight = <span class="built_in">float</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入体重：&#x27;</span>))</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="作业提交区"><a href="#作业提交区" class="headerlink" title="作业提交区"></a>作业提交区</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding: utf-8</span></span><br><span class="line"></span><br><span class="line">height = <span class="built_in">float</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入身高：&#x27;</span>))</span><br><span class="line">weight = <span class="built_in">float</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入体重：&#x27;</span>))</span><br><span class="line"></span><br><span class="line">BMI = weight / height ** <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;小明身高为%s,体重为%s&#x27;</span> % (height, weight))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;小明身高状况指数为%s&#x27;</span> % BMI)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> BMI &lt; <span class="number">18.5</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;过轻&#x27;</span>)</span><br><span class="line"><span class="keyword">elif</span> <span class="number">18.5</span> &lt; BMI &lt;= <span class="number">25</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;正常&#x27;</span>)</span><br><span class="line"><span class="keyword">elif</span> <span class="number">25</span> &lt; BMI &lt;=<span class="number">28</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;过重&#x27;</span>)</span><br><span class="line"><span class="keyword">elif</span> <span class="number">28</span> &lt; BMI &lt;= <span class="number">32</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;肥胖&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;严重肥胖&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="结果检验区"><a href="#结果检验区" class="headerlink" title="结果检验区"></a>结果检验区</h5><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">C:\<span class="title">Users</span>\<span class="title">admin</span>\<span class="title">PycharmProjects</span>\<span class="title">pythonlearn</span>\<span class="title">venv</span>\<span class="title">Scripts</span>\<span class="title">python.exe</span> <span class="title">C</span>:/<span class="title">Users</span>/<span class="title">admin</span>/<span class="title">PycharmProjects</span>/<span class="title">python_if</span>/<span class="title">test_5.py</span></span></span><br><span class="line"><span class="function">请输入身高：1.65</span></span><br><span class="line"><span class="function">请输入体重：55</span></span><br><span class="line"><span class="function">小明身高为1.65,体重为55.0</span></span><br><span class="line"><span class="function">小明身高状况指数为20.202020202020204</span></span><br><span class="line"><span class="function">正常</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">进程已结束，退出代码为 0</span></span><br><span class="line"><span class="function"></span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程练习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 条件语句中的elif</title>
      <link href="/2021/3652adc4b943/"/>
      <url>/2021/3652adc4b943/</url>
      
        <content type="html"><![CDATA[<h3 id="条件语句中的elif"><a href="#条件语句中的elif" class="headerlink" title="条件语句中的elif"></a>条件语句中的<code>elif</code></h3><h4 id="什么是elif"><a href="#什么是elif" class="headerlink" title="什么是elif"></a>什么是<code>elif</code></h4><ul><li><code>elif</code>(或者如果)对于命题的<strong>非第一次的多种判断</strong> , <strong>每一种判断条件</strong><code>对应一组业务代码</code></li></ul><h4 id="条件语句的说明"><a href="#条件语句的说明" class="headerlink" title="条件语句的说明"></a>条件语句的说明</h4><ul><li>对于首次if判断不满足后 , 其他条件的判断语句</li></ul><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> bool_result :</span><br><span class="line">do</span><br><span class="line"><span class="keyword">elif</span> bool_result:</span><br><span class="line">elifdo <span class="comment"># 当前elif语句对应的语法块</span></span><br><span class="line"><span class="keyword">elif</span> bool_result:</span><br><span class="line">elifdo <span class="comment"># 缩进等级与do语法块一致</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">elsedo</span><br></pre></td></tr></table></figure><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-10-6/2.jpg" alt="2"></p><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-10-6/3.png" alt="3"></p><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><ul><li><code>elifdo</code> : 当前<code>elif语句</code><strong>对应</strong>的<code>python</code>代码</li></ul><h4 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h4><ul><li> <code>elif属于语法</code> , <strong>没有返回值</strong></li></ul><h4 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h4><ul><li>条件语句中<code>满足一个条件</code>后 , 将<code>退出</code><strong>当前条件语句</strong></li><li>每个条件语句中仅<code>有且必须有</code>一个<code>if语句</code> <ul><li>可以有<code>0个或多个</code>  <code>elif语句</code></li><li>可以有<code>0个或1个</code> <code>else语句</code></li></ul></li><li>每个<code>条件语句</code>      <code>if</code>  <strong>必须是第一个条件语句</strong></li></ul><h4 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h4><ul><li>有一个班级,班级有很多同学,每个同学有如下信息: <code>名字 年龄 分数</code> , 现在来了一个插班生,将这个小明放到成绩单里,这里要做判断,如果班级里有小明,就说明重名了,那么要给新的小明的后面加个新字并存入</li><li>用列表与字典两种类型, 用两种方法做题</li></ul><h5 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">number = <span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> number &gt; <span class="number">10</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;number的值大于10&#x27;</span>)</span><br><span class="line"><span class="keyword">elif</span> <span class="number">5</span> &lt; number &lt;= <span class="number">10</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;number的值在5和10之间&#x27;</span>)</span><br><span class="line"><span class="keyword">elif</span> <span class="number">5</span> &gt;= number &gt; <span class="number">0</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;number的值是1~5&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;number的值是0或者复数&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;finish&#x27;</span>)</span><br><span class="line"></span><br><span class="line">users = [</span><br><span class="line">    (<span class="string">&#x27;dewei&#x27;</span>, <span class="number">30</span>, <span class="number">90</span>),</span><br><span class="line">    (<span class="string">&#x27;xiaomu&#x27;</span>, <span class="number">10</span>, <span class="number">99</span>),</span><br><span class="line">    (<span class="string">&#x27;xiaoming&#x27;</span>, <span class="number">18</span>, <span class="number">100</span>)</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">xiaoming = [<span class="string">&#x27;xiaoming&#x27;</span>, <span class="number">19</span>, <span class="number">90</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> users[<span class="number">0</span>][<span class="number">0</span>] == xiaoming[<span class="number">0</span>]:</span><br><span class="line">    xiaoming[<span class="number">0</span>] = <span class="string">&#x27;%s_new&#x27;</span> % xiaoming[<span class="number">0</span>]</span><br><span class="line">    users.append(xiaoming)</span><br><span class="line"><span class="keyword">elif</span> users[<span class="number">1</span>][<span class="number">0</span>] == xiaoming[<span class="number">0</span>]:</span><br><span class="line">    xiaoming[<span class="number">0</span>] = <span class="string">&#x27;%s_new&#x27;</span> % xiaoming[<span class="number">0</span>]</span><br><span class="line">    users.append(xiaoming)</span><br><span class="line"><span class="keyword">elif</span> users[<span class="number">2</span>][<span class="number">0</span>] == xiaoming[<span class="number">0</span>]:</span><br><span class="line">    xiaoming[<span class="number">0</span>] = <span class="string">&#x27;%s_new&#x27;</span> % xiaoming[<span class="number">0</span>]</span><br><span class="line">    users.append(xiaoming)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    users.append(xiaoming)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(users)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">users = &#123;</span><br><span class="line">    <span class="string">&#x27;dewei&#x27;</span>: &#123;<span class="string">&#x27;age&#x27;</span>: <span class="number">33</span>, <span class="string">&#x27;count&#x27;</span>: <span class="number">90</span>&#125;,</span><br><span class="line">    <span class="string">&#x27;xiaomu&#x27;</span>: &#123;<span class="string">&#x27;age&#x27;</span>: <span class="number">10</span>, <span class="string">&#x27;count&#x27;</span>: <span class="number">99</span>&#125;,</span><br><span class="line">    <span class="string">&#x27;xiaoming&#x27;</span>: &#123;<span class="string">&#x27;age&#x27;</span>: <span class="number">18</span>, <span class="string">&#x27;count&#x27;</span>: <span class="number">100</span>&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> xiaoming[<span class="number">0</span>] <span class="keyword">in</span> users:</span><br><span class="line">    xiaoming[<span class="number">0</span>] = <span class="string">&#x27;%s_new&#x27;</span> % xiaoming[<span class="number">0</span>]</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    users[xiaoming[<span class="number">0</span>]] = &#123;<span class="string">&#x27;age&#x27;</span>: xiaoming[<span class="number">1</span>], <span class="string">&#x27;count&#x27;</span>: xiaoming[<span class="number">2</span>]&#125;</span><br><span class="line"><span class="built_in">print</span>(users)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 条件语句 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 条件语句中的else</title>
      <link href="/2021/bcfc19294f17/"/>
      <url>/2021/bcfc19294f17/</url>
      
        <content type="html"><![CDATA[<h3 id="条件语句中的else"><a href="#条件语句中的else" class="headerlink" title="条件语句中的else"></a>条件语句中的<code>else</code></h3><h4 id="什么是else"><a href="#什么是else" class="headerlink" title="什么是else"></a>什么是else</h4><ul><li><code>else</code> 就是对于<code>if条件不满足的时候</code>执行<code>另一个代码块</code>的<code>入口</code></li><li><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-10-6/1.jpg" alt="1"></li></ul><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li>当if语句<code>不满足时</code>所执行的<strong>代码块</strong>的<code>入口</code></li></ul><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">if bool_result :</span><br><span class="line">do</span><br><span class="line">else:</span><br><span class="line">elsedo  # else语法快 , 需缩进</span><br><span class="line"># 缩进等级与do语法块一致</span><br></pre></td></tr></table></figure><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><ul><li><code>elsedo</code> : else 语句对应的python代码块</li></ul><h4 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h4><ul><li><code>else属于语法</code> , 没有<strong>返回值</strong></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;https://code.maylove.pub&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="string">&#x27;code.maylove.pub&#x27;</span> <span class="keyword">in</span> url:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;你进入了编程日志记录web,请查阅相关知识&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;请前往code.maylove.pub获取内容&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="string">&#x27;code.maylove.pub&#x27;</span> <span class="keyword">in</span> url:</span><br><span class="line">    _url = <span class="string">&#x27;code.maylove.pub&#x27;</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    _url = <span class="literal">None</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;_url is %s&#x27;</span> % _url)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="number">3</span>-<span class="number">3</span> :</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;b&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 条件语句 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 逻辑判断的应用与总结</title>
      <link href="/2021/e9dc53dfaef4/"/>
      <url>/2021/e9dc53dfaef4/</url>
      
        <content type="html"><![CDATA[<h3 id="1-3-逻辑判断的应用与总结"><a href="#1-3-逻辑判断的应用与总结" class="headerlink" title="1-3 逻辑判断的应用与总结"></a>1-3 逻辑判断的应用与总结</h3><h4 id="逻辑判断的定义"><a href="#逻辑判断的定义" class="headerlink" title="逻辑判断的定义"></a>逻辑判断的定义</h4><p>所谓的逻辑判断就是在一个程序中要<code>对判断的语句</code>进行<code>真与假</code>的结果判定，</p><p>逻辑判断结果的<strong>最基本标准</strong>是<code>布尔类型</code>。</p><p>布尔类型只有<code>两个值</code>：</p><p><code>True</code>和<code>False</code>，</p><p>在<strong>Python语言</strong>中对应的是<code>1</code>和<code>0</code>。<br>请看以下例子：</p><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-10-6/1.jpg" alt="1"></p><p>在程序中， 如果name等于“小司”</p><ul><li><p>则程序会做相应的逻辑处理</p></li><li><p>把name改成“小李”</p></li><li><p>并打印“小李”</p></li></ul><p>如果name不等于“小司”</p><ul><li>则程序跳出if判断之后去打印name</li></ul><p>结果输出发现name的变量值变成了“小李”</p><p>代表这个判断是True</p><p>所以会走到if下面的代码块。</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 条件语句 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 初识逻辑与if语句</title>
      <link href="/2021/179b54b5d552/"/>
      <url>/2021/179b54b5d552/</url>
      
        <content type="html"><![CDATA[<h3 id="初识逻辑与if语句"><a href="#初识逻辑与if语句" class="headerlink" title="初识逻辑与if语句"></a>初识逻辑与<code>if</code>语句</h3><h4 id="逻辑判断与逻辑语句"><a href="#逻辑判断与逻辑语句" class="headerlink" title="逻辑判断与逻辑语句"></a>逻辑判断与逻辑语句</h4><ul><li>对于一件事情正确与否(真假的判断)</li><li>根据判断的结果做不同的事情 , 就是我们的逻辑业务</li><li>对于条件满足的判断语句 , 就是条件语句</li></ul><blockquote><p>一个逻辑语句是由条件语句和业务语句组合而成的</p></blockquote><h4 id="if语句"><a href="#if语句" class="headerlink" title="if语句"></a>if语句</h4><h5 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h5><ul><li>判断一个命题的真实性 , 如果命题为真(True)则执行if的逻辑语句</li></ul><h5 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h5><ul><li><code>if bool_result : # 语法</code>块</li><li>​            <code>do         # 业务代码块   注意缩进</code><ul><li>缩进是由一个<code>TAB</code>或者<code>四个空格</code>组成的</li></ul></li><li>in  and</li></ul><h5 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h5><ul><li><code>if 属于关键字</code>  ,  <strong>没有返回值</strong></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">info = <span class="string">&#x27;my name is xiaomu&#x27;</span></span><br><span class="line"></span><br><span class="line">info_list = info.split()</span><br><span class="line"><span class="built_in">print</span>(info_list)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> info_list[<span class="number">0</span>] == <span class="string">&#x27;xiaomu&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="number">1</span>)</span><br><span class="line">    info_list[<span class="number">0</span>] = <span class="string">&#x27;dewei&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> info_list[<span class="number">1</span>] == <span class="string">&#x27;xiaomu&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="number">2</span>)</span><br><span class="line">    info_list[<span class="number">1</span>] = <span class="string">&#x27;dewei&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> info_list[<span class="number">2</span>] == <span class="string">&#x27;xiaomu&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="number">3</span>)</span><br><span class="line">    info_list[<span class="number">2</span>] = <span class="string">&#x27;dewei&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> info_list[-<span class="number">1</span>] == <span class="string">&#x27;xiaomu&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="number">4</span>)</span><br><span class="line">    info_list[-<span class="number">1</span>] = <span class="string">&#x27;dewei&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(info_list)</span><br><span class="line">info = <span class="string">&#x27; &#x27;</span>.join(info_list)</span><br><span class="line"><span class="built_in">print</span>(info)</span><br><span class="line"></span><br><span class="line">info = <span class="string">&#x27;my name is dewei, i am a pythoner, i love python&#x27;</span></span><br><span class="line">info_list = info.split()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> info_list[<span class="number">0</span>] <span class="keyword">in</span> [<span class="string">&#x27;python&#x27;</span>, <span class="string">&#x27;i&#x27;</span>]:</span><br><span class="line">    info_list[<span class="number">0</span>] = <span class="string">&#x27;*&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> info_list[<span class="number">1</span>] == <span class="string">&#x27;python&#x27;</span> <span class="keyword">or</span> info_list[<span class="number">1</span>] == <span class="string">&#x27;i&#x27;</span>:</span><br><span class="line">    info_list[<span class="number">1</span>] = <span class="string">&#x27;*&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> info_list[<span class="number">2</span>] == <span class="string">&#x27;python&#x27;</span> <span class="keyword">or</span> info_list[<span class="number">2</span>] == <span class="string">&#x27;i&#x27;</span>:</span><br><span class="line">    info_list[<span class="number">2</span>] = <span class="string">&#x27;*&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> info_list[<span class="number">3</span>] == <span class="string">&#x27;python&#x27;</span> <span class="keyword">or</span> info_list[<span class="number">3</span>] == <span class="string">&#x27;i&#x27;</span>:</span><br><span class="line">    info_list[<span class="number">3</span>] = <span class="string">&#x27;*&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> info_list[<span class="number">4</span>] == <span class="string">&#x27;python&#x27;</span> <span class="keyword">or</span> info_list[<span class="number">4</span>] == <span class="string">&#x27;i&#x27;</span>:</span><br><span class="line">    info_list[<span class="number">4</span>] = <span class="string">&#x27;*&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> info_list[<span class="number">5</span>] == <span class="string">&#x27;python&#x27;</span> <span class="keyword">or</span> info_list[<span class="number">5</span>] == <span class="string">&#x27;i&#x27;</span>:</span><br><span class="line">    info_list[<span class="number">5</span>] = <span class="string">&#x27;*&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> info_list[<span class="number">6</span>] == <span class="string">&#x27;python&#x27;</span> <span class="keyword">or</span> info_list[<span class="number">6</span>] == <span class="string">&#x27;i&#x27;</span>:</span><br><span class="line">    info_list[<span class="number">6</span>] = <span class="string">&#x27;*&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> info_list[<span class="number">7</span>] == <span class="string">&#x27;python&#x27;</span> <span class="keyword">or</span> info_list[<span class="number">7</span>] == <span class="string">&#x27;i&#x27;</span>:</span><br><span class="line">    info_list[<span class="number">7</span>] = <span class="string">&#x27;*&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> info_list[<span class="number">8</span>] == <span class="string">&#x27;python&#x27;</span> <span class="keyword">or</span> info_list[<span class="number">8</span>] == <span class="string">&#x27;i&#x27;</span>:</span><br><span class="line">    info_list[<span class="number">8</span>] = <span class="string">&#x27;*&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> info_list[<span class="number">9</span>] == <span class="string">&#x27;python&#x27;</span> <span class="keyword">or</span> info_list[<span class="number">9</span>] == <span class="string">&#x27;i&#x27;</span>:</span><br><span class="line">    info_list[<span class="number">9</span>] = <span class="string">&#x27;*&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> info_list[-<span class="number">1</span>] <span class="keyword">in</span> [<span class="string">&#x27;python&#x27;</span>, <span class="string">&#x27;i&#x27;</span>]:</span><br><span class="line">    info_list[<span class="number">10</span>] = <span class="string">&#x27;*&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(info_list)</span><br><span class="line"></span><br><span class="line">info = <span class="string">&#x27; &#x27;</span>.join(info_list)</span><br><span class="line"><span class="built_in">print</span>(info)</span><br><span class="line"></span><br><span class="line">info = <span class="string">&#x27;my name is dewei&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(info))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(info) &gt; <span class="number">10</span> <span class="keyword">and</span> <span class="built_in">len</span>(info) != <span class="number">16</span>:</span><br><span class="line">    <span class="built_in">print</span>(info.replace(<span class="string">&#x27;dewei&#x27;</span>, <span class="string">&#x27;xiaomu&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;finish&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 逻辑 </tag>
            
            <tag> 条件语句 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 综合案例:九九乘法表</title>
      <link href="/2021/47bf9691d9e3/"/>
      <url>/2021/47bf9691d9e3/</url>
      
        <content type="html"><![CDATA[<h3 id="综合案例-九九乘法表"><a href="#综合案例-九九乘法表" class="headerlink" title="综合案例:九九乘法表"></a>综合案例:九九乘法表</h3><h5 id="图片版代码"><a href="#图片版代码" class="headerlink" title="图片版代码"></a>图片版代码</h5><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-10-5/carbon.png" alt="1"></p><h5 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">1 * 1 = 1</span></span><br><span class="line"><span class="string">2 * 1 = 2 2 * 2 = 4</span></span><br><span class="line"><span class="string">3 * 1 = 3 3 * 2 = 6 3 * 3 = 9</span></span><br><span class="line"><span class="string">4 * 1 = 4 4 * 2 = 8 4 * 3 = 12 4 * 4 = 16</span></span><br><span class="line"><span class="string">5 * 1 = 5 5 * 2 = 10 5 * 3 = 15 5 * 4 = 20 5 * 5 = 25</span></span><br><span class="line"><span class="string">6 * 1 = 6 6 * 2 = 12 6 * 3 = 18 6 * 4 = 24 6 * 5 = 30 6 * 6 = 36</span></span><br><span class="line"><span class="string">7 * 1 = 7 7 * 2 = 14 7 * 3 = 21 7 * 4 = 28 7 * 5 = 35 7 * 6 = 42 7 * 7 = 49</span></span><br><span class="line"><span class="string">8 * 1 = 8 8 * 2 = 16 8 * 3 = 24 8 * 4 = 32 8 * 5 = 40 8 * 6 = 48 8 * 7 = 56 8 * 8 = 64</span></span><br><span class="line"><span class="string">9 * 1 = 9 9 * 2 = 18 9 * 3 = 27 9 * 4 = 36 9 * 5 = 45 9 * 6 = 54 9 * 7 = 63 9 * 8 = 72 9 * 9 = 81</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">work = &#123;&#125;</span><br><span class="line"><span class="comment"># 1</span></span><br><span class="line">one_value = (<span class="number">1</span>,)</span><br><span class="line">one_key = <span class="number">1</span></span><br><span class="line">work[<span class="built_in">str</span>(one_key)] = one_value</span><br><span class="line"><span class="built_in">print</span>(work)</span><br><span class="line"><span class="comment"># 2</span></span><br><span class="line">two_key = <span class="number">2</span></span><br><span class="line">two_value = []</span><br><span class="line">two_value.append(<span class="number">1</span>)</span><br><span class="line">two_value.append(<span class="number">2</span>)</span><br><span class="line">work[<span class="built_in">str</span>(two_key)] = two_value</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3</span></span><br><span class="line">three_key = <span class="number">3</span></span><br><span class="line">three_value = []</span><br><span class="line">three_value.append(<span class="number">1</span>)</span><br><span class="line">three_value.append(<span class="number">2</span>)</span><br><span class="line">three_value.append(<span class="number">3</span>)</span><br><span class="line">work[<span class="built_in">str</span>(three_key)] = three_value</span><br><span class="line"><span class="built_in">print</span>(work)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4</span></span><br><span class="line">four_key = <span class="number">4</span></span><br><span class="line">four_value = []</span><br><span class="line">four_value.append(<span class="number">1</span>)</span><br><span class="line">four_value.append(<span class="number">2</span>)</span><br><span class="line">four_value.append(<span class="number">3</span>)</span><br><span class="line">four_value.append(<span class="number">4</span>)</span><br><span class="line">work[<span class="built_in">str</span>(four_key)] = four_value</span><br><span class="line"></span><br><span class="line">temp_five = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>)</span><br><span class="line">five_key = <span class="number">5</span></span><br><span class="line">five_value = []</span><br><span class="line">five_value.extend(temp_five)</span><br><span class="line">work[<span class="built_in">str</span>(five_key)] = five_value</span><br><span class="line"><span class="built_in">print</span>(work)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 6</span></span><br><span class="line">temp_six = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]</span><br><span class="line">six_key = <span class="number">6</span></span><br><span class="line">six_value = []</span><br><span class="line">six_value.extend(temp_six)</span><br><span class="line">work[<span class="built_in">str</span>(six_key)] = six_value</span><br><span class="line"></span><br><span class="line"><span class="comment"># 7</span></span><br><span class="line">temp_seven = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>&#125;</span><br><span class="line">seven_key = <span class="number">7</span></span><br><span class="line">seven_value = []</span><br><span class="line">seven_value.extend(temp_seven)</span><br><span class="line">work[<span class="built_in">str</span>(seven_key)] = seven_value</span><br><span class="line"></span><br><span class="line"><span class="comment"># 8</span></span><br><span class="line">temp_eight = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>]</span><br><span class="line">eight_key = <span class="number">8</span></span><br><span class="line">eight_value = []</span><br><span class="line">eight_value.extend(temp_eight)</span><br><span class="line">eight_key = <span class="built_in">str</span>(eight_key)</span><br><span class="line">work[eight_key] = eight_value</span><br><span class="line"></span><br><span class="line"><span class="comment"># 9</span></span><br><span class="line">temp_nine = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>)</span><br><span class="line">nine_key = <span class="number">9</span></span><br><span class="line">nine_value = <span class="built_in">list</span>(temp_nine)</span><br><span class="line">nine_key = <span class="built_in">str</span>(nine_key)</span><br><span class="line">work.update(&#123;nine_key: nine_value&#125;)</span><br><span class="line"><span class="built_in">print</span>(work)</span><br><span class="line"></span><br><span class="line">_keys = work.keys()</span><br><span class="line">keys = <span class="built_in">list</span>(_keys)</span><br><span class="line"><span class="built_in">print</span>(_keys)</span><br><span class="line"></span><br><span class="line">one = keys[<span class="number">0</span>]</span><br><span class="line">one_value = work.pop(one)</span><br><span class="line"><span class="built_in">print</span>(one, one_value)</span><br><span class="line">one_key = <span class="built_in">int</span>(one)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(one_key, one_value[<span class="number">0</span>], one_key * one_value[<span class="number">0</span>]))</span><br><span class="line"></span><br><span class="line">two = keys[<span class="number">1</span>]</span><br><span class="line">two_value = work.pop(two)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(two, two_value[<span class="number">0</span>], <span class="built_in">int</span>(two) * two_value[<span class="number">0</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(two, two_value[<span class="number">1</span>], <span class="built_in">int</span>(two) * two_value[<span class="number">1</span>]))</span><br><span class="line"></span><br><span class="line">three = keys[<span class="number">2</span>]</span><br><span class="line">three_value = work.pop(three)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(three, three_value[<span class="number">0</span>], <span class="built_in">int</span>(three) * (three_value[<span class="number">0</span>])), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(three, three_value[<span class="number">1</span>], <span class="built_in">int</span>(three) * (three_value[<span class="number">1</span>])), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(three, three_value[<span class="number">2</span>], <span class="built_in">int</span>(three) * (three_value[<span class="number">2</span>])))</span><br><span class="line"></span><br><span class="line">four = keys[<span class="number">3</span>]</span><br><span class="line">four_value = work.pop(four)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(four, four_value[<span class="number">0</span>], <span class="built_in">int</span>(four) * (four_value[<span class="number">0</span>])), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(four, four_value[<span class="number">1</span>], <span class="built_in">int</span>(four) * (four_value[<span class="number">1</span>])), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(four, four_value[<span class="number">2</span>], <span class="built_in">int</span>(four) * (four_value[<span class="number">2</span>])), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(four, four_value[-<span class="number">1</span>], <span class="built_in">int</span>(four) * (four_value[-<span class="number">1</span>])))</span><br><span class="line"></span><br><span class="line">five = keys[<span class="number">4</span>]</span><br><span class="line">five_value = work.pop(five)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%s * %s = %s&#x27;</span> % (five, five_value[<span class="number">0</span>], <span class="built_in">int</span>(five) * five_value[<span class="number">0</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%s * %s = %d&#x27;</span> % (five, five_value[<span class="number">1</span>], <span class="built_in">int</span>(five) * five_value[<span class="number">1</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%s * %s = %d&#x27;</span> % (five, five_value[<span class="number">2</span>], <span class="built_in">int</span>(five) * five_value[<span class="number">2</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%s * %s = %d&#x27;</span> % (five, five_value[-<span class="number">2</span>], <span class="built_in">int</span>(five) * five_value[-<span class="number">2</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%s * %s = %d&#x27;</span> % (five, five_value[-<span class="number">1</span>], <span class="built_in">int</span>(five) * five_value[-<span class="number">1</span>]),)</span><br><span class="line"></span><br><span class="line">six = keys[<span class="number">5</span>]</span><br><span class="line">six_value = work.pop(six)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%s * %s = %s&#x27;</span> % (six, six_value[<span class="number">0</span>], <span class="built_in">int</span>(six) * six_value[<span class="number">0</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%s * %s = %s&#x27;</span> % (six, six_value[<span class="number">1</span>], <span class="built_in">int</span>(six) * six_value[<span class="number">1</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%s * %s = %s&#x27;</span> % (six, six_value[<span class="number">2</span>], <span class="built_in">int</span>(six) * six_value[<span class="number">2</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(six, six_value[<span class="number">3</span>], <span class="built_in">int</span>(six) * six_value[<span class="number">3</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(six, six_value[<span class="number">4</span>], <span class="built_in">int</span>(six) * six_value[<span class="number">4</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(six, six_value[<span class="number">5</span>], <span class="built_in">int</span>(six) * six_value[<span class="number">5</span>]))</span><br><span class="line"></span><br><span class="line">seven = keys[<span class="number">6</span>]</span><br><span class="line">seven_value = work.pop(seven)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(seven, seven_value[<span class="number">0</span>], <span class="built_in">int</span>(seven) * seven_value[<span class="number">0</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(seven, seven_value[<span class="number">1</span>], <span class="built_in">int</span>(seven) * seven_value[<span class="number">1</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(seven, seven_value[<span class="number">2</span>], <span class="built_in">int</span>(seven) * seven_value[<span class="number">2</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(seven, seven_value[<span class="number">3</span>], <span class="built_in">int</span>(seven) * seven_value[<span class="number">3</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(seven, seven_value[<span class="number">4</span>], <span class="built_in">int</span>(seven) * seven_value[<span class="number">4</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(seven, seven_value[<span class="number">5</span>], <span class="built_in">int</span>(seven) * seven_value[<span class="number">5</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(seven, seven_value[<span class="number">6</span>], <span class="built_in">int</span>(seven) * seven_value[<span class="number">6</span>]))</span><br><span class="line"></span><br><span class="line">eight = keys[<span class="number">7</span>]</span><br><span class="line">eight_value = work.pop(eight)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(eight, eight_value[<span class="number">0</span>], <span class="built_in">int</span>(eight) * eight_value[<span class="number">0</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(eight, eight_value[<span class="number">1</span>], <span class="built_in">int</span>(eight) * eight_value[<span class="number">1</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(eight, eight_value[<span class="number">2</span>], <span class="built_in">int</span>(eight) * eight_value[<span class="number">2</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(eight, eight_value[<span class="number">3</span>], <span class="built_in">int</span>(eight) * eight_value[<span class="number">3</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(eight, eight_value[<span class="number">4</span>], <span class="built_in">int</span>(eight) * eight_value[<span class="number">4</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(eight, eight_value[<span class="number">5</span>], <span class="built_in">int</span>(eight) * eight_value[<span class="number">5</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(eight, eight_value[<span class="number">6</span>], <span class="built_in">int</span>(eight) * eight_value[<span class="number">6</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(eight, eight_value[<span class="number">7</span>], <span class="built_in">int</span>(eight) * eight_value[<span class="number">7</span>]))</span><br><span class="line"></span><br><span class="line">nine = keys[-<span class="number">1</span>]</span><br><span class="line">nine_value = work.get(nine)</span><br><span class="line">format_str = <span class="string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(format_str.<span class="built_in">format</span>(nine, nine_value[<span class="number">0</span>], <span class="built_in">int</span>(nine) * nine_value[<span class="number">0</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(format_str.<span class="built_in">format</span>(nine, nine_value[<span class="number">1</span>], <span class="built_in">int</span>(nine) * nine_value[<span class="number">1</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(format_str.<span class="built_in">format</span>(nine, nine_value[<span class="number">2</span>], <span class="built_in">int</span>(nine) * nine_value[<span class="number">2</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(format_str.<span class="built_in">format</span>(nine, nine_value[<span class="number">3</span>], <span class="built_in">int</span>(nine) * nine_value[<span class="number">3</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(format_str.<span class="built_in">format</span>(nine, nine_value[<span class="number">4</span>], <span class="built_in">int</span>(nine) * nine_value[<span class="number">4</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(format_str.<span class="built_in">format</span>(nine, nine_value[<span class="number">5</span>], <span class="built_in">int</span>(nine) * nine_value[<span class="number">5</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(format_str.<span class="built_in">format</span>(nine, nine_value[<span class="number">6</span>], <span class="built_in">int</span>(nine) * nine_value[<span class="number">6</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(format_str.<span class="built_in">format</span>(nine, nine_value[<span class="number">7</span>], <span class="built_in">int</span>(nine) * nine_value[<span class="number">7</span>]), end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(format_str.<span class="built_in">format</span>(nine, nine_value[<span class="number">8</span>], <span class="built_in">int</span>(nine) * nine_value[<span class="number">8</span>]))</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程练习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 元组 ,列表, 集合间的转换</title>
      <link href="/2021/5e79a4d30cf0/"/>
      <url>/2021/5e79a4d30cf0/</url>
      
        <content type="html"><![CDATA[<h3 id="元组-列表-集合间的转换"><a href="#元组-列表-集合间的转换" class="headerlink" title="元组 ,列表, 集合间的转换"></a>元组 ,列表, 集合间的转换</h3><ul><li>列表元组集合间隔转换的函数</li></ul><table><thead><tr><th align="center">原始类型</th><th align="center">目标函数</th><th align="center">函数</th><th>举例</th></tr></thead><tbody><tr><td align="center">列表</td><td align="center">集合</td><td align="center">set</td><td><code>new_set = set([1,  2,  3, 4, 5])</code></td></tr><tr><td align="center">列表</td><td align="center">元组</td><td align="center">tuple</td><td><code>new_tutple = tuple([1, 2, 3, 4, 5])</code></td></tr><tr><td align="center">元组</td><td align="center">集合</td><td align="center">set</td><td><code>new_set = set((1, 2, 3, 4, 5))</code></td></tr><tr><td align="center">元组</td><td align="center">列表</td><td align="center">list</td><td><code>new_list = list(1, 2, 3, 4, 5)</code></td></tr><tr><td align="center">集合</td><td align="center">列表</td><td align="center">list</td><td><code>new_list = list(&#123;1, 2, 3, 4, 5&#125;)</code></td></tr><tr><td align="center">集合</td><td align="center">元组</td><td align="center">tuple</td><td><code>new_tuple = tuple(&#123;1, 2, 3, 4, 5&#125;)</code></td></tr></tbody></table><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">a = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">b = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line">c = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">tuple</span>(a), <span class="built_in">set</span>(a))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(<span class="built_in">tuple</span>(a)), <span class="built_in">type</span>(<span class="built_in">set</span>(a)))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">tuple</span>(a) <span class="keyword">is</span> b)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">set</span>(a) == c)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>(b), <span class="built_in">set</span>(b))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>(c), <span class="built_in">tuple</span>(c))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>(a))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>(a), <span class="built_in">type</span>(<span class="built_in">str</span>(a)))  <span class="comment"># &#x27;[1, 2, 3]&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>(b), <span class="built_in">type</span>(<span class="built_in">str</span>(b)))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>(c), <span class="built_in">type</span>(<span class="built_in">str</span>(c)))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 转换不可逆...</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>(<span class="built_in">str</span>(a)))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">tuple</span>(<span class="built_in">str</span>(b)))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">set</span>(<span class="built_in">str</span>(c)))</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 类型转换 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 字符串与bytes的转换</title>
      <link href="/2021/c78f8edfbe5a/"/>
      <url>/2021/c78f8edfbe5a/</url>
      
        <content type="html"><![CDATA[<h3 id="字符串与bytes的转换"><a href="#字符串与bytes的转换" class="headerlink" title="字符串与bytes的转换"></a>字符串与bytes的转换</h3><h4 id="什么是bytes-比特类型"><a href="#什么是bytes-比特类型" class="headerlink" title="什么是bytes(比特类型)"></a>什么是bytes(比特类型)</h4><ul><li><p>二进制的数据流–bytes</p></li><li><p>一种特殊的字符串</p></li><li><p>字符串前 + b  标记</p></li></ul><blockquote><p>内置函数dir可以查到该数据类型的相关说明</p></blockquote><hr><h4 id="字符串转bytes的函数–encode"><a href="#字符串转bytes的函数–encode" class="headerlink" title="字符串转bytes的函数–encode"></a>字符串转bytes的函数–encode</h4><h5 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h5><ul><li>将<code>字符串</code>转成<code>比特(bytes)类型</code></li></ul><h5 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h5><p><code>sring.encode(endocing=&#39;utf-8&#39;, errors= &#39;strict&#39;)</code></p><h5 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h5><ul><li><p><code>encoding</code>:转换的<strong>编码格式</strong> ,如<code>ascii</code> , <code>gbk</code> , 默认 <code>utf-8</code></p></li><li><p><code>errors</code> : <strong>出错</strong>时的处理方法 , 默认<code>strict</code> </p><ul><li>直接抛错误 , 也可以选择 <code>ignore</code> 忽略错误</li></ul></li></ul><h5 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h5><ul><li>返回一个比特(bytes)类型</li></ul><hr><h4 id="bytes转字符串的函数–decode"><a href="#bytes转字符串的函数–decode" class="headerlink" title="bytes转字符串的函数–decode"></a>bytes转字符串的函数–decode</h4><h5 id="功能-1"><a href="#功能-1" class="headerlink" title="功能"></a>功能</h5><ul><li>将<code>比特(bytes)类型</code>转成<code>字符串</code></li></ul><h5 id="用法-1"><a href="#用法-1" class="headerlink" title="用法"></a>用法</h5><ul><li><code>bytes.decode(encoding=&#39;utf-8&#39;, errors=&#39;strict&#39;)</code></li></ul><h5 id="参数-1"><a href="#参数-1" class="headerlink" title="参数"></a>参数</h5><ul><li><p><code>encoding</code>:  转换成的<strong>编码格式</strong>, 如 <code>ascii</code>, <code>gbk</code>, 默认 <code>utf-8</code></p></li><li><p><code>errors</code>: 出错时的<strong>处理方法</strong> , 默认<code>strict</code> ,直接<strong>抛错误</strong> , 也可以选择<code>ignore</code>忽略错误</p></li></ul><h5 id="返回值-1"><a href="#返回值-1" class="headerlink" title="返回值"></a>返回值</h5><ul><li>返回一个<code>字符串类型</code></li></ul><h5 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">a = <span class="string">&#x27;hello xiaomu&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(a, <span class="built_in">type</span>(a))</span><br><span class="line"></span><br><span class="line">b = <span class="string">b&#x27;hello xiaomu&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(b, <span class="built_in">type</span>(b))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(b.capitalize())</span><br><span class="line"><span class="built_in">print</span>(b.replace(<span class="string">b&#x27;xiaomu&#x27;</span>, <span class="string">b&#x27;dewei&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(b[:<span class="number">3</span>])</span><br><span class="line"><span class="built_in">print</span>(b.find(<span class="string">b&#x27;x&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">dir</span>(b))</span><br><span class="line"></span><br><span class="line">c = <span class="string">&#x27;hello 小慕&#x27;</span></span><br><span class="line">d = c.encode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(d, <span class="built_in">type</span>(d))</span><br><span class="line"><span class="built_in">print</span>(d.decode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 类型转换 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 字符串与列表间的转换</title>
      <link href="/2021/ae96905fcbf4/"/>
      <url>/2021/ae96905fcbf4/</url>
      
        <content type="html"><![CDATA[<h3 id="字符串与列表间的转换"><a href="#字符串与列表间的转换" class="headerlink" title="字符串与列表间的转换"></a>字符串与列表间的转换</h3><h4 id="字符串转列表的函数–split"><a href="#字符串转列表的函数–split" class="headerlink" title="字符串转列表的函数–split"></a>字符串转列表的函数–split</h4><h5 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h5><ul><li>将字符串以<code>一定规则</code><strong>切割</strong>转成<code>列表</code></li></ul><h5 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h5><ul><li><code>string.split(sep=None, maxsplit=-1)</code></li></ul><h5 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h5><ul><li><p><code>sep</code>:切割的规则符号,不填写**,默认空格**,如字符串<strong>无空格</strong><code>不分割</code>生成列表</p></li><li><p><code>maxsplit</code> : 根据切割符号<strong>切割的次数</strong>, 默认**-1无限制**</p></li></ul><h5 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h5><ul><li>返回一个<strong>列表</strong></li></ul><hr><h4 id="列表转字符串的函数–join"><a href="#列表转字符串的函数–join" class="headerlink" title="列表转字符串的函数–join"></a>列表转字符串的函数–join</h4><h5 id="功能-1"><a href="#功能-1" class="headerlink" title="功能"></a>功能</h5><ul><li>将<code>列表</code>以<strong>一定规则</strong>转成<code>字符串</code>(元组,集合也可以)</li></ul><h5 id="用法-1"><a href="#用法-1" class="headerlink" title="用法"></a>用法</h5><ul><li><code>&#39;sep&#39;.join(iterable)</code></li></ul><h5 id="参数-1"><a href="#参数-1" class="headerlink" title="参数"></a>参数</h5><ul><li><code>sep</code>: 生成字符串用来分割<code>列表每个元素</code>的符号</li><li><code>iterable</code>: <strong>非数字类型</strong>的<code>列表或元组或集合</code></li></ul><h5 id="返回值-1"><a href="#返回值-1" class="headerlink" title="返回值"></a>返回值</h5><ul><li>返回一个字符串</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">a = <span class="string">&#x27;abc&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(a.split())</span><br><span class="line"></span><br><span class="line">b = <span class="string">&#x27;a,b,c&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(b.split(<span class="string">&#x27;,&#x27;</span>))</span><br><span class="line"></span><br><span class="line">c = <span class="string">&#x27;a|b|c|d&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(c.split(<span class="string">&#x27;|&#x27;</span>, <span class="number">1</span>))</span><br><span class="line"></span><br><span class="line">d = <span class="string">&#x27;a|b|c|d&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(d.split(<span class="string">&#x27;|&#x27;</span>, <span class="number">2</span>))</span><br><span class="line"></span><br><span class="line">f = <span class="string">&#x27;a~b~c&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(f.split(<span class="string">&#x27;~&#x27;</span>, <span class="number">2</span>))</span><br><span class="line"></span><br><span class="line">test = [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>]</span><br><span class="line">test_str = <span class="string">&#x27;|&#x27;</span>.join(test)</span><br><span class="line"><span class="built_in">print</span>(test_str)</span><br><span class="line"></span><br><span class="line">test2 = [<span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;|&#x27;</span>.join(test2))</span><br><span class="line"></span><br><span class="line"><span class="comment"># test3 = [&#123;&#x27;name&#x27;: &#x27;dewei&#x27;&#125;, &#123;&#x27;name&#x27;: &#x27;xiaomu&#x27;&#125;]</span></span><br><span class="line"><span class="comment"># print(&#x27;.&#x27;.join(test3))</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># test4 = [(&#x27;a&#x27;, &#x27;v&#x27;), (&#x27;a&#x27;, &#x27;b&#x27;)]</span></span><br><span class="line"><span class="comment"># print(&#x27;&#x27;.join(test4))</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># test5 = [None, True]</span></span><br><span class="line"><span class="comment"># print(&#x27;.&#x27;.join(test5))</span></span><br><span class="line"></span><br><span class="line">sort_str = <span class="string">&#x27;a b c d f i p q c&#x27;</span></span><br><span class="line">sort_list = sort_str.split()</span><br><span class="line"><span class="built_in">print</span>(sort_list)</span><br><span class="line">sort_list.sort()</span><br><span class="line"><span class="built_in">print</span>(sort_list)</span><br><span class="line">sort_str = <span class="string">&#x27; &#x27;</span>.join(sort_list)</span><br><span class="line"><span class="built_in">print</span>(sort_str)</span><br><span class="line"></span><br><span class="line">sort_str_new = <span class="string">&#x27;abcdfipqc&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(sort_str_new)</span><br><span class="line">res = <span class="built_in">sorted</span>(sort_str_new)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#x27;</span>.join(res))</span><br><span class="line"></span><br><span class="line">seq = (<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>)</span><br><span class="line">seq2 = &#123;<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;#&#x27;</span>.join(seq))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;$&#x27;</span>.join(seq2), <span class="built_in">type</span>(seq2))</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 类型转换 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 字符串与数字类型的转换</title>
      <link href="/2021/ab042a99e9a7/"/>
      <url>/2021/ab042a99e9a7/</url>
      
        <content type="html"><![CDATA[<h3 id="字符串与数字类型的转换"><a href="#字符串与数字类型的转换" class="headerlink" title="字符串与数字类型的转换"></a>字符串与数字类型的转换</h3><h4 id="什么是类型转换-为什么做类型转换"><a href="#什么是类型转换-为什么做类型转换" class="headerlink" title="什么是类型转换, 为什么做类型转换"></a>什么是类型转换, 为什么做类型转换</h4><ul><li>将自身数据类型变成<code>新的数据类型</code> , 并拥有新的数据类型的所有功能的过程即为类型转换</li><li><code>a = &#39;1&#39;</code>  <strong>#无法做数字操作</strong></li><li>为方便更好的帮助处理业务, 将类型变更为更适合业务场景的类型</li></ul><h4 id="字符串与数字之间转换的要求"><a href="#字符串与数字之间转换的要求" class="headerlink" title="字符串与数字之间转换的要求"></a>字符串与数字之间转换的要求</h4><ul><li><code>str  --&gt;  number</code>: 数字组成的字符串</li><li><code>number  ---&gt;  str</code>  :  无要求</li></ul><h4 id="字符串与数字之间的转换函数"><a href="#字符串与数字之间的转换函数" class="headerlink" title="字符串与数字之间的转换函数"></a>字符串与数字之间的转换函数</h4><table><thead><tr><th align="center">原始类型</th><th align="center">目标函数</th><th align="center">函数</th><th align="center">举例</th></tr></thead><tbody><tr><td align="center">整形</td><td align="center">字符串</td><td align="center">str</td><td align="center">new_str = str(123456)</td></tr><tr><td align="center">浮点型</td><td align="center">字符串</td><td align="center">str</td><td align="center">new_str = str(3.14)</td></tr><tr><td align="center">字符串</td><td align="center">整形</td><td align="center">int</td><td align="center">new_int = int(‘12’)</td></tr><tr><td align="center">字符串</td><td align="center">浮点型</td><td align="center">float</td><td align="center">new_float = float(‘1.2’)</td></tr></tbody></table><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">int_data = <span class="number">12</span></span><br><span class="line">float_date =<span class="number">3.14</span></span><br><span class="line"></span><br><span class="line">str_int_data = <span class="built_in">str</span>(int_data)</span><br><span class="line">str_float_data = <span class="built_in">str</span>(float_date)</span><br><span class="line"><span class="built_in">print</span>(str_int_data, str_float_data, <span class="built_in">type</span>(str_int_data), <span class="built_in">type</span>(str_float_data))</span><br><span class="line"></span><br><span class="line">zero_number = <span class="number">0</span></span><br><span class="line">_number = -<span class="number">1</span></span><br><span class="line"></span><br><span class="line">str_zero_number = <span class="built_in">str</span>(zero_number)</span><br><span class="line">str_number = <span class="built_in">str</span>(_number)</span><br><span class="line"><span class="built_in">print</span>(str_zero_number, str_number, <span class="built_in">type</span>(str_zero_number), <span class="built_in">type</span>(str_number))</span><br><span class="line"></span><br><span class="line">str_float = <span class="string">&#x27;3.14&#x27;</span></span><br><span class="line">str_int = <span class="string">&#x27;123456&#x27;</span></span><br><span class="line"></span><br><span class="line">real_float = <span class="built_in">float</span>(str_float)</span><br><span class="line">real_int = <span class="built_in">int</span>(str_int)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(real_float, real_int, <span class="built_in">type</span>(real_float), <span class="built_in">type</span>(real_int))</span><br><span class="line"></span><br><span class="line">mix_Str = <span class="string">&#x27;123a&#x27;</span></span><br><span class="line"><span class="comment"># print(float(mix_Str))</span></span><br><span class="line">float_data_str = <span class="string">&#x27;3.14&#x27;</span></span><br><span class="line">test_data = <span class="built_in">float</span>(float_data_str)</span><br><span class="line"><span class="built_in">print</span>(test_data, <span class="built_in">type</span>(test_data))</span><br><span class="line"></span><br><span class="line">int_data_str = <span class="string">&#x27;123&#x27;</span></span><br><span class="line">test_data = <span class="built_in">float</span>(int_data_str)</span><br><span class="line"><span class="built_in">print</span>(test_data, <span class="built_in">type</span>(test_data))</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 类型转换 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 集合的isdisjoint函数</title>
      <link href="/2021/00310efa09de/"/>
      <url>/2021/00310efa09de/</url>
      
        <content type="html"><![CDATA[<h3 id="集合的isdisjoint函数"><a href="#集合的isdisjoint函数" class="headerlink" title="集合的isdisjoint函数"></a>集合的isdisjoint函数</h3><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li>判断两个<code>集合</code>是否包含<strong>相同的元素</strong> , 如果<strong>没有</strong>返回<code>True</code> , 否则返回<code>False</code></li><li><code>没有</code>才返回<strong>True</strong></li></ul><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><ul><li><code>a_set.isdisjoint(b_set)</code></li></ul><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><ul><li><code>b_set</code> : 与当前集合用来判断的集合</li></ul><h4 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h4><ul><li>返回一个<strong>布尔值</strong><code>True</code>或<code>False</code></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">company_not_allow = &#123;<span class="string">&#x27;女&#x27;</span>, <span class="string">&#x27;喝酒&#x27;</span>, <span class="string">&#x27;抽烟&#x27;</span>, <span class="string">&#x27;睡懒觉&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line">one_player = &#123;<span class="string">&#x27;男&#x27;</span>, <span class="string">&#x27;跑步&#x27;</span>, <span class="string">&#x27;朝气&#x27;</span>, <span class="string">&#x27;喝酒&#x27;</span>&#125;</span><br><span class="line">two_player = &#123;<span class="string">&#x27;女&#x27;</span>, <span class="string">&#x27;生活规律&#x27;</span>, <span class="string">&#x27;跆拳道&#x27;</span>&#125;</span><br><span class="line">three_player = &#123;<span class="string">&#x27;男&#x27;</span>, <span class="string">&#x27;太极拳&#x27;</span>&#125;</span><br><span class="line">four_player = &#123;<span class="string">&#x27;男&#x27;</span>, <span class="string">&#x27;空手道&#x27;</span>, <span class="string">&#x27;年轻&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(company_not_allow.isdisjoint(one_player))</span><br><span class="line"><span class="built_in">print</span>(company_not_allow.isdisjoint(two_player))</span><br><span class="line"><span class="built_in">print</span>(company_not_allow.isdisjoint(three_player))</span><br><span class="line"><span class="built_in">print</span>(company_not_allow.isdisjoint(four_player))</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 集合 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 集合的并集--union函数</title>
      <link href="/2021/e8a9c829e273/"/>
      <url>/2021/e8a9c829e273/</url>
      
        <content type="html"><![CDATA[<h3 id="集合的并集–union函数"><a href="#集合的并集–union函数" class="headerlink" title="集合的并集–union函数"></a>集合的并集–<code>union函数</code></h3><h4 id="什么是并集"><a href="#什么是并集" class="headerlink" title="什么是并集"></a>什么是并集</h4><ul><li><code>a , b 两个集合</code>中所有的<strong>元素</strong>(去除重复)即为a与b的<code>并集</code></li><li><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-10-4/1.png" alt="1"></li></ul><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li>返回<strong>多个集合</strong>的<code>并集</code>,即包含了<strong>所有集合</strong>的元素,<strong>重复的元素</strong><code>只会出现一次</code></li></ul><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><ul><li>a_set.union(b_set…)</li></ul><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><ul><li><code>b_set...</code>: 与<code>当前集合</code>对比的<strong>1或多个集合</strong></li></ul><h4 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h4><ul><li>返回<strong>原始集合</strong>与<strong>对比集合</strong>的<code>并集</code></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">a_school = [<span class="string">&#x27;周五半天&#x27;</span>, <span class="string">&#x27;免费周末培训&#x27;</span>, <span class="string">&#x27;周五休息&#x27;</span>]</span><br><span class="line">b_school = [<span class="string">&#x27;放学时间从6点改为5点&#x27;</span>, <span class="string">&#x27;作业少留点&#x27;</span>, <span class="string">&#x27;换舒服的座椅&#x27;</span>]</span><br><span class="line">c_school = [<span class="string">&#x27;作业少留点&#x27;</span>, <span class="string">&#x27;周五半天&#x27;</span>, <span class="string">&#x27;伙食改善&#x27;</span>]</span><br><span class="line"></span><br><span class="line">a_set = <span class="built_in">set</span>(a_school)</span><br><span class="line">b_set = <span class="built_in">set</span>(b_school)</span><br><span class="line">c_set = <span class="built_in">set</span>(c_school)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(a_set)</span><br><span class="line"><span class="built_in">print</span>(b_set)</span><br><span class="line"><span class="built_in">print</span>(c_set)</span><br><span class="line"></span><br><span class="line"><span class="comment"># help_date = a_set.union(b_set, c_set)</span></span><br><span class="line">help_date = a_set.union(b_school, c_school)</span><br><span class="line"><span class="built_in">print</span>(help_date)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(help_date))</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 集合 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 集合的交集--intersection函数</title>
      <link href="/2021/accc6957dd99/"/>
      <url>/2021/accc6957dd99/</url>
      
        <content type="html"><![CDATA[<h3 id="集合的交集–intersection函数"><a href="#集合的交集–intersection函数" class="headerlink" title="集合的交集–intersection函数"></a>集合的交集–<code>intersection函数</code></h3><h4 id="什么是交集"><a href="#什么是交集" class="headerlink" title="什么是交集"></a>什么是交集</h4><ul><li>a , b两个集合分别拥有的<code>相同</code>的元素集 , 称为a与b的交集</li><li><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-10-4/1.png" alt="1"></li></ul><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li>返回<strong>两个或更多集合</strong>中<code>都包含</code>的元素,即交集</li></ul><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><ul><li><code>a_set.intersection(b_set...)</code></li></ul><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><p><code>b_set...</code>:  与当前集合对比的<strong>1或多个集合</strong></p><h4 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h4><ul><li>返回<strong>原始集合</strong>与<strong>对比集合</strong>的<code>交集</code></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">a = [<span class="string">&#x27;dewei&#x27;</span>, <span class="string">&#x27;xiaomu&#x27;</span>, <span class="string">&#x27;xiaohua&#x27;</span>, <span class="string">&#x27;xiaoguo&#x27;</span>]</span><br><span class="line">b = [<span class="string">&#x27;xiaohua&#x27;</span>, <span class="string">&#x27;dewei&#x27;</span>, <span class="string">&#x27;xiaoman&#x27;</span>, <span class="string">&#x27;xiaolin&#x27;</span>]</span><br><span class="line">c = [<span class="string">&#x27;xiaoguang&#x27;</span>, <span class="string">&#x27;xiaobai&#x27;</span>, <span class="string">&#x27;dewei&#x27;</span>, <span class="string">&#x27;xiaoyuan&#x27;</span>]</span><br><span class="line"></span><br><span class="line">a_set = <span class="built_in">set</span>(a)</span><br><span class="line">b_set = <span class="built_in">set</span>(b)</span><br><span class="line">c_set = <span class="built_in">set</span>(c)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(a_set, b_set, c_set)</span><br><span class="line"></span><br><span class="line">result = a_set.intersection(b_set, c_set)</span><br><span class="line">xiaotou = <span class="built_in">list</span>(result)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; 是 这个小偷&#x27;</span>.<span class="built_in">format</span>(xiaotou[<span class="number">0</span>]))</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 集合 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 集合的差集--difference函数</title>
      <link href="/2021/bb2cff969079/"/>
      <url>/2021/bb2cff969079/</url>
      
        <content type="html"><![CDATA[<h3 id="集合的差集–difference函数"><a href="#集合的差集–difference函数" class="headerlink" title="集合的差集–difference函数"></a>集合的差集–<code>difference函数</code></h3><h4 id="什么是差集"><a href="#什么是差集" class="headerlink" title="什么是差集"></a>什么是差集</h4><ul><li>a, b两个集合 , 由所有属于a且不属于b的元素组成的集合叫做a与b的差集</li><li><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-10-4/1.png" alt="1"></li></ul><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li><code>返回集合的差集</code> , 即<strong>返回的集合元素</strong><code>包含在第一个集合中</code>, 但<code>不包含在第二个集合</code>(方法的参数)中</li></ul><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><ul><li><code>a_set.difference(b_set)</code></li></ul><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><ul><li><code>b_set</code> : 当前集合<strong>需要对比的集合</strong></li></ul><h4 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h4><ul><li><strong>返回</strong><code>原始集合</code>于<code>对比集合</code>的<code>差集</code></li><li>(即a_set与b_set的差集)</li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">drivers = [<span class="string">&#x27;dewei&#x27;</span>, <span class="string">&#x27;xiaomu&#x27;</span>, <span class="string">&#x27;xiaoming&#x27;</span>, <span class="string">&#x27;xiaoman&#x27;</span>]</span><br><span class="line">testers = [<span class="string">&#x27;xiaomu&#x27;</span>, <span class="string">&#x27;xiaoman&#x27;</span>, <span class="string">&#x27;xiaogang&#x27;</span>, <span class="string">&#x27;xiaotao&#x27;</span>]</span><br><span class="line"></span><br><span class="line">driver_set = <span class="built_in">set</span>(drivers)</span><br><span class="line">test_set = <span class="built_in">set</span>(testers)</span><br><span class="line"></span><br><span class="line">sample_drives = driver_set.difference(test_set)</span><br><span class="line"><span class="built_in">print</span>(sample_drives)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 集合 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 集合的增删改</title>
      <link href="/2021/697e4a85a0ab/"/>
      <url>/2021/697e4a85a0ab/</url>
      
        <content type="html"><![CDATA[<h3 id="集合的增删改"><a href="#集合的增删改" class="headerlink" title="集合的增删改"></a>集合的增删改</h3><h4 id="集合的add函数"><a href="#集合的add函数" class="headerlink" title="集合的add函数"></a>集合的<code>add函数</code></h4><h5 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h5><ul><li>用于集合中<code>添加一个元素</code>,如果集合中<strong>已存在该元素</strong>则该元素<strong>不执行</strong></li></ul><h5 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h5><ul><li><code>set.add(item)</code></li></ul><h5 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h5><ul><li><code>item</code> : 要<strong>添加到集合中的元素</strong></li></ul><h5 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h5><ul><li>无返回值</li></ul><hr><h4 id="集合的update函数"><a href="#集合的update函数" class="headerlink" title="集合的update函数"></a>集合的update函数</h4><h5 id="功能-1"><a href="#功能-1" class="headerlink" title="功能"></a>功能</h5><ul><li>加入一个<code>新的集合(或列表, 元组, 字符串)</code>, 如新集合内的元素在原集合中<strong>存在则无视</strong></li></ul><h5 id="用法-1"><a href="#用法-1" class="headerlink" title="用法"></a>用法</h5><ul><li><code>set.update(iterable)</code></li><li>传入字符串的时候会被拆开….</li></ul><h5 id="参数-1"><a href="#参数-1" class="headerlink" title="参数"></a>参数</h5><ul><li><code>iterable</code> : 集合,列表元组字符串</li></ul><h5 id="返回值-1"><a href="#返回值-1" class="headerlink" title="返回值"></a>返回值</h5><ul><li><code>无</code>返回值 , <strong>直接作用于原集合</strong></li></ul><hr><h4 id="集合的remove函数"><a href="#集合的remove函数" class="headerlink" title="集合的remove函数"></a>集合的remove函数</h4><h5 id="功能-2"><a href="#功能-2" class="headerlink" title="功能"></a>功能</h5><ul><li>将集合中的某个元素<code>删除</code> , 如元素<code>不存在</code>将会<strong>报错</strong></li></ul><h5 id="用法-2"><a href="#用法-2" class="headerlink" title="用法"></a>用法</h5><ul><li>set.remove(item)  #   注意是元素不是索引</li></ul><h5 id="参数-2"><a href="#参数-2" class="headerlink" title="参数"></a>参数</h5><ul><li><code>item</code> : 当前集合中的<strong>一个元素</strong></li></ul><h5 id="返回值-2"><a href="#返回值-2" class="headerlink" title="返回值"></a>返回值</h5><ul><li><strong>无返回值</strong> , 直接作用于<strong>原集合</strong></li></ul><hr><h4 id="集合的clear函数"><a href="#集合的clear函数" class="headerlink" title="集合的clear函数"></a>集合的clear函数</h4><h5 id="功能-3"><a href="#功能-3" class="headerlink" title="功能"></a>功能</h5><ul><li>清空<strong>当前集合</strong>中的<code>所有元素</code></li></ul><h5 id="用法-3"><a href="#用法-3" class="headerlink" title="用法"></a>用法</h5><ul><li><code>set.clear()</code></li></ul><h5 id="参数-3"><a href="#参数-3" class="headerlink" title="参数"></a>参数</h5><ul><li><code>无</code></li></ul><h5 id="返回值-3"><a href="#返回值-3" class="headerlink" title="返回值"></a>返回值</h5><ul><li><code>无返回值</code> , 直接作用于<strong>原集合</strong></li></ul><hr><h4 id="用del删除集合"><a href="#用del删除集合" class="headerlink" title="用del删除集合"></a>用del删除集合</h4><ul><li>只能直接删除集合对象自身</li></ul><hr><h4 id="重要说明"><a href="#重要说明" class="headerlink" title="重要说明"></a>重要说明</h4><ul><li>集合无法通过索引获取元素</li><li>集合无获取元素的任何方法</li><li>集合只是用来处理列表或元组的一种临时类型 , 它不适合存储于运输</li></ul><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">a_list = [<span class="string">&#x27;python&#x27;</span>, <span class="string">&#x27;django&#x27;</span>, <span class="string">&#x27;django&#x27;</span>, <span class="string">&#x27;flask&#x27;</span>]</span><br><span class="line"></span><br><span class="line">a_set = <span class="built_in">set</span>()</span><br><span class="line"></span><br><span class="line">a_set.add(a_list[<span class="number">0</span>])</span><br><span class="line">a_set.add(a_list[<span class="number">1</span>])</span><br><span class="line">a_set.add(a_list[<span class="number">2</span>])</span><br><span class="line">a_set.add(a_list[-<span class="number">1</span>])</span><br><span class="line"><span class="built_in">print</span>(a_set)</span><br><span class="line"></span><br><span class="line">a_set.add(<span class="literal">True</span>)</span><br><span class="line">a_set.add(<span class="literal">None</span>)</span><br><span class="line"><span class="built_in">print</span>(a_set)</span><br><span class="line"></span><br><span class="line">a_tuple = (<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>)</span><br><span class="line">a_set.update(a_tuple)</span><br><span class="line"><span class="built_in">print</span>(a_set)</span><br><span class="line">a_set.update(<span class="string">&#x27;python&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(a_set)</span><br><span class="line"></span><br><span class="line">a_set.remove(<span class="string">&#x27;python&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(a_set)</span><br><span class="line"></span><br><span class="line">a_set.clear()</span><br><span class="line"><span class="built_in">print</span>(a_set)</span><br><span class="line"><span class="keyword">del</span> a_set</span><br><span class="line"></span><br><span class="line"><span class="comment"># a_set.remove(&#x27;flask&#x27;)</span></span><br><span class="line"><span class="comment"># print(a_set)</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 集合 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 初识集合</title>
      <link href="/2021/65bbd4967d97/"/>
      <url>/2021/65bbd4967d97/</url>
      
        <content type="html"><![CDATA[<h3 id="初识集合"><a href="#初识集合" class="headerlink" title="初识集合"></a>初识集合</h3><h4 id="什么是集合"><a href="#什么是集合" class="headerlink" title="什么是集合"></a>什么是集合</h4><ul><li><code>集合(set)</code>是一个无序的不重复元素序列</li><li>常用来对两个列表进行交并差的处理</li><li>集合与列表一样, 支持所有的数据类型(<strong>所有不可变的数据类型</strong>)</li></ul><h4 id="集合与列表的区别"><a href="#集合与列表的区别" class="headerlink" title="集合与列表的区别"></a>集合与列表的区别</h4><table><thead><tr><th align="center">功能</th><th align="center">列表</th><th align="center">集合</th></tr></thead><tbody><tr><td align="center">顺序</td><td align="center">有序</td><td align="center">无序</td></tr><tr><td align="center">内容</td><td align="center">可重复</td><td align="center">不可重复</td></tr><tr><td align="center">功能</td><td align="center">用于数据的使用</td><td align="center">用于数据的交集并集差集的获取</td></tr><tr><td align="center">索引</td><td align="center">有索引</td><td align="center">无索引</td></tr><tr><td align="center">符号</td><td align="center">[] [1,2,3]</td><td align="center">{} {1,2,3}</td></tr></tbody></table><h4 id="集合的创建方法"><a href="#集合的创建方法" class="headerlink" title="集合的创建方法"></a>集合的创建方法</h4><ul><li>通过<code>set函数</code>来创建集合,<code>不能使用&#123;&#125;</code> 来创建<strong>空集合</strong></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">a = <span class="built_in">set</span>()</span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(a))</span><br><span class="line"></span><br><span class="line">b = <span class="built_in">set</span>([<span class="string">&#x27;python&#x27;</span>, <span class="string">&#x27;django&#x27;</span>, <span class="string">&#x27;flask&#x27;</span>])</span><br><span class="line"><span class="built_in">print</span>(b)</span><br><span class="line"></span><br><span class="line">c = &#123;(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>), <span class="string">&#x27;123&#x27;</span>, <span class="number">1</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(c)</span><br><span class="line"></span><br><span class="line">d = &#123;&#125;</span><br><span class="line"><span class="built_in">print</span>(d, <span class="built_in">type</span>(d))</span><br><span class="line"></span><br><span class="line">a_list = [<span class="string">&#x27;python&#x27;</span>, <span class="string">&#x27;django&#x27;</span>, <span class="string">&#x27;python&#x27;</span>, <span class="string">&#x27;flask&#x27;</span>]</span><br><span class="line">b_set = <span class="built_in">set</span>(a_list)</span><br><span class="line"><span class="built_in">print</span>(b_set)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 集合 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 所有数据类型与布尔值的关系</title>
      <link href="/2021/e614b7c29c00/"/>
      <url>/2021/e614b7c29c00/</url>
      
        <content type="html"><![CDATA[<h3 id="所有数据类型与布尔值的关系"><a href="#所有数据类型与布尔值的关系" class="headerlink" title="所有数据类型与布尔值的关系"></a>所有数据类型与布尔值的关系</h3><ul><li>字符串, 数字, 列表, 元组, 字典, 空类型 与 布尔值 的关系总结</li></ul><h4 id="明确两点"><a href="#明确两点" class="headerlink" title="明确两点"></a>明确两点</h4><ol><li>每一种数据类型,自身的值都有表示True与False</li><li>not对于一切结果取反</li><li>非0 非空都为True 其他都为False</li></ol><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-10-3/4.jpg" alt="4"></p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">a_1 = <span class="number">1</span></span><br><span class="line">a_2 = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bool</span>(a_1))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bool</span>(a_2))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bool</span>(<span class="keyword">not</span> a_1))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bool</span>(<span class="keyword">not</span> a_2))</span><br><span class="line"></span><br><span class="line">b_1 = <span class="string">&#x27;1&#x27;</span></span><br><span class="line">b_2 = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;----------&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bool</span>(b_1))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bool</span>(b_2))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bool</span>(<span class="keyword">not</span> b_1))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bool</span>(<span class="keyword">not</span> b_2))</span><br><span class="line"></span><br><span class="line">c_1 = <span class="literal">True</span></span><br><span class="line">c_2 = <span class="literal">False</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;-----------&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(c_1)</span><br><span class="line"><span class="built_in">print</span>(c_2)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="keyword">not</span> c_1)</span><br><span class="line"><span class="built_in">print</span>(<span class="keyword">not</span> c_2)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字典 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 字典中的末尾删除函数--popitem</title>
      <link href="/2021/ee4436b63343/"/>
      <url>/2021/ee4436b63343/</url>
      
        <content type="html"><![CDATA[<h3 id="字典中的末尾删除函数–popitem"><a href="#字典中的末尾删除函数–popitem" class="headerlink" title="字典中的末尾删除函数–popitem"></a>字典中的末尾删除函数–<code>popitem</code></h3><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li>删除当前字典<code>末尾一组键值对</code>并将其返回</li></ul><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><ul><li><code>dict.popitem()</code>  –  无需传参</li><li><code>&gt;&gt; 返回被删除的键值对,用元组包裹 0索引是key, 1索引是value</code></li></ul><h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><ul><li>如字典为空,则直接报错</li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">students = &#123;<span class="string">&#x27;dewei&#x27;</span>: <span class="string">&#x27;到&#x27;</span>, <span class="string">&#x27;xiaomu&#x27;</span>: <span class="string">&#x27;在&#x27;</span>, <span class="string">&#x27;xiaoyun&#x27;</span>: <span class="string">&#x27;在呢&#x27;</span>, <span class="string">&#x27;xiaogao&#x27;</span>: <span class="string">&#x27;在&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;xiaogao 在吗&#x27;</span>)</span><br><span class="line">xiaogao = students.popitem()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125;喊&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(xiaogao[<span class="number">0</span>], xiaogao[<span class="number">1</span>]))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;xiaoyun 在吗&#x27;</span>)</span><br><span class="line">xiaoyun = students.popitem()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125;喊&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(xiaoyun[<span class="number">0</span>], xiaoyun[<span class="number">1</span>]))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;xiaomu 在吗&#x27;</span>)</span><br><span class="line">xiaomu = students.popitem()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125;喊&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(xiaomu[<span class="number">0</span>], xiaomu[<span class="number">1</span>]))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;dewei在吗&#x27;</span>)</span><br><span class="line">dewei = students.popitem()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125;喊&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(dewei[<span class="number">0</span>], dewei[<span class="number">1</span>]))</span><br><span class="line"><span class="built_in">print</span>(students)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字典 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 字典中的成员判断</title>
      <link href="/2021/69524697f433/"/>
      <url>/2021/69524697f433/</url>
      
        <content type="html"><![CDATA[<h3 id="字典中的成员判断"><a href="#字典中的成员判断" class="headerlink" title="字典中的成员判断"></a>字典中的成员判断</h3><h4 id="in-与-not-in在字典中的用法"><a href="#in-与-not-in在字典中的用法" class="headerlink" title="in 与 not in在字典中的用法"></a><code>in</code> 与 <code>not in</code>在字典中的用法</h4><ul><li>只能判断<code>key</code>是否存在</li></ul><h4 id="get用于判断成员存在"><a href="#get用于判断成员存在" class="headerlink" title="get用于判断成员存在"></a><code>get</code>用于判断成员存在</h4><ul><li><code>bool(test_dict.get(&#39;name&#39;))</code></li><li>字典中的类型可能为<code>False类型</code>…<strong>有待商榷</strong></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">default_dict = &#123;<span class="string">&#x27;a&#x27;</span>: <span class="literal">None</span>, <span class="string">&#x27;b&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;c&#x27;</span>: <span class="number">0</span>, <span class="string">&#x27;d&#x27;</span>: <span class="string">&#x27;&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;a&#x27;</span> <span class="keyword">in</span> default_dict)</span><br><span class="line"><span class="built_in">print</span>(default_dict[<span class="string">&#x27;a&#x27;</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bool</span>(default_dict.get(<span class="string">&#x27;a&#x27;</span>)))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bool</span>(default_dict.get(<span class="string">&#x27;b&#x27;</span>)))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;f&#x27;</span> <span class="keyword">in</span> default_dict)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;f&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> default_dict)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字典 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 字典的复制--copy函数</title>
      <link href="/2021/87bad7ab2468/"/>
      <url>/2021/87bad7ab2468/</url>
      
        <content type="html"><![CDATA[<h3 id="字典的复制–copy函数"><a href="#字典的复制–copy函数" class="headerlink" title="字典的复制–copy函数"></a>字典的复制–copy函数</h3><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li>将当前字典复制一个新的字典</li></ul><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><ul><li><code>dict.copy()</code>  -&gt; 该函数<strong>无参数</strong>, 返回一个一模一样的<code>内存地址不同的字典</code><ul><li>!= 可以判断两个成员是否相同</li></ul></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">fruits = &#123;</span><br><span class="line">    <span class="string">&#x27;apple&#x27;</span>: <span class="number">30</span>,</span><br><span class="line">    <span class="string">&#x27;banana&#x27;</span>: <span class="number">50</span>,</span><br><span class="line">    <span class="string">&#x27;pear&#x27;</span>: <span class="number">100</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">real_fruits = fruits.copy()</span><br><span class="line">fruits[<span class="string">&#x27;apple&#x27;</span>] = <span class="number">60</span></span><br><span class="line"><span class="built_in">print</span>(real_fruits)</span><br><span class="line"></span><br><span class="line">real_fruits[<span class="string">&#x27;orange&#x27;</span>] = <span class="number">50</span></span><br><span class="line">real_fruits.update(&#123;<span class="string">&#x27;cherry&#x27;</span>: <span class="number">100</span>&#125;)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(real_fruits)</span><br><span class="line"><span class="comment"># print(fruits)</span></span><br><span class="line">real_fruits[<span class="string">&#x27;apple&#x27;</span>] = real_fruits[<span class="string">&#x27;apple&#x27;</span>] - <span class="number">5</span></span><br><span class="line"><span class="built_in">print</span>(real_fruits)</span><br><span class="line">real_fruits[<span class="string">&#x27;pear&#x27;</span>] -= <span class="number">3</span></span><br><span class="line"><span class="built_in">print</span>(real_fruits)</span><br><span class="line"></span><br><span class="line">real_fruits.clear()</span><br><span class="line"><span class="built_in">print</span>(real_fruits)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;第二天......&#x27;</span>)</span><br><span class="line">real_fruits = fruits.copy()</span><br><span class="line"><span class="built_in">print</span>(real_fruits)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字典 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 字典的删除</title>
      <link href="/2021/ea97ba53d454/"/>
      <url>/2021/ea97ba53d454/</url>
      
        <content type="html"><![CDATA[<h3 id="字典的删除"><a href="#字典的删除" class="headerlink" title="字典的删除"></a>字典的删除</h3><h4 id="clear函数"><a href="#clear函数" class="headerlink" title="clear函数"></a>clear函数</h4><h5 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h5><ul><li>清空当前字典中所有数据</li></ul><h5 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h5><ul><li><code>dict.clear()</code>  -&gt; <strong>无参数</strong>,<strong>无返回值</strong></li></ul><h4 id="pop函数的功能与用法"><a href="#pop函数的功能与用法" class="headerlink" title="pop函数的功能与用法"></a>pop函数的功能与用法</h4><h5 id="功能-1"><a href="#功能-1" class="headerlink" title="功能"></a>功能</h5><ul><li><strong>删除</strong>字典中<code>指定的key</code>,并<strong>将其结果返回</strong>,如果<strong>key不存在则报错</strong></li></ul><h5 id="用法-1"><a href="#用法-1" class="headerlink" title="用法"></a>用法</h5><ul><li>dict.pop(key)  –  key 希望被删掉的键</li><li><code>&gt;&gt;返回这个key对应的值(value)</code></li></ul><h4 id="del-在字典中的用法"><a href="#del-在字典中的用法" class="headerlink" title="del 在字典中的用法"></a>del 在字典中的用法</h4><ul><li>```python<br>my_dict = {‘name’: ‘dewei’, ‘age’: 33}del my_dict[‘name’]<br>print(my_dict)<blockquote><blockquote><p>{‘age’: 33}</p></blockquote></blockquote>del my_dict<br>print(my_dict) -&gt; 报错 , 整个字典对象已被删除<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#### 代码</span><br><span class="line"></span><br><span class="line">```python</span><br><span class="line"># coding:utf-8</span><br><span class="line"></span><br><span class="line">projects = &#123;</span><br><span class="line">    &#x27;ipad&#x27;: &#123;&#x27;name&#x27;: &#x27;ipad&#x27;, &#x27;price&#x27;: 2200, &#x27;decs&#x27;: &#x27;平板电脑&#x27;&#125;,</span><br><span class="line">    &#x27;iphone&#x27;: &#123;&#x27;name&#x27;: &#x27;iphone&#x27;, &#x27;price&#x27;: 3000, &#x27;desc&#x27;: &#x27;智能手机&#x27;&#125;,</span><br><span class="line">    &#x27;pc&#x27;: &#123;&#x27;name&#x27;: &#x27;pc&#x27;, &#x27;price&#x27;: 5000, &#x27;desc&#x27;: &#x27;台式电脑&#x27;&#125;,</span><br><span class="line">    &#x27;mac&#x27;: &#123;&#x27;name&#x27;: &#x27;mac&#x27;, &#x27;price&#x27;: 8000, &#x27;desc&#x27;: &#x27;平板电脑&#x27;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">print(projects.keys())</span><br><span class="line"></span><br><span class="line">print(&#x27;一个中学生购买了&#123;&#125;,价格是&#123;&#125;&#x27;.format(projects[&#x27;pc&#x27;][&#x27;name&#x27;], projects[&#x27;pc&#x27;][&#x27;price&#x27;]))</span><br><span class="line">projects.pop(&#x27;pc&#x27;)</span><br><span class="line">print(projects.keys())</span><br><span class="line"></span><br><span class="line">result = projects.pop(&#x27;mac&#x27;)</span><br><span class="line">print(&#x27;一个程序员购买了&#123;&#125;,它的价格是&#123;&#125;&#x27;.format(result[&#x27;name&#x27;], result[&#x27;price&#x27;]))</span><br><span class="line">print(projects.keys())</span><br><span class="line"></span><br><span class="line">print(&#x27;&#123;&#125; 和 &#123;&#125; 都被卖出了, 他们一共花费了&#123;&#125;元&#x27;.format(</span><br><span class="line">    projects[&#x27;ipad&#x27;][&#x27;name&#x27;], projects[&#x27;iphone&#x27;][&#x27;name&#x27;],</span><br><span class="line">    projects[&#x27;ipad&#x27;][&#x27;price&#x27;] + projects[&#x27;iphone&#x27;][&#x27;price&#x27;]</span><br><span class="line">))</span><br><span class="line">projects.clear()</span><br><span class="line">print(projects.keys())</span><br><span class="line"></span><br><span class="line">del  projects</span><br><span class="line"># print(projects)</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字典 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 字典key的获取</title>
      <link href="/2021/a44f8b1037ba/"/>
      <url>/2021/a44f8b1037ba/</url>
      
        <content type="html"><![CDATA[<h3 id="字典key的获取"><a href="#字典key的获取" class="headerlink" title="字典key的获取"></a>字典key的获取</h3><h4 id="的获取方法"><a href="#的获取方法" class="headerlink" title="[]的获取方法"></a>[]的获取方法</h4><ul><li>字典+中括号内传key , 不进行赋值操作` 即为获取</li><li>返回key对应的value值</li></ul><h4 id="内置函数get获取方法"><a href="#内置函数get获取方法" class="headerlink" title="内置函数get获取方法"></a>内置函数get获取方法</h4><h5 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h5><ul><li>获取当前字典中指定key对应的value</li></ul><h5 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h5><ul><li><code>dict.get(key, default=None)</code></li></ul><h5 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h5><ul><li><code>key</code> : 需要获取<strong>value</strong>的<strong>key</strong></li><li><code>default</code> : key<strong>不存在</strong>则返回此默认值 ,  默认是<code>None</code> , 我们也可以自定义(可以是任意类型)</li></ul><h4 id="与get的区别"><a href="#与get的区别" class="headerlink" title="[]与get的区别"></a>[]与get的区别</h4><ul><li><code>[]</code>如果获取的<strong>key不存在</strong>, 则**<code>直接报错</code>**</li><li><code>get</code>如果获取的<strong>key不存在</strong> ,  则<strong>返回默认值</strong></li><li>所以<strong>开发中</strong> , <strong>优先使用</strong><code>get函数</code></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">user_info = &#123;</span><br><span class="line">    <span class="string">&#x27;id&#x27;</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="string">&#x27;username&#x27;</span>: <span class="string">&#x27;dewei&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;password&#x27;</span>: <span class="string">&#x27;abcdefg&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;created_time&#x27;</span>: <span class="string">&#x27;2020-01-01 11:11:11&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;birthday&#x27;</span>: <span class="literal">None</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">values = []</span><br><span class="line">values.append(user_info[<span class="string">&#x27;id&#x27;</span>])</span><br><span class="line">values.append(user_info[<span class="string">&#x27;username&#x27;</span>])</span><br><span class="line">values.append(user_info[<span class="string">&#x27;password&#x27;</span>])</span><br><span class="line"><span class="comment"># values.append(user_info[&#x27;created_time&#x27;])</span></span><br><span class="line">values.append(user_info.get(<span class="string">&#x27;created_time&#x27;</span>, <span class="string">&#x27;2020-02-02&#x27;</span>))</span><br><span class="line"><span class="comment"># values.append(user_info[&#x27;birthday&#x27;])</span></span><br><span class="line">values.append(user_info.get(<span class="string">&#x27;birthday&#x27;</span>, <span class="string">&#x27;2020-03-03&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(values)</span><br><span class="line"><span class="comment"># values.append(user_info[&#x27;birthday&#x27;])</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># values.append(user_info.get(&#x27;birthday&#x27;, &#x27;1986-01-01&#x27;))</span></span><br><span class="line"><span class="comment"># print(values)</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字典 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 字典的values函数</title>
      <link href="/2021/c4a2fc9c82dd/"/>
      <url>/2021/c4a2fc9c82dd/</url>
      
        <content type="html"><![CDATA[<h3 id="字典的values函数"><a href="#字典的values函数" class="headerlink" title="字典的values函数"></a>字典的values函数</h3><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li>获取<strong>当前字典</strong>中所有<code>键值对</code>中的<code>值(value)</code></li></ul><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><ul><li><code>dict.values()</code>  -&gt; <strong>无需传参</strong>, 返回一个<code>value集合</code>的<code>伪列表</code><ul><li>依旧是伪列表,不具有列表的所有功能</li></ul></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">project = &#123;<span class="string">&#x27;id&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;ipad&#x27;</span>, <span class="string">&#x27;price&#x27;</span>: <span class="number">2200</span>, <span class="string">&#x27;count&#x27;</span>: <span class="number">50</span>&#125;</span><br><span class="line"></span><br><span class="line">keys = <span class="built_in">list</span>(project.keys())</span><br><span class="line">values = <span class="built_in">list</span>(project.values())</span><br><span class="line"><span class="built_in">print</span>(keys)</span><br><span class="line"><span class="built_in">print</span>(values)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; | &#123;&#125;  | &#123;&#125; | &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(keys[<span class="number">0</span>], keys[<span class="number">1</span>], keys[<span class="number">2</span>], keys[<span class="number">3</span>]))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125;  | &#123;&#125;  | &#123;&#125;  | &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(values[<span class="number">0</span>], values[<span class="number">1</span>], values[<span class="number">2</span>], values[<span class="number">3</span>]))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;2  | iphone | 3000 | 50&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字典 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 字典的keys函数</title>
      <link href="/2021/3ae120011f42/"/>
      <url>/2021/3ae120011f42/</url>
      
        <content type="html"><![CDATA[<h3 id="字典的keys函数"><a href="#字典的keys函数" class="headerlink" title="字典的keys函数"></a>字典的keys函数</h3><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li>获取当前字典中所有的<code>键(key)</code></li></ul><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><ul><li><code>dict.keys()</code>  -&gt; <strong>无需传参</strong>,返回一个<strong>key</strong>集合的<code>伪列表</code><ul><li><code>伪列表</code>不具备列表的所有功能</li></ul></li></ul><h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><ul><li>使用<code>list()函数</code>可以将<code>伪列表</code>转换为<code>列表</code></li><li>转换之后的列表具有<code>无重复成员</code>的特点</li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">project = &#123;<span class="string">&#x27;id&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;project_name&#x27;</span>: <span class="string">&#x27;ipad&#x27;</span>, <span class="string">&#x27;price&#x27;</span>: <span class="number">2200</span>, <span class="string">&#x27;count&#x27;</span>: <span class="number">30</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># project_title = project.keys()</span></span><br><span class="line">project_title = <span class="built_in">list</span>(project.keys())</span><br><span class="line"><span class="built_in">print</span>(project_title)</span><br><span class="line"><span class="comment"># print(project_title[0])</span></span><br><span class="line"><span class="comment"># project_title.append(&#x27;user&#x27;)</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(project_title))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(project_title[<span class="number">0</span>])</span><br><span class="line"><span class="built_in">print</span>(project_title[<span class="number">3</span>])</span><br><span class="line"><span class="built_in">print</span>(project_title[<span class="number">2</span>: <span class="number">6</span>])</span><br><span class="line">project_title.append(<span class="string">&#x27;user&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(project_title)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字典 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 总结 : 字典中添加数据的方法</title>
      <link href="/2021/4e361d34199b/"/>
      <url>/2021/4e361d34199b/</url>
      
        <content type="html"><![CDATA[<h3 id="总结-字典中添加数据的方法"><a href="#总结-字典中添加数据的方法" class="headerlink" title="总结 : 字典中添加数据的方法"></a>总结 : 字典中添加数据的方法</h3><blockquote><p>在字典中添加数据的方法有很多种，总结为以下几种</p></blockquote><h4 id="第一种：通过中括号的形式添加"><a href="#第一种：通过中括号的形式添加" class="headerlink" title="第一种：通过中括号的形式添加"></a>第一种：通过中括号的形式添加</h4><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-10-3/1.jpg" alt="1"></p><h4 id="第二种：字典的内置函数update"><a href="#第二种：字典的内置函数update" class="headerlink" title="第二种：字典的内置函数update"></a>第二种：字典的内置函数update</h4><ul><li><p>无论是添加还是修改都属于<code>更新字典</code></p></li><li><p>在<code>update括号</code>中传入一个新的字典<code>key</code>和<code>value</code>就可以了。字典会自己去检测<code>key</code>是否存在，存在就会覆盖。</p></li></ul><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-10-3/2.jpg" alt="2"></p><h4 id="第三种：字典的setdefault-函数"><a href="#第三种：字典的setdefault-函数" class="headerlink" title="第三种：字典的setdefault()函数"></a>第三种：字典的setdefault()函数</h4><ul><li>Python 字典 <code>setdefault() 函数</code>和 <code>get()方法</code> 类似, 如果键不存在于字典中，将会添加键并将值设为默认值，如果字典中包含有给定键，则返回该键对应的值，否则返回为该键设置的值。</li></ul><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-10-3/3.jpg" alt="3"></p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字典 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 字典添加修改数据的方法</title>
      <link href="/2021/93a62aa43730/"/>
      <url>/2021/93a62aa43730/</url>
      
        <content type="html"><![CDATA[<h3 id="字典添加修改数据的方法"><a href="#字典添加修改数据的方法" class="headerlink" title="字典添加修改数据的方法"></a>字典添加修改数据的方法</h3><h4 id="处理法"><a href="#处理法" class="headerlink" title="[]处理法"></a><code>[]</code>处理法</h4><blockquote><p>字符串,列表, <code>list[0] = 10</code></p></blockquote><ul><li>字典<strong>无</strong>索引</li><li><code>dict[ &#39;name&#39; ] =  &#39;dewei&#39;</code></li><li>添加或修改 ,  根据key是否存在所决定</li></ul><h4 id="字典的内置函数update"><a href="#字典的内置函数update" class="headerlink" title="字典的内置函数update"></a>字典的内置函数<code>update</code></h4><h5 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h5><ul><li>添加新的字典,如<strong>新字典</strong>中有和原字典相同的<code>key</code> , 则该<code>key</code>的<code>value</code>会被<strong>新字典</strong>的<code>value</code>覆盖</li></ul><h5 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h5><ul><li><code>dict.update(new_dict)</code> – 该函数无返回值</li></ul><h5 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h5><ul><li><code>new_dict</code> : 新的字典</li></ul><h4 id="字典的内置函数setdefault"><a href="#字典的内置函数setdefault" class="headerlink" title="字典的内置函数setdefault"></a>字典的内置函数<code>setdefault</code></h4><h5 id="功能-1"><a href="#功能-1" class="headerlink" title="功能"></a>功能</h5><ul><li>获取某个<code>key</code>的<code>value</code> , 如<code>key</code><strong>不存在</strong>于字典中 , 将会<code>添加key</code>并将<strong>value</strong>设为<strong>默认值</strong></li></ul><h5 id="用法-1"><a href="#用法-1" class="headerlink" title="用法"></a>用法</h5><ul><li>dict.setdefault(key, value)</li></ul><h5 id="参数-1"><a href="#参数-1" class="headerlink" title="参数"></a>参数</h5><ul><li><code>key</code> : 需要获取的<strong>key</strong></li><li><code>value</code> : 如果<strong>key</strong>不存在 , 对应这个<strong>key</strong>存入字典的默认值</li></ul><h4 id="注意事项再强调"><a href="#注意事项再强调" class="headerlink" title="注意事项再强调"></a>注意事项再强调</h4><ul><li>字典中每一个<code>key</code>一定是<strong>唯一</strong>的</li><li>字典中的数据量<strong>没有限制</strong></li><li>字典中的<code>value</code>可以是<strong>任何python的内置数据类型的对象和自定义的对象</strong></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">user = &#123;<span class="string">&#x27;username&#x27;</span>: <span class="string">&#x27;dewei&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">33</span>&#125;</span><br><span class="line">xiaomu = &#123;<span class="string">&#x27;username&#x27;</span>: <span class="string">&#x27;小慕&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">10</span>, <span class="string">&#x27;top&#x27;</span>: <span class="number">175</span>, <span class="string">&#x27;sex&#x27;</span>: <span class="string">&#x27;男&#x27;</span>&#125;</span><br><span class="line">user.update(xiaomu)</span><br><span class="line"><span class="built_in">print</span>(user)</span><br><span class="line"></span><br><span class="line">value = user.setdefault(<span class="string">&#x27;username&#x27;</span>, <span class="string">&#x27;xiaoyun&#x27;</span>)</span><br><span class="line">value = user.setdefault(<span class="string">&#x27;birthday&#x27;</span>, <span class="string">&#x27;2021-1-1&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(user, value)</span><br><span class="line"></span><br><span class="line"><span class="comment"># user[&#x27;top&#x27;] = 174</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># print(user)</span></span><br><span class="line"><span class="comment"># user[&#x27;username&#x27;] = &#x27;小慕&#x27;</span></span><br><span class="line"><span class="comment"># print(user)</span></span><br><span class="line"><span class="comment"># user[&#x27;top&#x27;] = 175</span></span><br><span class="line"><span class="comment"># user[&#x27;age&#x27;] = 10</span></span><br><span class="line"><span class="comment"># print(user)</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字典 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 索引与切片之字符串</title>
      <link href="/2021/fe406508a7f3/"/>
      <url>/2021/fe406508a7f3/</url>
      
        <content type="html"><![CDATA[<h2 id="索引与切片之字符串"><a href="#索引与切片之字符串" class="headerlink" title="索引与切片之字符串"></a>索引与切片之字符串</h2><h4 id="字符串的索引-获取"><a href="#字符串的索引-获取" class="headerlink" title="字符串的索引 , 获取"></a>字符串的索引 , 获取</h4><ul><li>索引规则与列表相同</li><li>切片与索引的获取与列表相同</li><li><strong>无法</strong>通过索引修改与<strong>删除</strong></li><li>字符串<strong>不可修改</strong></li></ul><h4 id="字符串的find与index函数"><a href="#字符串的find与index函数" class="headerlink" title="字符串的find与index函数"></a>字符串的<code>find</code>与<code>index</code>函数</h4><h5 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h5><ul><li><strong>获取</strong>元素的<strong>索引位置</strong></li></ul><h5 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h5><ul><li><code>string.index(item)</code>  -&gt; <code>item</code>:查询个数的元素,返回索引位置</li><li><code>string.find(item)</code>     -&gt; <code>item</code>:查询个数的元素,返回索引位置</li><li>返回的是第一个字母的位置</li></ul><h5 id="区别"><a href="#区别" class="headerlink" title="区别"></a>区别</h5><ul><li><code>find</code>如果获取不到,返回<code>-1</code></li><li><code>index</code>如果获取不到,直接<code>报错</code></li></ul><h5 id="好题"><a href="#好题" class="headerlink" title="好题"></a>好题</h5><ul><li><code>list1 = [1, 2, 3, 4, 2]</code></li><li><code>print(list1.index(2))</code></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">name = <span class="string">&#x27;dewei&#x27;</span></span><br><span class="line"></span><br><span class="line">temp = []</span><br><span class="line">temp.extend(name)</span><br><span class="line"><span class="comment"># temp.append(name[0])</span></span><br><span class="line"><span class="comment"># temp.append(name[1])</span></span><br><span class="line"><span class="comment"># temp.append(name[2])</span></span><br><span class="line"><span class="comment"># temp.append(name[3])</span></span><br><span class="line"><span class="comment"># temp.append(name[4])</span></span><br><span class="line"><span class="built_in">print</span>(temp)</span><br><span class="line">temp.reverse()</span><br><span class="line"><span class="built_in">print</span>(temp)</span><br><span class="line"><span class="comment"># new_name = &#x27;%s%s%s%s%s&#x27; % (temp[0], temp[1], temp[2], temp[3], temp[4])</span></span><br><span class="line">new_name = name[::-<span class="number">1</span>]</span><br><span class="line"><span class="built_in">print</span>(new_name)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(new_name)</span><br><span class="line">result = new_name.find(<span class="string">&#x27;iew&#x27;</span>)</span><br><span class="line"><span class="comment"># result = new_name.index(&#x27;iew&#x27;)</span></span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 阶段编程练习(四)</title>
      <link href="/2021/6e5c920393e2/"/>
      <url>/2021/6e5c920393e2/</url>
      
        <content type="html"><![CDATA[<h3 id="编程练习-四"><a href="#编程练习-四" class="headerlink" title="编程练习(四)"></a>编程练习(四)</h3><h4 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h4><blockquote><p>上级派一个组织，去捣毁诈骗团伙。某组织打入敌人内部之后。被卧底发现。卧底想破译组织带来的编码里应合，一网打尽。根据效果图，任务描述及代码中的部分提示来完成</p><p>效果图:</p><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-10-1/3.jpg"></p></blockquote><h4 id="任务"><a href="#任务" class="headerlink" title="任务"></a>任务</h4><ol><li>定义两个}空列表将字符串与数字分别添加到这两个空列表里</li><li>得到两个列表之后将两个列表进行有规律的排序</li><li>排序之后就获取到暗号与密码，为了保密再将两个列表的顺序反转进行打乱顺序</li><li>将原来code列表中的数据复制一份</li><li>为了不让编码落入敌人只手将原code列表数据清空</li></ol><h4 id="原始代码"><a href="#原始代码" class="headerlink" title="原始代码"></a>原始代码</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">code = [&quot;e_ying&quot;, &quot;d_shi&quot;, 6, &quot;a_wo&quot;, 1, 2, 3, &#x27;f_xiong&#x27;, 4, &#x27;b_men&#x27;, 5, &quot;c_dou&quot;]</span><br><span class="line"># 定一个空列表crack 放入字符串</span><br><span class="line"></span><br><span class="line"># 定义一个空列表number 放入数字</span><br><span class="line"></span><br><span class="line"># 使用append将code里面的字符串根据索引添加到crack列表</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(&quot;字符串添加完成&quot;, crack)</span><br><span class="line"># 使用append将code里面的数字根据索引添加到number列表</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(&quot;数字添加完成&quot;, number)</span><br><span class="line"># 使用sort对crack和number列表进行排序</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(&quot;新字符串列表排序&quot;, crack, &quot;\n&quot;, &quot;新数字列表&quot;, number)</span><br><span class="line"># 使用reverse对两个列表进行反序</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(&quot;反转后的新字符串列表crack&quot;, crack)</span><br><span class="line">print(&quot;反转后的新数字列表number&quot;, number)</span><br><span class="line"># 再将原列表复制了一份并且将原列表里面的内容清空</span><br><span class="line"></span><br><span class="line">print(&quot;复制原编码&quot;, new_code)</span><br><span class="line"></span><br><span class="line">print(&quot;清空原列表编码&quot;, code)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="作业提交区"><a href="#作业提交区" class="headerlink" title="作业提交区"></a>作业提交区</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">code = [<span class="string">&quot;e_ying&quot;</span>, <span class="string">&quot;d_shi&quot;</span>, <span class="number">6</span>, <span class="string">&quot;a_wo&quot;</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="string">&#x27;f_xiong&#x27;</span>, <span class="number">4</span>, <span class="string">&#x27;b_men&#x27;</span>, <span class="number">5</span>, <span class="string">&quot;c_dou&quot;</span>]</span><br><span class="line"><span class="comment"># 定一个空列表crack 放入字符串</span></span><br><span class="line">crack = []</span><br><span class="line"><span class="comment"># 定义一个空列表number 放入数字</span></span><br><span class="line">number = []</span><br><span class="line"><span class="comment"># 使用append将code里面的字符串根据索引添加到crack列表</span></span><br><span class="line">crack.append(code[<span class="number">0</span>])</span><br><span class="line">crack.append(code[<span class="number">1</span>])</span><br><span class="line">crack.append(code[<span class="number">3</span>])</span><br><span class="line">crack.append(code[<span class="number">7</span>])</span><br><span class="line">crack.append(code[<span class="number">9</span>])</span><br><span class="line">crack.append(code[<span class="number">11</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;字符串添加完成:&quot;</span>, crack)</span><br><span class="line"><span class="comment"># 使用append将code里面的数字根据索引添加到number列表</span></span><br><span class="line">number.append(code[<span class="number">2</span>])</span><br><span class="line">number.append(code[<span class="number">4</span>])</span><br><span class="line">number.append(code[<span class="number">5</span>])</span><br><span class="line">number.append(code[<span class="number">6</span>])</span><br><span class="line">number.append(code[<span class="number">8</span>])</span><br><span class="line">number.append(code[<span class="number">10</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;数字添加完成&quot;</span>, number)</span><br><span class="line"><span class="comment"># 使用sort对crack和number列表进行排序</span></span><br><span class="line">crack.sort()</span><br><span class="line">number.sort()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;新字符串列表排序&quot;</span>, crack, <span class="string">&quot;\n&quot;</span>, <span class="string">&quot;新数字列表&quot;</span>, number)</span><br><span class="line"><span class="comment"># 使用reverse对两个列表进行反序</span></span><br><span class="line">crack.reverse()</span><br><span class="line">number.reverse()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;反转后的新字符串列表crack&quot;</span>, crack)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;反转后的新数字列表number&quot;</span>, number)</span><br><span class="line"><span class="comment"># 再将原列表复制了一份并且将原列表里面的内容清空</span></span><br><span class="line">new_code = code.copy()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;复制原编码&quot;</span>, new_code)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;清空原列表编码&quot;</span>, code)</span><br><span class="line"><span class="keyword">del</span> code</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="结果检验区"><a href="#结果检验区" class="headerlink" title="结果检验区"></a>结果检验区</h4><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">C:\<span class="title">Users</span>\<span class="title">admin</span>\<span class="title">PycharmProjects</span>\<span class="title">pythonlearn</span>\<span class="title">venv</span>\<span class="title">Scripts</span>\<span class="title">python.exe</span> <span class="title">C</span>:/<span class="title">Users</span>/<span class="title">admin</span>/<span class="title">PycharmProjects</span>/<span class="title">python_list</span>/<span class="title">venv</span>/<span class="title">test3.py</span></span></span><br><span class="line"><span class="function">字符串添加完成: [&#x27;<span class="title">e_ying</span>&#x27;, &#x27;<span class="title">d_shi</span>&#x27;, &#x27;<span class="title">a_wo</span>&#x27;, &#x27;<span class="title">f_xiong</span>&#x27;, &#x27;<span class="title">b_men</span>&#x27;, &#x27;<span class="title">c_dou</span>&#x27;]</span></span><br><span class="line"><span class="function">数字添加完成 [6, 1, 2, 3, 4, 5]</span></span><br><span class="line"><span class="function">新字符串列表排序 [&#x27;<span class="title">a_wo</span>&#x27;, &#x27;<span class="title">b_men</span>&#x27;, &#x27;<span class="title">c_dou</span>&#x27;, &#x27;<span class="title">d_shi</span>&#x27;, &#x27;<span class="title">e_ying</span>&#x27;, &#x27;<span class="title">f_xiong</span>&#x27;] </span></span><br><span class="line"><span class="function"> 新数字列表 [1, 2, 3, 4, 5, 6]</span></span><br><span class="line"><span class="function">反转后的新字符串列表<span class="title">crack</span> [&#x27;<span class="title">f_xiong</span>&#x27;, &#x27;<span class="title">e_ying</span>&#x27;, &#x27;<span class="title">d_shi</span>&#x27;, &#x27;<span class="title">c_dou</span>&#x27;, &#x27;<span class="title">b_men</span>&#x27;, &#x27;<span class="title">a_wo</span>&#x27;]</span></span><br><span class="line"><span class="function">反转后的新数字列表<span class="title">number</span> [6, 5, 4, 3, 2, 1]</span></span><br><span class="line"><span class="function">复制原编码 [&#x27;<span class="title">e_ying</span>&#x27;, &#x27;<span class="title">d_shi</span>&#x27;, 6, &#x27;<span class="title">a_wo</span>&#x27;, 1, 2, 3, &#x27;<span class="title">f_xiong</span>&#x27;, 4, &#x27;<span class="title">b_men</span>&#x27;, 5, &#x27;<span class="title">c_dou</span>&#x27;]</span></span><br><span class="line"><span class="function">清空原列表编码 [&#x27;<span class="title">e_ying</span>&#x27;, &#x27;<span class="title">d_shi</span>&#x27;, 6, &#x27;<span class="title">a_wo</span>&#x27;, 1, 2, 3, &#x27;<span class="title">f_xiong</span>&#x27;, 4, &#x27;<span class="title">b_men</span>&#x27;, 5, &#x27;<span class="title">c_dou</span>&#x27;]</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">进程已结束，退出代码为 0</span></span><br><span class="line"><span class="function"></span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程练习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 索引与切片之列表</title>
      <link href="/2021/dc50fd8d3243/"/>
      <url>/2021/dc50fd8d3243/</url>
      
        <content type="html"><![CDATA[<h3 id="索引与切片之列表"><a href="#索引与切片之列表" class="headerlink" title="索引与切片之列表"></a>索引与切片之列表</h3><h4 id="什么是索引"><a href="#什么是索引" class="headerlink" title="什么是索引"></a>什么是索引</h4><ul><li><p><code>字符串</code>,<code>列表</code>和<code>元组</code></p></li><li><p>从最左边记录的位置就是<code>索引</code></p></li><li><p><code>索引</code>用<strong>数字</strong>表示,起始从<code>0</code>开始</p></li><li><p>字符串,列表(元组)的<code>最大索引</code>是他们的<strong>长度-1</strong></p></li></ul><h4 id="什么是切片"><a href="#什么是切片" class="headerlink" title="什么是切片"></a>什么是切片</h4><ul><li>索引用来对<code>单个元素</code>进行访问,切片则对<code>一定范围</code>内的元素进行访问</li><li>切片通过<code>冒号</code>在<code>中括号</code>内把相隔的两个索引查找出来  [0:10]</li><li><strong>切片规则</strong>为: <code>左含右不含</code></li></ul><h4 id="列表的索引-获取与修改"><a href="#列表的索引-获取与修改" class="headerlink" title="列表的索引,获取与修改"></a>列表的索引,获取与修改</h4><ul><li><code>list[index] = new_item</code>为索引更改变量<ul><li><strong>数据的修改只能在存在的索引范围内</strong></li><li>列表无法通过添加新的索引的方式赋值</li></ul></li><li><code>list.index(item)</code>查找元素的位置</li></ul><h4 id="通过pop删除索引"><a href="#通过pop删除索引" class="headerlink" title="通过pop删除索引"></a>通过pop删除索引</h4><h5 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h5><ul><li>通过索引删除并获取列表的元素</li></ul><h5 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h5><ul><li><code>list.pop(index)</code></li></ul><h5 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h5><ul><li><code>index</code> : 删除列表的第几个索引</li><li><strong>函数会删除该索引的元素并返回</strong></li><li><strong>如果传入的index索引不存在则报错</strong></li></ul><h4 id="通过del删除索引"><a href="#通过del删除索引" class="headerlink" title="通过del删除索引"></a>通过del删除索引</h4><ul><li><p><code>del list[index]</code></p></li><li><p><strong>直接删除  无返回值</strong></p></li><li><p><strong>如果index(索引)不存在则报错</strong></p></li></ul><h4 id="索引在元组中的特殊性"><a href="#索引在元组中的特殊性" class="headerlink" title="索引在元组中的特殊性"></a>索引在元组中的特殊性</h4><ul><li>可以和列表一样获取索引与切片索引</li><li>元组函数index和列表用法完全一致</li><li>无法通过索引修改与删除元素</li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">numbers = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(numbers) - <span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(numbers[<span class="number">9</span>])</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">id</span>(numbers))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;获取列表完整数据:&#x27;</span>, numbers[:])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;另一种获取完整列表的方法&#x27;</span>, numbers[<span class="number">0</span>:])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;第三种获取列表的方法&#x27;</span>, numbers[:-<span class="number">1</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;列表的反序:&#x27;</span>, numbers[::-<span class="number">1</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;列表的反向获取(不完美,少一个最后元素):&#x27;</span>, numbers[-<span class="number">3</span>:-<span class="number">1</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;列表的反序获取(自己想的,好像很成功):&#x27;</span>, numbers[::-<span class="number">1</span>][:<span class="number">3</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;步长获取切片:&#x27;</span>, numbers[<span class="number">0</span>: <span class="number">8</span>: <span class="number">2</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;切片生成空列表&#x27;</span>, numbers[<span class="number">0</span>:<span class="number">0</span>])</span><br><span class="line">new_numbers = numbers[:<span class="number">4</span>]</span><br><span class="line"><span class="built_in">print</span>(new_numbers)</span><br><span class="line"></span><br><span class="line">numbers[<span class="number">3</span>] = <span class="string">&#x27;code&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(numbers)</span><br><span class="line"><span class="comment"># numbers[10] = 1</span></span><br><span class="line"><span class="comment"># print(numbers)</span></span><br><span class="line">numbers[<span class="number">2</span>: <span class="number">5</span>] =  <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span></span><br><span class="line">numbers[<span class="number">2</span>: <span class="number">5</span>] = [ <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(numbers)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(numbers.index(<span class="string">&#x27;c&#x27;</span>))</span><br><span class="line"></span><br><span class="line">item = numbers.pop(<span class="number">4</span>)</span><br><span class="line"><span class="built_in">print</span>(item, numbers, <span class="built_in">len</span>(numbers))</span><br><span class="line"></span><br><span class="line"><span class="keyword">del</span> numbers[<span class="number">4</span>]</span><br><span class="line"><span class="built_in">print</span>(numbers)</span><br><span class="line"></span><br><span class="line">tuple_test = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line"><span class="keyword">del</span> tuple_test</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 列表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 列表的extend函数</title>
      <link href="/2021/8ac840a5df91/"/>
      <url>/2021/8ac840a5df91/</url>
      
        <content type="html"><![CDATA[<h3 id="列表的extend函数"><a href="#列表的extend函数" class="headerlink" title="列表的extend函数"></a>列表的extend函数</h3><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li>将其他<strong>列表</strong>或<strong>元组</strong>中的<code>元素</code>导入<code>当前列表</code>中</li></ul><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><ul><li><code>list.extend(iterable)</code> </li></ul><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><ul><li><code>iterable</code>代表列表或元组 , 该函数无返回值</li></ul><h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><ul><li>传入的必须是<code>iterable</code></li><li>直接传入字符串的话会被拆分成很多个单个字符</li><li>不可传入整形或者布尔类型之类的(不是<code>iterable</code><strong>就不行</strong>)</li><li><strong>传入<code>字典</code>的话只会保留<code>key</code>的值</strong></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">manhua = []</span><br><span class="line">history = []</span><br><span class="line">code = []</span><br><span class="line"></span><br><span class="line">new_manhua = (<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>)</span><br><span class="line">new_history = (<span class="string">&#x27;中国历史&#x27;</span>, <span class="string">&#x27;日本历史&#x27;</span>, <span class="string">&#x27;韩国历史&#x27;</span>)</span><br><span class="line">new_code = (<span class="string">&#x27;python&#x27;</span>, <span class="string">&#x27;django&#x27;</span>, <span class="string">&#x27;flask&#x27;</span>)</span><br><span class="line"></span><br><span class="line">manhua.extend(new_manhua)</span><br><span class="line">history.extend(new_history)</span><br><span class="line">code.extend(new_code)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(manhua, history, code)</span><br><span class="line"></span><br><span class="line">history.extend(manhua)</span><br><span class="line"><span class="keyword">del</span> manhua</span><br><span class="line"><span class="built_in">print</span>(history)</span><br><span class="line"></span><br><span class="line">test = []</span><br><span class="line"><span class="comment"># test.extend(&#x27;abcd&#x27;)</span></span><br><span class="line">test.extend(&#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;dewei&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">33</span>&#125;)</span><br><span class="line"><span class="comment"># test.extend(True)</span></span><br><span class="line"><span class="built_in">print</span>(test)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 列表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 列表的copy函数</title>
      <link href="/2021/25bb72e78788/"/>
      <url>/2021/25bb72e78788/</url>
      
        <content type="html"><![CDATA[<h3 id="列表的copy函数"><a href="#列表的copy函数" class="headerlink" title="列表的copy函数"></a>列表的copy函数</h3><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li>将<code>当前列表</code>复制一份<strong>相同的列表</strong>,新列表与旧列表<strong>内容相同</strong>,但<strong>内存空间不同</strong></li></ul><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><ul><li><code>list.copy()</code> -&gt; 该函数<strong>无参数</strong> , 返回一个一模一样的列表</li></ul><h4 id="copy与二次赋值的区别"><a href="#copy与二次赋值的区别" class="headerlink" title="copy与二次赋值的区别"></a><code>copy</code>与<code>二次赋值</code>的区别</h4><ul><li><p>二次赋值的变量与原始变量享有<code>相同内存空间</code></p></li><li><p><code>copy函数</code>创建的新列表与原始列表<strong>不是一个内存空间</strong>,<code>不同享数据变更</code></p></li><li><p><code>copy</code> 属于 <code>浅拷贝</code></p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line">b = a</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line">b = a.copy()</span><br><span class="line">b.append(<span class="number">4</span>)</span><br><span class="line">b  -&gt;  [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]</span><br><span class="line">a  -&gt;  [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br></pre></td></tr></table></figure><h4 id="浅拷贝与深拷贝"><a href="#浅拷贝与深拷贝" class="headerlink" title="浅拷贝与深拷贝"></a>浅拷贝与深拷贝</h4><ul><li>深拷贝内存空间不同，不共享数据；</li><li>浅拷贝是对最外层的数据创建一个新的间来存储，而对内层的内存地址进行引用;</li></ul><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-10-1/1.jpg" alt="1"></p><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-10-1/2.jpg" alt="2"></p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">old_list = [<span class="string">&#x27;python&#x27;</span>, <span class="string">&#x27;django&#x27;</span>, <span class="string">&#x27;flask&#x27;</span>]</span><br><span class="line"></span><br><span class="line">new_list = old_list</span><br><span class="line">new_list.append(<span class="string">&#x27;tornado&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(new_list)</span><br><span class="line"><span class="built_in">print</span>(old_list)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">id</span>(new_list), <span class="built_in">id</span>(old_list))</span><br><span class="line"></span><br><span class="line">old_list.remove(<span class="string">&#x27;tornado&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(new_list, old_list)</span><br><span class="line"></span><br><span class="line"><span class="comment"># old_list.clear()</span></span><br><span class="line"><span class="comment"># print(new_list, old_list)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">del</span> new_list</span><br><span class="line"><span class="built_in">print</span>(old_list)</span><br><span class="line"></span><br><span class="line">old_list_copy = [<span class="string">&#x27;python&#x27;</span>, <span class="string">&#x27;django&#x27;</span>, <span class="string">&#x27;flask&#x27;</span>]</span><br><span class="line">new_list_copy = old_list_copy.copy()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(old_list_copy, new_list_copy)</span><br><span class="line">new_list_copy.append(<span class="string">&#x27;tornado_copy&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(old_list_copy, new_list_copy)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">id</span>(old_list_copy), <span class="built_in">id</span>(new_list_copy))</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 列表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 列表的clear函数</title>
      <link href="/2021/6b19b9a6e00b/"/>
      <url>/2021/6b19b9a6e00b/</url>
      
        <content type="html"><![CDATA[<h3 id="列表的clear函数"><a href="#列表的clear函数" class="headerlink" title="列表的clear函数"></a>列表的clear函数</h3><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li>将当前列表中的数据<code>清空</code></li></ul><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><ul><li><code>list.clear()</code> -&gt; 该函数<strong>无参数</strong> , <strong>无返回值</strong></li></ul><h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><ul><li><code>比空列表节省性能</code></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">mix = [<span class="string">&#x27;python&#x27;</span>, <span class="number">1</span>, (<span class="number">1</span>,), &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;dewei&#x27;</span>&#125;]</span><br><span class="line"><span class="built_in">print</span>(mix, <span class="built_in">len</span>(mix))</span><br><span class="line">mix.clear()</span><br><span class="line"><span class="built_in">print</span>(mix, <span class="built_in">len</span>(mix))</span><br><span class="line"></span><br><span class="line">mixs = []</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 列表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 列表中的sort函数</title>
      <link href="/2021/7a3616182a6d/"/>
      <url>/2021/7a3616182a6d/</url>
      
        <content type="html"><![CDATA[<h3 id="列表中的sort函数"><a href="#列表中的sort函数" class="headerlink" title="列表中的sort函数"></a>列表中的sort函数</h3><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li>对当前列表按照<code>一定规律</code><strong>排序</strong></li></ul><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><ul><li><code>list.sort(key=None, reverse=False)</code></li></ul><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><ul><li><code>key</code> - 参数比较</li><li><code>reverse</code> –排序规则<ul><li><code>reverse = True</code> 降序 </li><li><code>reverse = False</code> 升序 ( 默认 )</li><li><em>key涉及函数学习,我们在日后讲解当前默认不传即可</em></li></ul></li></ul><h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><ul><li>列表中的元素类型<strong>必须相同</strong> , 否则无法排序<code>(报错)</code></li><li>字典也可以排序, key或者value排序</li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">shu = <span class="string">&#x27;01老鼠&#x27;</span></span><br><span class="line">niu = <span class="string">&#x27;02牛&#x27;</span></span><br><span class="line">hu = <span class="string">&#x27;03虎&#x27;</span></span><br><span class="line">tu = <span class="string">&#x27;04兔&#x27;</span></span><br><span class="line">long = <span class="string">&#x27;05龙&#x27;</span></span><br><span class="line">she = <span class="string">&#x27;06蛇&#x27;</span></span><br><span class="line">ma = <span class="string">&#x27;07马&#x27;</span></span><br><span class="line">yang = <span class="string">&#x27;08羊&#x27;</span></span><br><span class="line">hou = <span class="string">&#x27;09猴&#x27;</span></span><br><span class="line">ji = <span class="string">&#x27;10鸡&#x27;</span></span><br><span class="line">gou = <span class="string">&#x27;11狗&#x27;</span></span><br><span class="line">zhu = <span class="string">&#x27;12猪&#x27;</span></span><br><span class="line"></span><br><span class="line">shengxiao =[]</span><br><span class="line">shengxiao.append(gou)</span><br><span class="line">shengxiao.append(ji)</span><br><span class="line">shengxiao.append(zhu)</span><br><span class="line">shengxiao.append(hou)</span><br><span class="line">shengxiao.append(she)</span><br><span class="line">shengxiao.append(tu)</span><br><span class="line">shengxiao.append(hu)</span><br><span class="line">shengxiao.append(niu)</span><br><span class="line">shengxiao.append(shu)</span><br><span class="line">shengxiao.append(long)</span><br><span class="line">shengxiao.append(ma)</span><br><span class="line">shengxiao.append(yang)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(shengxiao)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(shengxiao))</span><br><span class="line">shengxiao.sort()</span><br><span class="line"><span class="built_in">print</span>(shengxiao)</span><br><span class="line">shengxiao.sort(reverse=<span class="literal">True</span>)</span><br><span class="line"><span class="built_in">print</span>(shengxiao)</span><br><span class="line">shengxiao.sort(reverse=<span class="literal">True</span>)</span><br><span class="line"><span class="built_in">print</span>(shengxiao)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 以下会报错的</span></span><br><span class="line"><span class="comment"># mix = [&#x27;python&#x27;, 1.2, &#123;&#x27;name&#x27;: &#x27;dewei&#x27;&#125;]</span></span><br><span class="line"><span class="comment"># mix.sort()</span></span><br><span class="line"><span class="comment"># print(mix)</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 列表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 列表的reverse函数</title>
      <link href="/2021/67051d4c5a5e/"/>
      <url>/2021/67051d4c5a5e/</url>
      
        <content type="html"><![CDATA[<h3 id="列表的reverse函数"><a href="#列表的reverse函数" class="headerlink" title="列表的reverse函数"></a>列表的reverse函数</h3><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li>对当前的列表顺序进行反转</li></ul><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><ul><li><code>list.reverse()</code></li></ul><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><ul><li><strong>无参数传递</strong></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">students = [</span><br><span class="line">    &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;dewei&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">33</span>, <span class="string">&#x27;top&#x27;</span>: <span class="number">174</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;小慕&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">10</span>, <span class="string">&#x27;top&#x27;</span>: <span class="number">175</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;小高&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">18</span>, <span class="string">&#x27;top&#x27;</span>: <span class="number">188</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;Xiaoyun&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">18</span>, <span class="string">&#x27;top&#x27;</span>: <span class="number">165</span>&#125;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;当前同学的顺序是&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(students))</span><br><span class="line">students.reverse()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;座位更换之后的顺序是&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(students))</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 列表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 阶段编程练习(三)</title>
      <link href="/2021/bb1d8975abf3/"/>
      <url>/2021/bb1d8975abf3/</url>
      
        <content type="html"><![CDATA[<h3 id="编程练习-三"><a href="#编程练习-三" class="headerlink" title="编程练习(三)"></a>编程练习(三)</h3><h4 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h4><blockquote><p>学校组织学员买资料。班长把买资料的同学登记在一个表里。全班总共16人。根据任务描述、效果图及代码中的注释完成该习题<br>效果图：</p><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-9-29/3.png" alt="3"></p></blockquote><h4 id="任务"><a href="#任务" class="headerlink" title="任务"></a>任务</h4><ol><li>第一次核对人数不对x。</li><li>小糊涂表示自己有可能多交了一次导致记录了多次名字。</li><li>班长进行对表里的’小糊涂’进行核实。发现确实登记重复，并把钱退给了小糊涂，在列表里删除一个小糊涂。</li><li>这时’小雨’表示自己也不确定是否交钱。班长再次进行核实，发现’小雨’没有交钱。</li><li>把小雨按照学号8 记录在列表（注意：学号即下标从0开始）。</li><li>新插班生’小刘’表示自己没有学号也没有交钱，班长把’小刘’放到了最后一位。</li><li>进行最后核实最后人数正确 。</li></ol><h4 id="初始代码"><a href="#初始代码" class="headerlink" title="初始代码"></a>初始代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">student = [<span class="string">&quot;小花&quot;</span>, <span class="string">&quot;小白&quot;</span>, <span class="string">&quot;小可&quot;</span>, <span class="string">&quot;小糊涂&quot;</span>, <span class="string">&quot;小新&quot;</span>,<span class="string">&quot;小蓝&quot;</span>, <span class="string">&quot;小伟&quot;</span>, <span class="string">&quot;小玲&quot;</span>, <span class="string">&quot;小撒&quot;</span>, <span class="string">&quot;小丽&quot;</span>, <span class="string">&quot;小航&quot;</span>,]</span><br><span class="line"><span class="comment"># 核对人数：使用len()函数得到列表中的长度，并输出结果</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 发现人数不对</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 核对小糊涂交了几次钱：使用count()统计&quot;小糊涂&quot;的次数</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 把小糊涂从列表中移除一个</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 再次进行核对</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 确认小雨有没有在list中：使用in判断并输出结果</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将小雨放到学号为8的位置，并输出插入后的列表值</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 把插班生小刘放到最后，并输出列表中的元素</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 班长最后核对一下人数</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="代码提交区"><a href="#代码提交区" class="headerlink" title="代码提交区"></a>代码提交区</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">student = [<span class="string">&quot;小糊涂&quot;</span>, <span class="string">&quot;小花&quot;</span>, <span class="string">&quot;小白&quot;</span>, <span class="string">&quot;小可&quot;</span>, <span class="string">&quot;小糊涂&quot;</span>, <span class="string">&quot;小新&quot;</span>, <span class="string">&quot;小黑&quot;</span>, <span class="string">&quot;小糊涂&quot;</span>, <span class="string">&quot;小蓝&quot;</span>, <span class="string">&quot;小伟&quot;</span>, <span class="string">&quot;小玲&quot;</span>, <span class="string">&quot;小丽&quot;</span>, <span class="string">&quot;小航&quot;</span>, <span class="string">&quot;小平&quot;</span>, <span class="string">&quot;小圆&quot;</span>]</span><br><span class="line"><span class="comment"># 核对人数：使用len()函数得到列表中的长度，并输出结果</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;第一次核对人数:&#x27;</span>, <span class="built_in">len</span>(student))</span><br><span class="line"><span class="comment"># 发现人数不对</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;交钱的数量和班级人数是否相同:&#x27;</span>, <span class="number">16</span> == <span class="built_in">len</span>(student))</span><br><span class="line"><span class="comment"># 核对小糊涂交了几次钱：使用count()统计&quot;小糊涂&quot;的次数</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;确认小糊涂交了几次钱&#x27;</span>, student.count(<span class="string">&#x27;小糊涂&#x27;</span>))</span><br><span class="line"><span class="comment"># 把小糊涂从列表中移除一个</span></span><br><span class="line">student.remove(<span class="string">&#x27;小糊涂&#x27;</span>)</span><br><span class="line"><span class="comment"># 再次进行核对</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;把钱退给小糊涂之后现在有%s人交钱&#x27;</span> % <span class="built_in">len</span>(student))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;交钱的数量和班级人数是否相同:&#x27;</span>, <span class="number">16</span> == <span class="built_in">len</span>(student))</span><br><span class="line"><span class="comment"># 确认小雨有没有在list中：使用in判断并输出结果</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;小雨交钱了吗?&#x27;</span>, <span class="string">&#x27;小雨&#x27;</span> <span class="keyword">in</span> student)</span><br><span class="line"><span class="comment"># 将小雨放到学号为8的位置，并输出插入后的列表值</span></span><br><span class="line">student.insert(<span class="number">8</span>, <span class="string">&#x27;小雨&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;根据学号8把小雨放到列表:&#x27;</span>, student)</span><br><span class="line"><span class="comment"># 把插班生小刘放到最后，并输出列表中的元素</span></span><br><span class="line">student.append(<span class="string">&#x27;小刘&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;把插班生放到最后:&#x27;</span>, student)</span><br><span class="line"><span class="comment"># 班长最后核对一下人数</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;交钱的数量和班级人数是否相同:&#x27;</span>, <span class="number">16</span> == <span class="built_in">len</span>(student))</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="结果检验区"><a href="#结果检验区" class="headerlink" title="结果检验区"></a>结果检验区</h4><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">C:\<span class="title">Users</span>\<span class="title">admin</span>\<span class="title">PycharmProjects</span>\<span class="title">pythonlearn</span>\<span class="title">venv</span>\<span class="title">Scripts</span>\<span class="title">python.exe</span> <span class="title">C</span>:/<span class="title">Users</span>/<span class="title">admin</span>/<span class="title">PycharmProjects</span>/<span class="title">python_list</span>/<span class="title">code3.py</span></span></span><br><span class="line"><span class="function">第一次核对人数: 15</span></span><br><span class="line"><span class="function">交钱的数量和班级人数是否相同: <span class="title">False</span></span></span><br><span class="line"><span class="function">确认小糊涂交了几次钱 3</span></span><br><span class="line"><span class="function">把钱退给小糊涂之后现在有14人交钱</span></span><br><span class="line"><span class="function">交钱的数量和班级人数是否相同: <span class="title">False</span></span></span><br><span class="line"><span class="function">小雨交钱了吗? <span class="title">False</span></span></span><br><span class="line"><span class="function">根据学号8把小雨放到列表: [&#x27;小花&#x27;, &#x27;小白&#x27;, &#x27;小可&#x27;, &#x27;小糊涂&#x27;, &#x27;小新&#x27;, &#x27;小黑&#x27;, &#x27;小糊涂&#x27;, &#x27;小蓝&#x27;, &#x27;小雨&#x27;, &#x27;小伟&#x27;, &#x27;小玲&#x27;, &#x27;小丽&#x27;, &#x27;小航&#x27;, &#x27;小平&#x27;, &#x27;小圆&#x27;]</span></span><br><span class="line"><span class="function">把插班生放到最后: [&#x27;小花&#x27;, &#x27;小白&#x27;, &#x27;小可&#x27;, &#x27;小糊涂&#x27;, &#x27;小新&#x27;, &#x27;小黑&#x27;, &#x27;小糊涂&#x27;, &#x27;小蓝&#x27;, &#x27;小雨&#x27;, &#x27;小伟&#x27;, &#x27;小玲&#x27;, &#x27;小丽&#x27;, &#x27;小航&#x27;, &#x27;小平&#x27;, &#x27;小圆&#x27;, &#x27;小刘&#x27;]</span></span><br><span class="line"><span class="function">交钱的数量和班级人数是否相同: <span class="title">True</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">进程已结束，退出代码为 0</span></span><br><span class="line"><span class="function"></span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程练习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 列表的remove函数</title>
      <link href="/2021/31ea9d7e4353/"/>
      <url>/2021/31ea9d7e4353/</url>
      
        <content type="html"><![CDATA[<h3 id="列表的remove函数"><a href="#列表的remove函数" class="headerlink" title="列表的remove函数"></a>列表的remove函数</h3><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li>删除列表中的某个元素</li></ul><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><ul><li><code>list.remove(item)</code></li></ul><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><ul><li><code>item</code> : 准备删除的函数</li></ul><h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><ul><li>如果删除的成员(元素)不存在 , 会<code>直接报错</code></li><li>如果被删除的元素有多个 , <code>只会删除第一个</code>(从左往右数)</li><li><code>remove</code>函数**不会返回一个新的列表,**而是在<code>原先的列表</code>中对元素进行删除(列表是可以被修改的)</li></ul><h3 id="Python内置函数-del"><a href="#Python内置函数-del" class="headerlink" title="Python内置函数 del"></a>Python内置函数 <code>del</code></h3><ul><li><code>del把变量完全删除</code></li></ul><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">shops = [<span class="string">&#x27;可乐&#x27;</span>, <span class="string">&#x27;洗发水&#x27;</span>, <span class="string">&#x27;可乐&#x27;</span>, <span class="string">&#x27;牛奶&#x27;</span>, <span class="string">&#x27;牛奶&#x27;</span>, <span class="string">&#x27;牙膏&#x27;</span>, <span class="string">&#x27;牙膏&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;我们的超市有这些内容:%s&#x27;</span> % shops)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;我们的可乐有%s件产品&#x27;</span> % shops.count(<span class="string">&#x27;可乐&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;我们的牛奶有%s件产品&#x27;</span> % shops.count(<span class="string">&#x27;牛奶&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;我们的牙膏有%s件产品&#x27;</span> % shops.count(<span class="string">&#x27;牙膏&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;我们的洗发水有%s件产品&#x27;</span> % shops.count(<span class="string">&#x27;洗发水&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;我们要购买一件洗发水&#x27;</span>)</span><br><span class="line">shops.remove(<span class="string">&#x27;洗发水&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;现在我们的洗发水还剩下%s件, 当前已经没有洗发水了&#x27;</span> % shops.count(<span class="string">&#x27;洗发水&#x27;</span>))</span><br><span class="line"><span class="comment"># shops.remove(&#x27;洗发水&#x27;)</span></span><br><span class="line">shops.remove(<span class="string">&#x27;可乐&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;当前可乐还有%s件&#x27;</span> % shops.count(<span class="string">&#x27;可乐&#x27;</span>))</span><br><span class="line">shops.remove(<span class="string">&#x27;可乐&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;可乐还有%s件&#x27;</span> % shops.count(<span class="string">&#x27;可乐&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(shops)</span><br><span class="line"></span><br><span class="line"><span class="keyword">del</span> shops</span><br><span class="line"></span><br><span class="line"><span class="comment"># print(shops)</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 列表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 列表(元组)的count函数</title>
      <link href="/2021/40b46745a962/"/>
      <url>/2021/40b46745a962/</url>
      
        <content type="html"><![CDATA[<h3 id="列表-元组-的count函数"><a href="#列表-元组-的count函数" class="headerlink" title="列表(元组)的count函数"></a>列表(元组)的count函数</h3><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li>返回当前列表中某个成员的个数</li></ul><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><ul><li><code>inttype = list.count(item)</code></li></ul><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><ul><li><code>item</code> :  你想查询个数的元素</li></ul><h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><ul><li><p>如果查询的成员(元素)不存在,则返回 <code>0</code></p></li><li><p>列表只会检查<code>完整元素</code>是否存在需要计算的内容</p></li><li><p><code>列表</code>和<code>元组</code>的<code>count</code>是<strong>一致</strong>的</p></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">animals = [<span class="string">&#x27;小猫&#x27;</span>, <span class="string">&#x27;小狗&#x27;</span>, <span class="string">&#x27;龙猫&#x27;</span>, <span class="string">&#x27;小猫&#x27;</span>, <span class="string">&#x27;鹦鹉&#x27;</span>, <span class="string">&#x27;小狗&#x27;</span>, <span class="string">&#x27;小兔子&#x27;</span>, <span class="string">&#x27;小猫&#x27;</span>]</span><br><span class="line"></span><br><span class="line">cat = animals.count(<span class="string">&#x27;小猫&#x27;</span>)</span><br><span class="line">dog = animals.count(<span class="string">&#x27;小狗&#x27;</span>)</span><br><span class="line">l_cat = animals.count(<span class="string">&#x27;龙猫&#x27;</span>)</span><br><span class="line">rabbit = animals.count(<span class="string">&#x27;小兔子&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;我家的院子里有很多小动物&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;其中小猫有 %s 只&#x27;</span> % cat)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;小狗有 &#123;&#125; 只&#x27;</span>.<span class="built_in">format</span>(dog))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;龙猫有 <span class="subst">&#123;l_cat&#125;</span> 只&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;小兔子有 %d 只&#x27;</span> % rabbit)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;我们没有小松鼠, 所以松鼠有 %s 只&#x27;</span> % animals.count(<span class="string">&#x27;松鼠&#x27;</span>))</span><br><span class="line"></span><br><span class="line">animals_dict = [</span><br><span class="line">    &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;dog&#x27;</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;dog&#x27;</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;cat&#x27;</span>&#125;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">dog_dict_count = animals_dict.count(&#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;dog&#x27;</span>&#125;)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;小狗在动物字典中有 %s 只&#x27;</span> % dog_dict_count)</span><br><span class="line"></span><br><span class="line">animals_tuple = (<span class="string">&#x27;小猫&#x27;</span>, <span class="string">&#x27;小狗&#x27;</span>, <span class="string">&#x27;龙猫&#x27;</span>, <span class="string">&#x27;小猫&#x27;</span>,</span><br><span class="line">           <span class="string">&#x27;鹦鹉&#x27;</span>, <span class="string">&#x27;小狗&#x27;</span>, <span class="string">&#x27;小兔子&#x27;</span>, <span class="string">&#x27;小猫&#x27;</span>)</span><br><span class="line"></span><br><span class="line">cat = animals_tuple.count(<span class="string">&#x27;小猫&#x27;</span>)</span><br><span class="line">dog = animals_tuple.count(<span class="string">&#x27;小狗&#x27;</span>)</span><br><span class="line">l_cat = animals_tuple.count(<span class="string">&#x27;龙猫&#x27;</span>)</span><br><span class="line">rabbit = animals_tuple.count(<span class="string">&#x27;小兔子&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;我家的院子里有很多小动物&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;其中小猫有 %s 只\n小狗有 %s 只\n龙猫有 %s 只\n小兔子有 %s 只&#x27;</span></span><br><span class="line">      % (cat, dog, l_cat, rabbit))</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 列表 </tag>
            
            <tag> 元组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 列表的添加-insert函数</title>
      <link href="/2021/dc367876ec86/"/>
      <url>/2021/dc367876ec86/</url>
      
        <content type="html"><![CDATA[<h3 id="列表的添加-insert函数"><a href="#列表的添加-insert函数" class="headerlink" title="列表的添加-insert函数"></a>列表的添加-insert函数</h3><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li>将一个元素添加到当前列表的指定位置中</li></ul><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><ul><li>list.insrt(index, new_item)</li></ul><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><ul><li><code>index</code> : 新的元素放在哪个位置(数字)<code>[整形]</code></li><li><code>new_item</code> : 添加的新元素(成员)</li></ul><h4 id="insert与append的区别"><a href="#insert与append的区别" class="headerlink" title="insert与append的区别"></a>insert与append的区别</h4><ul><li><code>append</code>只能添加到列表的结尾,而<code>insert</code>可以选择任何一个位置</li><li>如果<code>insert</code>传入的位置列表中<strong>不存在</strong>,则将新元素添加到列表<strong>结尾</strong></li><li><code>字符串</code> <code>元组</code> <code>列表</code> <code>元素</code>的位置是从0开始计算的</li><li><code>insert</code>之后    其他的元素向后顺沿</li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">students = [</span><br><span class="line">    &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;dewei&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">33</span>, <span class="string">&#x27;sex&#x27;</span>: <span class="string">&#x27;男&#x27;</span>, <span class="string">&#x27;id&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;top&#x27;</span>: <span class="string">&#x27;174&#x27;</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;小慕&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">10</span>, <span class="string">&#x27;sex&#x27;</span>: <span class="string">&#x27;男&#x27;</span>, <span class="string">&#x27;id&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;top&#x27;</span>: <span class="string">&#x27;175&#x27;</span>&#125;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">xiaoyun = &#123;</span><br><span class="line">    <span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;xiaoyun&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;age&#x27;</span>: <span class="number">18</span>,</span><br><span class="line">    <span class="string">&#x27;sex&#x27;</span>: <span class="string">&#x27;女&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;id&#x27;</span>: <span class="number">3</span>,</span><br><span class="line">    <span class="string">&#x27;top&#x27;</span>: <span class="string">&#x27;160&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">students.insert(<span class="number">0</span>, xiaoyun)</span><br><span class="line"><span class="built_in">print</span>(students)</span><br><span class="line"></span><br><span class="line">xiaogao = &#123;</span><br><span class="line">    <span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;xiaogao&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;age&#x27;</span>: <span class="number">18</span>,</span><br><span class="line">    <span class="string">&#x27;id&#x27;</span>: <span class="number">4</span>,</span><br><span class="line">    <span class="string">&#x27;top&#x27;</span>: <span class="string">&#x27;188&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">students.insert(<span class="number">3</span>, <span class="literal">None</span>)</span><br><span class="line">students.insert(<span class="number">4</span>, <span class="literal">None</span>)</span><br><span class="line">students.insert(<span class="number">5</span>, <span class="literal">None</span>)</span><br><span class="line"></span><br><span class="line">students.insert(<span class="number">6</span>, xiaogao)</span><br><span class="line"><span class="built_in">print</span>(students)</span><br><span class="line"></span><br><span class="line">xiaoming = &#123;</span><br><span class="line">    <span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;xiaoming&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;age&#x27;</span>: <span class="number">19</span>,</span><br><span class="line">    <span class="string">&#x27;sex&#x27;</span>: <span class="string">&#x27;男&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;id&#x27;</span>: <span class="number">5</span>,</span><br><span class="line">    <span class="string">&#x27;top&#x27;</span>: <span class="string">&#x27;178&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">students.insert(<span class="number">3</span>, xiaoming)</span><br><span class="line"><span class="built_in">print</span>(students[<span class="number">1</span>])</span><br><span class="line"><span class="built_in">print</span>(students[<span class="number">2</span>])</span><br><span class="line"><span class="built_in">print</span>(students[<span class="number">3</span>])</span><br><span class="line"><span class="built_in">print</span>(students[<span class="number">4</span>])</span><br><span class="line"><span class="built_in">print</span>(students[<span class="number">5</span>])</span><br><span class="line"><span class="built_in">print</span>(students[<span class="number">6</span>])</span><br><span class="line"><span class="built_in">print</span>(students[<span class="number">7</span>])</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 列表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 列表的添加-append函数</title>
      <link href="/2021/58e5cf582340/"/>
      <url>/2021/58e5cf582340/</url>
      
        <content type="html"><![CDATA[<h3 id="列表的添加-append函数"><a href="#列表的添加-append函数" class="headerlink" title="列表的添加-append函数"></a>列表的添加-append函数</h3><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li>将<strong>一个</strong><code>元素</code>添加到当前<code>列表</code>中</li></ul><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><ul><li><code>list.append(new_item)</code></li></ul><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><ul><li><code>new_item</code>:添加进列表的新的元素(成员)</li></ul><h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><ul><li>被添加的元素只会被添加到末尾</li><li><code>append</code>函数是在<code>原有</code>列表的基础上添加,不需要额外添加新的变量</li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">books = []</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">id</span>(books))</span><br><span class="line">books.append(<span class="string">&#x27;python入门课程&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(books)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">id</span>(books))</span><br><span class="line"></span><br><span class="line">number = <span class="number">1.1</span></span><br><span class="line">tuple_test = (<span class="number">1</span>, )</span><br><span class="line">dict_test = &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;dewei&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line">books.append(number)</span><br><span class="line">books.append(tuple_test)</span><br><span class="line">books.append(dict_test)</span><br><span class="line">books.append(<span class="string">&#x27;diango&#x27;</span>)</span><br><span class="line">books.append(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">books.append(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">books.append(<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(books)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">id</span>(books))</span><br><span class="line"></span><br><span class="line">book_1 = [<span class="string">&#x27;西游记&#x27;</span>, <span class="string">&#x27;红楼梦&#x27;</span>]</span><br><span class="line">book_2 = [<span class="string">&#x27;三国演义&#x27;</span>, <span class="string">&#x27;水浒传&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">id</span>(book_1))</span><br><span class="line">book_1 = book_1 + book_2  <span class="comment"># id改变</span></span><br><span class="line">book_1 += book_2  <span class="comment"># id不变</span></span><br><span class="line"><span class="built_in">print</span>(book_1)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">id</span>(book_1))</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 列表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 列表元组的操作符</title>
      <link href="/2021/66f57f325fd0/"/>
      <url>/2021/66f57f325fd0/</url>
      
        <content type="html"><![CDATA[<h3 id="列表元组的操作符"><a href="#列表元组的操作符" class="headerlink" title="列表元组的操作符"></a>列表元组的操作符</h3><h4 id="列表-元组-之间的累加与乘法"><a href="#列表-元组-之间的累加与乘法" class="headerlink" title="列表(元组)之间的累加与乘法"></a>列表(元组)之间的累加与乘法</h4><ul><li>len 函数可以计算出除了数字类型意外,其他所有数据类型的长度</li></ul><h6 id="加法"><a href="#加法" class="headerlink" title="加法"></a>加法</h6><ul><li>new_names = names +names</li></ul><h6 id="乘法"><a href="#乘法" class="headerlink" title="乘法"></a>乘法</h6><ul><li>new_names = names * 2</li></ul><h4 id="in-和-not-in-在列表-元组-中的用法"><a href="#in-和-not-in-在列表-元组-中的用法" class="headerlink" title="in 和  not in 在列表(元组)中的用法"></a><code>in</code> 和  <code>not in</code> 在列表(元组)中的用法</h4><ul><li><p>in判断某个成员(元素)是否在该数据结构中</p></li><li><p>not in 就是判断某个成员(元素)是否不在该数据类型中</p></li></ul><h5 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h5><ul><li><p><code>bool(&#39;xiaomu&#39; in names)</code></p></li><li><p><code>bool(&#39;xiaowang&#39; not in names)</code></p></li></ul><h5 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h5><p><strong><code>+=</code>不可以<code>直接打印</code></strong></p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">names = (<span class="string">&#x27;dewei&#x27;</span>, <span class="string">&#x27;xiaomu&#x27;</span>, <span class="string">&#x27;xiaowang&#x27;</span>)</span><br><span class="line"></span><br><span class="line">names_add = names + names</span><br><span class="line">names_c = names * <span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(names_add)</span><br><span class="line"><span class="built_in">print</span>(names_c)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;names_c length is&#x27;</span>, <span class="built_in">len</span>(names_c))</span><br><span class="line"></span><br><span class="line">names += (<span class="string">&#x27;abc&#x27;</span>, )</span><br><span class="line"><span class="built_in">print</span>(names)</span><br><span class="line">names *= <span class="number">10</span></span><br><span class="line"><span class="built_in">print</span>(names)</span><br><span class="line"></span><br><span class="line">names_list = [<span class="string">&#x27;dewei&#x27;</span>, <span class="string">&#x27;xiaomu&#x27;</span>]</span><br><span class="line">names_list += [<span class="string">&#x27;xiaowang&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(names_list)</span><br><span class="line">names_list *= <span class="number">5</span></span><br><span class="line"><span class="built_in">print</span>(names_list)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;dewei&#x27;</span> <span class="keyword">in</span> names_list)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;dewei&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> names_list)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="小结-列表与元组的总结与应用"><a href="#小结-列表与元组的总结与应用" class="headerlink" title="小结:列表与元组的总结与应用"></a>小结:列表与元组的总结与应用</h4><ol><li><p>len函数可以计算出除了数字类型以外，其他所有数据类型的长度。</p><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-9-29/1.jpg" alt="1"></p></li><li><p>in判断某个元素是否在列表（元组中）</p></li><li><p>not in判断某个元素u是否不在列表（元组中）两者返回结果是bool值即True或False。</p><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-9-29/2.jpg" alt="2"></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 列表 </tag>
            
            <tag> 元组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 阶段编程练习(二)</title>
      <link href="/2021/662c99956871/"/>
      <url>/2021/662c99956871/</url>
      
        <content type="html"><![CDATA[<h3 id="编程练习-二"><a href="#编程练习-二" class="headerlink" title="编程练习(二)"></a>编程练习(二)</h3><h4 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h4><blockquote><p>定义一个变量 string= “When your mindis simple, your world is simple” 将变量对应效果图中的方法print输出，实现效果图：</p><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-9-27/3.jpg" alt="3"></p></blockquote><h4 id="任务"><a href="#任务" class="headerlink" title="任务"></a>任务</h4><ol><li><code>string= &quot;When your mind is simple, your world is simple&quot;</code></li><li>根据对应的字符串处理的方法进行输出</li></ol><h3 id="任务提交区"><a href="#任务提交区" class="headerlink" title="任务提交区"></a>任务提交区</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">string = <span class="string">&#x27;When your mind is simple, your world is simple&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;定义长度:&#x27;</span>, string.zfill(<span class="number">50</span>))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;获取元素i的个数:&#x27;</span>, string.count(<span class="string">&#x27;i&#x27;</span>))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;判断开头的元素是不是e:&#x27;</span>, string.startswith(<span class="string">&#x27;e&#x27;</span>))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;判断结尾的元素是不是e:&#x27;</span>, string.endswith(<span class="string">&#x27;e&#x27;</span>))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;请找到r在哪个位置:&#x27;</span>, string.index(<span class="string">&#x27;r&#x27;</span>))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;请找到元素a在哪个位置:&#x27;</span>, string.find(<span class="string">&#x27;a&#x27;</span>))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;请把字符串中的元素W去掉:&#x27;</span>, string.strip(<span class="string">&#x27;W&#x27;</span>))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;请把字符串中的your改为my:&#x27;</span>, string.replace(<span class="string">&#x27;your&#x27;</span>, <span class="string">&#x27;my&#x27;</span>))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;请判断字符串是不是由空格组成:&#x27;</span>, string.isspace())</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;请判断字符串是不是标题&#x27;</span>, string.istitle())</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;请判断字符串中的字母是不是都是大写:&#x27;</span>, string.isupper())</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;请判断字符串中的字母是不是都是小写:&#x27;</span>, string.islower())</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="结果检验区"><a href="#结果检验区" class="headerlink" title="结果检验区"></a>结果检验区</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">C:\<span class="title">Users</span>\<span class="title">admin</span>\<span class="title">PycharmProjects</span>\<span class="title">pythonlearn</span>\<span class="title">venv</span>\<span class="title">Scripts</span>\<span class="title">python.exe</span> <span class="title">C</span>:/<span class="title">Users</span>/<span class="title">admin</span>/<span class="title">PycharmProjects</span>/<span class="title">pythonlearn</span>/<span class="title">test2.py</span></span></span><br><span class="line"><span class="function">定义长度: 0000<span class="title">When</span> <span class="title">your</span> <span class="title">mind</span> <span class="title">is</span> <span class="title">simple</span>, <span class="title">your</span> <span class="title">world</span> <span class="title">is</span> <span class="title">simple</span></span></span><br><span class="line"><span class="function">获取元素<span class="title">i</span>的个数: 5</span></span><br><span class="line"><span class="function">判断开头的元素是不是<span class="title">e</span>: <span class="title">False</span></span></span><br><span class="line"><span class="function">判断结尾的元素是不是<span class="title">e</span>: <span class="title">True</span></span></span><br><span class="line"><span class="function">请找到<span class="title">r</span>在哪个位置: 8</span></span><br><span class="line"><span class="function">请找到元素<span class="title">a</span>在哪个位置: -1</span></span><br><span class="line"><span class="function">请把字符串中的元素<span class="title">W</span>去掉: <span class="title">hen</span> <span class="title">your</span> <span class="title">mind</span> <span class="title">is</span> <span class="title">simple</span>, <span class="title">your</span> <span class="title">world</span> <span class="title">is</span> <span class="title">simple</span></span></span><br><span class="line"><span class="function">请把字符串中的<span class="title">your</span>改为<span class="title">my</span>: <span class="title">When</span> <span class="title">my</span> <span class="title">mind</span> <span class="title">is</span> <span class="title">simple</span>, <span class="title">my</span> <span class="title">world</span> <span class="title">is</span> <span class="title">simple</span></span></span><br><span class="line"><span class="function">请判断字符串是不是由空格组成: <span class="title">False</span></span></span><br><span class="line"><span class="function">请判断字符串是不是标题 <span class="title">False</span></span></span><br><span class="line"><span class="function">请判断字符串中的字母是不是都是大写: <span class="title">False</span></span></span><br><span class="line"><span class="function">请判断字符串中的字母是不是都是小写: <span class="title">False</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">进程已结束，退出代码为 0</span></span><br><span class="line"><span class="function"></span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程练习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 阶段编程练习(一)</title>
      <link href="/2021/9979207360be/"/>
      <url>/2021/9979207360be/</url>
      
        <content type="html"><![CDATA[<h3 id="编程练习-一"><a href="#编程练习-一" class="headerlink" title="编程练习(一)"></a>编程练习(一)</h3><h4 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h4><blockquote><p>在脚本开始写上国际通用编码。定义六个变量分别表示‘周一’，‘周二’，‘周三’，‘周四’，‘周五’，‘饭店活动介绍’每个变量加上相应的注释。‘周一’到‘周五’中把菜名与价格作为格式化。在‘饭店活动介绍’中把饭店名称以及所有奖品的价格用{}格式化。在‘凭结账小票可进行抽奖’后加入换行符，每等奖介绍完后都要进行换行，所有‘：’后面加入空格符。再定义五个变量作为‘周一’到‘周五’格式化输出的结果（比如菜名‘麻辣小龙虾’13，9.8）。最后将这11个变量对应输出，实现效果图：</p><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-9-27/2.jpg"></p></blockquote><h4 id="任务"><a href="#任务" class="headerlink" title="任务"></a>任务</h4><ol><li>定义每天特价的菜品变量，并把菜品与价格用格式符占位。</li><li>定义一个活动介绍的变量‘<ul><li>饭店不仅每天有特价,为了回馈新老客户到店就送价值的精美礼品,凭结账小票可进行抽奖 <ul><li>一等奖: 价值 欧洲游 </li><li>二等奖: 价值 的豆浆机 </li><li>三等奖: 价值200元的生活大礼包”</li></ul></li></ul></li><li>在活动介绍中加入相应的<code>格式符</code>与<code>转义字符</code></li><li>定义与1相对的变量写出每天的菜名，菜的价格，赠送汤的价格</li><li>最后将3与1对应的周一到周五以及活动介绍并输出</li></ol><h3 id="提交作业区"><a href="#提交作业区" class="headerlink" title="提交作业区"></a>提交作业区</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">num_1 = <span class="string">&#x27;一&#x27;</span>  <span class="comment"># 一</span></span><br><span class="line">num_2 = <span class="string">&#x27;二&#x27;</span>  <span class="comment"># 二</span></span><br><span class="line">num_3 = <span class="string">&#x27;三&#x27;</span>  <span class="comment"># 三</span></span><br><span class="line">num_4 = <span class="string">&#x27;四&#x27;</span>  <span class="comment"># 四</span></span><br><span class="line">num_5 = <span class="string">&#x27;五&#x27;</span>  <span class="comment"># 五</span></span><br><span class="line">text = <span class="string">&#x27;饭店活动介绍&#x27;</span>  <span class="comment"># 介绍</span></span><br><span class="line">food1 = <span class="string">&#x27;麻辣小龙虾&#x27;</span>  <span class="comment"># 食物</span></span><br><span class="line">food1_price = <span class="number">23</span></span><br><span class="line">food2 = <span class="string">&#x27;宫保鸡丁&#x27;</span>  <span class="comment"># 食物</span></span><br><span class="line">food2_price = <span class="number">12</span></span><br><span class="line">food3 = <span class="string">&#x27;水煮鱼片&#x27;</span>  <span class="comment"># 食物</span></span><br><span class="line">food3_price = <span class="number">32</span></span><br><span class="line">food4 = <span class="string">&#x27;果儿拼盘&#x27;</span>  <span class="comment"># 食物</span></span><br><span class="line">food4_price = <span class="number">19</span></span><br><span class="line">food5 = <span class="string">&#x27;小鸡炖蘑菇&#x27;</span>  <span class="comment"># 食物</span></span><br><span class="line">food5_price = <span class="number">33</span></span><br><span class="line">free_food_01 = <span class="string">&#x27;罗宋汤&#x27;</span>  <span class="comment"># 赠送食物</span></span><br><span class="line">free_food_02 = <span class="string">&#x27;紫菜蛋花汤&#x27;</span>  <span class="comment"># 赠送食物</span></span><br><span class="line">free_food_03 = <span class="string">&#x27;西湖牛肉羹&#x27;</span>  <span class="comment"># 赠送食物</span></span><br><span class="line">free_food_04 = <span class="string">&#x27;番茄鸡蛋汤&#x27;</span>  <span class="comment"># 赠送食物</span></span><br><span class="line">free_food_05 = <span class="string">&#x27;米酒小汤圆&#x27;</span>  <span class="comment"># 赠送食物</span></span><br><span class="line">free_food_price = <span class="number">9.8</span></span><br><span class="line"></span><br><span class="line">prize_01 = <span class="string">&#x27;价值一万元欧洲游&#x27;</span></span><br><span class="line">prize_02 = <span class="string">&#x27;价值388的豆浆机&#x27;</span></span><br><span class="line">prize_03 = <span class="string">&#x27;价值200元的生活大礼包&#x27;</span></span><br><span class="line"></span><br><span class="line">word = <span class="string">&#x27;周%s特价%s %d元, 赠送一份价值%f的%s&#x27;</span></span><br><span class="line">word_special = <span class="string">&#x27;****************************\n小北饭店不仅每天有特价,为了回馈新老顾客到店就送价值29.9的精美礼品,凭结账小票可进行抽奖&#x27;</span></span><br><span class="line">word_prize = <span class="string">&#x27;%s等奖:  %s&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(word % (num_1, food1, food1_price, free_food_price, free_food_01))</span><br><span class="line">    <span class="built_in">print</span>(word % (num_2, food2, food2_price, free_food_price, free_food_02))</span><br><span class="line">    <span class="built_in">print</span>(word % (num_3, food3, food3_price, free_food_price, free_food_03))</span><br><span class="line">    <span class="built_in">print</span>(word % (num_4, food4, food4_price, free_food_price, free_food_04))</span><br><span class="line">    <span class="built_in">print</span>(word % (num_5, food5, food5_price, free_food_price, free_food_05))</span><br><span class="line">    <span class="built_in">print</span>(word_special)</span><br><span class="line">    <span class="built_in">print</span>(word_prize % (num_1, prize_01))</span><br><span class="line">    <span class="built_in">print</span>(word_prize % (num_2, prize_02))</span><br><span class="line">    <span class="built_in">print</span>(word_prize % (num_3, prize_03))</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="结果检验区"><a href="#结果检验区" class="headerlink" title="结果检验区"></a>结果检验区</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">C:\<span class="title">Users</span>\<span class="title">admin</span>\<span class="title">PycharmProjects</span>\<span class="title">pythonlearn</span>\<span class="title">venv</span>\<span class="title">Scripts</span>\<span class="title">python.exe</span> <span class="title">C</span>:/<span class="title">Users</span>/<span class="title">admin</span>/<span class="title">PycharmProjects</span>/<span class="title">pythonlearn</span>/<span class="title">test1.py</span></span></span><br><span class="line"><span class="function">周一特价麻辣小龙虾 23元, 赠送一份价值9.800000的罗宋汤</span></span><br><span class="line"><span class="function">周二特价宫保鸡丁 12元, 赠送一份价值9.800000的紫菜蛋花汤</span></span><br><span class="line"><span class="function">周三特价水煮鱼片 32元, 赠送一份价值9.800000的西湖牛肉羹</span></span><br><span class="line"><span class="function">周四特价果儿拼盘 19元, 赠送一份价值9.800000的番茄鸡蛋汤</span></span><br><span class="line"><span class="function">周五特价小鸡炖蘑菇 33元, 赠送一份价值9.800000的米酒小汤圆</span></span><br><span class="line"><span class="function">****************************</span></span><br><span class="line"><span class="function">小北饭店不仅每天有特价,为了回馈新老顾客到店就送价值29.9的精美礼品,凭结账小票可进行抽奖</span></span><br><span class="line"><span class="function">一等奖:  价值一万元欧洲游</span></span><br><span class="line"><span class="function">二等奖:  价值388的豆浆机</span></span><br><span class="line"><span class="function">三等奖:  价值200元的生活大礼包</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">进程已结束，退出代码为 0</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程练习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python字符串的转义字符</title>
      <link href="/2021/66ca73568a66/"/>
      <url>/2021/66ca73568a66/</url>
      
        <content type="html"><![CDATA[<h3 id="字符串的转义字符"><a href="#字符串的转义字符" class="headerlink" title="字符串的转义字符"></a>字符串的转义字符</h3><h4 id="什么是转义字符"><a href="#什么是转义字符" class="headerlink" title="什么是转义字符"></a>什么是转义字符</h4><ul><li>字符要转成其他含义的功能,所以我们叫他转义字符</li><li><code>\</code>    <code>+</code>    字符</li></ul><h4 id="Python中的转义字符"><a href="#Python中的转义字符" class="headerlink" title="Python中的转义字符"></a>Python中的转义字符</h4><table><thead><tr><th align="center">符号</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center"><code>\n</code></td><td align="center">换行,一般用于末尾,<code>strip</code>对其也有效</td></tr><tr><td align="center"><code>\t</code></td><td align="center">横向制表符(可以认为是一个间隔符)</td></tr><tr><td align="center"><code>\v</code></td><td align="center">纵向制表符(会有一个男性符号)</td></tr><tr><td align="center"><code>\a</code></td><td align="center">响铃</td></tr><tr><td align="center"><code>\b</code></td><td align="center">退格符,将光标前移,覆盖(删除前一个)</td></tr><tr><td align="center"><code>\r</code></td><td align="center">回车</td></tr><tr><td align="center"><code>\f</code></td><td align="center">翻页(几乎用不到,会出现一个女性符号)</td></tr><tr><td align="center"><code>\&#39;</code></td><td align="center">转义字符串中的单引号</td></tr><tr><td align="center"><code>\&#39;&#39;</code></td><td align="center">转义字符中的双引号</td></tr><tr><td align="center"><code>\\</code></td><td align="center">转义斜杠</td></tr></tbody></table><h4 id="转义无效符"><a href="#转义无效符" class="headerlink" title="转义无效符"></a>转义无效符</h4><ul><li>在<strong>python</strong>中 在字符串前加 <code>r</code> 来将当前字符串的转义字符无效化<ul><li><code>print(r&#39;hello \f&#39;)</code></li></ul></li><li><code>r</code>对<code>格式化</code>无影响</li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding: utf-8</span></span><br><span class="line"></span><br><span class="line">info_n = (<span class="string">&#x27;my name \nis %s\n&#x27;</span> % <span class="string">&#x27;dewei&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(info_n)</span><br><span class="line"></span><br><span class="line">info_t = <span class="string">&#x27;my name \tis dewei&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(info_t)</span><br><span class="line"></span><br><span class="line">info_v = <span class="string">&#x27;my name \v is dewei&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(info_v)</span><br><span class="line"></span><br><span class="line">info_a = <span class="string">&#x27;my name \a is dewei&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(info_a)</span><br><span class="line"></span><br><span class="line">info_b = <span class="string">&#x27;my name is dewei\b&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(info_b)</span><br><span class="line"></span><br><span class="line">info_r = <span class="string">&#x27;my name is dewei\r&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(info_r, info_b)</span><br><span class="line"></span><br><span class="line">info_f = <span class="string">&#x27;my name is dewei\f&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;f&#x27;</span>, info_f)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;my name is \&#x27;dewei\&#x27;&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;my name is \&quot;dewei\&quot;&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;my name is \&quot;Dewei\&quot;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;my name is \\ dewei&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">r&#x27;my name is \\ dewei\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">r&#x27;my name is %s&#x27;</span> % <span class="string">&#x27;dewei&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python字符串格式化的常用格式符</title>
      <link href="/2021/9486aa5c3377/"/>
      <url>/2021/9486aa5c3377/</url>
      
        <content type="html"><![CDATA[<h3 id="字符串格式化的常用格式符"><a href="#字符串格式化的常用格式符" class="headerlink" title="字符串格式化的常用格式符"></a>字符串格式化的常用格式符</h3><h4 id="字符串格式化的符号"><a href="#字符串格式化的符号" class="headerlink" title="字符串格式化的符号"></a>字符串格式化的符号</h4><ul><li>定义:用于对应各种数据类型的格式化符号—–格式化符号</li></ul><table><thead><tr><th align="center">符号</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">%s</td><td align="center"><strong>格式化字符串,通用类型</strong></td></tr><tr><td align="center">%d</td><td align="center">格式化整形</td></tr><tr><td align="center">%f</td><td align="center">格式化浮点型</td></tr><tr><td align="center">%u</td><td align="center">格式化无符号整型(正整型)</td></tr><tr><td align="center">%c</td><td align="center">格式化字符</td></tr></tbody></table><h4 id="不太常用的格式化符号"><a href="#不太常用的格式化符号" class="headerlink" title="不太常用的格式化符号"></a>不太常用的格式化符号</h4><table><thead><tr><th align="center">符号</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">%u</td><td align="center">格式化无符号八进制数</td></tr><tr><td align="center">%x</td><td align="center">格式化无符号16进制数</td></tr><tr><td align="center">%e</td><td align="center">科学计数法格式化浮点数</td></tr></tbody></table><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%c&#x27;</span> % <span class="number">1000</span>)</span><br><span class="line"><span class="comment">#print(&#x27;%c&#x27; % &#x27;ab&#x27;)</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%c&#x27;</span> % <span class="number">999999</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%u&#x27;</span> % -<span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%f&#x27;</span> % <span class="number">1.2</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%f&#x27;</span> % <span class="number">3.14</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%f&#x27;</span> % <span class="number">12</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%d&#x27;</span> % <span class="number">10</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%d&#x27;</span> % -<span class="number">10</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%d&#x27;</span> % <span class="number">1.2</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%s&#x27;</span> % <span class="string">&#x27;123&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%s&#x27;</span> % <span class="number">123</span>)</span><br><span class="line"><span class="comment"># print(&#x27;%f&#x27; % &#x27;1.2&#x27;)</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;:d&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="number">1</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;:f&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="number">1.2</span>))</span><br><span class="line"><span class="comment">#print(&#x27;&#123;:s&#125;&#x27;.format(12))</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%o&#x27;</span> % <span class="number">24</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%x&#x27;</span> % <span class="number">32</span>)</span><br><span class="line"><span class="comment">#print(&#x27;%x&#x27; % 123ab)</span></span><br><span class="line"></span><br><span class="line">number = <span class="built_in">int</span>(<span class="string">&#x27;123ab&#x27;</span>, <span class="number">16</span>)</span><br><span class="line"><span class="built_in">print</span>(number)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%x&#x27;</span> % number)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%e&#x27;</span> % <span class="number">1.2</span>)</span><br><span class="line"></span><br><span class="line">par = <span class="string">&quot;我喜欢&#123;&#125;，但是他需要&#123;&#125;, 可我只有&#123;&#125;。&quot;</span></span><br><span class="line"><span class="built_in">print</span>(par.<span class="built_in">format</span>(<span class="string">&quot;番茄&quot;</span>,<span class="number">10.88</span>,<span class="number">5</span>))</span><br><span class="line"></span><br><span class="line">par = <span class="string">&quot;我喜欢%s，但是他需要%s, 可我只有%s。&quot;</span></span><br><span class="line"><span class="built_in">print</span>(par % (<span class="string">&quot;菠萝&quot;</span>, <span class="number">32.54</span>, <span class="number">23</span>))</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python字符串的格式化</title>
      <link href="/2021/dd217d42cb82/"/>
      <url>/2021/dd217d42cb82/</url>
      
        <content type="html"><![CDATA[<h3 id="字符串的格式化"><a href="#字符串的格式化" class="headerlink" title="字符串的格式化"></a>字符串的格式化</h3><h4 id="什么是格式化"><a href="#什么是格式化" class="headerlink" title="什么是格式化"></a>什么是格式化</h4><p><code>一个固定的字符串中有部分元素是根据变量的值而改变的字符串</code></p><h4 id="使用格式化场景和目的"><a href="#使用格式化场景和目的" class="headerlink" title="使用格式化场景和目的"></a>使用格式化场景和目的</h4><ul><li>发送邮件的时候</li><li>发送短信的时候</li><li>App上发推送的时候</li><li>对于重复性很多的信息,通过格式化的形式,可以减少代码的书写量</li></ul><h4 id="格式化的三种方式"><a href="#格式化的三种方式" class="headerlink" title="格式化的三种方式"></a>格式化的三种方式</h4><ul><li><p>字符串格式化使用操作符 <code>%</code> 来实现</p><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-9-27/1.jpg" alt="图片1"></p></li><li><p>字符串格式化函数 - <code>format</code>(官方比较推荐)</p><ul><li><code>string.format</code>函数用来格式化字符串</li><li>使用 <code>format</code> 的字符串主体使用 <code>&#123;&#125;</code> 大括号来代替格式符</li><li><code>string.format(date,date,date...)</code></li></ul></li><li><p><strong>Python3.6加入的新格式化方案—-f-strings</strong></p><ul><li>定义一个变量</li><li>字符串前加 f 符号</li><li>需要格式化的位置使用 (变量名)</li><li>一定要先定义好变量名</li></ul></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding: utf-8</span></span><br><span class="line"></span><br><span class="line">info = <span class="string">&#x27;my name is %s, my age is %s&#x27;</span></span><br><span class="line"></span><br><span class="line">name_01 = <span class="string">&#x27;小慕&#x27;</span></span><br><span class="line">age_01 = <span class="number">10</span></span><br><span class="line">name_02 = <span class="string">&#x27;dewei&#x27;</span></span><br><span class="line">age_02 = <span class="number">33</span></span><br><span class="line"><span class="built_in">print</span>(info % (name_01, age_01))</span><br><span class="line"><span class="built_in">print</span>(info % (name_02, age_02))</span><br><span class="line"></span><br><span class="line">message = <span class="string">&#x27;您好, 今天是%s, 您的手机号码 : %s 已经欠费了, 请尽快充值&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(message % (<span class="string">&#x27;星期一&#x27;</span>, <span class="number">123456789</span>))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(message % (<span class="number">1234567</span>, <span class="string">&#x27;星期二&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(message)</span><br><span class="line"></span><br><span class="line">books = [<span class="string">&#x27;python&#x27;</span>, <span class="string">&#x27;django&#x27;</span>, <span class="string">&#x27;flask&#x27;</span>]</span><br><span class="line">info_2 = <span class="string">&#x27;my name is %s, my age is %s, my book is %s&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(info_2 % (name_01, age_01, books))</span><br><span class="line"></span><br><span class="line">dict_01 = &#123;<span class="string">&#x27;a&#x27;</span>: <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>: <span class="string">&#x27;b&#x27;</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;dict is %s&#x27;</span> % dict_01)</span><br><span class="line"></span><br><span class="line">info_03 = <span class="string">&#x27;my name is &#123;0&#125;, my age is &#123;1&#125;, my book is &#123;2&#125;&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(info_03.<span class="built_in">format</span>(name_02, age_02, books))</span><br><span class="line"></span><br><span class="line">info_04 = <span class="string">f&#x27;my name is <span class="subst">&#123;name_01&#125;</span>, my name is <span class="subst">&#123;age_02&#125;</span>&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(info_04)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(info_03.<span class="built_in">format</span>(<span class="string">&#x27;dewei&#x27;</span>, <span class="number">33</span>, [<span class="string">&#x27;python&#x27;</span>]))</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python字符串的编码格式</title>
      <link href="/2021/497056ce2ccc/"/>
      <url>/2021/497056ce2ccc/</url>
      
        <content type="html"><![CDATA[<h3 id="字符串的编码格式"><a href="#字符串的编码格式" class="headerlink" title="字符串的编码格式"></a>字符串的编码格式</h3><h4 id="什么是编码格式"><a href="#什么是编码格式" class="headerlink" title="什么是编码格式"></a>什么是编码格式</h4><ul><li>有一定规则的规则</li><li>使用了这种规则,我们就能知道传输的信息是什么意思</li></ul><h4 id="常见的编码格式"><a href="#常见的编码格式" class="headerlink" title="常见的编码格式"></a>常见的编码格式</h4><ul><li>gbk中文编码</li><li>ascii英文编码</li></ul><h4 id="通用的编码格式"><a href="#通用的编码格式" class="headerlink" title="通用的编码格式"></a>通用的编码格式</h4><ul><li><p><strong>utf-8是一种国际通用的编码格式</strong></p></li><li><p>(还有一些指定的编码格式)</p></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#### coding: gbk</span></span><br><span class="line"><span class="comment">#### coding: a</span></span><br><span class="line"><span class="comment"># coding: utf-8</span></span><br><span class="line">name = <span class="string">&#x27;小慕&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(name)</span><br><span class="line">age = <span class="number">10</span></span><br><span class="line">heart = <span class="string">&#x27;love&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(age, heart)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 字符串中返回bool类型的函数集合</title>
      <link href="/2021/74daef8d67d3/"/>
      <url>/2021/74daef8d67d3/</url>
      
        <content type="html"><![CDATA[<h3 id="字符串中返回bool类型的函数集合"><a href="#字符串中返回bool类型的函数集合" class="headerlink" title="字符串中返回bool类型的函数集合"></a>字符串中返回bool类型的函数集合</h3><h4 id="isspace"><a href="#isspace" class="headerlink" title="isspace"></a>isspace</h4><h5 id="功能"><a href="#功能" class="headerlink" title="功能:"></a>功能:</h5><ul><li>判断字符串是否是由一个空格组成的字符串</li></ul><h5 id="用法"><a href="#用法" class="headerlink" title="用法:"></a>用法:</h5><ul><li><code>booltype = string.isspace()</code>  -&gt; 无参数可传 ,返回一个<code>布尔类型</code></li></ul><h5 id="注意"><a href="#注意" class="headerlink" title="注意:"></a>注意:</h5><ul><li>由空格组成的字符串,不是空字符串 : “’!=‘’’</li></ul><hr><h4 id="istitile"><a href="#istitile" class="headerlink" title="istitile"></a>istitile</h4><h5 id="功能-1"><a href="#功能-1" class="headerlink" title="功能:"></a>功能:</h5><ul><li>判断字符串是否是一个标题类型</li></ul><h5 id="用法-1"><a href="#用法-1" class="headerlink" title="用法"></a>用法</h5><ul><li><code>booltype = String.istitle()</code>  -&gt; 无参数可传, 返回一个<code>布尔类型</code></li></ul><h5 id="注意-1"><a href="#注意-1" class="headerlink" title="注意:"></a>注意:</h5><ul><li><strong>该函数只能用于英文</strong></li></ul><hr><h4 id="isupper与islower"><a href="#isupper与islower" class="headerlink" title="isupper与islower"></a>isupper与islower</h4><h5 id="功能-2"><a href="#功能-2" class="headerlink" title="功能:"></a>功能:</h5><ul><li><code>isupper</code>判断字符串中的字母是否都是大写</li><li><code>islower</code>判断字符串中的字母是否都是小写</li></ul><h5 id="用法-2"><a href="#用法-2" class="headerlink" title="用法:"></a>用法:</h5><ul><li><code>booltype = string.isupper()</code>  -&gt; 无参数可传 , 返回一个<code>布尔类型</code></li><li><code>booltype = string,islower()</code>   -&gt;无参数可传 ,返回一个<code>布尔类型</code></li></ul><h5 id="注意-2"><a href="#注意-2" class="headerlink" title="注意:"></a>注意:</h5><ul><li>只检测字符串里的字母,对其他字符不做判断</li></ul><hr><h4 id="join与split-稍后见"><a href="#join与split-稍后见" class="headerlink" title="join与split 稍后见"></a>join与split 稍后见</h4><ul><li>我们数据类型转换的时候见</li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">title = <span class="string">&#x27;Back Of China&#x27;</span></span><br><span class="line">upper_str = <span class="string">&#x27;PYTHON IS A GOOD CODE 哈哈!&#x27;</span></span><br><span class="line">upper_str_02 = <span class="string">&#x27;Python Is A Good Code&#x27;</span></span><br><span class="line">lower_str = <span class="string">&#x27; i love python 哈哈!&#x27;</span></span><br><span class="line">not_empty = <span class="string">&#x27;                  &#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(title.istitle())</span><br><span class="line"><span class="built_in">print</span>(upper_str.istitle())</span><br><span class="line"><span class="built_in">print</span>(upper_str_02.istitle())</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;isuppr&#x27;</span>, upper_str.isupper())</span><br><span class="line"><span class="built_in">print</span>(lower_str.isupper())</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;islower&#x27;</span>, lower_str.islower())</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(not_empty.isspace())</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 字符串的replace函数</title>
      <link href="/2021/92a83431ef5c/"/>
      <url>/2021/92a83431ef5c/</url>
      
        <content type="html"><![CDATA[<h3 id="字符串的replace函数"><a href="#字符串的replace函数" class="headerlink" title="字符串的replace函数"></a>字符串的replace函数</h3><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li>将字符串中的<code>old</code>(旧元素)替换成<code>new</code>(新元素),并能指定替换的数量</li></ul><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><ul><li><code>newtr = string.replace(old, new, max)</code></li></ul><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><ul><li><code>old</code> : 被替换的元素.</li><li><code>new</code> : 替代old的新元素</li><li><code>max</code> : 可选,代表替换几个,默认全部替换<strong>全部匹配</strong>的old元素</li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">info = (<span class="string">&#x27;百：量词，指数量多，在这里指全部；科：学科，科目。&#x27;</span></span><br><span class="line">        <span class="string">&#x27;《中国大百科全书·新闻出版》卷定义为：&#x27;</span></span><br><span class="line">        <span class="string">&#x27;“概要介绍人类一切门类知识或某一门类知识的工具书。&#x27;</span></span><br><span class="line">        <span class="string">&#x27;供查检所需知识和事实资料之用。&#x27;</span></span><br><span class="line">        <span class="string">&#x27;但也具有扩大读者知识视野，帮助系统求知的作用。&#x27;</span></span><br><span class="line">        <span class="string">&#x27;它是一个国家和一个时代科学文化发展的标志。”&#x27;</span>)</span><br><span class="line"></span><br><span class="line">a = <span class="string">&#x27;百&#x27;</span></span><br><span class="line">b = <span class="string">&#x27;指&#x27;</span></span><br><span class="line">c = <span class="string">&#x27;人类&#x27;</span></span><br><span class="line">d = <span class="string">&#x27;科&#x27;</span></span><br><span class="line">e = <span class="string">&#x27;*&#x27;</span></span><br><span class="line">f = <span class="string">&#x27;0&#x27;</span></span><br><span class="line">g = <span class="string">&#x27;$&#x27;</span></span><br><span class="line">h = <span class="string">&#x27;&amp;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#test = info.replace(a, e)</span></span><br><span class="line"><span class="comment">#print(test)</span></span><br><span class="line"><span class="comment">#test = test.replace(b, f)</span></span><br><span class="line"><span class="comment">#print(test)</span></span><br><span class="line"><span class="comment">#test = test.replace(c, g)</span></span><br><span class="line"><span class="comment">#test = test.replace(d, h)</span></span><br><span class="line"><span class="comment">#print(test)</span></span><br><span class="line"></span><br><span class="line">test = info.replace(a, e).replace(b, f).replace(c, g).replace(d, h)</span><br><span class="line"><span class="built_in">print</span>(test)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 字符串的strip函数</title>
      <link href="/2021/1df67f6322b8/"/>
      <url>/2021/1df67f6322b8/</url>
      
        <content type="html"><![CDATA[<h3 id="字符串的strip函数"><a href="#字符串的strip函数" class="headerlink" title="字符串的strip函数"></a>字符串的strip函数</h3><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li><code>string</code>将去掉字符串<strong>左右两边</strong>的<code>指定元素</code>,<strong>默认</strong>是<code>空格</code></li></ul><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><ul><li><code>newstr = string.strip(item)</code></li></ul><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><ul><li>括弧里需要传一个你<code>想去掉的元素</code>,可不填写</li></ul><h4 id="拓展知识"><a href="#拓展知识" class="headerlink" title="拓展知识"></a>拓展知识</h4><ul><li>传入的元素如果不在开头或结尾则无效</li><li><code>lstrip</code>仅去掉字符串开头的指定元素或空格</li><li><code>rstrip</code>仅去掉字符串结尾的指定元素或空格</li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">info = <span class="string">&#x27;                             my name is dewei                      &#x27;</span></span><br><span class="line">new_info = info.strip()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;.&#x27;</span> + info + <span class="string">&#x27;.&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;.&#x27;</span> + new_info + <span class="string">&#x27;.&#x27;</span>)</span><br><span class="line"></span><br><span class="line">info_01 = <span class="string">&#x27;my name is dewei&#x27;</span></span><br><span class="line">new_info_01 = info_01.strip(info_01)</span><br><span class="line"><span class="built_in">print</span>(new_info_01)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(new_info_01))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">new_str = <span class="string">&#x27;abcde&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(new_str.lstrip(<span class="string">&#x27;a&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(new_str.rstrip(<span class="string">&#x27;e&#x27;</span>))</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 字符串的find与index函数</title>
      <link href="/2021/638ef4c39634/"/>
      <url>/2021/638ef4c39634/</url>
      
        <content type="html"><![CDATA[<h3 id="字符串的find与index函数"><a href="#字符串的find与index函数" class="headerlink" title="字符串的find与index函数"></a>字符串的find与index函数</h3><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li><code>find</code>与<code>index</code>都是返回你想寻找的成员的位置</li></ul><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><ul><li><p><code>string.find(item)</code> -&gt; <code>item</code>: 你想查询的元素,返回一个整形</p></li><li><p><code>string.index(item)</code> -&gt; <code>item</code>: 你想查询的元素,返回一个整形<code>或者报错</code></p><p><strong>Ps:字符串里的位置是从左向右,以0开始的.</strong></p></li></ul><h4 id="区别"><a href="#区别" class="headerlink" title="区别"></a>区别</h4><ul><li>如果<code>find</code>找不到元素,会返回<code>-1</code></li><li>如果<code>index</code>找不到元素,会导致程序<code>报错</code></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">info = <span class="string">&#x27;python is a good code&#x27;</span></span><br><span class="line"></span><br><span class="line">result = info.find(<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line">result = info.find(<span class="string">&#x27;ok&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line"></span><br><span class="line">result = info.index(<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line">result = info.index(<span class="string">&#x27;o&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line"></span><br><span class="line">str1 = <span class="string">&quot;tomorrow is sunny day&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(str1.find(<span class="string">&quot;is&quot;</span>, <span class="number">2</span>, <span class="number">10</span>))</span><br><span class="line"><span class="built_in">print</span>(str1.find(<span class="string">&quot;is&quot;</span>))</span><br><span class="line"><span class="built_in">print</span>(str1.find(<span class="string">&quot;is&quot;</span>, <span class="number">10</span>, <span class="number">15</span>))</span><br><span class="line"><span class="built_in">print</span>(str1.find(<span class="string">&quot;is&quot;</span>, <span class="number">9</span>))<span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">info = <span class="string">&#x27;python is a good code&#x27;</span></span><br><span class="line"></span><br><span class="line">result = info.find(<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line">result = info.find(<span class="string">&#x27;ok&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line"></span><br><span class="line">result = info.index(<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line">result = info.index(<span class="string">&#x27;ok&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 字符串的startswith和endswith函数</title>
      <link href="/2021/2cf50f833307/"/>
      <url>/2021/2cf50f833307/</url>
      
        <content type="html"><![CDATA[<h3 id="字符串的startswith和endswith函数"><a href="#字符串的startswith和endswith函数" class="headerlink" title="字符串的startswith和endswith函数"></a>字符串的startswith和endswith函数</h3><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li><code>startswith</code>判断字符串<strong>开始位</strong>是否是某成员(元素)</li><li><code>endswith</code>判断字符串<strong>结尾</strong>是否是某成员(元素)</li></ul><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><ul><li><code>string.startswith(item)</code> -&gt; <code>item</code> : 你想查询匹配的元素,返回一个<strong>布尔值</strong></li><li><code>string.endswith(item) </code> -&gt; <code>item</code>: 你想查询匹配的元素,返回一个<strong>布尔值</strong></li></ul><h4 id="小发现"><a href="#小发现" class="headerlink" title="小发现"></a>小发现</h4><p>当<code>item</code>赋值为<code>&#39;&#39;</code>时,始终返回为<code>True</code></p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">info = <span class="string">&#x27;this is a string example!!&#x27;</span></span><br><span class="line"></span><br><span class="line">result = info.startswith(<span class="string">&#x27;this&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line"></span><br><span class="line">result = info.startswith(<span class="string">&#x27;this is a string example!!&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bool</span>(info == <span class="string">&#x27;this is a string example!!&#x27;</span>))</span><br><span class="line"></span><br><span class="line">result = info.endswith(<span class="string">&#x27;!&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;result:&#x27;</span>, result)</span><br><span class="line"></span><br><span class="line">result = info.endswith(<span class="string">&#x27;this is a string example!!&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;full?:&#x27;</span>, result)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JAVA 标识符 和 类型转换</title>
      <link href="/2021/7f3ce7c21c70/"/>
      <url>/2021/7f3ce7c21c70/</url>
      
        <content type="html"><![CDATA[<h4 id="6-1-标识符（记忆、理解）"><a href="#6-1-标识符（记忆、理解）" class="headerlink" title="6.1 标识符（记忆、理解）"></a>6.1 标识符（记忆、理解）</h4><h6 id="标识符是用户编程时使用的名字，用于给类、方法、变量、常量等命名。"><a href="#标识符是用户编程时使用的名字，用于给类、方法、变量、常量等命名。" class="headerlink" title="标识符是用户编程时使用的名字，用于给类、方法、变量、常量等命名。"></a>标识符是用户编程时使用的名字，用于给类、方法、变量、常量等命名。</h6><h6 id="Java中标识符的组成规则："><a href="#Java中标识符的组成规则：" class="headerlink" title="Java中标识符的组成规则："></a>Java中标识符的组成规则：</h6><ul><li><p>​    由字母、数字、下划线“_”、美元符号“$”组成，第一个字符不能是数字。</p></li><li><p>​    不能使用java中的关键字作为标识符。    </p></li><li><p>​    标识符对大小写敏感（区分大小写）。</p></li></ul><h5 id="Java中标识符的命名约定："><a href="#Java中标识符的命名约定：" class="headerlink" title="Java中标识符的命名约定："></a>Java中标识符的命名约定：</h5><ul><li><p>​    小驼峰式命名：变量名、方法名</p><p>​            首字母小写，从第二个单词开始每个单词的首字母大写。</p></li><li><p>​    大驼峰式命名：类名</p><p>​            每个单词的首字母都大写。</p></li></ul><h5 id="另外，标识符的命名最好可以做到见名知意"><a href="#另外，标识符的命名最好可以做到见名知意" class="headerlink" title="另外，标识符的命名最好可以做到见名知意"></a>另外，标识符的命名最好可以做到见名知意</h5><ul><li>​        例如：username、studentNumber等。</li></ul><h4 id="7-1-类型转换（理解）"><a href="#7-1-类型转换（理解）" class="headerlink" title="7.1 类型转换（理解）"></a>7.1 类型转换（理解）</h4><h6 id="在Java中，一些数据类型之间是可以相互转换的。分为两种情况：自动类型转换和强制类型转换。"><a href="#在Java中，一些数据类型之间是可以相互转换的。分为两种情况：自动类型转换和强制类型转换。" class="headerlink" title="在Java中，一些数据类型之间是可以相互转换的。分为两种情况：自动类型转换和强制类型转换。"></a>在Java中，一些数据类型之间是可以相互转换的。分为两种情况：自动类型转换和强制类型转换。</h6><h5 id="自动类型转换："><a href="#自动类型转换：" class="headerlink" title="自动类型转换："></a>自动类型转换：</h5><p>​    把一个表示数据范围小的数值或者变量赋值给另一个表示数据范围大的变量。这种转换方式是自动的，直接书写即可。例如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">double</span> num = <span class="number">10</span>; <span class="comment">// 将int类型的10直接赋值给double类型</span></span><br><span class="line">System.out.println(num); <span class="comment">// 输出10.0</span></span><br></pre></td></tr></table></figure><h5 id="强制类型转换：-不建议-因为会有数据丢失"><a href="#强制类型转换：-不建议-因为会有数据丢失" class="headerlink" title="强制类型转换：(不建议 因为会有数据丢失)"></a>强制类型转换：(不建议 因为会有数据丢失)</h5><h6 id="把一个表示数据范围大的数值或者变量赋值给另一个表示数据范围小的变量。"><a href="#把一个表示数据范围大的数值或者变量赋值给另一个表示数据范围小的变量。" class="headerlink" title="把一个表示数据范围大的数值或者变量赋值给另一个表示数据范围小的变量。"></a>把一个表示数据范围大的数值或者变量赋值给另一个表示数据范围小的变量。</h6><h6 id="强制类型转换格式：目标数据类型-变量名-目标数据类型-值或者变量"><a href="#强制类型转换格式：目标数据类型-变量名-目标数据类型-值或者变量" class="headerlink" title="强制类型转换格式：目标数据类型 变量名 = (目标数据类型)值或者变量;"></a>强制类型转换格式：目标数据类型 变量名 = (目标数据类型)值或者变量;</h6><h6 id="例如："><a href="#例如：" class="headerlink" title="例如："></a>例如：</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">double</span> num1 = <span class="number">5.5</span>;</span><br><span class="line"><span class="keyword">int</span> num2 = (<span class="keyword">int</span>) num1; <span class="comment">// 将double类型的num1强制转换为int类型</span></span><br><span class="line">System.out.println(num2); <span class="comment">// 输出5（小数位直接舍弃）</span></span><br></pre></td></tr></table></figure><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-9-23/2.png" alt="1543196882672"></p><h6 id="说明："><a href="#说明：" class="headerlink" title="说明："></a>说明：</h6><ol><li>char类型的数据转换为int类型是按照码表中对应的int值进行计算的。比如在ASCII码表中，’a’对应97。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">System.out.println(a); <span class="comment">// 将输出97</span></span><br></pre></td></tr></table></figure><ol start="2"><li>整数默认是int类型，byte、short和char类型数据参与运算均会自动转换为int类型。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">byte</span> b1 = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">byte</span> b2 = <span class="number">20</span>;</span><br><span class="line"><span class="keyword">byte</span> b3 = b1 + b2; </span><br><span class="line"><span class="comment">// 第三行代码会报错，b1和b2会自动转换为int类型，计算结果为int，int赋值给byte需要强制类型转换。</span></span><br><span class="line"><span class="comment">// 修改为:</span></span><br><span class="line"><span class="keyword">int</span> num = b1 + b2;</span><br><span class="line"><span class="comment">// 或者：</span></span><br><span class="line"><span class="keyword">byte</span> b3 = (<span class="keyword">byte</span>) (b1 + b2);</span><br></pre></td></tr></table></figure><ul><li>boolean类型不能与其他基本数据类型相互转换。</li></ul><h5 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">类型转换</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ConversionDemo</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">//自动类型转换</span></span><br><span class="line"><span class="keyword">double</span> d = <span class="number">10</span>;</span><br><span class="line">System.out.println(d);</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义byte类型的变量</span></span><br><span class="line"><span class="keyword">byte</span> b = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">short</span> s = b;</span><br><span class="line"><span class="keyword">int</span> i = b;</span><br><span class="line"></span><br><span class="line"><span class="comment">//这是不可以的，类型不兼容</span></span><br><span class="line"><span class="comment">//char c = b;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//强制类型转换</span></span><br><span class="line"><span class="keyword">int</span> k = (<span class="keyword">int</span>)<span class="number">88.88</span>;</span><br><span class="line">System.out.println(k);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 常量变量 </tag>
            
            <tag> 数据类型 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JAVA 变量</title>
      <link href="/2021/d4c3b3d088a2/"/>
      <url>/2021/d4c3b3d088a2/</url>
      
        <content type="html"><![CDATA[<h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><h4 id="5-1-变量概述"><a href="#5-1-变量概述" class="headerlink" title="5.1  变量概述"></a>5.1  变量概述</h4><ul><li>变量：在程序运行过程中，其值可以发生改变的量。</li></ul><p><code>从本质上讲，变量是内存中的一小块区域，其值可以在一定范围内变化。</code></p><ul><li>变量的定义格式：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">数据类型 变量名 = 初始化值; <span class="comment">// 声明变量并赋值</span></span><br><span class="line"><span class="keyword">int</span> age = <span class="number">18</span>;</span><br><span class="line">System.out.println(age);</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 先声明，后赋值（使用前赋值即可）</span></span><br><span class="line">数据类型 变量名;</span><br><span class="line">变量名 = 初始化值;</span><br><span class="line"><span class="keyword">double</span> money;</span><br><span class="line">money = <span class="number">55.5</span>;</span><br><span class="line">System.out.println(money);</span><br></pre></td></tr></table></figure><p>还可以在同一行定义多个同一种数据类型的变量，中间使用逗号隔开。但不建议使用这种方式，降低程序的可读性。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a = <span class="number">10</span>, b = <span class="number">20</span>; <span class="comment">// 定义int类型的变量a和b，中间使用逗号隔开</span></span><br><span class="line">System.out.println(a);</span><br><span class="line">System.out.println(b);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> c,d; <span class="comment">// 声明int类型的变量c和d，中间使用逗号隔开</span></span><br><span class="line">c = <span class="number">30</span>;</span><br><span class="line">d = <span class="number">40</span>;</span><br><span class="line">System.out.println(c);</span><br><span class="line">System.out.println(d);</span><br></pre></td></tr></table></figure><p>变量的使用：通过变量名访问即可。</p><h4 id="5-2-使用变量时的注意事项"><a href="#5-2-使用变量时的注意事项" class="headerlink" title="5.2 使用变量时的注意事项"></a>5.2 使用变量时的注意事项</h4><ol><li>在同一对花括号中，变量名不能重复。</li><li>变量在使用之前，必须初始化（赋值）。</li><li>定义<code>long</code>类型的变量时，需要在整数的后面加<code>L</code>（大小写均可，建议大写）。因为整数默认是<code>int</code>类型，整数太大可能超出<code>int</code>范围。</li><li>定义<code>float</code>类型的变量时，需要在小数的后面加<code>F</code>（大小写均可，建议大写）。因为浮点数的默认类型是<code>double</code>， <code>double</code>的取值范围是大于`的，类型不兼容。</li></ol><h4 id="5-3代码"><a href="#5-3代码" class="headerlink" title="5.3代码"></a>5.3代码</h4><h6 id="案例一"><a href="#案例一" class="headerlink" title="案例一"></a>案例一</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">变量定义格式：</span></span><br><span class="line"><span class="comment">数据类型 变量名 = 变量值;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">基本数据类型：</span></span><br><span class="line"><span class="comment">byte,short,int,long,float,double,char,boolean</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">变量的使用：</span></span><br><span class="line"><span class="comment">取值格式：变量名</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">修改值格式：变量名 = 变量值;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">VariableDemo01</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">//定义变量</span></span><br><span class="line"><span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//输出变量</span></span><br><span class="line">System.out.println(a);</span><br><span class="line"></span><br><span class="line"><span class="comment">//修改变量</span></span><br><span class="line">a = <span class="number">20</span>;</span><br><span class="line">System.out.println(a);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="案例二"><a href="#案例二" class="headerlink" title="案例二"></a>案例二</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">变量使用的注意事项：</span></span><br><span class="line"><span class="comment">名字不能重复</span></span><br><span class="line"><span class="comment">变量未赋值，不能使用</span></span><br><span class="line"><span class="comment">long类型的变量定义的时候，为了防止整数过大，后面要加L</span></span><br><span class="line"><span class="comment">float类型的变量定义的时候，为了防止类型不兼容，后面要加F</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">VariableDemo02</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">//定义byte类型的变量</span></span><br><span class="line"><span class="keyword">byte</span> b = <span class="number">10</span>;</span><br><span class="line">System.out.println(b);</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义short类型的变量</span></span><br><span class="line"><span class="keyword">short</span> s = <span class="number">100</span>;</span><br><span class="line">System.out.println(s);</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义int类型的变量</span></span><br><span class="line"><span class="keyword">int</span> i = <span class="number">10000</span>;</span><br><span class="line">System.out.println(i);</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义double类型的变量</span></span><br><span class="line"><span class="keyword">double</span> d = <span class="number">13.14</span>;</span><br><span class="line">System.out.println(d);</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义char类型的变量</span></span><br><span class="line"><span class="keyword">char</span> c = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">System.out.println(c);</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义boolean类型的变量</span></span><br><span class="line"><span class="comment">//boolean b = true;</span></span><br><span class="line"><span class="comment">//System.out.println(b);</span></span><br><span class="line"><span class="keyword">boolean</span> bb = <span class="keyword">true</span>;</span><br><span class="line">System.out.println(bb);</span><br><span class="line">System.out.println(<span class="string">&quot;--------&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义long类型的变量</span></span><br><span class="line"><span class="keyword">long</span> l = <span class="number">10000000000L</span>;</span><br><span class="line">System.out.println(l);</span><br><span class="line">System.out.println(<span class="string">&quot;--------&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义float类型的变量</span></span><br><span class="line"><span class="keyword">float</span> f = <span class="number">13.14F</span>;</span><br><span class="line">System.out.println(f);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 常量变量 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JAVA 数据类型</title>
      <link href="/2021/b49823c13707/"/>
      <url>/2021/b49823c13707/</url>
      
        <content type="html"><![CDATA[<h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><h4 id="4-1-计算机的存储单元"><a href="#4-1-计算机的存储单元" class="headerlink" title="4.1  计算机的存储单元"></a>4.1  计算机的存储单元</h4><blockquote><p>我们知道计算机是可以用来存储数据的，但是无论是内存还是硬盘，计算机存储设备的最小信息单元叫“位（bit）”，我们又称之为“比特位”，通常用小写的字母”b”表示。而计算机中最基本的存储单元叫“字节（byte）”，</p><p>通常用大写字母”B”表示，字节是由连续的8个位组成。</p><p>除了字节外还有一些常用的存储单位，其换算单位如下：</p><p>1B（字节） = 8bit</p><p>1KB = 1024B</p><p>1MB = 1024KB</p><p>1GB = 1024MB</p><p>1TB = 1024GB</p></blockquote><h4 id="4-2-数据类型"><a href="#4-2-数据类型" class="headerlink" title="4.2 数据类型"></a>4.2 数据类型</h4><blockquote><p>Java是一个强类型语言，Java中的数据必须明确数据类型。在Java中的数据类型包括基本数据类型和引用数据类型两种。</p></blockquote><h4 id="4-3-数据类型内存占用和取值范围"><a href="#4-3-数据类型内存占用和取值范围" class="headerlink" title="4.3 数据类型内存占用和取值范围"></a>4.3 数据类型内存占用和取值范围</h4><table><thead><tr><th align="left">数据类型</th><th>关键字</th><th>内存占用</th><th align="left">取值范围</th></tr></thead><tbody><tr><td align="left">整数类型</td><td>byte</td><td>1</td><td align="left">-128~127</td></tr><tr><td align="left"></td><td>short</td><td>2</td><td align="left">-32768~32767</td></tr><tr><td align="left"></td><td>int(默认)</td><td>4</td><td align="left">-2的31次方到2的31次方-1</td></tr><tr><td align="left"></td><td>long</td><td>8</td><td align="left">-2的63次方到2的63次方-1</td></tr><tr><td align="left">浮点类型</td><td>float</td><td>4</td><td align="left">负数：-3.402823E+38到-1.401298E-45                                                             正数：   1.401298E-45到3.402823E+38</td></tr><tr><td align="left"></td><td>double(默认)</td><td>8</td><td align="left">负数：-1.797693E+308到-4.9000000E-324                                              正数：4.9000000E-324   到1.797693E+308</td></tr><tr><td align="left">字符类型</td><td>char</td><td>2</td><td align="left">0-65535</td></tr><tr><td align="left">布尔类型</td><td>boolean</td><td>1</td><td align="left">true，false</td></tr></tbody></table><h4 id="4-4-说明："><a href="#4-4-说明：" class="headerlink" title="4.4 说明："></a>4.4 说明：</h4><ul><li><p>​    e+38表示是乘以10的38次方，同样，e-45表示乘以10的负45次方。</p></li><li><p>​    在java中整数默认是int类型，浮点数默认是double类型。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据类型 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JAVA 常量</title>
      <link href="/2021/49deee49638a/"/>
      <url>/2021/49deee49638a/</url>
      
        <content type="html"><![CDATA[<h3 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h3><h4 id="3-1-常量概述"><a href="#3-1-常量概述" class="headerlink" title="3.1 常量概述"></a>3.1 常量概述</h4><ul><li>常量 : 在程序运行过程中,其值不可发生改变的量</li></ul><h4 id="3-2-Java中的常量分类："><a href="#3-2-Java中的常量分类：" class="headerlink" title="3.2 Java中的常量分类："></a>3.2 Java中的常量分类：</h4><ul><li><p>​    <strong>字符串常量</strong>  用双引号括起来的多个字符（可以包含0个、一个或多个），例如”a”、”abc”、”中国”等</p></li><li><p>​    <strong>整数常量</strong>  整数，例如：-10、0、88等</p></li><li><p>​    <strong>小数常量</strong>  小数，例如：-5.5、1.0、88.88等</p></li><li><p>​    <strong>字符常量</strong>  用单引号括起来的一个字符，例如：’a’、’5’、’B’、’中’等</p></li><li><p>​    <strong>布尔常量</strong>  布尔值，表示真假，只有两个值true和false</p></li><li><p>​    <strong>空常量</strong>  一个特殊的值，空值，值为null</p></li><li><p>除空常量外，其他常量均可使用输出语句直接输出。</p></li></ul><h4 id="3-3-代码"><a href="#3-3-代码" class="headerlink" title="3.3 代码"></a>3.3 代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">常量：</span></span><br><span class="line"><span class="comment">在程序运行过程中，其值不可以发生改变的量。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">常量分类：</span></span><br><span class="line"><span class="comment">字符串常量：用双引号括起来的内容。&quot;HelloWorld&quot;,&quot;黑马程序员&quot;</span></span><br><span class="line"><span class="comment">整数常量：不带小数的数字。666,-88</span></span><br><span class="line"><span class="comment">小数常量：带小数的数字。13.14,-5.21</span></span><br><span class="line"><span class="comment">字符常量：用单引号括起来的内容。&#x27;A&#x27;,&#x27;0&#x27;,&#x27;我&#x27;</span></span><br><span class="line"><span class="comment">布尔常量：布尔值，表示真假。true,false</span></span><br><span class="line"><span class="comment">空常量：一个特殊的值，空值。null</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ConstantDemo</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">//字符串常量</span></span><br><span class="line">System.out.println(<span class="string">&quot;HelloWorld&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;黑马程序员&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;--------&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//整数常量</span></span><br><span class="line">System.out.println(<span class="number">666</span>);</span><br><span class="line">System.out.println(-<span class="number">88</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;--------&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//小数常量</span></span><br><span class="line">System.out.println(<span class="number">13.14</span>);</span><br><span class="line">System.out.println(-<span class="number">5.21</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;--------&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//字符常量</span></span><br><span class="line">System.out.println(<span class="string">&#x27;A&#x27;</span>);</span><br><span class="line">System.out.println(<span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">System.out.println(<span class="string">&#x27;我&#x27;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;--------&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//布尔常量</span></span><br><span class="line">System.out.println(<span class="keyword">true</span>);</span><br><span class="line">System.out.println(<span class="keyword">false</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;--------&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//空常量</span></span><br><span class="line"><span class="comment">//空常量是不能直接输出的</span></span><br><span class="line"><span class="comment">//System.out.println(null);</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-4-注意事项"><a href="#3-4-注意事项" class="headerlink" title="3.4 注意事项"></a>3.4 注意事项</h4><ul><li>空常量是不能直接输出的</li></ul>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 常量变量 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JAVA 关键字</title>
      <link href="/2021/ccb596d37602/"/>
      <url>/2021/ccb596d37602/</url>
      
        <content type="html"><![CDATA[<h3 id="关键字"><a href="#关键字" class="headerlink" title="关键字"></a>关键字</h3><h4 id="2-1-关键字概述"><a href="#2-1-关键字概述" class="headerlink" title="2.1 关键字概述"></a>2.1 关键字概述</h4><ul><li><strong>关键字</strong>就是被Java语言赋予了<strong>特定含义的单词</strong></li></ul><h4 id="2-2-关键字特点"><a href="#2-2-关键字特点" class="headerlink" title="2.2 关键字特点"></a>2.2 关键字特点</h4><ul><li>关键字的字母<strong>全部小写</strong></li><li>常用的代码编辑器,针对关键字有特殊的颜色标记,非常直观.</li></ul><h4 id="本节课无代码"><a href="#本节课无代码" class="headerlink" title="本节课无代码"></a>本节课无代码</h4>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 常量变量 </tag>
            
            <tag> 数据类型 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JAVA 注释</title>
      <link href="/2021/213d12336f04/"/>
      <url>/2021/213d12336f04/</url>
      
        <content type="html"><![CDATA[<h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><h4 id="1-1-注释概述"><a href="#1-1-注释概述" class="headerlink" title="1.1 注释概述"></a>1.1 注释概述</h4><ul><li><p>注释是在程序指定位置添加的说明性信息</p></li><li><p>注释不参与程序运行,只起到说明作用</p></li></ul><h4 id="1-2-注释分类"><a href="#1-2-注释分类" class="headerlink" title="1.2 注释分类"></a>1.2 注释分类</h4><ul><li>单行注释:<ul><li>格式 :  <code>// 注释信息</code></li></ul></li><li>多行注释<ul><li>格式: <code>/* 注释信息*/</code></li></ul></li><li>文档注释<ul><li>格式: /** 注释信息 */</li><li>文档注释目前用不上,暂不讲解.</li></ul></li></ul><h4 id="1-3-注意事项"><a href="#1-3-注意事项" class="headerlink" title="1.3 注意事项"></a>1.3 注意事项</h4><ul><li>注意：多行注释不能嵌套使用。</li></ul><h4 id="1-4-代码"><a href="#1-4-代码" class="headerlink" title="1.4 代码"></a>1.4 代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Java程序中最基本的组成单位是类。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">类的定义格式：</span></span><br><span class="line"><span class="comment">public class 类名 &#123;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">这是我定义的HelloWorld类</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorld</span> </span>&#123;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">这是main方法</span></span><br><span class="line"><span class="comment">main方法是程序的入口方法，代码的执行是从main方法开始的</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// 这是输出语句，&quot;&quot;里面的内容是可以改变的</span></span><br><span class="line">System.out.println(<span class="string">&quot;itheima&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 常量变量 </tag>
            
            <tag> 数据类型 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python字符串的填充和计数</title>
      <link href="/2021/6f6a7f54b4b5/"/>
      <url>/2021/6f6a7f54b4b5/</url>
      
        <content type="html"><![CDATA[<h2 id="zfill函数"><a href="#zfill函数" class="headerlink" title="zfill函数"></a>zfill函数</h2><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><p>为字符串定义长度, 如不满足,缺少的部分用0填充</p><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><p><code>newstr = string.zfill(width)</code></p><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><p><code>width</code>: 新字符串希望的宽度</p><h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><ul><li>与字符串的字符无关</li><li>如果定义长度小于当前字符串长度,则不发生变化</li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">heart = <span class="string">&#x27;love&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27; t  &#x27;</span> + heart)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;t    &#x27;</span> + heart)</span><br><span class="line">        <span class="built_in">print</span>(heart.zfill(<span class="number">10</span>))</span><br><span class="line">        <span class="built_in">print</span>(heart.zfill(<span class="number">9</span>))</span><br><span class="line">        <span class="built_in">print</span>(heart.zfill(<span class="number">8</span>))</span><br><span class="line">        <span class="built_in">print</span>(heart.zfill(<span class="number">6</span>))</span><br><span class="line">        <span class="built_in">print</span>(heart.zfill(<span class="number">4</span>))</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h2 id="字符串的count函数"><a href="#字符串的count函数" class="headerlink" title="字符串的count函数"></a>字符串的count函数</h2><h4 id="功能-1"><a href="#功能-1" class="headerlink" title="功能"></a>功能</h4><p>返回当前字符串中某个成员(元素)的个数</p><h4 id="用法-1"><a href="#用法-1" class="headerlink" title="用法"></a>用法</h4><p><code>inttpe = string.count(item)</code></p><h4 id="参数-1"><a href="#参数-1" class="headerlink" title="参数"></a>参数</h4><p><code>item</code>: 查询个数的元素</p><h4 id="注意事项-1"><a href="#注意事项-1" class="headerlink" title="注意事项"></a>注意事项</h4><ul><li>返回的是整形</li><li>如果查询的成员(元素)不存在,则返回0</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">info = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    The mission of the Python Software Foundation is to promote, </span></span><br><span class="line"><span class="string">    protect, and advance the Python programming language, </span></span><br><span class="line"><span class="string">    and to support and facilitate the growth of a diverse and </span></span><br><span class="line"><span class="string">    international community of Python programmers.</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">a = info.count(<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line">b = info.count(<span class="string">&#x27;b&#x27;</span>)</span><br><span class="line">c = info.count(<span class="string">&#x27;c&#x27;</span>)</span><br><span class="line">d = info.count(<span class="string">&#x27;d&#x27;</span>)</span><br><span class="line">e = info.count(<span class="string">&#x27;e&#x27;</span>)</span><br><span class="line">f = info.count(<span class="string">&#x27;f&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(a, b, c, d, e, f)</span><br><span class="line">number_list = [a, b, c, d, e, f]</span><br><span class="line"><span class="built_in">print</span>(number_list)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;在列表中最大的数值是&#x27;</span>, <span class="built_in">max</span>(number_list))</span><br><span class="line"></span><br><span class="line">number_dict = &#123;</span><br><span class="line">            <span class="string">&#x27;a&#x27;</span>: a,</span><br><span class="line">            <span class="string">&#x27;b&#x27;</span>: b,</span><br><span class="line">            <span class="string">&#x27;c&#x27;</span>: c,</span><br><span class="line">            <span class="string">&#x27;d&#x27;</span>: d,</span><br><span class="line">            <span class="string">&#x27;e&#x27;</span>: e,</span><br><span class="line">            <span class="string">&#x27;f&#x27;</span>: f,</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;每个成员对应的数值分别是&#x27;</span>, number_dict)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python字符串的大小写(二)</title>
      <link href="/2021/78cdcf880aad/"/>
      <url>/2021/78cdcf880aad/</url>
      
        <content type="html"><![CDATA[<h3 id="字符串upper-大写方法"><a href="#字符串upper-大写方法" class="headerlink" title="字符串upper()大写方法"></a>字符串upper()大写方法</h3><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><p>将字符串全体大写</p><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><p><code>big_str = sring.upper()</code></p><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><p>函数括弧内什么都不用填写(不用传参数也没有参数)</p><h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><ul><li>只对字符串中的字母有效</li><li>已经是大写, 则无效</li><li>2$yes       2$YES</li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">info = <span class="string">&#x27;hello world! hello xiaomu&#x27;</span></span><br><span class="line"></span><br><span class="line">big_info = info.upper()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(big_info)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="与上节课组合练习"><a href="#与上节课组合练习" class="headerlink" title="与上节课组合练习"></a>与上节课组合练习</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">info = <span class="string">&#x27;Hello World! Hello XiaoMu&#x27;</span></span><br><span class="line"></span><br><span class="line">big_info = info.upper()</span><br><span class="line">small_info = info.lower()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(big_info)</span><br><span class="line"><span class="built_in">print</span>(small_info)</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h3 id="字符串swapcase-字母大小写翻转方法"><a href="#字符串swapcase-字母大小写翻转方法" class="headerlink" title="字符串swapcase()字母大小写翻转方法"></a>字符串swapcase()字母大小写翻转方法</h3><h4 id="功能-1"><a href="#功能-1" class="headerlink" title="功能"></a>功能</h4><p>将字符串中的大小写翻转</p><h4 id="用法-1"><a href="#用法-1" class="headerlink" title="用法"></a>用法</h4><p><code>newstr = string.swapcase()</code></p><h4 id="参数-1"><a href="#参数-1" class="headerlink" title="参数"></a>参数</h4><p>函数括弧内什么都不用填写</p><h4 id="注意事项-1"><a href="#注意事项-1" class="headerlink" title="注意事项"></a>注意事项</h4><ul><li>只对字符串中的字母有效</li><li>number_message = ‘1@oK’    -&gt;   ‘1@Ok’</li></ul><h4 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">info_one = <span class="string">&#x27;Python Code Is Good&#x27;</span></span><br><span class="line">info_two = <span class="string">&#x27;PYTHON DJANGO FLASK&#x27;</span></span><br><span class="line">info_three = <span class="string">&#x27;python web so easy&#x27;</span></span><br><span class="line"></span><br><span class="line">info_one_new = info_one.swapcase()</span><br><span class="line">info_two_new = info_two.swapcase()</span><br><span class="line">info_three_new = info_three.swapcase()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(info_one_new)</span><br><span class="line"><span class="built_in">print</span>(info_two_new)</span><br><span class="line"><span class="built_in">print</span>(info_three_new)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 字符串的大小写(一)</title>
      <link href="/2021/a2d71c23f77e/"/>
      <url>/2021/a2d71c23f77e/</url>
      
        <content type="html"><![CDATA[<h3 id="字符串capitalize用法"><a href="#字符串capitalize用法" class="headerlink" title="字符串capitalize用法"></a>字符串capitalize用法</h3><p><code>str.capitalize()</code></p><p>首字母大写 其余字母小写</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">name = <span class="string">&#x27;xiao mu&#x27;</span></span><br><span class="line">info = <span class="string">&#x27;hello 小慕&#x27;</span></span><br><span class="line">_info = <span class="string">&#x27;小慕 hello&#x27;</span></span><br><span class="line">number_str = <span class="string">&#x27;1314&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">new_info = info.capitalize()</span><br><span class="line">_new_info = _info.capitalize()</span><br><span class="line">new_number_str = number_str.capitalize()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(name)</span><br><span class="line"><span class="built_in">print</span>(new_info)</span><br><span class="line"><span class="built_in">print</span>(_new_info)</span><br><span class="line"><span class="built_in">print</span>(new_number_str)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;abc&#x27;</span>.capitalize())</span><br><span class="line"><span class="built_in">print</span>(name.capitalize())</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h3 id="字符串lower-amp-casefold用法"><a href="#字符串lower-amp-casefold用法" class="headerlink" title="字符串lower &amp;  casefold用法"></a>字符串lower &amp;  casefold用法</h3><p><code>str.lower()</code></p><p><code>str.casefold()</code></p><p>用法相同均为小写字符串中字母</p><p>注意:若字符串为空也不会报错</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">message_en = <span class="string">&#x27;How do you do? Xiaomu&#x27;</span></span><br><span class="line">message_ch = <span class="string">&#x27;你好呀, XiaoMu&#x27;</span></span><br><span class="line">message_mix = <span class="string">&#x27;你好呀, Xiaomu, 今天是星期三!&#x27;</span></span><br><span class="line"></span><br><span class="line">message_en_lower = message_en.lower()</span><br><span class="line">message_en_casefold = message_en.casefold()</span><br><span class="line"></span><br><span class="line">message_ch_lower = message_ch.lower()</span><br><span class="line">message_ch_casefold = message_ch.casefold()</span><br><span class="line"></span><br><span class="line">message_mix_lower =message_mix.lower()</span><br><span class="line">message_mix_casefold = message_mix.casefold()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(message_en_lower, message_en_casefold)</span><br><span class="line"><span class="built_in">print</span>(message_ch_lower, message_ch_casefold)</span><br><span class="line"><span class="built_in">print</span>(message_mix_lower, message_mix_casefold)</span><br><span class="line"></span><br><span class="line">empty = <span class="string">&#x27;&#x27;</span></span><br><span class="line">empty_lower = empty.lower()</span><br><span class="line">empty_casefold = empty.casefold()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;.&#x27;</span> + empty_lower + <span class="string">&#x27;.&#x27;</span>, <span class="string">&#x27;.&#x27;</span> + empty_casefold + <span class="string">&#x27;.&#x27;</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python字符串的应用</title>
      <link href="/2021/a3814e004f7f/"/>
      <url>/2021/a3814e004f7f/</url>
      
        <content type="html"><![CDATA[<h3 id="成员运算符-in的使用"><a href="#成员运算符-in的使用" class="headerlink" title="成员运算符 in的使用"></a>成员运算符 <code>in</code>的使用</h3><h5 id="判断数据中是否存在你想要的成员"><a href="#判断数据中是否存在你想要的成员" class="headerlink" title="判断数据中是否存在你想要的成员"></a>判断数据中是否存在你想要的成员</h5><p><code>A空格in空格B</code></p><p>判断是否a在b中</p><p>not空格in也一样</p><hr><h3 id="内置函数max"><a href="#内置函数max" class="headerlink" title="内置函数max"></a>内置函数max</h3><h5 id="返回数据中最大的成员"><a href="#返回数据中最大的成员" class="headerlink" title="返回数据中最大的成员"></a>返回数据中最大的成员</h5><p><code>max(数据)  返回成员值</code></p><p><code>print(max(&#39;今天是1月3日! &#39;))</code>                          月</p><p>中文符号   &gt;  字母  &gt; 数字   &gt;  英文符号  </p><p>中文按拼音的首字母计算</p><hr><h3 id="内置函数min"><a href="#内置函数min" class="headerlink" title="内置函数min"></a>内置函数min</h3><h5 id="返回数据中最小的成员"><a href="#返回数据中最小的成员" class="headerlink" title="返回数据中最小的成员"></a>返回数据中最小的成员</h5><p><code>min(数据)  返回成员值</code></p><p><code>print(max(&#39;今天是1月3日! &#39;))</code>                            !</p><p>中文符号   &gt;  字母  &gt; 数字   &gt;  英文符号  </p><p>中文按拼音的首字母计算</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">info = <span class="string">&#x27;python是一个非常有魅力的语言&#x27;</span></span><br><span class="line"></span><br><span class="line">result = <span class="string">&#x27;魅力&#x27;</span> <span class="keyword">in</span> info</span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line"></span><br><span class="line">result = <span class="string">&#x27;语言&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> info</span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line"></span><br><span class="line">info2 = <span class="string">&#x27;python is a good code&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">max</span>(info2))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;.&#x27;</span>, <span class="built_in">min</span>(info2), <span class="string">&#x27;.&#x27;</span>)</span><br><span class="line"></span><br><span class="line">info3 = <span class="string">&#x27;天气好 要多锻炼身体&#x27;</span></span><br><span class="line">info4 = <span class="string">&#x27;多锻炼身体 身体会变得更好&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(info3 + info4)</span><br><span class="line"></span><br><span class="line">new_str = info3 + info4 + <span class="string">&#x27;!&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(new_str)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(new_str))</span><br><span class="line">length = <span class="built_in">len</span>(new_str)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(length))</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h3 id="字符串的累加"><a href="#字符串的累加" class="headerlink" title="字符串的累加"></a>字符串的累加</h3><p>字符串不是数字不能做减法 , 乘除法</p><p>字符串的拼接 , 用  “＋”这个符号</p><p><code>a  =   &#39;123&#39;</code>                id(a)  等于107898032 </p><p><code>b = &#39;456&#39;</code></p><p><code>c  =  a  =  b</code></p><p><code>print(c)   123456</code></p><p>[若使用   a   =   a + b   </p><p>则之后id(a)       则输出为              80202416       ]</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">label = <span class="string">&#x27;欢迎来自远方的朋友&#x27;</span></span><br><span class="line">name = <span class="string">&#x27;jone&#x27;</span></span><br><span class="line"></span><br><span class="line">pr = label + name</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(pr)</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h3 id="input-语法"><a href="#input-语法" class="headerlink" title="input 语法"></a>input 语法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">name = <span class="built_in">input</span>(<span class="string">&#x27;你的名字是:&#x27;</span>)</span><br><span class="line">birthday = <span class="built_in">input</span>(<span class="string">&#x27;你的生日是:&#x27;</span>)</span><br><span class="line">like_fruit = <span class="built_in">input</span>(<span class="string">&#x27;你喜欢的水果是:&#x27;</span>)</span><br><span class="line">like_sport = <span class="built_in">input</span>(<span class="string">&#x27;你喜欢的运动是:&#x27;</span>)</span><br><span class="line">like_animal = <span class="built_in">input</span>(<span class="string">&#x27;你喜欢的动物是:&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;你的名字叫做: %s,出生于: %s,你喜欢的水果是: %s,最喜欢的运动为: %s,以及最喜欢的小动物是: %s&#x27;</span> %</span><br><span class="line">      (name, birthday, like_fruit, like_sport, like_animal))</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python数据类型</title>
      <link href="/2021/c6b9389e1528/"/>
      <url>/2021/c6b9389e1528/</url>
      
        <content type="html"><![CDATA[<h2 id="整形"><a href="#整形" class="headerlink" title="整形"></a>整形</h2><h4 id="int-定义整形-又是定义整形的-内置函数"><a href="#int-定义整形-又是定义整形的-内置函数" class="headerlink" title="int 定义整形 ,又是定义整形的 内置函数"></a><code>int</code> 定义整形 ,又是定义整形的 内置函数</h4><h4 id="定义一个整型-并不一定要使用int"><a href="#定义一个整型-并不一定要使用int" class="headerlink" title="定义一个整型,并不一定要使用int"></a>定义一个整型,并不一定要使用<code>int</code></h4><p><code>cout_100_01 = int(100)</code></p><p><code>cout_100_02 = 100</code></p><p>不要使用long</p><hr><h2 id="浮点型"><a href="#浮点型" class="headerlink" title="浮点型"></a>浮点型</h2><h4 id="凡是带有小数点的类型-都可以认为是浮点型"><a href="#凡是带有小数点的类型-都可以认为是浮点型" class="headerlink" title="凡是带有小数点的类型,都可以认为是浮点型"></a>凡是带有小数点的类型,都可以认为是浮点型</h4><p><code>pi_01 = float(3.14)</code></p><p><code>pi_02 =  3.14</code></p><p>定义一个浮点型,并不一定要使用<code>float</code></p><hr><h2 id="内置函数-type"><a href="#内置函数-type" class="headerlink" title="内置函数 type"></a>内置函数 <code>type</code></h2><hr><h2 id="字符串-类型"><a href="#字符串-类型" class="headerlink" title="字符串 类型"></a>字符串 类型</h2><h5 id="什么是字符串"><a href="#什么是字符串" class="headerlink" title="什么是字符串?"></a>什么是字符串?</h5><h5 id="用-‘-‘-或者-“”-包裹的信息-就是-字符串"><a href="#用-‘-‘-或者-“”-包裹的信息-就是-字符串" class="headerlink" title="用 ‘  ‘ 或者 “” 包裹的信息 就是 字符串"></a>用 ‘  ‘ 或者 “” 包裹的信息 就是 字符串</h5><h5 id="字符串中可以包括任意字符且没有先后顺序"><a href="#字符串中可以包括任意字符且没有先后顺序" class="headerlink" title="字符串中可以包括任意字符且没有先后顺序"></a>字符串中可以包括任意字符且没有先后顺序</h5><hr><h2 id="字符串定义方法"><a href="#字符串定义方法" class="headerlink" title="字符串定义方法"></a>字符串定义方法</h2><h3 id="使用str定义"><a href="#使用str定义" class="headerlink" title="使用str定义"></a>使用<code>str</code>定义</h3><h4 id="safe-str-39-健康的体温是36-5左右-39"><a href="#safe-str-39-健康的体温是36-5左右-39" class="headerlink" title="safe = str(&#39;健康的体温是36.5左右&#39;)"></a><code>safe = str(&#39;健康的体温是36.5左右&#39;)</code></h4><h3 id="字符串不可改变"><a href="#字符串不可改变" class="headerlink" title="字符串不可改变!!!"></a>字符串不可改变!!!</h3><h5 id="name-39-dewei-39"><a href="#name-39-dewei-39" class="headerlink" title="name = &#39;dewei&#39;"></a><code>name = &#39;dewei&#39;</code></h5><h3 id="内置函数-id"><a href="#内置函数-id" class="headerlink" title="内置函数 id"></a>内置函数 <code>id</code></h3><p>返回变量的内存地址</p><p><code>数值地址 = in(变量)</code></p><h3 id="内置函数len"><a href="#内置函数len" class="headerlink" title="内置函数len"></a>内置函数<code>len</code></h3><ul><li><p>返回 字符串的长度</p></li><li><p>无法返回数字类型的长度,因为数字类型没有长度</p></li><li><p><code>返回值 = len(字符串)</code></p><p><code>lenth = len(&#39;python是一门很好的语言&#39;)</code></p><p><code>print(length)14</code></p></li><li><p>count = len(3.14)直接报错!!!!!!</p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line">title = <span class="string">&#x27;小慕学校的春游&#x27;</span></span><br><span class="line"></span><br><span class="line">class_count = <span class="number">51</span></span><br><span class="line">boys = <span class="number">28</span></span><br><span class="line">girls = <span class="number">23</span></span><br><span class="line"></span><br><span class="line">every_body_pay = <span class="number">35.5</span></span><br><span class="line"></span><br><span class="line">start_time = <span class="number">8.00</span></span><br><span class="line">bus_count = <span class="number">2</span></span><br><span class="line">site_every_bus = <span class="number">30</span></span><br><span class="line"></span><br><span class="line">come_part_time = <span class="number">10.33</span></span><br><span class="line"></span><br><span class="line">lunch_time = <span class="number">12.0</span></span><br><span class="line">lunch_pay = <span class="number">25.5</span></span><br><span class="line"></span><br><span class="line">leave_park_time = <span class="number">3.05</span></span><br><span class="line"></span><br><span class="line">bus_pay = <span class="number">5</span></span><br><span class="line"></span><br><span class="line">come_back_school_time = <span class="number">5.00</span></span><br><span class="line"></span><br><span class="line">back_pay = <span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(title)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;小慕的班级有:&#x27;</span>, class_count)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;男生有:&#x27;</span>, boys)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;女生有:&#x27;</span>, girls)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;每人支付&#x27;</span>, every_body_pay, <span class="string">&#x27;元&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;出发的时间是早上&#x27;</span>, start_time, <span class="string">&#x27;点&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;出行需要&#x27;</span>, bus_count, <span class="string">&#x27; 辆公交大巴&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;我们到达公园的时间是:&#x27;</span>, come_part_time)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;吃午饭的时间是:&#x27;</span>, lunch_time)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;每人支付伙食费是:&#x27;</span>, lunch_pay)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;离开公园的时间是:&#x27;</span>, leave_park_time)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;公交大巴来回的费用是每人&#x27;</span>, bus_pay)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;下午&#x27;</span>, come_back_school_time, <span class="string">&#x27;到达学校&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;这一天小慕同学花费了&#x27;</span>, <span class="number">30.5</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;最后退回&#x27;</span>, back_pay, <span class="string">&#x27;元&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">type</span>(come_back_school_time))</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">type</span>(every_body_pay))</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">type</span>(site_every_bus))</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;数字编写测试&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据类型 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
