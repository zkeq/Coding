<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Python 综合案例:九九乘法表</title>
      <link href="/2021/47bf9691d9e3/"/>
      <url>/2021/47bf9691d9e3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="综合案例-九九乘法表"><a href="#综合案例-九九乘法表" class="headerlink" title="综合案例:九九乘法表"></a>综合案例:九九乘法表</h3><h5 id="图片版代码"><a href="#图片版代码" class="headerlink" title="图片版代码"></a>图片版代码</h5><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-10-5/carbon.png" alt="1"></p><h5 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding:utf-8</span><br><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">1 * 1 = 1</span><br><span class="hljs-string">2 * 1 = 2 2 * 2 = 4</span><br><span class="hljs-string">3 * 1 = 3 3 * 2 = 6 3 * 3 = 9</span><br><span class="hljs-string">4 * 1 = 4 4 * 2 = 8 4 * 3 = 12 4 * 4 = 16</span><br><span class="hljs-string">5 * 1 = 5 5 * 2 = 10 5 * 3 = 15 5 * 4 = 20 5 * 5 = 25</span><br><span class="hljs-string">6 * 1 = 6 6 * 2 = 12 6 * 3 = 18 6 * 4 = 24 6 * 5 = 30 6 * 6 = 36</span><br><span class="hljs-string">7 * 1 = 7 7 * 2 = 14 7 * 3 = 21 7 * 4 = 28 7 * 5 = 35 7 * 6 = 42 7 * 7 = 49</span><br><span class="hljs-string">8 * 1 = 8 8 * 2 = 16 8 * 3 = 24 8 * 4 = 32 8 * 5 = 40 8 * 6 = 48 8 * 7 = 56 8 * 8 = 64</span><br><span class="hljs-string">9 * 1 = 9 9 * 2 = 18 9 * 3 = 27 9 * 4 = 36 9 * 5 = 45 9 * 6 = 54 9 * 7 = 63 9 * 8 = 72 9 * 9 = 81</span><br><span class="hljs-string"></span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><br>work = &#123;&#125;<br><span class="hljs-comment"># 1</span><br>one_value = (<span class="hljs-number">1</span>,)<br>one_key = <span class="hljs-number">1</span><br>work[<span class="hljs-built_in">str</span>(one_key)] = one_value<br><span class="hljs-built_in">print</span>(work)<br><span class="hljs-comment"># 2</span><br>two_key = <span class="hljs-number">2</span><br>two_value = []<br>two_value.append(<span class="hljs-number">1</span>)<br>two_value.append(<span class="hljs-number">2</span>)<br>work[<span class="hljs-built_in">str</span>(two_key)] = two_value<br><br><span class="hljs-comment"># 3</span><br>three_key = <span class="hljs-number">3</span><br>three_value = []<br>three_value.append(<span class="hljs-number">1</span>)<br>three_value.append(<span class="hljs-number">2</span>)<br>three_value.append(<span class="hljs-number">3</span>)<br>work[<span class="hljs-built_in">str</span>(three_key)] = three_value<br><span class="hljs-built_in">print</span>(work)<br><br><span class="hljs-comment"># 4</span><br>four_key = <span class="hljs-number">4</span><br>four_value = []<br>four_value.append(<span class="hljs-number">1</span>)<br>four_value.append(<span class="hljs-number">2</span>)<br>four_value.append(<span class="hljs-number">3</span>)<br>four_value.append(<span class="hljs-number">4</span>)<br>work[<span class="hljs-built_in">str</span>(four_key)] = four_value<br><br>temp_five = (<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>)<br>five_key = <span class="hljs-number">5</span><br>five_value = []<br>five_value.extend(temp_five)<br>work[<span class="hljs-built_in">str</span>(five_key)] = five_value<br><span class="hljs-built_in">print</span>(work)<br><br><span class="hljs-comment"># 6</span><br>temp_six = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>]<br>six_key = <span class="hljs-number">6</span><br>six_value = []<br>six_value.extend(temp_six)<br>work[<span class="hljs-built_in">str</span>(six_key)] = six_value<br><br><span class="hljs-comment"># 7</span><br>temp_seven = &#123;<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">7</span>&#125;<br>seven_key = <span class="hljs-number">7</span><br>seven_value = []<br>seven_value.extend(temp_seven)<br>work[<span class="hljs-built_in">str</span>(seven_key)] = seven_value<br><br><span class="hljs-comment"># 8</span><br>temp_eight = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">7</span>, <span class="hljs-number">8</span>]<br>eight_key = <span class="hljs-number">8</span><br>eight_value = []<br>eight_value.extend(temp_eight)<br>eight_key = <span class="hljs-built_in">str</span>(eight_key)<br>work[eight_key] = eight_value<br><br><span class="hljs-comment"># 9</span><br>temp_nine = (<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">7</span>, <span class="hljs-number">8</span>, <span class="hljs-number">9</span>)<br>nine_key = <span class="hljs-number">9</span><br>nine_value = <span class="hljs-built_in">list</span>(temp_nine)<br>nine_key = <span class="hljs-built_in">str</span>(nine_key)<br>work.update(&#123;nine_key: nine_value&#125;)<br><span class="hljs-built_in">print</span>(work)<br><br>_keys = work.keys()<br>keys = <span class="hljs-built_in">list</span>(_keys)<br><span class="hljs-built_in">print</span>(_keys)<br><br>one = keys[<span class="hljs-number">0</span>]<br>one_value = work.pop(one)<br><span class="hljs-built_in">print</span>(one, one_value)<br>one_key = <span class="hljs-built_in">int</span>(one)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(one_key, one_value[<span class="hljs-number">0</span>], one_key * one_value[<span class="hljs-number">0</span>]))<br><br>two = keys[<span class="hljs-number">1</span>]<br>two_value = work.pop(two)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(two, two_value[<span class="hljs-number">0</span>], <span class="hljs-built_in">int</span>(two) * two_value[<span class="hljs-number">0</span>]), end=<span class="hljs-string">&#x27; &#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(two, two_value[<span class="hljs-number">1</span>], <span class="hljs-built_in">int</span>(two) * two_value[<span class="hljs-number">1</span>]))<br><br>three = keys[<span class="hljs-number">2</span>]<br>three_value = work.pop(three)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(three, three_value[<span class="hljs-number">0</span>], <span class="hljs-built_in">int</span>(three) * (three_value[<span class="hljs-number">0</span>])), end=<span class="hljs-string">&#x27; &#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(three, three_value[<span class="hljs-number">1</span>], <span class="hljs-built_in">int</span>(three) * (three_value[<span class="hljs-number">1</span>])), end=<span class="hljs-string">&#x27; &#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(three, three_value[<span class="hljs-number">2</span>], <span class="hljs-built_in">int</span>(three) * (three_value[<span class="hljs-number">2</span>])))<br><br>four = keys[<span class="hljs-number">3</span>]<br>four_value = work.pop(four)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(four, four_value[<span class="hljs-number">0</span>], <span class="hljs-built_in">int</span>(four) * (four_value[<span class="hljs-number">0</span>])), end=<span class="hljs-string">&#x27; &#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(four, four_value[<span class="hljs-number">1</span>], <span class="hljs-built_in">int</span>(four) * (four_value[<span class="hljs-number">1</span>])), end=<span class="hljs-string">&#x27; &#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(four, four_value[<span class="hljs-number">2</span>], <span class="hljs-built_in">int</span>(four) * (four_value[<span class="hljs-number">2</span>])), end=<span class="hljs-string">&#x27; &#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(four, four_value[-<span class="hljs-number">1</span>], <span class="hljs-built_in">int</span>(four) * (four_value[-<span class="hljs-number">1</span>])))<br><br>five = keys[<span class="hljs-number">4</span>]<br>five_value = work.pop(five)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;%s * %s = %s&#x27;</span> % (five, five_value[<span class="hljs-number">0</span>], <span class="hljs-built_in">int</span>(five) * five_value[<span class="hljs-number">0</span>]), end=<span class="hljs-string">&#x27; &#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;%s * %s = %d&#x27;</span> % (five, five_value[<span class="hljs-number">1</span>], <span class="hljs-built_in">int</span>(five) * five_value[<span class="hljs-number">1</span>]), end=<span class="hljs-string">&#x27; &#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;%s * %s = %d&#x27;</span> % (five, five_value[<span class="hljs-number">2</span>], <span class="hljs-built_in">int</span>(five) * five_value[<span class="hljs-number">2</span>]), end=<span class="hljs-string">&#x27; &#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;%s * %s = %d&#x27;</span> % (five, five_value[-<span class="hljs-number">2</span>], <span class="hljs-built_in">int</span>(five) * five_value[-<span class="hljs-number">2</span>]), end=<span class="hljs-string">&#x27; &#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;%s * %s = %d&#x27;</span> % (five, five_value[-<span class="hljs-number">1</span>], <span class="hljs-built_in">int</span>(five) * five_value[-<span class="hljs-number">1</span>]),)<br><br>six = keys[<span class="hljs-number">5</span>]<br>six_value = work.pop(six)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;%s * %s = %s&#x27;</span> % (six, six_value[<span class="hljs-number">0</span>], <span class="hljs-built_in">int</span>(six) * six_value[<span class="hljs-number">0</span>]), end=<span class="hljs-string">&#x27; &#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;%s * %s = %s&#x27;</span> % (six, six_value[<span class="hljs-number">1</span>], <span class="hljs-built_in">int</span>(six) * six_value[<span class="hljs-number">1</span>]), end=<span class="hljs-string">&#x27; &#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;%s * %s = %s&#x27;</span> % (six, six_value[<span class="hljs-number">2</span>], <span class="hljs-built_in">int</span>(six) * six_value[<span class="hljs-number">2</span>]), end=<span class="hljs-string">&#x27; &#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(six, six_value[<span class="hljs-number">3</span>], <span class="hljs-built_in">int</span>(six) * six_value[<span class="hljs-number">3</span>]), end=<span class="hljs-string">&#x27; &#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(six, six_value[<span class="hljs-number">4</span>], <span class="hljs-built_in">int</span>(six) * six_value[<span class="hljs-number">4</span>]), end=<span class="hljs-string">&#x27; &#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(six, six_value[<span class="hljs-number">5</span>], <span class="hljs-built_in">int</span>(six) * six_value[<span class="hljs-number">5</span>]))<br><br>seven = keys[<span class="hljs-number">6</span>]<br>seven_value = work.pop(seven)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(seven, seven_value[<span class="hljs-number">0</span>], <span class="hljs-built_in">int</span>(seven) * seven_value[<span class="hljs-number">0</span>]), end=<span class="hljs-string">&#x27; &#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(seven, seven_value[<span class="hljs-number">1</span>], <span class="hljs-built_in">int</span>(seven) * seven_value[<span class="hljs-number">1</span>]), end=<span class="hljs-string">&#x27; &#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(seven, seven_value[<span class="hljs-number">2</span>], <span class="hljs-built_in">int</span>(seven) * seven_value[<span class="hljs-number">2</span>]), end=<span class="hljs-string">&#x27; &#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(seven, seven_value[<span class="hljs-number">3</span>], <span class="hljs-built_in">int</span>(seven) * seven_value[<span class="hljs-number">3</span>]), end=<span class="hljs-string">&#x27; &#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(seven, seven_value[<span class="hljs-number">4</span>], <span class="hljs-built_in">int</span>(seven) * seven_value[<span class="hljs-number">4</span>]), end=<span class="hljs-string">&#x27; &#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(seven, seven_value[<span class="hljs-number">5</span>], <span class="hljs-built_in">int</span>(seven) * seven_value[<span class="hljs-number">5</span>]), end=<span class="hljs-string">&#x27; &#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(seven, seven_value[<span class="hljs-number">6</span>], <span class="hljs-built_in">int</span>(seven) * seven_value[<span class="hljs-number">6</span>]))<br><br>eight = keys[<span class="hljs-number">7</span>]<br>eight_value = work.pop(eight)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(eight, eight_value[<span class="hljs-number">0</span>], <span class="hljs-built_in">int</span>(eight) * eight_value[<span class="hljs-number">0</span>]), end=<span class="hljs-string">&#x27; &#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(eight, eight_value[<span class="hljs-number">1</span>], <span class="hljs-built_in">int</span>(eight) * eight_value[<span class="hljs-number">1</span>]), end=<span class="hljs-string">&#x27; &#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(eight, eight_value[<span class="hljs-number">2</span>], <span class="hljs-built_in">int</span>(eight) * eight_value[<span class="hljs-number">2</span>]), end=<span class="hljs-string">&#x27; &#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(eight, eight_value[<span class="hljs-number">3</span>], <span class="hljs-built_in">int</span>(eight) * eight_value[<span class="hljs-number">3</span>]), end=<span class="hljs-string">&#x27; &#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(eight, eight_value[<span class="hljs-number">4</span>], <span class="hljs-built_in">int</span>(eight) * eight_value[<span class="hljs-number">4</span>]), end=<span class="hljs-string">&#x27; &#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(eight, eight_value[<span class="hljs-number">5</span>], <span class="hljs-built_in">int</span>(eight) * eight_value[<span class="hljs-number">5</span>]), end=<span class="hljs-string">&#x27; &#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(eight, eight_value[<span class="hljs-number">6</span>], <span class="hljs-built_in">int</span>(eight) * eight_value[<span class="hljs-number">6</span>]), end=<span class="hljs-string">&#x27; &#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(eight, eight_value[<span class="hljs-number">7</span>], <span class="hljs-built_in">int</span>(eight) * eight_value[<span class="hljs-number">7</span>]))<br><br>nine = keys[-<span class="hljs-number">1</span>]<br>nine_value = work.get(nine)<br>format_str = <span class="hljs-string">&#x27;&#123;&#125; * &#123;&#125; = &#123;&#125;&#x27;</span><br><span class="hljs-built_in">print</span>(format_str.<span class="hljs-built_in">format</span>(nine, nine_value[<span class="hljs-number">0</span>], <span class="hljs-built_in">int</span>(nine) * nine_value[<span class="hljs-number">0</span>]), end=<span class="hljs-string">&#x27; &#x27;</span>)<br><span class="hljs-built_in">print</span>(format_str.<span class="hljs-built_in">format</span>(nine, nine_value[<span class="hljs-number">1</span>], <span class="hljs-built_in">int</span>(nine) * nine_value[<span class="hljs-number">1</span>]), end=<span class="hljs-string">&#x27; &#x27;</span>)<br><span class="hljs-built_in">print</span>(format_str.<span class="hljs-built_in">format</span>(nine, nine_value[<span class="hljs-number">2</span>], <span class="hljs-built_in">int</span>(nine) * nine_value[<span class="hljs-number">2</span>]), end=<span class="hljs-string">&#x27; &#x27;</span>)<br><span class="hljs-built_in">print</span>(format_str.<span class="hljs-built_in">format</span>(nine, nine_value[<span class="hljs-number">3</span>], <span class="hljs-built_in">int</span>(nine) * nine_value[<span class="hljs-number">3</span>]), end=<span class="hljs-string">&#x27; &#x27;</span>)<br><span class="hljs-built_in">print</span>(format_str.<span class="hljs-built_in">format</span>(nine, nine_value[<span class="hljs-number">4</span>], <span class="hljs-built_in">int</span>(nine) * nine_value[<span class="hljs-number">4</span>]), end=<span class="hljs-string">&#x27; &#x27;</span>)<br><span class="hljs-built_in">print</span>(format_str.<span class="hljs-built_in">format</span>(nine, nine_value[<span class="hljs-number">5</span>], <span class="hljs-built_in">int</span>(nine) * nine_value[<span class="hljs-number">5</span>]), end=<span class="hljs-string">&#x27; &#x27;</span>)<br><span class="hljs-built_in">print</span>(format_str.<span class="hljs-built_in">format</span>(nine, nine_value[<span class="hljs-number">6</span>], <span class="hljs-built_in">int</span>(nine) * nine_value[<span class="hljs-number">6</span>]), end=<span class="hljs-string">&#x27; &#x27;</span>)<br><span class="hljs-built_in">print</span>(format_str.<span class="hljs-built_in">format</span>(nine, nine_value[<span class="hljs-number">7</span>], <span class="hljs-built_in">int</span>(nine) * nine_value[<span class="hljs-number">7</span>]), end=<span class="hljs-string">&#x27; &#x27;</span>)<br><span class="hljs-built_in">print</span>(format_str.<span class="hljs-built_in">format</span>(nine, nine_value[<span class="hljs-number">8</span>], <span class="hljs-built_in">int</span>(nine) * nine_value[<span class="hljs-number">8</span>]))<br><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程练习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 元组 ,列表, 集合间的转换</title>
      <link href="/2021/5e79a4d30cf0/"/>
      <url>/2021/5e79a4d30cf0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="元组-列表-集合间的转换"><a href="#元组-列表-集合间的转换" class="headerlink" title="元组 ,列表, 集合间的转换"></a>元组 ,列表, 集合间的转换</h3><ul><li>列表元组集合间隔转换的函数</li></ul><table><thead><tr><th align="center">原始类型</th><th align="center">目标函数</th><th align="center">函数</th><th>举例</th></tr></thead><tbody><tr><td align="center">列表</td><td align="center">集合</td><td align="center">set</td><td><code>new_set = set([1,  2,  3, 4, 5])</code></td></tr><tr><td align="center">列表</td><td align="center">元组</td><td align="center">tuple</td><td><code>new_tutple = tuple([1, 2, 3, 4, 5])</code></td></tr><tr><td align="center">元组</td><td align="center">集合</td><td align="center">set</td><td><code>new_set = set((1, 2, 3, 4, 5))</code></td></tr><tr><td align="center">元组</td><td align="center">列表</td><td align="center">list</td><td><code>new_list = list(1, 2, 3, 4, 5)</code></td></tr><tr><td align="center">集合</td><td align="center">列表</td><td align="center">list</td><td><code>new_list = list(&#123;1, 2, 3, 4, 5&#125;)</code></td></tr><tr><td align="center">集合</td><td align="center">元组</td><td align="center">tuple</td><td><code>new_tuple = tuple(&#123;1, 2, 3, 4, 5&#125;)</code></td></tr></tbody></table><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding:utf-8</span><br><br>a = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>]<br>b = (<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>)<br>c = &#123;<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>&#125;<br><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">tuple</span>(a), <span class="hljs-built_in">set</span>(a))<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">type</span>(<span class="hljs-built_in">tuple</span>(a)), <span class="hljs-built_in">type</span>(<span class="hljs-built_in">set</span>(a)))<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">tuple</span>(a) <span class="hljs-keyword">is</span> b)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">set</span>(a) == c)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">list</span>(b), <span class="hljs-built_in">set</span>(b))<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">list</span>(c), <span class="hljs-built_in">tuple</span>(c))<br><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">list</span>(a))<br><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">str</span>(a), <span class="hljs-built_in">type</span>(<span class="hljs-built_in">str</span>(a)))  <span class="hljs-comment"># &#x27;[1, 2, 3]&#x27;</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">str</span>(b), <span class="hljs-built_in">type</span>(<span class="hljs-built_in">str</span>(b)))<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">str</span>(c), <span class="hljs-built_in">type</span>(<span class="hljs-built_in">str</span>(c)))<br><br><span class="hljs-comment"># 转换不可逆...</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">list</span>(<span class="hljs-built_in">str</span>(a)))<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">tuple</span>(<span class="hljs-built_in">str</span>(b)))<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">set</span>(<span class="hljs-built_in">str</span>(c)))<br><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 类型转换 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 字符串与bytes的转换</title>
      <link href="/2021/c78f8edfbe5a/"/>
      <url>/2021/c78f8edfbe5a/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="字符串与bytes的转换"><a href="#字符串与bytes的转换" class="headerlink" title="字符串与bytes的转换"></a>字符串与bytes的转换</h3><h4 id="什么是bytes-比特类型"><a href="#什么是bytes-比特类型" class="headerlink" title="什么是bytes(比特类型)"></a>什么是bytes(比特类型)</h4><ul><li><p>二进制的数据流–bytes</p></li><li><p>一种特殊的字符串</p></li><li><p>字符串前 + b  标记</p></li></ul><blockquote><p>内置函数dir可以查到该数据类型的相关说明</p></blockquote><hr><h4 id="字符串转bytes的函数–encode"><a href="#字符串转bytes的函数–encode" class="headerlink" title="字符串转bytes的函数–encode"></a>字符串转bytes的函数–encode</h4><h5 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h5><ul><li>将<code>字符串</code>转成<code>比特(bytes)类型</code></li></ul><h5 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h5><p><code>sring.encode(endocing=&#39;utf-8&#39;, errors= &#39;strict&#39;)</code></p><h5 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h5><ul><li><p><code>encoding</code>:转换的<strong>编码格式</strong> ,如<code>ascii</code> , <code>gbk</code> , 默认 <code>utf-8</code></p></li><li><p><code>errors</code> : <strong>出错</strong>时的处理方法 , 默认<code>strict</code> </p><ul><li>直接抛错误 , 也可以选择 <code>ignore</code> 忽略错误</li></ul></li></ul><h5 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h5><ul><li>返回一个比特(bytes)类型</li></ul><hr><h4 id="bytes转字符串的函数–decode"><a href="#bytes转字符串的函数–decode" class="headerlink" title="bytes转字符串的函数–decode"></a>bytes转字符串的函数–decode</h4><h5 id="功能-1"><a href="#功能-1" class="headerlink" title="功能"></a>功能</h5><ul><li>将<code>比特(bytes)类型</code>转成<code>字符串</code></li></ul><h5 id="用法-1"><a href="#用法-1" class="headerlink" title="用法"></a>用法</h5><ul><li><code>bytes.decode(encoding=&#39;utf-8&#39;, errors=&#39;strict&#39;)</code></li></ul><h5 id="参数-1"><a href="#参数-1" class="headerlink" title="参数"></a>参数</h5><ul><li><p><code>encoding</code>:  转换成的<strong>编码格式</strong>, 如 <code>ascii</code>, <code>gbk</code>, 默认 <code>utf-8</code></p></li><li><p><code>errors</code>: 出错时的<strong>处理方法</strong> , 默认<code>strict</code> ,直接<strong>抛错误</strong> , 也可以选择<code>ignore</code>忽略错误</p></li></ul><h5 id="返回值-1"><a href="#返回值-1" class="headerlink" title="返回值"></a>返回值</h5><ul><li>返回一个<code>字符串类型</code></li></ul><h5 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding:utf-8</span><br><br>a = <span class="hljs-string">&#x27;hello xiaomu&#x27;</span><br><span class="hljs-built_in">print</span>(a, <span class="hljs-built_in">type</span>(a))<br><br>b = <span class="hljs-string">b&#x27;hello xiaomu&#x27;</span><br><span class="hljs-built_in">print</span>(b, <span class="hljs-built_in">type</span>(b))<br><br><span class="hljs-built_in">print</span>(b.capitalize())<br><span class="hljs-built_in">print</span>(b.replace(<span class="hljs-string">b&#x27;xiaomu&#x27;</span>, <span class="hljs-string">b&#x27;dewei&#x27;</span>))<br><span class="hljs-built_in">print</span>(b[:<span class="hljs-number">3</span>])<br><span class="hljs-built_in">print</span>(b.find(<span class="hljs-string">b&#x27;x&#x27;</span>))<br><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">dir</span>(b))<br><br>c = <span class="hljs-string">&#x27;hello 小慕&#x27;</span><br>d = c.encode(<span class="hljs-string">&#x27;utf-8&#x27;</span>)<br><span class="hljs-built_in">print</span>(d, <span class="hljs-built_in">type</span>(d))<br><span class="hljs-built_in">print</span>(d.decode(<span class="hljs-string">&#x27;utf-8&#x27;</span>))<br><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 类型转换 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 字符串与列表间的转换</title>
      <link href="/2021/ae96905fcbf4/"/>
      <url>/2021/ae96905fcbf4/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="字符串与列表间的转换"><a href="#字符串与列表间的转换" class="headerlink" title="字符串与列表间的转换"></a>字符串与列表间的转换</h3><h4 id="字符串转列表的函数–split"><a href="#字符串转列表的函数–split" class="headerlink" title="字符串转列表的函数–split"></a>字符串转列表的函数–split</h4><h5 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h5><ul><li>将字符串以<code>一定规则</code><strong>切割</strong>转成<code>列表</code></li></ul><h5 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h5><ul><li><code>string.split(sep=None, maxsplit=-1)</code></li></ul><h5 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h5><ul><li><p><code>sep</code>:切割的规则符号,不填写**,默认空格**,如字符串<strong>无空格</strong><code>不分割</code>生成列表</p></li><li><p><code>maxsplit</code> : 根据切割符号<strong>切割的次数</strong>, 默认**-1无限制**</p></li></ul><h5 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h5><ul><li>返回一个<strong>列表</strong></li></ul><hr><h4 id="列表转字符串的函数–join"><a href="#列表转字符串的函数–join" class="headerlink" title="列表转字符串的函数–join"></a>列表转字符串的函数–join</h4><h5 id="功能-1"><a href="#功能-1" class="headerlink" title="功能"></a>功能</h5><ul><li>将<code>列表</code>以<strong>一定规则</strong>转成<code>字符串</code>(元组,集合也可以)</li></ul><h5 id="用法-1"><a href="#用法-1" class="headerlink" title="用法"></a>用法</h5><ul><li><code>&#39;sep&#39;.join(iterable)</code></li></ul><h5 id="参数-1"><a href="#参数-1" class="headerlink" title="参数"></a>参数</h5><ul><li><code>sep</code>: 生成字符串用来分割<code>列表每个元素</code>的符号</li><li><code>iterable</code>: <strong>非数字类型</strong>的<code>列表或元组或集合</code></li></ul><h5 id="返回值-1"><a href="#返回值-1" class="headerlink" title="返回值"></a>返回值</h5><ul><li>返回一个字符串</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding:utf-8</span><br><br>a = <span class="hljs-string">&#x27;abc&#x27;</span><br><span class="hljs-built_in">print</span>(a.split())<br><br>b = <span class="hljs-string">&#x27;a,b,c&#x27;</span><br><span class="hljs-built_in">print</span>(b.split(<span class="hljs-string">&#x27;,&#x27;</span>))<br><br>c = <span class="hljs-string">&#x27;a|b|c|d&#x27;</span><br><span class="hljs-built_in">print</span>(c.split(<span class="hljs-string">&#x27;|&#x27;</span>, <span class="hljs-number">1</span>))<br><br>d = <span class="hljs-string">&#x27;a|b|c|d&#x27;</span><br><span class="hljs-built_in">print</span>(d.split(<span class="hljs-string">&#x27;|&#x27;</span>, <span class="hljs-number">2</span>))<br><br>f = <span class="hljs-string">&#x27;a~b~c&#x27;</span><br><span class="hljs-built_in">print</span>(f.split(<span class="hljs-string">&#x27;~&#x27;</span>, <span class="hljs-number">2</span>))<br><br>test = [<span class="hljs-string">&#x27;a&#x27;</span>, <span class="hljs-string">&#x27;b&#x27;</span>, <span class="hljs-string">&#x27;c&#x27;</span>]<br>test_str = <span class="hljs-string">&#x27;|&#x27;</span>.join(test)<br><span class="hljs-built_in">print</span>(test_str)<br><br>test2 = [<span class="hljs-string">&#x27;c&#x27;</span>, <span class="hljs-string">&#x27;a&#x27;</span>, <span class="hljs-string">&#x27;b&#x27;</span>]<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;|&#x27;</span>.join(test2))<br><br><span class="hljs-comment"># test3 = [&#123;&#x27;name&#x27;: &#x27;dewei&#x27;&#125;, &#123;&#x27;name&#x27;: &#x27;xiaomu&#x27;&#125;]</span><br><span class="hljs-comment"># print(&#x27;.&#x27;.join(test3))</span><br><br><span class="hljs-comment"># test4 = [(&#x27;a&#x27;, &#x27;v&#x27;), (&#x27;a&#x27;, &#x27;b&#x27;)]</span><br><span class="hljs-comment"># print(&#x27;&#x27;.join(test4))</span><br><br><span class="hljs-comment"># test5 = [None, True]</span><br><span class="hljs-comment"># print(&#x27;.&#x27;.join(test5))</span><br><br>sort_str = <span class="hljs-string">&#x27;a b c d f i p q c&#x27;</span><br>sort_list = sort_str.split()<br><span class="hljs-built_in">print</span>(sort_list)<br>sort_list.sort()<br><span class="hljs-built_in">print</span>(sort_list)<br>sort_str = <span class="hljs-string">&#x27; &#x27;</span>.join(sort_list)<br><span class="hljs-built_in">print</span>(sort_str)<br><br>sort_str_new = <span class="hljs-string">&#x27;abcdfipqc&#x27;</span><br><span class="hljs-built_in">print</span>(sort_str_new)<br>res = <span class="hljs-built_in">sorted</span>(sort_str_new)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;&#x27;</span>.join(res))<br><br>seq = (<span class="hljs-string">&#x27;a&#x27;</span>, <span class="hljs-string">&#x27;b&#x27;</span>, <span class="hljs-string">&#x27;c&#x27;</span>)<br>seq2 = &#123;<span class="hljs-string">&#x27;a&#x27;</span>, <span class="hljs-string">&#x27;b&#x27;</span>,<span class="hljs-string">&#x27;c&#x27;</span>&#125;<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;#&#x27;</span>.join(seq))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;$&#x27;</span>.join(seq2), <span class="hljs-built_in">type</span>(seq2))<br><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 类型转换 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 字符串与数字类型的转换</title>
      <link href="/2021/ab042a99e9a7/"/>
      <url>/2021/ab042a99e9a7/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="字符串与数字类型的转换"><a href="#字符串与数字类型的转换" class="headerlink" title="字符串与数字类型的转换"></a>字符串与数字类型的转换</h3><h4 id="什么是类型转换-为什么做类型转换"><a href="#什么是类型转换-为什么做类型转换" class="headerlink" title="什么是类型转换, 为什么做类型转换"></a>什么是类型转换, 为什么做类型转换</h4><ul><li>将自身数据类型变成<code>新的数据类型</code> , 并拥有新的数据类型的所有功能的过程即为类型转换</li><li><code>a = &#39;1&#39;</code>  <strong>#无法做数字操作</strong></li><li>为方便更好的帮助处理业务, 将类型变更为更适合业务场景的类型</li></ul><h4 id="字符串与数字之间转换的要求"><a href="#字符串与数字之间转换的要求" class="headerlink" title="字符串与数字之间转换的要求"></a>字符串与数字之间转换的要求</h4><ul><li><code>str  --&gt;  number</code>: 数字组成的字符串</li><li><code>number  ---&gt;  str</code>  :  无要求</li></ul><h4 id="字符串与数字之间的转换函数"><a href="#字符串与数字之间的转换函数" class="headerlink" title="字符串与数字之间的转换函数"></a>字符串与数字之间的转换函数</h4><table><thead><tr><th align="center">原始类型</th><th align="center">目标函数</th><th align="center">函数</th><th align="center">举例</th></tr></thead><tbody><tr><td align="center">整形</td><td align="center">字符串</td><td align="center">str</td><td align="center">new_str = str(123456)</td></tr><tr><td align="center">浮点型</td><td align="center">字符串</td><td align="center">str</td><td align="center">new_str = str(3.14)</td></tr><tr><td align="center">字符串</td><td align="center">整形</td><td align="center">int</td><td align="center">new_int = int(‘12’)</td></tr><tr><td align="center">字符串</td><td align="center">浮点型</td><td align="center">float</td><td align="center">new_float = float(‘1.2’)</td></tr></tbody></table><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding:utf-8</span><br><br>int_data = <span class="hljs-number">12</span><br>float_date =<span class="hljs-number">3.14</span><br><br>str_int_data = <span class="hljs-built_in">str</span>(int_data)<br>str_float_data = <span class="hljs-built_in">str</span>(float_date)<br><span class="hljs-built_in">print</span>(str_int_data, str_float_data, <span class="hljs-built_in">type</span>(str_int_data), <span class="hljs-built_in">type</span>(str_float_data))<br><br>zero_number = <span class="hljs-number">0</span><br>_number = -<span class="hljs-number">1</span><br><br>str_zero_number = <span class="hljs-built_in">str</span>(zero_number)<br>str_number = <span class="hljs-built_in">str</span>(_number)<br><span class="hljs-built_in">print</span>(str_zero_number, str_number, <span class="hljs-built_in">type</span>(str_zero_number), <span class="hljs-built_in">type</span>(str_number))<br><br>str_float = <span class="hljs-string">&#x27;3.14&#x27;</span><br>str_int = <span class="hljs-string">&#x27;123456&#x27;</span><br><br>real_float = <span class="hljs-built_in">float</span>(str_float)<br>real_int = <span class="hljs-built_in">int</span>(str_int)<br><br><span class="hljs-built_in">print</span>(real_float, real_int, <span class="hljs-built_in">type</span>(real_float), <span class="hljs-built_in">type</span>(real_int))<br><br>mix_Str = <span class="hljs-string">&#x27;123a&#x27;</span><br><span class="hljs-comment"># print(float(mix_Str))</span><br>float_data_str = <span class="hljs-string">&#x27;3.14&#x27;</span><br>test_data = <span class="hljs-built_in">float</span>(float_data_str)<br><span class="hljs-built_in">print</span>(test_data, <span class="hljs-built_in">type</span>(test_data))<br><br>int_data_str = <span class="hljs-string">&#x27;123&#x27;</span><br>test_data = <span class="hljs-built_in">float</span>(int_data_str)<br><span class="hljs-built_in">print</span>(test_data, <span class="hljs-built_in">type</span>(test_data))<br><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 类型转换 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 集合的isdisjoint函数</title>
      <link href="/2021/00310efa09de/"/>
      <url>/2021/00310efa09de/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="集合的isdisjoint函数"><a href="#集合的isdisjoint函数" class="headerlink" title="集合的isdisjoint函数"></a>集合的isdisjoint函数</h3><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li>判断两个<code>集合</code>是否包含<strong>相同的元素</strong> , 如果<strong>没有</strong>返回<code>True</code> , 否则返回<code>False</code></li><li><code>没有</code>才返回<strong>True</strong></li></ul><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><ul><li><code>a_set.isdisjoint(b_set)</code></li></ul><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><ul><li><code>b_set</code> : 与当前集合用来判断的集合</li></ul><h4 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h4><ul><li>返回一个<strong>布尔值</strong><code>True</code>或<code>False</code></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding:utf-8</span><br><br>company_not_allow = &#123;<span class="hljs-string">&#x27;女&#x27;</span>, <span class="hljs-string">&#x27;喝酒&#x27;</span>, <span class="hljs-string">&#x27;抽烟&#x27;</span>, <span class="hljs-string">&#x27;睡懒觉&#x27;</span>&#125;<br><br>one_player = &#123;<span class="hljs-string">&#x27;男&#x27;</span>, <span class="hljs-string">&#x27;跑步&#x27;</span>, <span class="hljs-string">&#x27;朝气&#x27;</span>, <span class="hljs-string">&#x27;喝酒&#x27;</span>&#125;<br>two_player = &#123;<span class="hljs-string">&#x27;女&#x27;</span>, <span class="hljs-string">&#x27;生活规律&#x27;</span>, <span class="hljs-string">&#x27;跆拳道&#x27;</span>&#125;<br>three_player = &#123;<span class="hljs-string">&#x27;男&#x27;</span>, <span class="hljs-string">&#x27;太极拳&#x27;</span>&#125;<br>four_player = &#123;<span class="hljs-string">&#x27;男&#x27;</span>, <span class="hljs-string">&#x27;空手道&#x27;</span>, <span class="hljs-string">&#x27;年轻&#x27;</span>&#125;<br><br><span class="hljs-built_in">print</span>(company_not_allow.isdisjoint(one_player))<br><span class="hljs-built_in">print</span>(company_not_allow.isdisjoint(two_player))<br><span class="hljs-built_in">print</span>(company_not_allow.isdisjoint(three_player))<br><span class="hljs-built_in">print</span>(company_not_allow.isdisjoint(four_player))<br><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 集合 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 集合的并集--union函数</title>
      <link href="/2021/e8a9c829e273/"/>
      <url>/2021/e8a9c829e273/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="集合的并集–union函数"><a href="#集合的并集–union函数" class="headerlink" title="集合的并集–union函数"></a>集合的并集–<code>union函数</code></h3><h4 id="什么是并集"><a href="#什么是并集" class="headerlink" title="什么是并集"></a>什么是并集</h4><ul><li><code>a , b 两个集合</code>中所有的<strong>元素</strong>(去除重复)即为a与b的<code>并集</code></li><li><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-10-4/1.png" alt="1"></li></ul><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li>返回<strong>多个集合</strong>的<code>并集</code>,即包含了<strong>所有集合</strong>的元素,<strong>重复的元素</strong><code>只会出现一次</code></li></ul><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><ul><li>a_set.union(b_set…)</li></ul><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><ul><li><code>b_set...</code>: 与<code>当前集合</code>对比的<strong>1或多个集合</strong></li></ul><h4 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h4><ul><li>返回<strong>原始集合</strong>与<strong>对比集合</strong>的<code>并集</code></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding:utf-8</span><br><br>a_school = [<span class="hljs-string">&#x27;周五半天&#x27;</span>, <span class="hljs-string">&#x27;免费周末培训&#x27;</span>, <span class="hljs-string">&#x27;周五休息&#x27;</span>]<br>b_school = [<span class="hljs-string">&#x27;放学时间从6点改为5点&#x27;</span>, <span class="hljs-string">&#x27;作业少留点&#x27;</span>, <span class="hljs-string">&#x27;换舒服的座椅&#x27;</span>]<br>c_school = [<span class="hljs-string">&#x27;作业少留点&#x27;</span>, <span class="hljs-string">&#x27;周五半天&#x27;</span>, <span class="hljs-string">&#x27;伙食改善&#x27;</span>]<br><br>a_set = <span class="hljs-built_in">set</span>(a_school)<br>b_set = <span class="hljs-built_in">set</span>(b_school)<br>c_set = <span class="hljs-built_in">set</span>(c_school)<br><br><span class="hljs-built_in">print</span>(a_set)<br><span class="hljs-built_in">print</span>(b_set)<br><span class="hljs-built_in">print</span>(c_set)<br><br><span class="hljs-comment"># help_date = a_set.union(b_set, c_set)</span><br>help_date = a_set.union(b_school, c_school)<br><span class="hljs-built_in">print</span>(help_date)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">len</span>(help_date))<br><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 集合 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 集合的交集--intersection函数</title>
      <link href="/2021/accc6957dd99/"/>
      <url>/2021/accc6957dd99/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="集合的交集–intersection函数"><a href="#集合的交集–intersection函数" class="headerlink" title="集合的交集–intersection函数"></a>集合的交集–<code>intersection函数</code></h3><h4 id="什么是交集"><a href="#什么是交集" class="headerlink" title="什么是交集"></a>什么是交集</h4><ul><li>a , b两个集合分别拥有的<code>相同</code>的元素集 , 称为a与b的交集</li><li><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-10-4/1.png" alt="1"></li></ul><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li>返回<strong>两个或更多集合</strong>中<code>都包含</code>的元素,即交集</li></ul><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><ul><li><code>a_set.intersection(b_set...)</code></li></ul><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><p><code>b_set...</code>:  与当前集合对比的<strong>1或多个集合</strong></p><h4 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h4><ul><li>返回<strong>原始集合</strong>与<strong>对比集合</strong>的<code>交集</code></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding:utf-8</span><br><br>a = [<span class="hljs-string">&#x27;dewei&#x27;</span>, <span class="hljs-string">&#x27;xiaomu&#x27;</span>, <span class="hljs-string">&#x27;xiaohua&#x27;</span>, <span class="hljs-string">&#x27;xiaoguo&#x27;</span>]<br>b = [<span class="hljs-string">&#x27;xiaohua&#x27;</span>, <span class="hljs-string">&#x27;dewei&#x27;</span>, <span class="hljs-string">&#x27;xiaoman&#x27;</span>, <span class="hljs-string">&#x27;xiaolin&#x27;</span>]<br>c = [<span class="hljs-string">&#x27;xiaoguang&#x27;</span>, <span class="hljs-string">&#x27;xiaobai&#x27;</span>, <span class="hljs-string">&#x27;dewei&#x27;</span>, <span class="hljs-string">&#x27;xiaoyuan&#x27;</span>]<br><br>a_set = <span class="hljs-built_in">set</span>(a)<br>b_set = <span class="hljs-built_in">set</span>(b)<br>c_set = <span class="hljs-built_in">set</span>(c)<br><br><span class="hljs-built_in">print</span>(a_set, b_set, c_set)<br><br>result = a_set.intersection(b_set, c_set)<br>xiaotou = <span class="hljs-built_in">list</span>(result)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;&#123;&#125; 是 这个小偷&#x27;</span>.<span class="hljs-built_in">format</span>(xiaotou[<span class="hljs-number">0</span>]))<br><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 集合 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 集合的差集--difference函数</title>
      <link href="/2021/bb2cff969079/"/>
      <url>/2021/bb2cff969079/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="集合的差集–difference函数"><a href="#集合的差集–difference函数" class="headerlink" title="集合的差集–difference函数"></a>集合的差集–<code>difference函数</code></h3><h4 id="什么是差集"><a href="#什么是差集" class="headerlink" title="什么是差集"></a>什么是差集</h4><ul><li>a, b两个集合 , 由所有属于a且不属于b的元素组成的集合叫做a与b的差集</li><li><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-10-4/1.png" alt="1"></li></ul><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li><code>返回集合的差集</code> , 即<strong>返回的集合元素</strong><code>包含在第一个集合中</code>, 但<code>不包含在第二个集合</code>(方法的参数)中</li></ul><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><ul><li><code>a_set.difference(b_set)</code></li></ul><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><ul><li><code>b_set</code> : 当前集合<strong>需要对比的集合</strong></li></ul><h4 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h4><ul><li><strong>返回</strong><code>原始集合</code>于<code>对比集合</code>的<code>差集</code></li><li>(即a_set与b_set的差集)</li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding:utf-8</span><br><br>drivers = [<span class="hljs-string">&#x27;dewei&#x27;</span>, <span class="hljs-string">&#x27;xiaomu&#x27;</span>, <span class="hljs-string">&#x27;xiaoming&#x27;</span>, <span class="hljs-string">&#x27;xiaoman&#x27;</span>]<br>testers = [<span class="hljs-string">&#x27;xiaomu&#x27;</span>, <span class="hljs-string">&#x27;xiaoman&#x27;</span>, <span class="hljs-string">&#x27;xiaogang&#x27;</span>, <span class="hljs-string">&#x27;xiaotao&#x27;</span>]<br><br>driver_set = <span class="hljs-built_in">set</span>(drivers)<br>test_set = <span class="hljs-built_in">set</span>(testers)<br><br>sample_drives = driver_set.difference(test_set)<br><span class="hljs-built_in">print</span>(sample_drives)<br><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 集合 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 集合的增删改</title>
      <link href="/2021/697e4a85a0ab/"/>
      <url>/2021/697e4a85a0ab/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="集合的增删改"><a href="#集合的增删改" class="headerlink" title="集合的增删改"></a>集合的增删改</h3><h4 id="集合的add函数"><a href="#集合的add函数" class="headerlink" title="集合的add函数"></a>集合的<code>add函数</code></h4><h5 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h5><ul><li>用于集合中<code>添加一个元素</code>,如果集合中<strong>已存在该元素</strong>则该元素<strong>不执行</strong></li></ul><h5 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h5><ul><li><code>set.add(item)</code></li></ul><h5 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h5><ul><li><code>item</code> : 要<strong>添加到集合中的元素</strong></li></ul><h5 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h5><ul><li>无返回值</li></ul><hr><h4 id="集合的update函数"><a href="#集合的update函数" class="headerlink" title="集合的update函数"></a>集合的update函数</h4><h5 id="功能-1"><a href="#功能-1" class="headerlink" title="功能"></a>功能</h5><ul><li>加入一个<code>新的集合(或列表, 元组, 字符串)</code>, 如新集合内的元素在原集合中<strong>存在则无视</strong></li></ul><h5 id="用法-1"><a href="#用法-1" class="headerlink" title="用法"></a>用法</h5><ul><li><code>set.update(iterable)</code></li><li>传入字符串的时候会被拆开….</li></ul><h5 id="参数-1"><a href="#参数-1" class="headerlink" title="参数"></a>参数</h5><ul><li><code>iterable</code> : 集合,列表元组字符串</li></ul><h5 id="返回值-1"><a href="#返回值-1" class="headerlink" title="返回值"></a>返回值</h5><ul><li><code>无</code>返回值 , <strong>直接作用于原集合</strong></li></ul><hr><h4 id="集合的remove函数"><a href="#集合的remove函数" class="headerlink" title="集合的remove函数"></a>集合的remove函数</h4><h5 id="功能-2"><a href="#功能-2" class="headerlink" title="功能"></a>功能</h5><ul><li>将集合中的某个元素<code>删除</code> , 如元素<code>不存在</code>将会<strong>报错</strong></li></ul><h5 id="用法-2"><a href="#用法-2" class="headerlink" title="用法"></a>用法</h5><ul><li>set.remove(item)  #   注意是元素不是索引</li></ul><h5 id="参数-2"><a href="#参数-2" class="headerlink" title="参数"></a>参数</h5><ul><li><code>item</code> : 当前集合中的<strong>一个元素</strong></li></ul><h5 id="返回值-2"><a href="#返回值-2" class="headerlink" title="返回值"></a>返回值</h5><ul><li><strong>无返回值</strong> , 直接作用于<strong>原集合</strong></li></ul><hr><h4 id="集合的clear函数"><a href="#集合的clear函数" class="headerlink" title="集合的clear函数"></a>集合的clear函数</h4><h5 id="功能-3"><a href="#功能-3" class="headerlink" title="功能"></a>功能</h5><ul><li>清空<strong>当前集合</strong>中的<code>所有元素</code></li></ul><h5 id="用法-3"><a href="#用法-3" class="headerlink" title="用法"></a>用法</h5><ul><li><code>set.clear()</code></li></ul><h5 id="参数-3"><a href="#参数-3" class="headerlink" title="参数"></a>参数</h5><ul><li><code>无</code></li></ul><h5 id="返回值-3"><a href="#返回值-3" class="headerlink" title="返回值"></a>返回值</h5><ul><li><code>无返回值</code> , 直接作用于<strong>原集合</strong></li></ul><hr><h4 id="用del删除集合"><a href="#用del删除集合" class="headerlink" title="用del删除集合"></a>用del删除集合</h4><ul><li>只能直接删除集合对象自身</li></ul><hr><h4 id="重要说明"><a href="#重要说明" class="headerlink" title="重要说明"></a>重要说明</h4><ul><li>集合无法通过索引获取元素</li><li>集合无获取元素的任何方法</li><li>集合只是用来处理列表或元组的一种临时类型 , 它不适合存储于运输</li></ul><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding:utf-8</span><br><br>a_list = [<span class="hljs-string">&#x27;python&#x27;</span>, <span class="hljs-string">&#x27;django&#x27;</span>, <span class="hljs-string">&#x27;django&#x27;</span>, <span class="hljs-string">&#x27;flask&#x27;</span>]<br><br>a_set = <span class="hljs-built_in">set</span>()<br><br>a_set.add(a_list[<span class="hljs-number">0</span>])<br>a_set.add(a_list[<span class="hljs-number">1</span>])<br>a_set.add(a_list[<span class="hljs-number">2</span>])<br>a_set.add(a_list[-<span class="hljs-number">1</span>])<br><span class="hljs-built_in">print</span>(a_set)<br><br>a_set.add(<span class="hljs-literal">True</span>)<br>a_set.add(<span class="hljs-literal">None</span>)<br><span class="hljs-built_in">print</span>(a_set)<br><br>a_tuple = (<span class="hljs-string">&#x27;a&#x27;</span>, <span class="hljs-string">&#x27;b&#x27;</span>, <span class="hljs-string">&#x27;c&#x27;</span>)<br>a_set.update(a_tuple)<br><span class="hljs-built_in">print</span>(a_set)<br>a_set.update(<span class="hljs-string">&#x27;python&#x27;</span>)<br><span class="hljs-built_in">print</span>(a_set)<br><br>a_set.remove(<span class="hljs-string">&#x27;python&#x27;</span>)<br><span class="hljs-built_in">print</span>(a_set)<br><br>a_set.clear()<br><span class="hljs-built_in">print</span>(a_set)<br><span class="hljs-keyword">del</span> a_set<br><br><span class="hljs-comment"># a_set.remove(&#x27;flask&#x27;)</span><br><span class="hljs-comment"># print(a_set)</span><br><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 集合 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 初识集合</title>
      <link href="/2021/65bbd4967d97/"/>
      <url>/2021/65bbd4967d97/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="初识集合"><a href="#初识集合" class="headerlink" title="初识集合"></a>初识集合</h3><h4 id="什么是集合"><a href="#什么是集合" class="headerlink" title="什么是集合"></a>什么是集合</h4><ul><li><code>集合(set)</code>是一个无序的不重复元素序列</li><li>常用来对两个列表进行交并差的处理</li><li>集合与列表一样, 支持所有的数据类型(<strong>所有不可变的数据类型</strong>)</li></ul><h4 id="集合与列表的区别"><a href="#集合与列表的区别" class="headerlink" title="集合与列表的区别"></a>集合与列表的区别</h4><table><thead><tr><th align="center">功能</th><th align="center">列表</th><th align="center">集合</th></tr></thead><tbody><tr><td align="center">顺序</td><td align="center">有序</td><td align="center">无序</td></tr><tr><td align="center">内容</td><td align="center">可重复</td><td align="center">不可重复</td></tr><tr><td align="center">功能</td><td align="center">用于数据的使用</td><td align="center">用于数据的交集并集差集的获取</td></tr><tr><td align="center">索引</td><td align="center">有索引</td><td align="center">无索引</td></tr><tr><td align="center">符号</td><td align="center">[] [1,2,3]</td><td align="center">{} {1,2,3}</td></tr></tbody></table><h4 id="集合的创建方法"><a href="#集合的创建方法" class="headerlink" title="集合的创建方法"></a>集合的创建方法</h4><ul><li>通过<code>set函数</code>来创建集合,<code>不能使用&#123;&#125;</code> 来创建<strong>空集合</strong></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding:utf-8</span><br><br>a = <span class="hljs-built_in">set</span>()<br><span class="hljs-built_in">print</span>(a)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">type</span>(a))<br><br>b = <span class="hljs-built_in">set</span>([<span class="hljs-string">&#x27;python&#x27;</span>, <span class="hljs-string">&#x27;django&#x27;</span>, <span class="hljs-string">&#x27;flask&#x27;</span>])<br><span class="hljs-built_in">print</span>(b)<br><br>c = &#123;(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>), <span class="hljs-string">&#x27;123&#x27;</span>, <span class="hljs-number">1</span>&#125;<br><span class="hljs-built_in">print</span>(c)<br><br>d = &#123;&#125;<br><span class="hljs-built_in">print</span>(d, <span class="hljs-built_in">type</span>(d))<br><br>a_list = [<span class="hljs-string">&#x27;python&#x27;</span>, <span class="hljs-string">&#x27;django&#x27;</span>, <span class="hljs-string">&#x27;python&#x27;</span>, <span class="hljs-string">&#x27;flask&#x27;</span>]<br>b_set = <span class="hljs-built_in">set</span>(a_list)<br><span class="hljs-built_in">print</span>(b_set)<br><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 集合 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 所有数据类型与布尔值的关系</title>
      <link href="/2021/e614b7c29c00/"/>
      <url>/2021/e614b7c29c00/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="所有数据类型与布尔值的关系"><a href="#所有数据类型与布尔值的关系" class="headerlink" title="所有数据类型与布尔值的关系"></a>所有数据类型与布尔值的关系</h3><ul><li>字符串, 数字, 列表, 元组, 字典, 空类型 与 布尔值 的关系总结</li></ul><h4 id="明确两点"><a href="#明确两点" class="headerlink" title="明确两点"></a>明确两点</h4><ol><li>每一种数据类型,自身的值都有表示True与False</li><li>not对于一切结果取反</li><li>非0 非空都为True 其他都为False</li></ol><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-10-3/4.jpg" alt="4"></p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding:utf-8</span><br><br>a_1 = <span class="hljs-number">1</span><br>a_2 = <span class="hljs-number">0</span><br><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">bool</span>(a_1))<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">bool</span>(a_2))<br><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">bool</span>(<span class="hljs-keyword">not</span> a_1))<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">bool</span>(<span class="hljs-keyword">not</span> a_2))<br><br>b_1 = <span class="hljs-string">&#x27;1&#x27;</span><br>b_2 = <span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;----------&#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">bool</span>(b_1))<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">bool</span>(b_2))<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">bool</span>(<span class="hljs-keyword">not</span> b_1))<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">bool</span>(<span class="hljs-keyword">not</span> b_2))<br><br>c_1 = <span class="hljs-literal">True</span><br>c_2 = <span class="hljs-literal">False</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;-----------&#x27;</span>)<br><span class="hljs-built_in">print</span>(c_1)<br><span class="hljs-built_in">print</span>(c_2)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-keyword">not</span> c_1)<br><span class="hljs-built_in">print</span>(<span class="hljs-keyword">not</span> c_2)<br><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字典 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 字典中的末尾删除函数--popitem</title>
      <link href="/2021/ee4436b63343/"/>
      <url>/2021/ee4436b63343/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="字典中的末尾删除函数–popitem"><a href="#字典中的末尾删除函数–popitem" class="headerlink" title="字典中的末尾删除函数–popitem"></a>字典中的末尾删除函数–<code>popitem</code></h3><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li>删除当前字典<code>末尾一组键值对</code>并将其返回</li></ul><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><ul><li><code>dict.popitem()</code>  –  无需传参</li><li><code>&gt;&gt; 返回被删除的键值对,用元组包裹 0索引是key, 1索引是value</code></li></ul><h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><ul><li>如字典为空,则直接报错</li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding:utf-8</span><br><br>students = &#123;<span class="hljs-string">&#x27;dewei&#x27;</span>: <span class="hljs-string">&#x27;到&#x27;</span>, <span class="hljs-string">&#x27;xiaomu&#x27;</span>: <span class="hljs-string">&#x27;在&#x27;</span>, <span class="hljs-string">&#x27;xiaoyun&#x27;</span>: <span class="hljs-string">&#x27;在呢&#x27;</span>, <span class="hljs-string">&#x27;xiaogao&#x27;</span>: <span class="hljs-string">&#x27;在&#x27;</span>&#125;<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;xiaogao 在吗&#x27;</span>)<br>xiaogao = students.popitem()<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;&#123;&#125;喊&#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(xiaogao[<span class="hljs-number">0</span>], xiaogao[<span class="hljs-number">1</span>]))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;xiaoyun 在吗&#x27;</span>)<br>xiaoyun = students.popitem()<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;&#123;&#125;喊&#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(xiaoyun[<span class="hljs-number">0</span>], xiaoyun[<span class="hljs-number">1</span>]))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;xiaomu 在吗&#x27;</span>)<br>xiaomu = students.popitem()<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;&#123;&#125;喊&#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(xiaomu[<span class="hljs-number">0</span>], xiaomu[<span class="hljs-number">1</span>]))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;dewei在吗&#x27;</span>)<br>dewei = students.popitem()<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;&#123;&#125;喊&#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(dewei[<span class="hljs-number">0</span>], dewei[<span class="hljs-number">1</span>]))<br><span class="hljs-built_in">print</span>(students)<br><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字典 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 字典中的成员判断</title>
      <link href="/2021/69524697f433/"/>
      <url>/2021/69524697f433/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="字典中的成员判断"><a href="#字典中的成员判断" class="headerlink" title="字典中的成员判断"></a>字典中的成员判断</h3><h4 id="in-与-not-in在字典中的用法"><a href="#in-与-not-in在字典中的用法" class="headerlink" title="in 与 not in在字典中的用法"></a><code>in</code> 与 <code>not in</code>在字典中的用法</h4><ul><li>只能判断<code>key</code>是否存在</li></ul><h4 id="get用于判断成员存在"><a href="#get用于判断成员存在" class="headerlink" title="get用于判断成员存在"></a><code>get</code>用于判断成员存在</h4><ul><li><code>bool(test_dict.get(&#39;name&#39;))</code></li><li>字典中的类型可能为<code>False类型</code>…<strong>有待商榷</strong></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding:utf-8</span><br><br>default_dict = &#123;<span class="hljs-string">&#x27;a&#x27;</span>: <span class="hljs-literal">None</span>, <span class="hljs-string">&#x27;b&#x27;</span>: <span class="hljs-number">1</span>, <span class="hljs-string">&#x27;c&#x27;</span>: <span class="hljs-number">0</span>, <span class="hljs-string">&#x27;d&#x27;</span>: <span class="hljs-string">&#x27;&#x27;</span>&#125;<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;a&#x27;</span> <span class="hljs-keyword">in</span> default_dict)<br><span class="hljs-built_in">print</span>(default_dict[<span class="hljs-string">&#x27;a&#x27;</span>])<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">bool</span>(default_dict.get(<span class="hljs-string">&#x27;a&#x27;</span>)))<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">bool</span>(default_dict.get(<span class="hljs-string">&#x27;b&#x27;</span>)))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;f&#x27;</span> <span class="hljs-keyword">in</span> default_dict)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;f&#x27;</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> default_dict)<br><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字典 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 字典的复制--copy函数</title>
      <link href="/2021/87bad7ab2468/"/>
      <url>/2021/87bad7ab2468/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="字典的复制–copy函数"><a href="#字典的复制–copy函数" class="headerlink" title="字典的复制–copy函数"></a>字典的复制–copy函数</h3><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li>将当前字典复制一个新的字典</li></ul><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><ul><li><code>dict.copy()</code>  -&gt; 该函数<strong>无参数</strong>, 返回一个一模一样的<code>内存地址不同的字典</code><ul><li>!= 可以判断两个成员是否相同</li></ul></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding:utf-8</span><br><br>fruits = &#123;<br>    <span class="hljs-string">&#x27;apple&#x27;</span>: <span class="hljs-number">30</span>,<br>    <span class="hljs-string">&#x27;banana&#x27;</span>: <span class="hljs-number">50</span>,<br>    <span class="hljs-string">&#x27;pear&#x27;</span>: <span class="hljs-number">100</span><br>&#125;<br><br>real_fruits = fruits.copy()<br>fruits[<span class="hljs-string">&#x27;apple&#x27;</span>] = <span class="hljs-number">60</span><br><span class="hljs-built_in">print</span>(real_fruits)<br><br>real_fruits[<span class="hljs-string">&#x27;orange&#x27;</span>] = <span class="hljs-number">50</span><br>real_fruits.update(&#123;<span class="hljs-string">&#x27;cherry&#x27;</span>: <span class="hljs-number">100</span>&#125;)<br><br><span class="hljs-built_in">print</span>(real_fruits)<br><span class="hljs-comment"># print(fruits)</span><br>real_fruits[<span class="hljs-string">&#x27;apple&#x27;</span>] = real_fruits[<span class="hljs-string">&#x27;apple&#x27;</span>] - <span class="hljs-number">5</span><br><span class="hljs-built_in">print</span>(real_fruits)<br>real_fruits[<span class="hljs-string">&#x27;pear&#x27;</span>] -= <span class="hljs-number">3</span><br><span class="hljs-built_in">print</span>(real_fruits)<br><br>real_fruits.clear()<br><span class="hljs-built_in">print</span>(real_fruits)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;第二天......&#x27;</span>)<br>real_fruits = fruits.copy()<br><span class="hljs-built_in">print</span>(real_fruits)<br><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字典 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 字典的删除</title>
      <link href="/2021/ea97ba53d454/"/>
      <url>/2021/ea97ba53d454/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="字典的删除"><a href="#字典的删除" class="headerlink" title="字典的删除"></a>字典的删除</h3><h4 id="clear函数"><a href="#clear函数" class="headerlink" title="clear函数"></a>clear函数</h4><h5 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h5><ul><li>清空当前字典中所有数据</li></ul><h5 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h5><ul><li><code>dict.clear()</code>  -&gt; <strong>无参数</strong>,<strong>无返回值</strong></li></ul><h4 id="pop函数的功能与用法"><a href="#pop函数的功能与用法" class="headerlink" title="pop函数的功能与用法"></a>pop函数的功能与用法</h4><h5 id="功能-1"><a href="#功能-1" class="headerlink" title="功能"></a>功能</h5><ul><li><strong>删除</strong>字典中<code>指定的key</code>,并<strong>将其结果返回</strong>,如果<strong>key不存在则报错</strong></li></ul><h5 id="用法-1"><a href="#用法-1" class="headerlink" title="用法"></a>用法</h5><ul><li>dict.pop(key)  –  key 希望被删掉的键</li><li><code>&gt;&gt;返回这个key对应的值(value)</code></li></ul><h4 id="del-在字典中的用法"><a href="#del-在字典中的用法" class="headerlink" title="del 在字典中的用法"></a>del 在字典中的用法</h4><ul><li>```python<br>my_dict = {‘name’: ‘dewei’, ‘age’: 33}del my_dict[‘name’]<br>print(my_dict)<blockquote><blockquote><p>{‘age’: 33}</p></blockquote></blockquote>del my_dict<br>print(my_dict) -&gt; 报错 , 整个字典对象已被删除<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs plaintext"><br>#### 代码<br><br>```python<br># coding:utf-8<br><br>projects = &#123;<br>    &#x27;ipad&#x27;: &#123;&#x27;name&#x27;: &#x27;ipad&#x27;, &#x27;price&#x27;: 2200, &#x27;decs&#x27;: &#x27;平板电脑&#x27;&#125;,<br>    &#x27;iphone&#x27;: &#123;&#x27;name&#x27;: &#x27;iphone&#x27;, &#x27;price&#x27;: 3000, &#x27;desc&#x27;: &#x27;智能手机&#x27;&#125;,<br>    &#x27;pc&#x27;: &#123;&#x27;name&#x27;: &#x27;pc&#x27;, &#x27;price&#x27;: 5000, &#x27;desc&#x27;: &#x27;台式电脑&#x27;&#125;,<br>    &#x27;mac&#x27;: &#123;&#x27;name&#x27;: &#x27;mac&#x27;, &#x27;price&#x27;: 8000, &#x27;desc&#x27;: &#x27;平板电脑&#x27;&#125;<br>&#125;<br><br>print(projects.keys())<br><br>print(&#x27;一个中学生购买了&#123;&#125;,价格是&#123;&#125;&#x27;.format(projects[&#x27;pc&#x27;][&#x27;name&#x27;], projects[&#x27;pc&#x27;][&#x27;price&#x27;]))<br>projects.pop(&#x27;pc&#x27;)<br>print(projects.keys())<br><br>result = projects.pop(&#x27;mac&#x27;)<br>print(&#x27;一个程序员购买了&#123;&#125;,它的价格是&#123;&#125;&#x27;.format(result[&#x27;name&#x27;], result[&#x27;price&#x27;]))<br>print(projects.keys())<br><br>print(&#x27;&#123;&#125; 和 &#123;&#125; 都被卖出了, 他们一共花费了&#123;&#125;元&#x27;.format(<br>    projects[&#x27;ipad&#x27;][&#x27;name&#x27;], projects[&#x27;iphone&#x27;][&#x27;name&#x27;],<br>    projects[&#x27;ipad&#x27;][&#x27;price&#x27;] + projects[&#x27;iphone&#x27;][&#x27;price&#x27;]<br>))<br>projects.clear()<br>print(projects.keys())<br><br>del  projects<br># print(projects)<br><br></code></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字典 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 字典key的获取</title>
      <link href="/2021/a44f8b1037ba/"/>
      <url>/2021/a44f8b1037ba/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="字典key的获取"><a href="#字典key的获取" class="headerlink" title="字典key的获取"></a>字典key的获取</h3><h4 id="的获取方法"><a href="#的获取方法" class="headerlink" title="[]的获取方法"></a>[]的获取方法</h4><ul><li>字典+中括号内传key , 不进行赋值操作` 即为获取</li><li>返回key对应的value值</li></ul><h4 id="内置函数get获取方法"><a href="#内置函数get获取方法" class="headerlink" title="内置函数get获取方法"></a>内置函数get获取方法</h4><h5 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h5><ul><li>获取当前字典中指定key对应的value</li></ul><h5 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h5><ul><li><code>dict.get(key, default=None)</code></li></ul><h5 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h5><ul><li><code>key</code> : 需要获取<strong>value</strong>的<strong>key</strong></li><li><code>default</code> : key<strong>不存在</strong>则返回此默认值 ,  默认是<code>None</code> , 我们也可以自定义(可以是任意类型)</li></ul><h4 id="与get的区别"><a href="#与get的区别" class="headerlink" title="[]与get的区别"></a>[]与get的区别</h4><ul><li><code>[]</code>如果获取的<strong>key不存在</strong>, 则**<code>直接报错</code>**</li><li><code>get</code>如果获取的<strong>key不存在</strong> ,  则<strong>返回默认值</strong></li><li>所以<strong>开发中</strong> , <strong>优先使用</strong><code>get函数</code></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding:utf-8</span><br><br>user_info = &#123;<br>    <span class="hljs-string">&#x27;id&#x27;</span>: <span class="hljs-number">1</span>,<br>    <span class="hljs-string">&#x27;username&#x27;</span>: <span class="hljs-string">&#x27;dewei&#x27;</span>,<br>    <span class="hljs-string">&#x27;password&#x27;</span>: <span class="hljs-string">&#x27;abcdefg&#x27;</span>,<br>    <span class="hljs-string">&#x27;created_time&#x27;</span>: <span class="hljs-string">&#x27;2020-01-01 11:11:11&#x27;</span>,<br>    <span class="hljs-string">&#x27;birthday&#x27;</span>: <span class="hljs-literal">None</span><br>&#125;<br><br>values = []<br>values.append(user_info[<span class="hljs-string">&#x27;id&#x27;</span>])<br>values.append(user_info[<span class="hljs-string">&#x27;username&#x27;</span>])<br>values.append(user_info[<span class="hljs-string">&#x27;password&#x27;</span>])<br><span class="hljs-comment"># values.append(user_info[&#x27;created_time&#x27;])</span><br>values.append(user_info.get(<span class="hljs-string">&#x27;created_time&#x27;</span>, <span class="hljs-string">&#x27;2020-02-02&#x27;</span>))<br><span class="hljs-comment"># values.append(user_info[&#x27;birthday&#x27;])</span><br>values.append(user_info.get(<span class="hljs-string">&#x27;birthday&#x27;</span>, <span class="hljs-string">&#x27;2020-03-03&#x27;</span>))<br><br><span class="hljs-built_in">print</span>(values)<br><span class="hljs-comment"># values.append(user_info[&#x27;birthday&#x27;])</span><br><br><span class="hljs-comment"># values.append(user_info.get(&#x27;birthday&#x27;, &#x27;1986-01-01&#x27;))</span><br><span class="hljs-comment"># print(values)</span><br><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字典 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 字典的values函数</title>
      <link href="/2021/c4a2fc9c82dd/"/>
      <url>/2021/c4a2fc9c82dd/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="字典的values函数"><a href="#字典的values函数" class="headerlink" title="字典的values函数"></a>字典的values函数</h3><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li>获取<strong>当前字典</strong>中所有<code>键值对</code>中的<code>值(value)</code></li></ul><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><ul><li><code>dict.values()</code>  -&gt; <strong>无需传参</strong>, 返回一个<code>value集合</code>的<code>伪列表</code><ul><li>依旧是伪列表,不具有列表的所有功能</li></ul></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding:utf-8</span><br><br>project = &#123;<span class="hljs-string">&#x27;id&#x27;</span>: <span class="hljs-number">1</span>, <span class="hljs-string">&#x27;name&#x27;</span>: <span class="hljs-string">&#x27;ipad&#x27;</span>, <span class="hljs-string">&#x27;price&#x27;</span>: <span class="hljs-number">2200</span>, <span class="hljs-string">&#x27;count&#x27;</span>: <span class="hljs-number">50</span>&#125;<br><br>keys = <span class="hljs-built_in">list</span>(project.keys())<br>values = <span class="hljs-built_in">list</span>(project.values())<br><span class="hljs-built_in">print</span>(keys)<br><span class="hljs-built_in">print</span>(values)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;&#123;&#125; | &#123;&#125;  | &#123;&#125; | &#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(keys[<span class="hljs-number">0</span>], keys[<span class="hljs-number">1</span>], keys[<span class="hljs-number">2</span>], keys[<span class="hljs-number">3</span>]))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;&#123;&#125;  | &#123;&#125;  | &#123;&#125;  | &#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(values[<span class="hljs-number">0</span>], values[<span class="hljs-number">1</span>], values[<span class="hljs-number">2</span>], values[<span class="hljs-number">3</span>]))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;2  | iphone | 3000 | 50&#x27;</span>)<br><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字典 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 字典的keys函数</title>
      <link href="/2021/3ae120011f42/"/>
      <url>/2021/3ae120011f42/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="字典的keys函数"><a href="#字典的keys函数" class="headerlink" title="字典的keys函数"></a>字典的keys函数</h3><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li>获取当前字典中所有的<code>键(key)</code></li></ul><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><ul><li><code>dict.keys()</code>  -&gt; <strong>无需传参</strong>,返回一个<strong>key</strong>集合的<code>伪列表</code><ul><li><code>伪列表</code>不具备列表的所有功能</li></ul></li></ul><h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><ul><li>使用<code>list()函数</code>可以将<code>伪列表</code>转换为<code>列表</code></li><li>转换之后的列表具有<code>无重复成员</code>的特点</li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding:utf-8</span><br><br>project = &#123;<span class="hljs-string">&#x27;id&#x27;</span>: <span class="hljs-number">1</span>, <span class="hljs-string">&#x27;project_name&#x27;</span>: <span class="hljs-string">&#x27;ipad&#x27;</span>, <span class="hljs-string">&#x27;price&#x27;</span>: <span class="hljs-number">2200</span>, <span class="hljs-string">&#x27;count&#x27;</span>: <span class="hljs-number">30</span>&#125;<br><br><span class="hljs-comment"># project_title = project.keys()</span><br>project_title = <span class="hljs-built_in">list</span>(project.keys())<br><span class="hljs-built_in">print</span>(project_title)<br><span class="hljs-comment"># print(project_title[0])</span><br><span class="hljs-comment"># project_title.append(&#x27;user&#x27;)</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">type</span>(project_title))<br><br><span class="hljs-built_in">print</span>(project_title[<span class="hljs-number">0</span>])<br><span class="hljs-built_in">print</span>(project_title[<span class="hljs-number">3</span>])<br><span class="hljs-built_in">print</span>(project_title[<span class="hljs-number">2</span>: <span class="hljs-number">6</span>])<br>project_title.append(<span class="hljs-string">&#x27;user&#x27;</span>)<br><span class="hljs-built_in">print</span>(project_title)<br><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字典 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 总结 : 字典中添加数据的方法</title>
      <link href="/2021/4e361d34199b/"/>
      <url>/2021/4e361d34199b/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="总结-字典中添加数据的方法"><a href="#总结-字典中添加数据的方法" class="headerlink" title="总结 : 字典中添加数据的方法"></a>总结 : 字典中添加数据的方法</h3><blockquote><p>在字典中添加数据的方法有很多种，总结为以下几种</p></blockquote><h4 id="第一种：通过中括号的形式添加"><a href="#第一种：通过中括号的形式添加" class="headerlink" title="第一种：通过中括号的形式添加"></a>第一种：通过中括号的形式添加</h4><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-10-3/1.jpg" alt="1"></p><h4 id="第二种：字典的内置函数update"><a href="#第二种：字典的内置函数update" class="headerlink" title="第二种：字典的内置函数update"></a>第二种：字典的内置函数update</h4><ul><li><p>无论是添加还是修改都属于<code>更新字典</code></p></li><li><p>在<code>update括号</code>中传入一个新的字典<code>key</code>和<code>value</code>就可以了。字典会自己去检测<code>key</code>是否存在，存在就会覆盖。</p></li></ul><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-10-3/2.jpg" alt="2"></p><h4 id="第三种：字典的setdefault-函数"><a href="#第三种：字典的setdefault-函数" class="headerlink" title="第三种：字典的setdefault()函数"></a>第三种：字典的setdefault()函数</h4><ul><li>Python 字典 <code>setdefault() 函数</code>和 <code>get()方法</code> 类似, 如果键不存在于字典中，将会添加键并将值设为默认值，如果字典中包含有给定键，则返回该键对应的值，否则返回为该键设置的值。</li></ul><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-10-3/3.jpg" alt="3"></p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字典 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 字典添加修改数据的方法</title>
      <link href="/2021/93a62aa43730/"/>
      <url>/2021/93a62aa43730/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="字典添加修改数据的方法"><a href="#字典添加修改数据的方法" class="headerlink" title="字典添加修改数据的方法"></a>字典添加修改数据的方法</h3><h4 id="处理法"><a href="#处理法" class="headerlink" title="[]处理法"></a><code>[]</code>处理法</h4><blockquote><p>字符串,列表, <code>list[0] = 10</code></p></blockquote><ul><li>字典<strong>无</strong>索引</li><li><code>dict[ &#39;name&#39; ] =  &#39;dewei&#39;</code></li><li>添加或修改 ,  根据key是否存在所决定</li></ul><h4 id="字典的内置函数update"><a href="#字典的内置函数update" class="headerlink" title="字典的内置函数update"></a>字典的内置函数<code>update</code></h4><h5 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h5><ul><li>添加新的字典,如<strong>新字典</strong>中有和原字典相同的<code>key</code> , 则该<code>key</code>的<code>value</code>会被<strong>新字典</strong>的<code>value</code>覆盖</li></ul><h5 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h5><ul><li><code>dict.update(new_dict)</code> – 该函数无返回值</li></ul><h5 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h5><ul><li><code>new_dict</code> : 新的字典</li></ul><h4 id="字典的内置函数setdefault"><a href="#字典的内置函数setdefault" class="headerlink" title="字典的内置函数setdefault"></a>字典的内置函数<code>setdefault</code></h4><h5 id="功能-1"><a href="#功能-1" class="headerlink" title="功能"></a>功能</h5><ul><li>获取某个<code>key</code>的<code>value</code> , 如<code>key</code><strong>不存在</strong>于字典中 , 将会<code>添加key</code>并将<strong>value</strong>设为<strong>默认值</strong></li></ul><h5 id="用法-1"><a href="#用法-1" class="headerlink" title="用法"></a>用法</h5><ul><li>dict.setdefault(key, value)</li></ul><h5 id="参数-1"><a href="#参数-1" class="headerlink" title="参数"></a>参数</h5><ul><li><code>key</code> : 需要获取的<strong>key</strong></li><li><code>value</code> : 如果<strong>key</strong>不存在 , 对应这个<strong>key</strong>存入字典的默认值</li></ul><h4 id="注意事项再强调"><a href="#注意事项再强调" class="headerlink" title="注意事项再强调"></a>注意事项再强调</h4><ul><li>字典中每一个<code>key</code>一定是<strong>唯一</strong>的</li><li>字典中的数据量<strong>没有限制</strong></li><li>字典中的<code>value</code>可以是<strong>任何python的内置数据类型的对象和自定义的对象</strong></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding:utf-8</span><br><br>user = &#123;<span class="hljs-string">&#x27;username&#x27;</span>: <span class="hljs-string">&#x27;dewei&#x27;</span>, <span class="hljs-string">&#x27;age&#x27;</span>: <span class="hljs-number">33</span>&#125;<br>xiaomu = &#123;<span class="hljs-string">&#x27;username&#x27;</span>: <span class="hljs-string">&#x27;小慕&#x27;</span>, <span class="hljs-string">&#x27;age&#x27;</span>: <span class="hljs-number">10</span>, <span class="hljs-string">&#x27;top&#x27;</span>: <span class="hljs-number">175</span>, <span class="hljs-string">&#x27;sex&#x27;</span>: <span class="hljs-string">&#x27;男&#x27;</span>&#125;<br>user.update(xiaomu)<br><span class="hljs-built_in">print</span>(user)<br><br>value = user.setdefault(<span class="hljs-string">&#x27;username&#x27;</span>, <span class="hljs-string">&#x27;xiaoyun&#x27;</span>)<br>value = user.setdefault(<span class="hljs-string">&#x27;birthday&#x27;</span>, <span class="hljs-string">&#x27;2021-1-1&#x27;</span>)<br><span class="hljs-built_in">print</span>(user, value)<br><br><span class="hljs-comment"># user[&#x27;top&#x27;] = 174</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># print(user)</span><br><span class="hljs-comment"># user[&#x27;username&#x27;] = &#x27;小慕&#x27;</span><br><span class="hljs-comment"># print(user)</span><br><span class="hljs-comment"># user[&#x27;top&#x27;] = 175</span><br><span class="hljs-comment"># user[&#x27;age&#x27;] = 10</span><br><span class="hljs-comment"># print(user)</span><br><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字典 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 索引与切片之字符串</title>
      <link href="/2021/fe406508a7f3/"/>
      <url>/2021/fe406508a7f3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="索引与切片之字符串"><a href="#索引与切片之字符串" class="headerlink" title="索引与切片之字符串"></a>索引与切片之字符串</h2><h4 id="字符串的索引-获取"><a href="#字符串的索引-获取" class="headerlink" title="字符串的索引 , 获取"></a>字符串的索引 , 获取</h4><ul><li>索引规则与列表相同</li><li>切片与索引的获取与列表相同</li><li><strong>无法</strong>通过索引修改与<strong>删除</strong></li><li>字符串<strong>不可修改</strong></li></ul><h4 id="字符串的find与index函数"><a href="#字符串的find与index函数" class="headerlink" title="字符串的find与index函数"></a>字符串的<code>find</code>与<code>index</code>函数</h4><h5 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h5><ul><li><strong>获取</strong>元素的<strong>索引位置</strong></li></ul><h5 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h5><ul><li><code>string.index(item)</code>  -&gt; <code>item</code>:查询个数的元素,返回索引位置</li><li><code>string.find(item)</code>     -&gt; <code>item</code>:查询个数的元素,返回索引位置</li><li>返回的是第一个字母的位置</li></ul><h5 id="区别"><a href="#区别" class="headerlink" title="区别"></a>区别</h5><ul><li><code>find</code>如果获取不到,返回<code>-1</code></li><li><code>index</code>如果获取不到,直接<code>报错</code></li></ul><h5 id="好题"><a href="#好题" class="headerlink" title="好题"></a>好题</h5><ul><li><code>list1 = [1, 2, 3, 4, 2]</code></li><li><code>print(list1.index(2))</code></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding:utf-8</span><br><br>name = <span class="hljs-string">&#x27;dewei&#x27;</span><br><br>temp = []<br>temp.extend(name)<br><span class="hljs-comment"># temp.append(name[0])</span><br><span class="hljs-comment"># temp.append(name[1])</span><br><span class="hljs-comment"># temp.append(name[2])</span><br><span class="hljs-comment"># temp.append(name[3])</span><br><span class="hljs-comment"># temp.append(name[4])</span><br><span class="hljs-built_in">print</span>(temp)<br>temp.reverse()<br><span class="hljs-built_in">print</span>(temp)<br><span class="hljs-comment"># new_name = &#x27;%s%s%s%s%s&#x27; % (temp[0], temp[1], temp[2], temp[3], temp[4])</span><br>new_name = name[::-<span class="hljs-number">1</span>]<br><span class="hljs-built_in">print</span>(new_name)<br><br><span class="hljs-built_in">print</span>(new_name)<br>result = new_name.find(<span class="hljs-string">&#x27;iew&#x27;</span>)<br><span class="hljs-comment"># result = new_name.index(&#x27;iew&#x27;)</span><br><span class="hljs-built_in">print</span>(result)<br><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 阶段编程练习(四)</title>
      <link href="/2021/6e5c920393e2/"/>
      <url>/2021/6e5c920393e2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="编程练习-四"><a href="#编程练习-四" class="headerlink" title="编程练习(四)"></a>编程练习(四)</h3><h4 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h4><blockquote><p>上级派一个组织，去捣毁诈骗团伙。某组织打入敌人内部之后。被卧底发现。卧底想破译组织带来的编码里应合，一网打尽。根据效果图，任务描述及代码中的部分提示来完成</p><p>效果图:</p><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-10-1/3.jpg"></p></blockquote><h4 id="任务"><a href="#任务" class="headerlink" title="任务"></a>任务</h4><ol><li>定义两个}空列表将字符串与数字分别添加到这两个空列表里</li><li>得到两个列表之后将两个列表进行有规律的排序</li><li>排序之后就获取到暗号与密码，为了保密再将两个列表的顺序反转进行打乱顺序</li><li>将原来code列表中的数据复制一份</li><li>为了不让编码落入敌人只手将原code列表数据清空</li></ol><h4 id="原始代码"><a href="#原始代码" class="headerlink" title="原始代码"></a>原始代码</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">code = [&quot;e_ying&quot;, &quot;d_shi&quot;, 6, &quot;a_wo&quot;, 1, 2, 3, &#x27;f_xiong&#x27;, 4, &#x27;b_men&#x27;, 5, &quot;c_dou&quot;]<br># 定一个空列表crack 放入字符串<br><br># 定义一个空列表number 放入数字<br><br># 使用append将code里面的字符串根据索引添加到crack列表<br><br><br><br><br><br>print(&quot;字符串添加完成&quot;, crack)<br># 使用append将code里面的数字根据索引添加到number列表<br><br><br><br><br><br>print(&quot;数字添加完成&quot;, number)<br># 使用sort对crack和number列表进行排序<br><br><br>print(&quot;新字符串列表排序&quot;, crack, &quot;\n&quot;, &quot;新数字列表&quot;, number)<br># 使用reverse对两个列表进行反序<br><br><br><br>print(&quot;反转后的新字符串列表crack&quot;, crack)<br>print(&quot;反转后的新数字列表number&quot;, number)<br># 再将原列表复制了一份并且将原列表里面的内容清空<br><br>print(&quot;复制原编码&quot;, new_code)<br><br>print(&quot;清空原列表编码&quot;, code)<br><br></code></pre></td></tr></table></figure><h4 id="作业提交区"><a href="#作业提交区" class="headerlink" title="作业提交区"></a>作业提交区</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs python">code = [<span class="hljs-string">&quot;e_ying&quot;</span>, <span class="hljs-string">&quot;d_shi&quot;</span>, <span class="hljs-number">6</span>, <span class="hljs-string">&quot;a_wo&quot;</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-string">&#x27;f_xiong&#x27;</span>, <span class="hljs-number">4</span>, <span class="hljs-string">&#x27;b_men&#x27;</span>, <span class="hljs-number">5</span>, <span class="hljs-string">&quot;c_dou&quot;</span>]<br><span class="hljs-comment"># 定一个空列表crack 放入字符串</span><br>crack = []<br><span class="hljs-comment"># 定义一个空列表number 放入数字</span><br>number = []<br><span class="hljs-comment"># 使用append将code里面的字符串根据索引添加到crack列表</span><br>crack.append(code[<span class="hljs-number">0</span>])<br>crack.append(code[<span class="hljs-number">1</span>])<br>crack.append(code[<span class="hljs-number">3</span>])<br>crack.append(code[<span class="hljs-number">7</span>])<br>crack.append(code[<span class="hljs-number">9</span>])<br>crack.append(code[<span class="hljs-number">11</span>])<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;字符串添加完成:&quot;</span>, crack)<br><span class="hljs-comment"># 使用append将code里面的数字根据索引添加到number列表</span><br>number.append(code[<span class="hljs-number">2</span>])<br>number.append(code[<span class="hljs-number">4</span>])<br>number.append(code[<span class="hljs-number">5</span>])<br>number.append(code[<span class="hljs-number">6</span>])<br>number.append(code[<span class="hljs-number">8</span>])<br>number.append(code[<span class="hljs-number">10</span>])<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;数字添加完成&quot;</span>, number)<br><span class="hljs-comment"># 使用sort对crack和number列表进行排序</span><br>crack.sort()<br>number.sort()<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;新字符串列表排序&quot;</span>, crack, <span class="hljs-string">&quot;\n&quot;</span>, <span class="hljs-string">&quot;新数字列表&quot;</span>, number)<br><span class="hljs-comment"># 使用reverse对两个列表进行反序</span><br>crack.reverse()<br>number.reverse()<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;反转后的新字符串列表crack&quot;</span>, crack)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;反转后的新数字列表number&quot;</span>, number)<br><span class="hljs-comment"># 再将原列表复制了一份并且将原列表里面的内容清空</span><br>new_code = code.copy()<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;复制原编码&quot;</span>, new_code)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;清空原列表编码&quot;</span>, code)<br><span class="hljs-keyword">del</span> code<br><br></code></pre></td></tr></table></figure><h4 id="结果检验区"><a href="#结果检验区" class="headerlink" title="结果检验区"></a>结果检验区</h4><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs cmd"><span class="hljs-function">C:\<span class="hljs-title">Users</span>\<span class="hljs-title">admin</span>\<span class="hljs-title">PycharmProjects</span>\<span class="hljs-title">pythonlearn</span>\<span class="hljs-title">venv</span>\<span class="hljs-title">Scripts</span>\<span class="hljs-title">python.exe</span> <span class="hljs-title">C</span>:/<span class="hljs-title">Users</span>/<span class="hljs-title">admin</span>/<span class="hljs-title">PycharmProjects</span>/<span class="hljs-title">python_list</span>/<span class="hljs-title">venv</span>/<span class="hljs-title">test3.py</span></span><br><span class="hljs-function">字符串添加完成: [&#x27;<span class="hljs-title">e_ying</span>&#x27;, &#x27;<span class="hljs-title">d_shi</span>&#x27;, &#x27;<span class="hljs-title">a_wo</span>&#x27;, &#x27;<span class="hljs-title">f_xiong</span>&#x27;, &#x27;<span class="hljs-title">b_men</span>&#x27;, &#x27;<span class="hljs-title">c_dou</span>&#x27;]</span><br><span class="hljs-function">数字添加完成 [6, 1, 2, 3, 4, 5]</span><br><span class="hljs-function">新字符串列表排序 [&#x27;<span class="hljs-title">a_wo</span>&#x27;, &#x27;<span class="hljs-title">b_men</span>&#x27;, &#x27;<span class="hljs-title">c_dou</span>&#x27;, &#x27;<span class="hljs-title">d_shi</span>&#x27;, &#x27;<span class="hljs-title">e_ying</span>&#x27;, &#x27;<span class="hljs-title">f_xiong</span>&#x27;] </span><br><span class="hljs-function"> 新数字列表 [1, 2, 3, 4, 5, 6]</span><br><span class="hljs-function">反转后的新字符串列表<span class="hljs-title">crack</span> [&#x27;<span class="hljs-title">f_xiong</span>&#x27;, &#x27;<span class="hljs-title">e_ying</span>&#x27;, &#x27;<span class="hljs-title">d_shi</span>&#x27;, &#x27;<span class="hljs-title">c_dou</span>&#x27;, &#x27;<span class="hljs-title">b_men</span>&#x27;, &#x27;<span class="hljs-title">a_wo</span>&#x27;]</span><br><span class="hljs-function">反转后的新数字列表<span class="hljs-title">number</span> [6, 5, 4, 3, 2, 1]</span><br><span class="hljs-function">复制原编码 [&#x27;<span class="hljs-title">e_ying</span>&#x27;, &#x27;<span class="hljs-title">d_shi</span>&#x27;, 6, &#x27;<span class="hljs-title">a_wo</span>&#x27;, 1, 2, 3, &#x27;<span class="hljs-title">f_xiong</span>&#x27;, 4, &#x27;<span class="hljs-title">b_men</span>&#x27;, 5, &#x27;<span class="hljs-title">c_dou</span>&#x27;]</span><br><span class="hljs-function">清空原列表编码 [&#x27;<span class="hljs-title">e_ying</span>&#x27;, &#x27;<span class="hljs-title">d_shi</span>&#x27;, 6, &#x27;<span class="hljs-title">a_wo</span>&#x27;, 1, 2, 3, &#x27;<span class="hljs-title">f_xiong</span>&#x27;, 4, &#x27;<span class="hljs-title">b_men</span>&#x27;, 5, &#x27;<span class="hljs-title">c_dou</span>&#x27;]</span><br><span class="hljs-function"></span><br><span class="hljs-function">进程已结束，退出代码为 0</span><br><span class="hljs-function"></span><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程练习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 索引与切片之列表</title>
      <link href="/2021/dc50fd8d3243/"/>
      <url>/2021/dc50fd8d3243/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="索引与切片之列表"><a href="#索引与切片之列表" class="headerlink" title="索引与切片之列表"></a>索引与切片之列表</h3><h4 id="什么是索引"><a href="#什么是索引" class="headerlink" title="什么是索引"></a>什么是索引</h4><ul><li><p><code>字符串</code>,<code>列表</code>和<code>元组</code></p></li><li><p>从最左边记录的位置就是<code>索引</code></p></li><li><p><code>索引</code>用<strong>数字</strong>表示,起始从<code>0</code>开始</p></li><li><p>字符串,列表(元组)的<code>最大索引</code>是他们的<strong>长度-1</strong></p></li></ul><h4 id="什么是切片"><a href="#什么是切片" class="headerlink" title="什么是切片"></a>什么是切片</h4><ul><li>索引用来对<code>单个元素</code>进行访问,切片则对<code>一定范围</code>内的元素进行访问</li><li>切片通过<code>冒号</code>在<code>中括号</code>内把相隔的两个索引查找出来  [0:10]</li><li><strong>切片规则</strong>为: <code>左含右不含</code></li></ul><h4 id="列表的索引-获取与修改"><a href="#列表的索引-获取与修改" class="headerlink" title="列表的索引,获取与修改"></a>列表的索引,获取与修改</h4><ul><li><code>list[index] = new_item</code>为索引更改变量<ul><li><strong>数据的修改只能在存在的索引范围内</strong></li><li>列表无法通过添加新的索引的方式赋值</li></ul></li><li><code>list.index(item)</code>查找元素的位置</li></ul><h4 id="通过pop删除索引"><a href="#通过pop删除索引" class="headerlink" title="通过pop删除索引"></a>通过pop删除索引</h4><h5 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h5><ul><li>通过索引删除并获取列表的元素</li></ul><h5 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h5><ul><li><code>list.pop(index)</code></li></ul><h5 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h5><ul><li><code>index</code> : 删除列表的第几个索引</li><li><strong>函数会删除该索引的元素并返回</strong></li><li><strong>如果传入的index索引不存在则报错</strong></li></ul><h4 id="通过del删除索引"><a href="#通过del删除索引" class="headerlink" title="通过del删除索引"></a>通过del删除索引</h4><ul><li><p><code>del list[index]</code></p></li><li><p><strong>直接删除  无返回值</strong></p></li><li><p><strong>如果index(索引)不存在则报错</strong></p></li></ul><h4 id="索引在元组中的特殊性"><a href="#索引在元组中的特殊性" class="headerlink" title="索引在元组中的特殊性"></a>索引在元组中的特殊性</h4><ul><li>可以和列表一样获取索引与切片索引</li><li>元组函数index和列表用法完全一致</li><li>无法通过索引修改与删除元素</li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding:utf-8</span><br><br>numbers = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">7</span>, <span class="hljs-number">8</span>, <span class="hljs-number">9</span>, <span class="hljs-number">10</span>]<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">len</span>(numbers) - <span class="hljs-number">1</span>)<br><span class="hljs-built_in">print</span>(numbers[<span class="hljs-number">9</span>])<br><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">id</span>(numbers))<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;获取列表完整数据:&#x27;</span>, numbers[:])<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;另一种获取完整列表的方法&#x27;</span>, numbers[<span class="hljs-number">0</span>:])<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;第三种获取列表的方法&#x27;</span>, numbers[:-<span class="hljs-number">1</span>])<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;列表的反序:&#x27;</span>, numbers[::-<span class="hljs-number">1</span>])<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;列表的反向获取(不完美,少一个最后元素):&#x27;</span>, numbers[-<span class="hljs-number">3</span>:-<span class="hljs-number">1</span>])<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;列表的反序获取(自己想的,好像很成功):&#x27;</span>, numbers[::-<span class="hljs-number">1</span>][:<span class="hljs-number">3</span>])<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;步长获取切片:&#x27;</span>, numbers[<span class="hljs-number">0</span>: <span class="hljs-number">8</span>: <span class="hljs-number">2</span>])<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;切片生成空列表&#x27;</span>, numbers[<span class="hljs-number">0</span>:<span class="hljs-number">0</span>])<br>new_numbers = numbers[:<span class="hljs-number">4</span>]<br><span class="hljs-built_in">print</span>(new_numbers)<br><br>numbers[<span class="hljs-number">3</span>] = <span class="hljs-string">&#x27;code&#x27;</span><br><span class="hljs-built_in">print</span>(numbers)<br><span class="hljs-comment"># numbers[10] = 1</span><br><span class="hljs-comment"># print(numbers)</span><br>numbers[<span class="hljs-number">2</span>: <span class="hljs-number">5</span>] =  <span class="hljs-string">&#x27;a&#x27;</span>, <span class="hljs-string">&#x27;b&#x27;</span>, <span class="hljs-string">&#x27;c&#x27;</span><br>numbers[<span class="hljs-number">2</span>: <span class="hljs-number">5</span>] = [ <span class="hljs-string">&#x27;a&#x27;</span>, <span class="hljs-string">&#x27;b&#x27;</span>, <span class="hljs-string">&#x27;c&#x27;</span>]<br><span class="hljs-built_in">print</span>(numbers)<br><br><span class="hljs-built_in">print</span>(numbers.index(<span class="hljs-string">&#x27;c&#x27;</span>))<br><br>item = numbers.pop(<span class="hljs-number">4</span>)<br><span class="hljs-built_in">print</span>(item, numbers, <span class="hljs-built_in">len</span>(numbers))<br><br><span class="hljs-keyword">del</span> numbers[<span class="hljs-number">4</span>]<br><span class="hljs-built_in">print</span>(numbers)<br><br>tuple_test = (<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>)<br><span class="hljs-keyword">del</span> tuple_test<br><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 列表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 列表的extend函数</title>
      <link href="/2021/8ac840a5df91/"/>
      <url>/2021/8ac840a5df91/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="列表的extend函数"><a href="#列表的extend函数" class="headerlink" title="列表的extend函数"></a>列表的extend函数</h3><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li>将其他<strong>列表</strong>或<strong>元组</strong>中的<code>元素</code>导入<code>当前列表</code>中</li></ul><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><ul><li><code>list.extend(iterable)</code> </li></ul><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><ul><li><code>iterable</code>代表列表或元组 , 该函数无返回值</li></ul><h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><ul><li>传入的必须是<code>iterable</code></li><li>直接传入字符串的话会被拆分成很多个单个字符</li><li>不可传入整形或者布尔类型之类的(不是<code>iterable</code><strong>就不行</strong>)</li><li><strong>传入<code>字典</code>的话只会保留<code>key</code>的值</strong></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding:utf-8</span><br><br>manhua = []<br>history = []<br>code = []<br><br>new_manhua = (<span class="hljs-string">&#x27;a&#x27;</span>, <span class="hljs-string">&#x27;b&#x27;</span>, <span class="hljs-string">&#x27;c&#x27;</span>)<br>new_history = (<span class="hljs-string">&#x27;中国历史&#x27;</span>, <span class="hljs-string">&#x27;日本历史&#x27;</span>, <span class="hljs-string">&#x27;韩国历史&#x27;</span>)<br>new_code = (<span class="hljs-string">&#x27;python&#x27;</span>, <span class="hljs-string">&#x27;django&#x27;</span>, <span class="hljs-string">&#x27;flask&#x27;</span>)<br><br>manhua.extend(new_manhua)<br>history.extend(new_history)<br>code.extend(new_code)<br><br><span class="hljs-built_in">print</span>(manhua, history, code)<br><br>history.extend(manhua)<br><span class="hljs-keyword">del</span> manhua<br><span class="hljs-built_in">print</span>(history)<br><br>test = []<br><span class="hljs-comment"># test.extend(&#x27;abcd&#x27;)</span><br>test.extend(&#123;<span class="hljs-string">&#x27;name&#x27;</span>: <span class="hljs-string">&#x27;dewei&#x27;</span>, <span class="hljs-string">&#x27;age&#x27;</span>: <span class="hljs-number">33</span>&#125;)<br><span class="hljs-comment"># test.extend(True)</span><br><span class="hljs-built_in">print</span>(test)<br><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 列表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 列表的copy函数</title>
      <link href="/2021/25bb72e78788/"/>
      <url>/2021/25bb72e78788/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="列表的copy函数"><a href="#列表的copy函数" class="headerlink" title="列表的copy函数"></a>列表的copy函数</h3><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li>将<code>当前列表</code>复制一份<strong>相同的列表</strong>,新列表与旧列表<strong>内容相同</strong>,但<strong>内存空间不同</strong></li></ul><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><ul><li><code>list.copy()</code> -&gt; 该函数<strong>无参数</strong> , 返回一个一模一样的列表</li></ul><h4 id="copy与二次赋值的区别"><a href="#copy与二次赋值的区别" class="headerlink" title="copy与二次赋值的区别"></a><code>copy</code>与<code>二次赋值</code>的区别</h4><ul><li><p>二次赋值的变量与原始变量享有<code>相同内存空间</code></p></li><li><p><code>copy函数</code>创建的新列表与原始列表<strong>不是一个内存空间</strong>,<code>不同享数据变更</code></p></li><li><p><code>copy</code> 属于 <code>浅拷贝</code></p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">a = [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>]<br>b = a<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">a = [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>]<br>b = a.copy()<br>b.append(<span class="hljs-number">4</span>)<br>b  -&gt;  [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>]<br>a  -&gt;  [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>]<br></code></pre></td></tr></table></figure><h4 id="浅拷贝与深拷贝"><a href="#浅拷贝与深拷贝" class="headerlink" title="浅拷贝与深拷贝"></a>浅拷贝与深拷贝</h4><ul><li>深拷贝内存空间不同，不共享数据；</li><li>浅拷贝是对最外层的数据创建一个新的间来存储，而对内层的内存地址进行引用;</li></ul><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-10-1/1.jpg" alt="1"></p><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-10-1/2.jpg" alt="2"></p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding:utf-8</span><br><br>old_list = [<span class="hljs-string">&#x27;python&#x27;</span>, <span class="hljs-string">&#x27;django&#x27;</span>, <span class="hljs-string">&#x27;flask&#x27;</span>]<br><br>new_list = old_list<br>new_list.append(<span class="hljs-string">&#x27;tornado&#x27;</span>)<br><span class="hljs-built_in">print</span>(new_list)<br><span class="hljs-built_in">print</span>(old_list)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">id</span>(new_list), <span class="hljs-built_in">id</span>(old_list))<br><br>old_list.remove(<span class="hljs-string">&#x27;tornado&#x27;</span>)<br><span class="hljs-built_in">print</span>(new_list, old_list)<br><br><span class="hljs-comment"># old_list.clear()</span><br><span class="hljs-comment"># print(new_list, old_list)</span><br><br><span class="hljs-keyword">del</span> new_list<br><span class="hljs-built_in">print</span>(old_list)<br><br>old_list_copy = [<span class="hljs-string">&#x27;python&#x27;</span>, <span class="hljs-string">&#x27;django&#x27;</span>, <span class="hljs-string">&#x27;flask&#x27;</span>]<br>new_list_copy = old_list_copy.copy()<br><br><span class="hljs-built_in">print</span>(old_list_copy, new_list_copy)<br>new_list_copy.append(<span class="hljs-string">&#x27;tornado_copy&#x27;</span>)<br><span class="hljs-built_in">print</span>(old_list_copy, new_list_copy)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">id</span>(old_list_copy), <span class="hljs-built_in">id</span>(new_list_copy))<br><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 列表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 列表的clear函数</title>
      <link href="/2021/6b19b9a6e00b/"/>
      <url>/2021/6b19b9a6e00b/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="列表的clear函数"><a href="#列表的clear函数" class="headerlink" title="列表的clear函数"></a>列表的clear函数</h3><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li>将当前列表中的数据<code>清空</code></li></ul><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><ul><li><code>list.clear()</code> -&gt; 该函数<strong>无参数</strong> , <strong>无返回值</strong></li></ul><h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><ul><li><code>比空列表节省性能</code></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding:utf-8</span><br><br>mix = [<span class="hljs-string">&#x27;python&#x27;</span>, <span class="hljs-number">1</span>, (<span class="hljs-number">1</span>,), &#123;<span class="hljs-string">&#x27;name&#x27;</span>: <span class="hljs-string">&#x27;dewei&#x27;</span>&#125;]<br><span class="hljs-built_in">print</span>(mix, <span class="hljs-built_in">len</span>(mix))<br>mix.clear()<br><span class="hljs-built_in">print</span>(mix, <span class="hljs-built_in">len</span>(mix))<br><br>mixs = []<br><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 列表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 列表中的sort函数</title>
      <link href="/2021/7a3616182a6d/"/>
      <url>/2021/7a3616182a6d/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="列表中的sort函数"><a href="#列表中的sort函数" class="headerlink" title="列表中的sort函数"></a>列表中的sort函数</h3><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li>对当前列表按照<code>一定规律</code><strong>排序</strong></li></ul><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><ul><li><code>list.sort(key=None, reverse=False)</code></li></ul><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><ul><li><code>key</code> - 参数比较</li><li><code>reverse</code> –排序规则<ul><li><code>reverse = True</code> 降序 </li><li><code>reverse = False</code> 升序 ( 默认 )</li><li><em>key涉及函数学习,我们在日后讲解当前默认不传即可</em></li></ul></li></ul><h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><ul><li>列表中的元素类型<strong>必须相同</strong> , 否则无法排序<code>(报错)</code></li><li>字典也可以排序, key或者value排序</li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding:utf-8</span><br><br>shu = <span class="hljs-string">&#x27;01老鼠&#x27;</span><br>niu = <span class="hljs-string">&#x27;02牛&#x27;</span><br>hu = <span class="hljs-string">&#x27;03虎&#x27;</span><br>tu = <span class="hljs-string">&#x27;04兔&#x27;</span><br>long = <span class="hljs-string">&#x27;05龙&#x27;</span><br>she = <span class="hljs-string">&#x27;06蛇&#x27;</span><br>ma = <span class="hljs-string">&#x27;07马&#x27;</span><br>yang = <span class="hljs-string">&#x27;08羊&#x27;</span><br>hou = <span class="hljs-string">&#x27;09猴&#x27;</span><br>ji = <span class="hljs-string">&#x27;10鸡&#x27;</span><br>gou = <span class="hljs-string">&#x27;11狗&#x27;</span><br>zhu = <span class="hljs-string">&#x27;12猪&#x27;</span><br><br>shengxiao =[]<br>shengxiao.append(gou)<br>shengxiao.append(ji)<br>shengxiao.append(zhu)<br>shengxiao.append(hou)<br>shengxiao.append(she)<br>shengxiao.append(tu)<br>shengxiao.append(hu)<br>shengxiao.append(niu)<br>shengxiao.append(shu)<br>shengxiao.append(long)<br>shengxiao.append(ma)<br>shengxiao.append(yang)<br><br><span class="hljs-built_in">print</span>(shengxiao)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">len</span>(shengxiao))<br>shengxiao.sort()<br><span class="hljs-built_in">print</span>(shengxiao)<br>shengxiao.sort(reverse=<span class="hljs-literal">True</span>)<br><span class="hljs-built_in">print</span>(shengxiao)<br>shengxiao.sort(reverse=<span class="hljs-literal">True</span>)<br><span class="hljs-built_in">print</span>(shengxiao)<br><br><span class="hljs-comment"># 以下会报错的</span><br><span class="hljs-comment"># mix = [&#x27;python&#x27;, 1.2, &#123;&#x27;name&#x27;: &#x27;dewei&#x27;&#125;]</span><br><span class="hljs-comment"># mix.sort()</span><br><span class="hljs-comment"># print(mix)</span><br><br><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 列表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 列表的reverse函数</title>
      <link href="/2021/67051d4c5a5e/"/>
      <url>/2021/67051d4c5a5e/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="列表的reverse函数"><a href="#列表的reverse函数" class="headerlink" title="列表的reverse函数"></a>列表的reverse函数</h3><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li>对当前的列表顺序进行反转</li></ul><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><ul><li><code>list.reverse()</code></li></ul><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><ul><li><strong>无参数传递</strong></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding:utf-8</span><br><br>students = [<br>    &#123;<span class="hljs-string">&#x27;name&#x27;</span>: <span class="hljs-string">&#x27;dewei&#x27;</span>, <span class="hljs-string">&#x27;age&#x27;</span>: <span class="hljs-number">33</span>, <span class="hljs-string">&#x27;top&#x27;</span>: <span class="hljs-number">174</span>&#125;,<br>    &#123;<span class="hljs-string">&#x27;name&#x27;</span>: <span class="hljs-string">&#x27;小慕&#x27;</span>, <span class="hljs-string">&#x27;age&#x27;</span>: <span class="hljs-number">10</span>, <span class="hljs-string">&#x27;top&#x27;</span>: <span class="hljs-number">175</span>&#125;,<br>    &#123;<span class="hljs-string">&#x27;name&#x27;</span>: <span class="hljs-string">&#x27;小高&#x27;</span>, <span class="hljs-string">&#x27;age&#x27;</span>: <span class="hljs-number">18</span>, <span class="hljs-string">&#x27;top&#x27;</span>: <span class="hljs-number">188</span>&#125;,<br>    &#123;<span class="hljs-string">&#x27;name&#x27;</span>: <span class="hljs-string">&#x27;Xiaoyun&#x27;</span>, <span class="hljs-string">&#x27;age&#x27;</span>: <span class="hljs-number">18</span>, <span class="hljs-string">&#x27;top&#x27;</span>: <span class="hljs-number">165</span>&#125;<br>]<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;当前同学的顺序是&#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(students))<br>students.reverse()<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;座位更换之后的顺序是&#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(students))<br><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 列表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 阶段编程练习(三)</title>
      <link href="/2021/bb1d8975abf3/"/>
      <url>/2021/bb1d8975abf3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="编程练习-三"><a href="#编程练习-三" class="headerlink" title="编程练习(三)"></a>编程练习(三)</h3><h4 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h4><blockquote><p>学校组织学员买资料。班长把买资料的同学登记在一个表里。全班总共16人。根据任务描述、效果图及代码中的注释完成该习题<br>效果图：</p><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-9-29/3.png" alt="3"></p></blockquote><h4 id="任务"><a href="#任务" class="headerlink" title="任务"></a>任务</h4><ol><li>第一次核对人数不对x。</li><li>小糊涂表示自己有可能多交了一次导致记录了多次名字。</li><li>班长进行对表里的’小糊涂’进行核实。发现确实登记重复，并把钱退给了小糊涂，在列表里删除一个小糊涂。</li><li>这时’小雨’表示自己也不确定是否交钱。班长再次进行核实，发现’小雨’没有交钱。</li><li>把小雨按照学号8 记录在列表（注意：学号即下标从0开始）。</li><li>新插班生’小刘’表示自己没有学号也没有交钱，班长把’小刘’放到了最后一位。</li><li>进行最后核实最后人数正确 。</li></ol><h4 id="初始代码"><a href="#初始代码" class="headerlink" title="初始代码"></a>初始代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python">student = [<span class="hljs-string">&quot;小花&quot;</span>, <span class="hljs-string">&quot;小白&quot;</span>, <span class="hljs-string">&quot;小可&quot;</span>, <span class="hljs-string">&quot;小糊涂&quot;</span>, <span class="hljs-string">&quot;小新&quot;</span>,<span class="hljs-string">&quot;小蓝&quot;</span>, <span class="hljs-string">&quot;小伟&quot;</span>, <span class="hljs-string">&quot;小玲&quot;</span>, <span class="hljs-string">&quot;小撒&quot;</span>, <span class="hljs-string">&quot;小丽&quot;</span>, <span class="hljs-string">&quot;小航&quot;</span>,]<br><span class="hljs-comment"># 核对人数：使用len()函数得到列表中的长度，并输出结果</span><br><br><span class="hljs-comment"># 发现人数不对</span><br><br><span class="hljs-comment"># 核对小糊涂交了几次钱：使用count()统计&quot;小糊涂&quot;的次数</span><br><br><span class="hljs-comment"># 把小糊涂从列表中移除一个</span><br><br><span class="hljs-comment"># 再次进行核对</span><br><br><span class="hljs-comment"># 确认小雨有没有在list中：使用in判断并输出结果</span><br><br><br><span class="hljs-comment"># 将小雨放到学号为8的位置，并输出插入后的列表值</span><br><br><span class="hljs-comment"># 把插班生小刘放到最后，并输出列表中的元素</span><br><br><span class="hljs-comment"># 班长最后核对一下人数</span><br><br></code></pre></td></tr></table></figure><h4 id="代码提交区"><a href="#代码提交区" class="headerlink" title="代码提交区"></a>代码提交区</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding:utf-8</span><br><br>student = [<span class="hljs-string">&quot;小糊涂&quot;</span>, <span class="hljs-string">&quot;小花&quot;</span>, <span class="hljs-string">&quot;小白&quot;</span>, <span class="hljs-string">&quot;小可&quot;</span>, <span class="hljs-string">&quot;小糊涂&quot;</span>, <span class="hljs-string">&quot;小新&quot;</span>, <span class="hljs-string">&quot;小黑&quot;</span>, <span class="hljs-string">&quot;小糊涂&quot;</span>, <span class="hljs-string">&quot;小蓝&quot;</span>, <span class="hljs-string">&quot;小伟&quot;</span>, <span class="hljs-string">&quot;小玲&quot;</span>, <span class="hljs-string">&quot;小丽&quot;</span>, <span class="hljs-string">&quot;小航&quot;</span>, <span class="hljs-string">&quot;小平&quot;</span>, <span class="hljs-string">&quot;小圆&quot;</span>]<br><span class="hljs-comment"># 核对人数：使用len()函数得到列表中的长度，并输出结果</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;第一次核对人数:&#x27;</span>, <span class="hljs-built_in">len</span>(student))<br><span class="hljs-comment"># 发现人数不对</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;交钱的数量和班级人数是否相同:&#x27;</span>, <span class="hljs-number">16</span> == <span class="hljs-built_in">len</span>(student))<br><span class="hljs-comment"># 核对小糊涂交了几次钱：使用count()统计&quot;小糊涂&quot;的次数</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;确认小糊涂交了几次钱&#x27;</span>, student.count(<span class="hljs-string">&#x27;小糊涂&#x27;</span>))<br><span class="hljs-comment"># 把小糊涂从列表中移除一个</span><br>student.remove(<span class="hljs-string">&#x27;小糊涂&#x27;</span>)<br><span class="hljs-comment"># 再次进行核对</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;把钱退给小糊涂之后现在有%s人交钱&#x27;</span> % <span class="hljs-built_in">len</span>(student))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;交钱的数量和班级人数是否相同:&#x27;</span>, <span class="hljs-number">16</span> == <span class="hljs-built_in">len</span>(student))<br><span class="hljs-comment"># 确认小雨有没有在list中：使用in判断并输出结果</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;小雨交钱了吗?&#x27;</span>, <span class="hljs-string">&#x27;小雨&#x27;</span> <span class="hljs-keyword">in</span> student)<br><span class="hljs-comment"># 将小雨放到学号为8的位置，并输出插入后的列表值</span><br>student.insert(<span class="hljs-number">8</span>, <span class="hljs-string">&#x27;小雨&#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;根据学号8把小雨放到列表:&#x27;</span>, student)<br><span class="hljs-comment"># 把插班生小刘放到最后，并输出列表中的元素</span><br>student.append(<span class="hljs-string">&#x27;小刘&#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;把插班生放到最后:&#x27;</span>, student)<br><span class="hljs-comment"># 班长最后核对一下人数</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;交钱的数量和班级人数是否相同:&#x27;</span>, <span class="hljs-number">16</span> == <span class="hljs-built_in">len</span>(student))<br><br></code></pre></td></tr></table></figure><h4 id="结果检验区"><a href="#结果检验区" class="headerlink" title="结果检验区"></a>结果检验区</h4><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs cmd"><span class="hljs-function">C:\<span class="hljs-title">Users</span>\<span class="hljs-title">admin</span>\<span class="hljs-title">PycharmProjects</span>\<span class="hljs-title">pythonlearn</span>\<span class="hljs-title">venv</span>\<span class="hljs-title">Scripts</span>\<span class="hljs-title">python.exe</span> <span class="hljs-title">C</span>:/<span class="hljs-title">Users</span>/<span class="hljs-title">admin</span>/<span class="hljs-title">PycharmProjects</span>/<span class="hljs-title">python_list</span>/<span class="hljs-title">code3.py</span></span><br><span class="hljs-function">第一次核对人数: 15</span><br><span class="hljs-function">交钱的数量和班级人数是否相同: <span class="hljs-title">False</span></span><br><span class="hljs-function">确认小糊涂交了几次钱 3</span><br><span class="hljs-function">把钱退给小糊涂之后现在有14人交钱</span><br><span class="hljs-function">交钱的数量和班级人数是否相同: <span class="hljs-title">False</span></span><br><span class="hljs-function">小雨交钱了吗? <span class="hljs-title">False</span></span><br><span class="hljs-function">根据学号8把小雨放到列表: [&#x27;小花&#x27;, &#x27;小白&#x27;, &#x27;小可&#x27;, &#x27;小糊涂&#x27;, &#x27;小新&#x27;, &#x27;小黑&#x27;, &#x27;小糊涂&#x27;, &#x27;小蓝&#x27;, &#x27;小雨&#x27;, &#x27;小伟&#x27;, &#x27;小玲&#x27;, &#x27;小丽&#x27;, &#x27;小航&#x27;, &#x27;小平&#x27;, &#x27;小圆&#x27;]</span><br><span class="hljs-function">把插班生放到最后: [&#x27;小花&#x27;, &#x27;小白&#x27;, &#x27;小可&#x27;, &#x27;小糊涂&#x27;, &#x27;小新&#x27;, &#x27;小黑&#x27;, &#x27;小糊涂&#x27;, &#x27;小蓝&#x27;, &#x27;小雨&#x27;, &#x27;小伟&#x27;, &#x27;小玲&#x27;, &#x27;小丽&#x27;, &#x27;小航&#x27;, &#x27;小平&#x27;, &#x27;小圆&#x27;, &#x27;小刘&#x27;]</span><br><span class="hljs-function">交钱的数量和班级人数是否相同: <span class="hljs-title">True</span></span><br><span class="hljs-function"></span><br><span class="hljs-function">进程已结束，退出代码为 0</span><br><span class="hljs-function"></span><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程练习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 列表的remove函数</title>
      <link href="/2021/31ea9d7e4353/"/>
      <url>/2021/31ea9d7e4353/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="列表的remove函数"><a href="#列表的remove函数" class="headerlink" title="列表的remove函数"></a>列表的remove函数</h3><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li>删除列表中的某个元素</li></ul><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><ul><li><code>list.remove(item)</code></li></ul><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><ul><li><code>item</code> : 准备删除的函数</li></ul><h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><ul><li>如果删除的成员(元素)不存在 , 会<code>直接报错</code></li><li>如果被删除的元素有多个 , <code>只会删除第一个</code>(从左往右数)</li><li><code>remove</code>函数**不会返回一个新的列表,**而是在<code>原先的列表</code>中对元素进行删除(列表是可以被修改的)</li></ul><h3 id="Python内置函数-del"><a href="#Python内置函数-del" class="headerlink" title="Python内置函数 del"></a>Python内置函数 <code>del</code></h3><ul><li><code>del把变量完全删除</code></li></ul><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding:utf-8</span><br><br>shops = [<span class="hljs-string">&#x27;可乐&#x27;</span>, <span class="hljs-string">&#x27;洗发水&#x27;</span>, <span class="hljs-string">&#x27;可乐&#x27;</span>, <span class="hljs-string">&#x27;牛奶&#x27;</span>, <span class="hljs-string">&#x27;牛奶&#x27;</span>, <span class="hljs-string">&#x27;牙膏&#x27;</span>, <span class="hljs-string">&#x27;牙膏&#x27;</span>]<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;我们的超市有这些内容:%s&#x27;</span> % shops)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;我们的可乐有%s件产品&#x27;</span> % shops.count(<span class="hljs-string">&#x27;可乐&#x27;</span>))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;我们的牛奶有%s件产品&#x27;</span> % shops.count(<span class="hljs-string">&#x27;牛奶&#x27;</span>))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;我们的牙膏有%s件产品&#x27;</span> % shops.count(<span class="hljs-string">&#x27;牙膏&#x27;</span>))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;我们的洗发水有%s件产品&#x27;</span> % shops.count(<span class="hljs-string">&#x27;洗发水&#x27;</span>))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;我们要购买一件洗发水&#x27;</span>)<br>shops.remove(<span class="hljs-string">&#x27;洗发水&#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;现在我们的洗发水还剩下%s件, 当前已经没有洗发水了&#x27;</span> % shops.count(<span class="hljs-string">&#x27;洗发水&#x27;</span>))<br><span class="hljs-comment"># shops.remove(&#x27;洗发水&#x27;)</span><br>shops.remove(<span class="hljs-string">&#x27;可乐&#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;当前可乐还有%s件&#x27;</span> % shops.count(<span class="hljs-string">&#x27;可乐&#x27;</span>))<br>shops.remove(<span class="hljs-string">&#x27;可乐&#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;可乐还有%s件&#x27;</span> % shops.count(<span class="hljs-string">&#x27;可乐&#x27;</span>))<br><br><span class="hljs-built_in">print</span>(shops)<br><br><span class="hljs-keyword">del</span> shops<br><br><span class="hljs-comment"># print(shops)</span><br><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 列表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 列表(元组)的count函数</title>
      <link href="/2021/40b46745a962/"/>
      <url>/2021/40b46745a962/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="列表-元组-的count函数"><a href="#列表-元组-的count函数" class="headerlink" title="列表(元组)的count函数"></a>列表(元组)的count函数</h3><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li>返回当前列表中某个成员的个数</li></ul><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><ul><li><code>inttype = list.count(item)</code></li></ul><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><ul><li><code>item</code> :  你想查询个数的元素</li></ul><h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><ul><li><p>如果查询的成员(元素)不存在,则返回 <code>0</code></p></li><li><p>列表只会检查<code>完整元素</code>是否存在需要计算的内容</p></li><li><p><code>列表</code>和<code>元组</code>的<code>count</code>是<strong>一致</strong>的</p></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding:utf-8</span><br><br>animals = [<span class="hljs-string">&#x27;小猫&#x27;</span>, <span class="hljs-string">&#x27;小狗&#x27;</span>, <span class="hljs-string">&#x27;龙猫&#x27;</span>, <span class="hljs-string">&#x27;小猫&#x27;</span>, <span class="hljs-string">&#x27;鹦鹉&#x27;</span>, <span class="hljs-string">&#x27;小狗&#x27;</span>, <span class="hljs-string">&#x27;小兔子&#x27;</span>, <span class="hljs-string">&#x27;小猫&#x27;</span>]<br><br>cat = animals.count(<span class="hljs-string">&#x27;小猫&#x27;</span>)<br>dog = animals.count(<span class="hljs-string">&#x27;小狗&#x27;</span>)<br>l_cat = animals.count(<span class="hljs-string">&#x27;龙猫&#x27;</span>)<br>rabbit = animals.count(<span class="hljs-string">&#x27;小兔子&#x27;</span>)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;我家的院子里有很多小动物&#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;其中小猫有 %s 只&#x27;</span> % cat)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;小狗有 &#123;&#125; 只&#x27;</span>.<span class="hljs-built_in">format</span>(dog))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;龙猫有 <span class="hljs-subst">&#123;l_cat&#125;</span> 只&#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;小兔子有 %d 只&#x27;</span> % rabbit)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;我们没有小松鼠, 所以松鼠有 %s 只&#x27;</span> % animals.count(<span class="hljs-string">&#x27;松鼠&#x27;</span>))<br><br>animals_dict = [<br>    &#123;<span class="hljs-string">&#x27;name&#x27;</span>: <span class="hljs-string">&#x27;dog&#x27;</span>&#125;,<br>    &#123;<span class="hljs-string">&#x27;name&#x27;</span>: <span class="hljs-string">&#x27;dog&#x27;</span>&#125;,<br>    &#123;<span class="hljs-string">&#x27;name&#x27;</span>: <span class="hljs-string">&#x27;cat&#x27;</span>&#125;<br>]<br><br>dog_dict_count = animals_dict.count(&#123;<span class="hljs-string">&#x27;name&#x27;</span>: <span class="hljs-string">&#x27;dog&#x27;</span>&#125;)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;小狗在动物字典中有 %s 只&#x27;</span> % dog_dict_count)<br><br>animals_tuple = (<span class="hljs-string">&#x27;小猫&#x27;</span>, <span class="hljs-string">&#x27;小狗&#x27;</span>, <span class="hljs-string">&#x27;龙猫&#x27;</span>, <span class="hljs-string">&#x27;小猫&#x27;</span>,<br>           <span class="hljs-string">&#x27;鹦鹉&#x27;</span>, <span class="hljs-string">&#x27;小狗&#x27;</span>, <span class="hljs-string">&#x27;小兔子&#x27;</span>, <span class="hljs-string">&#x27;小猫&#x27;</span>)<br><br>cat = animals_tuple.count(<span class="hljs-string">&#x27;小猫&#x27;</span>)<br>dog = animals_tuple.count(<span class="hljs-string">&#x27;小狗&#x27;</span>)<br>l_cat = animals_tuple.count(<span class="hljs-string">&#x27;龙猫&#x27;</span>)<br>rabbit = animals_tuple.count(<span class="hljs-string">&#x27;小兔子&#x27;</span>)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;我家的院子里有很多小动物&#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;其中小猫有 %s 只\n小狗有 %s 只\n龙猫有 %s 只\n小兔子有 %s 只&#x27;</span><br>      % (cat, dog, l_cat, rabbit))<br><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 列表 </tag>
            
            <tag> 元组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 列表的添加-insert函数</title>
      <link href="/2021/dc367876ec86/"/>
      <url>/2021/dc367876ec86/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="列表的添加-insert函数"><a href="#列表的添加-insert函数" class="headerlink" title="列表的添加-insert函数"></a>列表的添加-insert函数</h3><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li>将一个元素添加到当前列表的指定位置中</li></ul><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><ul><li>list.insrt(index, new_item)</li></ul><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><ul><li><code>index</code> : 新的元素放在哪个位置(数字)<code>[整形]</code></li><li><code>new_item</code> : 添加的新元素(成员)</li></ul><h4 id="insert与append的区别"><a href="#insert与append的区别" class="headerlink" title="insert与append的区别"></a>insert与append的区别</h4><ul><li><code>append</code>只能添加到列表的结尾,而<code>insert</code>可以选择任何一个位置</li><li>如果<code>insert</code>传入的位置列表中<strong>不存在</strong>,则将新元素添加到列表<strong>结尾</strong></li><li><code>字符串</code> <code>元组</code> <code>列表</code> <code>元素</code>的位置是从0开始计算的</li><li><code>insert</code>之后    其他的元素向后顺沿</li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding:utf-8</span><br><br>students = [<br>    &#123;<span class="hljs-string">&#x27;name&#x27;</span>: <span class="hljs-string">&#x27;dewei&#x27;</span>, <span class="hljs-string">&#x27;age&#x27;</span>: <span class="hljs-number">33</span>, <span class="hljs-string">&#x27;sex&#x27;</span>: <span class="hljs-string">&#x27;男&#x27;</span>, <span class="hljs-string">&#x27;id&#x27;</span>: <span class="hljs-number">1</span>, <span class="hljs-string">&#x27;top&#x27;</span>: <span class="hljs-string">&#x27;174&#x27;</span>&#125;,<br>    &#123;<span class="hljs-string">&#x27;name&#x27;</span>: <span class="hljs-string">&#x27;小慕&#x27;</span>, <span class="hljs-string">&#x27;age&#x27;</span>: <span class="hljs-number">10</span>, <span class="hljs-string">&#x27;sex&#x27;</span>: <span class="hljs-string">&#x27;男&#x27;</span>, <span class="hljs-string">&#x27;id&#x27;</span>: <span class="hljs-number">2</span>, <span class="hljs-string">&#x27;top&#x27;</span>: <span class="hljs-string">&#x27;175&#x27;</span>&#125;<br>]<br><br>xiaoyun = &#123;<br>    <span class="hljs-string">&#x27;name&#x27;</span>: <span class="hljs-string">&#x27;xiaoyun&#x27;</span>,<br>    <span class="hljs-string">&#x27;age&#x27;</span>: <span class="hljs-number">18</span>,<br>    <span class="hljs-string">&#x27;sex&#x27;</span>: <span class="hljs-string">&#x27;女&#x27;</span>,<br>    <span class="hljs-string">&#x27;id&#x27;</span>: <span class="hljs-number">3</span>,<br>    <span class="hljs-string">&#x27;top&#x27;</span>: <span class="hljs-string">&#x27;160&#x27;</span><br>&#125;<br><br>students.insert(<span class="hljs-number">0</span>, xiaoyun)<br><span class="hljs-built_in">print</span>(students)<br><br>xiaogao = &#123;<br>    <span class="hljs-string">&#x27;name&#x27;</span>: <span class="hljs-string">&#x27;xiaogao&#x27;</span>,<br>    <span class="hljs-string">&#x27;age&#x27;</span>: <span class="hljs-number">18</span>,<br>    <span class="hljs-string">&#x27;id&#x27;</span>: <span class="hljs-number">4</span>,<br>    <span class="hljs-string">&#x27;top&#x27;</span>: <span class="hljs-string">&#x27;188&#x27;</span><br>&#125;<br><br>students.insert(<span class="hljs-number">3</span>, <span class="hljs-literal">None</span>)<br>students.insert(<span class="hljs-number">4</span>, <span class="hljs-literal">None</span>)<br>students.insert(<span class="hljs-number">5</span>, <span class="hljs-literal">None</span>)<br><br>students.insert(<span class="hljs-number">6</span>, xiaogao)<br><span class="hljs-built_in">print</span>(students)<br><br>xiaoming = &#123;<br>    <span class="hljs-string">&#x27;name&#x27;</span>: <span class="hljs-string">&#x27;xiaoming&#x27;</span>,<br>    <span class="hljs-string">&#x27;age&#x27;</span>: <span class="hljs-number">19</span>,<br>    <span class="hljs-string">&#x27;sex&#x27;</span>: <span class="hljs-string">&#x27;男&#x27;</span>,<br>    <span class="hljs-string">&#x27;id&#x27;</span>: <span class="hljs-number">5</span>,<br>    <span class="hljs-string">&#x27;top&#x27;</span>: <span class="hljs-string">&#x27;178&#x27;</span><br>&#125;<br><br>students.insert(<span class="hljs-number">3</span>, xiaoming)<br><span class="hljs-built_in">print</span>(students[<span class="hljs-number">1</span>])<br><span class="hljs-built_in">print</span>(students[<span class="hljs-number">2</span>])<br><span class="hljs-built_in">print</span>(students[<span class="hljs-number">3</span>])<br><span class="hljs-built_in">print</span>(students[<span class="hljs-number">4</span>])<br><span class="hljs-built_in">print</span>(students[<span class="hljs-number">5</span>])<br><span class="hljs-built_in">print</span>(students[<span class="hljs-number">6</span>])<br><span class="hljs-built_in">print</span>(students[<span class="hljs-number">7</span>])<br><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 列表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 列表的添加-append函数</title>
      <link href="/2021/58e5cf582340/"/>
      <url>/2021/58e5cf582340/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="列表的添加-append函数"><a href="#列表的添加-append函数" class="headerlink" title="列表的添加-append函数"></a>列表的添加-append函数</h3><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li>将<strong>一个</strong><code>元素</code>添加到当前<code>列表</code>中</li></ul><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><ul><li><code>list.append(new_item)</code></li></ul><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><ul><li><code>new_item</code>:添加进列表的新的元素(成员)</li></ul><h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><ul><li>被添加的元素只会被添加到末尾</li><li><code>append</code>函数是在<code>原有</code>列表的基础上添加,不需要额外添加新的变量</li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding:utf-8</span><br><br>books = []<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">id</span>(books))<br>books.append(<span class="hljs-string">&#x27;python入门课程&#x27;</span>)<br><span class="hljs-built_in">print</span>(books)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">id</span>(books))<br><br>number = <span class="hljs-number">1.1</span><br>tuple_test = (<span class="hljs-number">1</span>, )<br>dict_test = &#123;<span class="hljs-string">&#x27;name&#x27;</span>: <span class="hljs-string">&#x27;dewei&#x27;</span>&#125;<br><br>books.append(number)<br>books.append(tuple_test)<br>books.append(dict_test)<br>books.append(<span class="hljs-string">&#x27;diango&#x27;</span>)<br>books.append(<span class="hljs-number">1</span>)<br><br>books.append(<span class="hljs-string">&#x27;&#x27;</span>)<br>books.append(<span class="hljs-literal">True</span>)<br><br><span class="hljs-built_in">print</span>(books)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">id</span>(books))<br><br>book_1 = [<span class="hljs-string">&#x27;西游记&#x27;</span>, <span class="hljs-string">&#x27;红楼梦&#x27;</span>]<br>book_2 = [<span class="hljs-string">&#x27;三国演义&#x27;</span>, <span class="hljs-string">&#x27;水浒传&#x27;</span>]<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">id</span>(book_1))<br>book_1 = book_1 + book_2  <span class="hljs-comment"># id改变</span><br>book_1 += book_2  <span class="hljs-comment"># id不变</span><br><span class="hljs-built_in">print</span>(book_1)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">id</span>(book_1))<br><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 列表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 列表元组的操作符</title>
      <link href="/2021/66f57f325fd0/"/>
      <url>/2021/66f57f325fd0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="列表元组的操作符"><a href="#列表元组的操作符" class="headerlink" title="列表元组的操作符"></a>列表元组的操作符</h3><h4 id="列表-元组-之间的累加与乘法"><a href="#列表-元组-之间的累加与乘法" class="headerlink" title="列表(元组)之间的累加与乘法"></a>列表(元组)之间的累加与乘法</h4><ul><li>len 函数可以计算出除了数字类型意外,其他所有数据类型的长度</li></ul><h6 id="加法"><a href="#加法" class="headerlink" title="加法"></a>加法</h6><ul><li>new_names = names +names</li></ul><h6 id="乘法"><a href="#乘法" class="headerlink" title="乘法"></a>乘法</h6><ul><li>new_names = names * 2</li></ul><h4 id="in-和-not-in-在列表-元组-中的用法"><a href="#in-和-not-in-在列表-元组-中的用法" class="headerlink" title="in 和  not in 在列表(元组)中的用法"></a><code>in</code> 和  <code>not in</code> 在列表(元组)中的用法</h4><ul><li><p>in判断某个成员(元素)是否在该数据结构中</p></li><li><p>not in 就是判断某个成员(元素)是否不在该数据类型中</p></li></ul><h5 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h5><ul><li><p><code>bool(&#39;xiaomu&#39; in names)</code></p></li><li><p><code>bool(&#39;xiaowang&#39; not in names)</code></p></li></ul><h5 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h5><p><strong><code>+=</code>不可以<code>直接打印</code></strong></p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding:utf-8</span><br><br>names = (<span class="hljs-string">&#x27;dewei&#x27;</span>, <span class="hljs-string">&#x27;xiaomu&#x27;</span>, <span class="hljs-string">&#x27;xiaowang&#x27;</span>)<br><br>names_add = names + names<br>names_c = names * <span class="hljs-number">10</span><br><br><span class="hljs-built_in">print</span>(names_add)<br><span class="hljs-built_in">print</span>(names_c)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;names_c length is&#x27;</span>, <span class="hljs-built_in">len</span>(names_c))<br><br>names += (<span class="hljs-string">&#x27;abc&#x27;</span>, )<br><span class="hljs-built_in">print</span>(names)<br>names *= <span class="hljs-number">10</span><br><span class="hljs-built_in">print</span>(names)<br><br>names_list = [<span class="hljs-string">&#x27;dewei&#x27;</span>, <span class="hljs-string">&#x27;xiaomu&#x27;</span>]<br>names_list += [<span class="hljs-string">&#x27;xiaowang&#x27;</span>]<br><span class="hljs-built_in">print</span>(names_list)<br>names_list *= <span class="hljs-number">5</span><br><span class="hljs-built_in">print</span>(names_list)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;dewei&#x27;</span> <span class="hljs-keyword">in</span> names_list)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;dewei&#x27;</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> names_list)<br><br></code></pre></td></tr></table></figure><h4 id="小结-列表与元组的总结与应用"><a href="#小结-列表与元组的总结与应用" class="headerlink" title="小结:列表与元组的总结与应用"></a>小结:列表与元组的总结与应用</h4><ol><li><p>len函数可以计算出除了数字类型以外，其他所有数据类型的长度。</p><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-9-29/1.jpg" alt="1"></p></li><li><p>in判断某个元素是否在列表（元组中）</p></li><li><p>not in判断某个元素u是否不在列表（元组中）两者返回结果是bool值即True或False。</p><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-9-29/2.jpg" alt="2"></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 列表 </tag>
            
            <tag> 元组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 阶段编程练习(二)</title>
      <link href="/2021/662c99956871/"/>
      <url>/2021/662c99956871/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="编程练习-二"><a href="#编程练习-二" class="headerlink" title="编程练习(二)"></a>编程练习(二)</h3><h4 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h4><blockquote><p>定义一个变量 string= “When your mindis simple, your world is simple” 将变量对应效果图中的方法print输出，实现效果图：</p><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-9-27/3.jpg" alt="3"></p></blockquote><h4 id="任务"><a href="#任务" class="headerlink" title="任务"></a>任务</h4><ol><li><code>string= &quot;When your mind is simple, your world is simple&quot;</code></li><li>根据对应的字符串处理的方法进行输出</li></ol><h3 id="任务提交区"><a href="#任务提交区" class="headerlink" title="任务提交区"></a>任务提交区</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding:utf-8</span><br><br>string = <span class="hljs-string">&#x27;When your mind is simple, your world is simple&#x27;</span><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;定义长度:&#x27;</span>, string.zfill(<span class="hljs-number">50</span>))<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;获取元素i的个数:&#x27;</span>, string.count(<span class="hljs-string">&#x27;i&#x27;</span>))<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;判断开头的元素是不是e:&#x27;</span>, string.startswith(<span class="hljs-string">&#x27;e&#x27;</span>))<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;判断结尾的元素是不是e:&#x27;</span>, string.endswith(<span class="hljs-string">&#x27;e&#x27;</span>))<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;请找到r在哪个位置:&#x27;</span>, string.index(<span class="hljs-string">&#x27;r&#x27;</span>))<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;请找到元素a在哪个位置:&#x27;</span>, string.find(<span class="hljs-string">&#x27;a&#x27;</span>))<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;请把字符串中的元素W去掉:&#x27;</span>, string.strip(<span class="hljs-string">&#x27;W&#x27;</span>))<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;请把字符串中的your改为my:&#x27;</span>, string.replace(<span class="hljs-string">&#x27;your&#x27;</span>, <span class="hljs-string">&#x27;my&#x27;</span>))<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;请判断字符串是不是由空格组成:&#x27;</span>, string.isspace())<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;请判断字符串是不是标题&#x27;</span>, string.istitle())<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;请判断字符串中的字母是不是都是大写:&#x27;</span>, string.isupper())<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;请判断字符串中的字母是不是都是小写:&#x27;</span>, string.islower())<br><br></code></pre></td></tr></table></figure><h3 id="结果检验区"><a href="#结果检验区" class="headerlink" title="结果检验区"></a>结果检验区</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs Cmd"><span class="hljs-function">C:\<span class="hljs-title">Users</span>\<span class="hljs-title">admin</span>\<span class="hljs-title">PycharmProjects</span>\<span class="hljs-title">pythonlearn</span>\<span class="hljs-title">venv</span>\<span class="hljs-title">Scripts</span>\<span class="hljs-title">python.exe</span> <span class="hljs-title">C</span>:/<span class="hljs-title">Users</span>/<span class="hljs-title">admin</span>/<span class="hljs-title">PycharmProjects</span>/<span class="hljs-title">pythonlearn</span>/<span class="hljs-title">test2.py</span></span><br><span class="hljs-function">定义长度: 0000<span class="hljs-title">When</span> <span class="hljs-title">your</span> <span class="hljs-title">mind</span> <span class="hljs-title">is</span> <span class="hljs-title">simple</span>, <span class="hljs-title">your</span> <span class="hljs-title">world</span> <span class="hljs-title">is</span> <span class="hljs-title">simple</span></span><br><span class="hljs-function">获取元素<span class="hljs-title">i</span>的个数: 5</span><br><span class="hljs-function">判断开头的元素是不是<span class="hljs-title">e</span>: <span class="hljs-title">False</span></span><br><span class="hljs-function">判断结尾的元素是不是<span class="hljs-title">e</span>: <span class="hljs-title">True</span></span><br><span class="hljs-function">请找到<span class="hljs-title">r</span>在哪个位置: 8</span><br><span class="hljs-function">请找到元素<span class="hljs-title">a</span>在哪个位置: -1</span><br><span class="hljs-function">请把字符串中的元素<span class="hljs-title">W</span>去掉: <span class="hljs-title">hen</span> <span class="hljs-title">your</span> <span class="hljs-title">mind</span> <span class="hljs-title">is</span> <span class="hljs-title">simple</span>, <span class="hljs-title">your</span> <span class="hljs-title">world</span> <span class="hljs-title">is</span> <span class="hljs-title">simple</span></span><br><span class="hljs-function">请把字符串中的<span class="hljs-title">your</span>改为<span class="hljs-title">my</span>: <span class="hljs-title">When</span> <span class="hljs-title">my</span> <span class="hljs-title">mind</span> <span class="hljs-title">is</span> <span class="hljs-title">simple</span>, <span class="hljs-title">my</span> <span class="hljs-title">world</span> <span class="hljs-title">is</span> <span class="hljs-title">simple</span></span><br><span class="hljs-function">请判断字符串是不是由空格组成: <span class="hljs-title">False</span></span><br><span class="hljs-function">请判断字符串是不是标题 <span class="hljs-title">False</span></span><br><span class="hljs-function">请判断字符串中的字母是不是都是大写: <span class="hljs-title">False</span></span><br><span class="hljs-function">请判断字符串中的字母是不是都是小写: <span class="hljs-title">False</span></span><br><span class="hljs-function"></span><br><span class="hljs-function">进程已结束，退出代码为 0</span><br><span class="hljs-function"></span><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程练习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 阶段编程练习(一)</title>
      <link href="/2021/9979207360be/"/>
      <url>/2021/9979207360be/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="编程练习-一"><a href="#编程练习-一" class="headerlink" title="编程练习(一)"></a>编程练习(一)</h3><h4 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h4><blockquote><p>在脚本开始写上国际通用编码。定义六个变量分别表示‘周一’，‘周二’，‘周三’，‘周四’，‘周五’，‘饭店活动介绍’每个变量加上相应的注释。‘周一’到‘周五’中把菜名与价格作为格式化。在‘饭店活动介绍’中把饭店名称以及所有奖品的价格用{}格式化。在‘凭结账小票可进行抽奖’后加入换行符，每等奖介绍完后都要进行换行，所有‘：’后面加入空格符。再定义五个变量作为‘周一’到‘周五’格式化输出的结果（比如菜名‘麻辣小龙虾’13，9.8）。最后将这11个变量对应输出，实现效果图：</p><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-9-27/2.jpg"></p></blockquote><h4 id="任务"><a href="#任务" class="headerlink" title="任务"></a>任务</h4><ol><li>定义每天特价的菜品变量，并把菜品与价格用格式符占位。</li><li>定义一个活动介绍的变量‘<ul><li>饭店不仅每天有特价,为了回馈新老客户到店就送价值的精美礼品,凭结账小票可进行抽奖 <ul><li>一等奖: 价值 欧洲游 </li><li>二等奖: 价值 的豆浆机 </li><li>三等奖: 价值200元的生活大礼包”</li></ul></li></ul></li><li>在活动介绍中加入相应的<code>格式符</code>与<code>转义字符</code></li><li>定义与1相对的变量写出每天的菜名，菜的价格，赠送汤的价格</li><li>最后将3与1对应的周一到周五以及活动介绍并输出</li></ol><h3 id="提交作业区"><a href="#提交作业区" class="headerlink" title="提交作业区"></a>提交作业区</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding:utf-8</span><br><br>num_1 = <span class="hljs-string">&#x27;一&#x27;</span>  <span class="hljs-comment"># 一</span><br>num_2 = <span class="hljs-string">&#x27;二&#x27;</span>  <span class="hljs-comment"># 二</span><br>num_3 = <span class="hljs-string">&#x27;三&#x27;</span>  <span class="hljs-comment"># 三</span><br>num_4 = <span class="hljs-string">&#x27;四&#x27;</span>  <span class="hljs-comment"># 四</span><br>num_5 = <span class="hljs-string">&#x27;五&#x27;</span>  <span class="hljs-comment"># 五</span><br>text = <span class="hljs-string">&#x27;饭店活动介绍&#x27;</span>  <span class="hljs-comment"># 介绍</span><br>food1 = <span class="hljs-string">&#x27;麻辣小龙虾&#x27;</span>  <span class="hljs-comment"># 食物</span><br>food1_price = <span class="hljs-number">23</span><br>food2 = <span class="hljs-string">&#x27;宫保鸡丁&#x27;</span>  <span class="hljs-comment"># 食物</span><br>food2_price = <span class="hljs-number">12</span><br>food3 = <span class="hljs-string">&#x27;水煮鱼片&#x27;</span>  <span class="hljs-comment"># 食物</span><br>food3_price = <span class="hljs-number">32</span><br>food4 = <span class="hljs-string">&#x27;果儿拼盘&#x27;</span>  <span class="hljs-comment"># 食物</span><br>food4_price = <span class="hljs-number">19</span><br>food5 = <span class="hljs-string">&#x27;小鸡炖蘑菇&#x27;</span>  <span class="hljs-comment"># 食物</span><br>food5_price = <span class="hljs-number">33</span><br>free_food_01 = <span class="hljs-string">&#x27;罗宋汤&#x27;</span>  <span class="hljs-comment"># 赠送食物</span><br>free_food_02 = <span class="hljs-string">&#x27;紫菜蛋花汤&#x27;</span>  <span class="hljs-comment"># 赠送食物</span><br>free_food_03 = <span class="hljs-string">&#x27;西湖牛肉羹&#x27;</span>  <span class="hljs-comment"># 赠送食物</span><br>free_food_04 = <span class="hljs-string">&#x27;番茄鸡蛋汤&#x27;</span>  <span class="hljs-comment"># 赠送食物</span><br>free_food_05 = <span class="hljs-string">&#x27;米酒小汤圆&#x27;</span>  <span class="hljs-comment"># 赠送食物</span><br>free_food_price = <span class="hljs-number">9.8</span><br><br>prize_01 = <span class="hljs-string">&#x27;价值一万元欧洲游&#x27;</span><br>prize_02 = <span class="hljs-string">&#x27;价值388的豆浆机&#x27;</span><br>prize_03 = <span class="hljs-string">&#x27;价值200元的生活大礼包&#x27;</span><br><br>word = <span class="hljs-string">&#x27;周%s特价%s %d元, 赠送一份价值%f的%s&#x27;</span><br>word_special = <span class="hljs-string">&#x27;****************************\n小北饭店不仅每天有特价,为了回馈新老顾客到店就送价值29.9的精美礼品,凭结账小票可进行抽奖&#x27;</span><br>word_prize = <span class="hljs-string">&#x27;%s等奖:  %s&#x27;</span><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    <span class="hljs-built_in">print</span>(word % (num_1, food1, food1_price, free_food_price, free_food_01))<br>    <span class="hljs-built_in">print</span>(word % (num_2, food2, food2_price, free_food_price, free_food_02))<br>    <span class="hljs-built_in">print</span>(word % (num_3, food3, food3_price, free_food_price, free_food_03))<br>    <span class="hljs-built_in">print</span>(word % (num_4, food4, food4_price, free_food_price, free_food_04))<br>    <span class="hljs-built_in">print</span>(word % (num_5, food5, food5_price, free_food_price, free_food_05))<br>    <span class="hljs-built_in">print</span>(word_special)<br>    <span class="hljs-built_in">print</span>(word_prize % (num_1, prize_01))<br>    <span class="hljs-built_in">print</span>(word_prize % (num_2, prize_02))<br>    <span class="hljs-built_in">print</span>(word_prize % (num_3, prize_03))<br><br></code></pre></td></tr></table></figure><h3 id="结果检验区"><a href="#结果检验区" class="headerlink" title="结果检验区"></a>结果检验区</h3><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs cmd"><span class="hljs-function">C:\<span class="hljs-title">Users</span>\<span class="hljs-title">admin</span>\<span class="hljs-title">PycharmProjects</span>\<span class="hljs-title">pythonlearn</span>\<span class="hljs-title">venv</span>\<span class="hljs-title">Scripts</span>\<span class="hljs-title">python.exe</span> <span class="hljs-title">C</span>:/<span class="hljs-title">Users</span>/<span class="hljs-title">admin</span>/<span class="hljs-title">PycharmProjects</span>/<span class="hljs-title">pythonlearn</span>/<span class="hljs-title">test1.py</span></span><br><span class="hljs-function">周一特价麻辣小龙虾 23元, 赠送一份价值9.800000的罗宋汤</span><br><span class="hljs-function">周二特价宫保鸡丁 12元, 赠送一份价值9.800000的紫菜蛋花汤</span><br><span class="hljs-function">周三特价水煮鱼片 32元, 赠送一份价值9.800000的西湖牛肉羹</span><br><span class="hljs-function">周四特价果儿拼盘 19元, 赠送一份价值9.800000的番茄鸡蛋汤</span><br><span class="hljs-function">周五特价小鸡炖蘑菇 33元, 赠送一份价值9.800000的米酒小汤圆</span><br><span class="hljs-function">****************************</span><br><span class="hljs-function">小北饭店不仅每天有特价,为了回馈新老顾客到店就送价值29.9的精美礼品,凭结账小票可进行抽奖</span><br><span class="hljs-function">一等奖:  价值一万元欧洲游</span><br><span class="hljs-function">二等奖:  价值388的豆浆机</span><br><span class="hljs-function">三等奖:  价值200元的生活大礼包</span><br><span class="hljs-function"></span><br><span class="hljs-function">进程已结束，退出代码为 0</span><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程练习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python字符串的转义字符</title>
      <link href="/2021/66ca73568a66/"/>
      <url>/2021/66ca73568a66/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="字符串的转义字符"><a href="#字符串的转义字符" class="headerlink" title="字符串的转义字符"></a>字符串的转义字符</h3><h4 id="什么是转义字符"><a href="#什么是转义字符" class="headerlink" title="什么是转义字符"></a>什么是转义字符</h4><ul><li>字符要转成其他含义的功能,所以我们叫他转义字符</li><li><code>\</code>    <code>+</code>    字符</li></ul><h4 id="Python中的转义字符"><a href="#Python中的转义字符" class="headerlink" title="Python中的转义字符"></a>Python中的转义字符</h4><table><thead><tr><th align="center">符号</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center"><code>\n</code></td><td align="center">换行,一般用于末尾,<code>strip</code>对其也有效</td></tr><tr><td align="center"><code>\t</code></td><td align="center">横向制表符(可以认为是一个间隔符)</td></tr><tr><td align="center"><code>\v</code></td><td align="center">纵向制表符(会有一个男性符号)</td></tr><tr><td align="center"><code>\a</code></td><td align="center">响铃</td></tr><tr><td align="center"><code>\b</code></td><td align="center">退格符,将光标前移,覆盖(删除前一个)</td></tr><tr><td align="center"><code>\r</code></td><td align="center">回车</td></tr><tr><td align="center"><code>\f</code></td><td align="center">翻页(几乎用不到,会出现一个女性符号)</td></tr><tr><td align="center"><code>\&#39;</code></td><td align="center">转义字符串中的单引号</td></tr><tr><td align="center"><code>\&#39;&#39;</code></td><td align="center">转义字符中的双引号</td></tr><tr><td align="center"><code>\\</code></td><td align="center">转义斜杠</td></tr></tbody></table><h4 id="转义无效符"><a href="#转义无效符" class="headerlink" title="转义无效符"></a>转义无效符</h4><ul><li>在<strong>python</strong>中 在字符串前加 <code>r</code> 来将当前字符串的转义字符无效化<ul><li><code>print(r&#39;hello \f&#39;)</code></li></ul></li><li><code>r</code>对<code>格式化</code>无影响</li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding: utf-8</span><br><br>info_n = (<span class="hljs-string">&#x27;my name \nis %s\n&#x27;</span> % <span class="hljs-string">&#x27;dewei&#x27;</span>)<br><span class="hljs-built_in">print</span>(info_n)<br><br>info_t = <span class="hljs-string">&#x27;my name \tis dewei&#x27;</span><br><span class="hljs-built_in">print</span>(info_t)<br><br>info_v = <span class="hljs-string">&#x27;my name \v is dewei&#x27;</span><br><span class="hljs-built_in">print</span>(info_v)<br><br>info_a = <span class="hljs-string">&#x27;my name \a is dewei&#x27;</span><br><span class="hljs-built_in">print</span>(info_a)<br><br>info_b = <span class="hljs-string">&#x27;my name is dewei\b&#x27;</span><br><span class="hljs-built_in">print</span>(info_b)<br><br>info_r = <span class="hljs-string">&#x27;my name is dewei\r&#x27;</span><br><span class="hljs-built_in">print</span>(info_r, info_b)<br><br>info_f = <span class="hljs-string">&#x27;my name is dewei\f&#x27;</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;f&#x27;</span>, info_f)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;my name is \&#x27;dewei\&#x27;&#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;my name is \&quot;dewei\&quot;&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;my name is \&quot;Dewei\&quot;&#x27;</span>)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;my name is \\ dewei&#x27;</span>)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">r&#x27;my name is \\ dewei\n&#x27;</span>)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">r&#x27;my name is %s&#x27;</span> % <span class="hljs-string">&#x27;dewei&#x27;</span>)<br><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python字符串格式化的常用格式符</title>
      <link href="/2021/9486aa5c3377/"/>
      <url>/2021/9486aa5c3377/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="字符串格式化的常用格式符"><a href="#字符串格式化的常用格式符" class="headerlink" title="字符串格式化的常用格式符"></a>字符串格式化的常用格式符</h3><h4 id="字符串格式化的符号"><a href="#字符串格式化的符号" class="headerlink" title="字符串格式化的符号"></a>字符串格式化的符号</h4><ul><li>定义:用于对应各种数据类型的格式化符号—–格式化符号</li></ul><table><thead><tr><th align="center">符号</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">%s</td><td align="center"><strong>格式化字符串,通用类型</strong></td></tr><tr><td align="center">%d</td><td align="center">格式化整形</td></tr><tr><td align="center">%f</td><td align="center">格式化浮点型</td></tr><tr><td align="center">%u</td><td align="center">格式化无符号整型(正整型)</td></tr><tr><td align="center">%c</td><td align="center">格式化字符</td></tr></tbody></table><h4 id="不太常用的格式化符号"><a href="#不太常用的格式化符号" class="headerlink" title="不太常用的格式化符号"></a>不太常用的格式化符号</h4><table><thead><tr><th align="center">符号</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">%u</td><td align="center">格式化无符号八进制数</td></tr><tr><td align="center">%x</td><td align="center">格式化无符号16进制数</td></tr><tr><td align="center">%e</td><td align="center">科学计数法格式化浮点数</td></tr></tbody></table><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding:utf-8</span><br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;%c&#x27;</span> % <span class="hljs-number">1000</span>)<br><span class="hljs-comment">#print(&#x27;%c&#x27; % &#x27;ab&#x27;)</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;%c&#x27;</span> % <span class="hljs-number">999999</span>)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;%u&#x27;</span> % -<span class="hljs-number">1</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;%f&#x27;</span> % <span class="hljs-number">1.2</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;%f&#x27;</span> % <span class="hljs-number">3.14</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;%f&#x27;</span> % <span class="hljs-number">12</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;%d&#x27;</span> % <span class="hljs-number">10</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;%d&#x27;</span> % -<span class="hljs-number">10</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;%d&#x27;</span> % <span class="hljs-number">1.2</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;%s&#x27;</span> % <span class="hljs-string">&#x27;123&#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;%s&#x27;</span> % <span class="hljs-number">123</span>)<br><span class="hljs-comment"># print(&#x27;%f&#x27; % &#x27;1.2&#x27;)</span><br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;&#123;:d&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(<span class="hljs-number">1</span>))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;&#123;:f&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(<span class="hljs-number">1.2</span>))<br><span class="hljs-comment">#print(&#x27;&#123;:s&#125;&#x27;.format(12))</span><br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;%o&#x27;</span> % <span class="hljs-number">24</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;%x&#x27;</span> % <span class="hljs-number">32</span>)<br><span class="hljs-comment">#print(&#x27;%x&#x27; % 123ab)</span><br><br>number = <span class="hljs-built_in">int</span>(<span class="hljs-string">&#x27;123ab&#x27;</span>, <span class="hljs-number">16</span>)<br><span class="hljs-built_in">print</span>(number)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;%x&#x27;</span> % number)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;%e&#x27;</span> % <span class="hljs-number">1.2</span>)<br><br>par = <span class="hljs-string">&quot;我喜欢&#123;&#125;，但是他需要&#123;&#125;, 可我只有&#123;&#125;。&quot;</span><br><span class="hljs-built_in">print</span>(par.<span class="hljs-built_in">format</span>(<span class="hljs-string">&quot;番茄&quot;</span>,<span class="hljs-number">10.88</span>,<span class="hljs-number">5</span>))<br><br>par = <span class="hljs-string">&quot;我喜欢%s，但是他需要%s, 可我只有%s。&quot;</span><br><span class="hljs-built_in">print</span>(par % (<span class="hljs-string">&quot;菠萝&quot;</span>, <span class="hljs-number">32.54</span>, <span class="hljs-number">23</span>))<br><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python字符串的格式化</title>
      <link href="/2021/dd217d42cb82/"/>
      <url>/2021/dd217d42cb82/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="字符串的格式化"><a href="#字符串的格式化" class="headerlink" title="字符串的格式化"></a>字符串的格式化</h3><h4 id="什么是格式化"><a href="#什么是格式化" class="headerlink" title="什么是格式化"></a>什么是格式化</h4><p><code>一个固定的字符串中有部分元素是根据变量的值而改变的字符串</code></p><h4 id="使用格式化场景和目的"><a href="#使用格式化场景和目的" class="headerlink" title="使用格式化场景和目的"></a>使用格式化场景和目的</h4><ul><li>发送邮件的时候</li><li>发送短信的时候</li><li>App上发推送的时候</li><li>对于重复性很多的信息,通过格式化的形式,可以减少代码的书写量</li></ul><h4 id="格式化的三种方式"><a href="#格式化的三种方式" class="headerlink" title="格式化的三种方式"></a>格式化的三种方式</h4><ul><li><p>字符串格式化使用操作符 <code>%</code> 来实现</p><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-9-27/1.jpg" alt="图片1"></p></li><li><p>字符串格式化函数 - <code>format</code>(官方比较推荐)</p><ul><li><code>string.format</code>函数用来格式化字符串</li><li>使用 <code>format</code> 的字符串主体使用 <code>&#123;&#125;</code> 大括号来代替格式符</li><li><code>string.format(date,date,date...)</code></li></ul></li><li><p><strong>Python3.6加入的新格式化方案—-f-strings</strong></p><ul><li>定义一个变量</li><li>字符串前加 f 符号</li><li>需要格式化的位置使用 (变量名)</li><li>一定要先定义好变量名</li></ul></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding: utf-8</span><br><br>info = <span class="hljs-string">&#x27;my name is %s, my age is %s&#x27;</span><br><br>name_01 = <span class="hljs-string">&#x27;小慕&#x27;</span><br>age_01 = <span class="hljs-number">10</span><br>name_02 = <span class="hljs-string">&#x27;dewei&#x27;</span><br>age_02 = <span class="hljs-number">33</span><br><span class="hljs-built_in">print</span>(info % (name_01, age_01))<br><span class="hljs-built_in">print</span>(info % (name_02, age_02))<br><br>message = <span class="hljs-string">&#x27;您好, 今天是%s, 您的手机号码 : %s 已经欠费了, 请尽快充值&#x27;</span><br><span class="hljs-built_in">print</span>(message % (<span class="hljs-string">&#x27;星期一&#x27;</span>, <span class="hljs-number">123456789</span>))<br><br><span class="hljs-built_in">print</span>(message % (<span class="hljs-number">1234567</span>, <span class="hljs-string">&#x27;星期二&#x27;</span>))<br><span class="hljs-built_in">print</span>(message)<br><br>books = [<span class="hljs-string">&#x27;python&#x27;</span>, <span class="hljs-string">&#x27;django&#x27;</span>, <span class="hljs-string">&#x27;flask&#x27;</span>]<br>info_2 = <span class="hljs-string">&#x27;my name is %s, my age is %s, my book is %s&#x27;</span><br><span class="hljs-built_in">print</span>(info_2 % (name_01, age_01, books))<br><br>dict_01 = &#123;<span class="hljs-string">&#x27;a&#x27;</span>: <span class="hljs-string">&#x27;a&#x27;</span>, <span class="hljs-string">&#x27;b&#x27;</span>: <span class="hljs-string">&#x27;b&#x27;</span>&#125;<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;dict is %s&#x27;</span> % dict_01)<br><br>info_03 = <span class="hljs-string">&#x27;my name is &#123;0&#125;, my age is &#123;1&#125;, my book is &#123;2&#125;&#x27;</span><br><span class="hljs-built_in">print</span>(info_03.<span class="hljs-built_in">format</span>(name_02, age_02, books))<br><br>info_04 = <span class="hljs-string">f&#x27;my name is <span class="hljs-subst">&#123;name_01&#125;</span>, my name is <span class="hljs-subst">&#123;age_02&#125;</span>&#x27;</span><br><span class="hljs-built_in">print</span>(info_04)<br><br><span class="hljs-built_in">print</span>(info_03.<span class="hljs-built_in">format</span>(<span class="hljs-string">&#x27;dewei&#x27;</span>, <span class="hljs-number">33</span>, [<span class="hljs-string">&#x27;python&#x27;</span>]))<br><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python字符串的编码格式</title>
      <link href="/2021/497056ce2ccc/"/>
      <url>/2021/497056ce2ccc/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="字符串的编码格式"><a href="#字符串的编码格式" class="headerlink" title="字符串的编码格式"></a>字符串的编码格式</h3><h4 id="什么是编码格式"><a href="#什么是编码格式" class="headerlink" title="什么是编码格式"></a>什么是编码格式</h4><ul><li>有一定规则的规则</li><li>使用了这种规则,我们就能知道传输的信息是什么意思</li></ul><h4 id="常见的编码格式"><a href="#常见的编码格式" class="headerlink" title="常见的编码格式"></a>常见的编码格式</h4><ul><li>gbk中文编码</li><li>ascii英文编码</li></ul><h4 id="通用的编码格式"><a href="#通用的编码格式" class="headerlink" title="通用的编码格式"></a>通用的编码格式</h4><ul><li><p><strong>utf-8是一种国际通用的编码格式</strong></p></li><li><p>(还有一些指定的编码格式)</p></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#### coding: gbk</span><br><span class="hljs-comment">#### coding: a</span><br><span class="hljs-comment"># coding: utf-8</span><br>name = <span class="hljs-string">&#x27;小慕&#x27;</span><br><span class="hljs-built_in">print</span>(name)<br>age = <span class="hljs-number">10</span><br>heart = <span class="hljs-string">&#x27;love&#x27;</span><br><span class="hljs-built_in">print</span>(age, heart)<br><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 字符串中返回bool类型的函数集合</title>
      <link href="/2021/74daef8d67d3/"/>
      <url>/2021/74daef8d67d3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="字符串中返回bool类型的函数集合"><a href="#字符串中返回bool类型的函数集合" class="headerlink" title="字符串中返回bool类型的函数集合"></a>字符串中返回bool类型的函数集合</h3><h4 id="isspace"><a href="#isspace" class="headerlink" title="isspace"></a>isspace</h4><h5 id="功能"><a href="#功能" class="headerlink" title="功能:"></a>功能:</h5><ul><li>判断字符串是否是由一个空格组成的字符串</li></ul><h5 id="用法"><a href="#用法" class="headerlink" title="用法:"></a>用法:</h5><ul><li><code>booltype = string.isspace()</code>  -&gt; 无参数可传 ,返回一个<code>布尔类型</code></li></ul><h5 id="注意"><a href="#注意" class="headerlink" title="注意:"></a>注意:</h5><ul><li>由空格组成的字符串,不是空字符串 : “’!=‘’’</li></ul><hr><h4 id="istitile"><a href="#istitile" class="headerlink" title="istitile"></a>istitile</h4><h5 id="功能-1"><a href="#功能-1" class="headerlink" title="功能:"></a>功能:</h5><ul><li>判断字符串是否是一个标题类型</li></ul><h5 id="用法-1"><a href="#用法-1" class="headerlink" title="用法"></a>用法</h5><ul><li><code>booltype = String.istitle()</code>  -&gt; 无参数可传, 返回一个<code>布尔类型</code></li></ul><h5 id="注意-1"><a href="#注意-1" class="headerlink" title="注意:"></a>注意:</h5><ul><li><strong>该函数只能用于英文</strong></li></ul><hr><h4 id="isupper与islower"><a href="#isupper与islower" class="headerlink" title="isupper与islower"></a>isupper与islower</h4><h5 id="功能-2"><a href="#功能-2" class="headerlink" title="功能:"></a>功能:</h5><ul><li><code>isupper</code>判断字符串中的字母是否都是大写</li><li><code>islower</code>判断字符串中的字母是否都是小写</li></ul><h5 id="用法-2"><a href="#用法-2" class="headerlink" title="用法:"></a>用法:</h5><ul><li><code>booltype = string.isupper()</code>  -&gt; 无参数可传 , 返回一个<code>布尔类型</code></li><li><code>booltype = string,islower()</code>   -&gt;无参数可传 ,返回一个<code>布尔类型</code></li></ul><h5 id="注意-2"><a href="#注意-2" class="headerlink" title="注意:"></a>注意:</h5><ul><li>只检测字符串里的字母,对其他字符不做判断</li></ul><hr><h4 id="join与split-稍后见"><a href="#join与split-稍后见" class="headerlink" title="join与split 稍后见"></a>join与split 稍后见</h4><ul><li>我们数据类型转换的时候见</li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding:utf-8</span><br><br>title = <span class="hljs-string">&#x27;Back Of China&#x27;</span><br>upper_str = <span class="hljs-string">&#x27;PYTHON IS A GOOD CODE 哈哈!&#x27;</span><br>upper_str_02 = <span class="hljs-string">&#x27;Python Is A Good Code&#x27;</span><br>lower_str = <span class="hljs-string">&#x27; i love python 哈哈!&#x27;</span><br>not_empty = <span class="hljs-string">&#x27;                  &#x27;</span><br><br><span class="hljs-built_in">print</span>(title.istitle())<br><span class="hljs-built_in">print</span>(upper_str.istitle())<br><span class="hljs-built_in">print</span>(upper_str_02.istitle())<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;isuppr&#x27;</span>, upper_str.isupper())<br><span class="hljs-built_in">print</span>(lower_str.isupper())<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;islower&#x27;</span>, lower_str.islower())<br><br><span class="hljs-built_in">print</span>(not_empty.isspace())<br><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 字符串的replace函数</title>
      <link href="/2021/92a83431ef5c/"/>
      <url>/2021/92a83431ef5c/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="字符串的replace函数"><a href="#字符串的replace函数" class="headerlink" title="字符串的replace函数"></a>字符串的replace函数</h3><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li>将字符串中的<code>old</code>(旧元素)替换成<code>new</code>(新元素),并能指定替换的数量</li></ul><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><ul><li><code>newtr = string.replace(old, new, max)</code></li></ul><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><ul><li><code>old</code> : 被替换的元素.</li><li><code>new</code> : 替代old的新元素</li><li><code>max</code> : 可选,代表替换几个,默认全部替换<strong>全部匹配</strong>的old元素</li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding:utf-8</span><br><br>info = (<span class="hljs-string">&#x27;百：量词，指数量多，在这里指全部；科：学科，科目。&#x27;</span><br>        <span class="hljs-string">&#x27;《中国大百科全书·新闻出版》卷定义为：&#x27;</span><br>        <span class="hljs-string">&#x27;“概要介绍人类一切门类知识或某一门类知识的工具书。&#x27;</span><br>        <span class="hljs-string">&#x27;供查检所需知识和事实资料之用。&#x27;</span><br>        <span class="hljs-string">&#x27;但也具有扩大读者知识视野，帮助系统求知的作用。&#x27;</span><br>        <span class="hljs-string">&#x27;它是一个国家和一个时代科学文化发展的标志。”&#x27;</span>)<br><br>a = <span class="hljs-string">&#x27;百&#x27;</span><br>b = <span class="hljs-string">&#x27;指&#x27;</span><br>c = <span class="hljs-string">&#x27;人类&#x27;</span><br>d = <span class="hljs-string">&#x27;科&#x27;</span><br>e = <span class="hljs-string">&#x27;*&#x27;</span><br>f = <span class="hljs-string">&#x27;0&#x27;</span><br>g = <span class="hljs-string">&#x27;$&#x27;</span><br>h = <span class="hljs-string">&#x27;&amp;&#x27;</span><br><br><span class="hljs-comment">#test = info.replace(a, e)</span><br><span class="hljs-comment">#print(test)</span><br><span class="hljs-comment">#test = test.replace(b, f)</span><br><span class="hljs-comment">#print(test)</span><br><span class="hljs-comment">#test = test.replace(c, g)</span><br><span class="hljs-comment">#test = test.replace(d, h)</span><br><span class="hljs-comment">#print(test)</span><br><br>test = info.replace(a, e).replace(b, f).replace(c, g).replace(d, h)<br><span class="hljs-built_in">print</span>(test)<br><br><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 字符串的strip函数</title>
      <link href="/2021/1df67f6322b8/"/>
      <url>/2021/1df67f6322b8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="字符串的strip函数"><a href="#字符串的strip函数" class="headerlink" title="字符串的strip函数"></a>字符串的strip函数</h3><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li><code>string</code>将去掉字符串<strong>左右两边</strong>的<code>指定元素</code>,<strong>默认</strong>是<code>空格</code></li></ul><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><ul><li><code>newstr = string.strip(item)</code></li></ul><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><ul><li>括弧里需要传一个你<code>想去掉的元素</code>,可不填写</li></ul><h4 id="拓展知识"><a href="#拓展知识" class="headerlink" title="拓展知识"></a>拓展知识</h4><ul><li>传入的元素如果不在开头或结尾则无效</li><li><code>lstrip</code>仅去掉字符串开头的指定元素或空格</li><li><code>rstrip</code>仅去掉字符串结尾的指定元素或空格</li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding:utf-8</span><br><br>info = <span class="hljs-string">&#x27;                             my name is dewei                      &#x27;</span><br>new_info = info.strip()<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;.&#x27;</span> + info + <span class="hljs-string">&#x27;.&#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;.&#x27;</span> + new_info + <span class="hljs-string">&#x27;.&#x27;</span>)<br><br>info_01 = <span class="hljs-string">&#x27;my name is dewei&#x27;</span><br>new_info_01 = info_01.strip(info_01)<br><span class="hljs-built_in">print</span>(new_info_01)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">len</span>(new_info_01))<br><br><br>new_str = <span class="hljs-string">&#x27;abcde&#x27;</span><br><span class="hljs-built_in">print</span>(new_str.lstrip(<span class="hljs-string">&#x27;a&#x27;</span>))<br><span class="hljs-built_in">print</span>(new_str.rstrip(<span class="hljs-string">&#x27;e&#x27;</span>))<br><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 字符串的find与index函数</title>
      <link href="/2021/638ef4c39634/"/>
      <url>/2021/638ef4c39634/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="字符串的find与index函数"><a href="#字符串的find与index函数" class="headerlink" title="字符串的find与index函数"></a>字符串的find与index函数</h3><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li><code>find</code>与<code>index</code>都是返回你想寻找的成员的位置</li></ul><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><ul><li><p><code>string.find(item)</code> -&gt; <code>item</code>: 你想查询的元素,返回一个整形</p></li><li><p><code>string.index(item)</code> -&gt; <code>item</code>: 你想查询的元素,返回一个整形<code>或者报错</code></p><p><strong>Ps:字符串里的位置是从左向右,以0开始的.</strong></p></li></ul><h4 id="区别"><a href="#区别" class="headerlink" title="区别"></a>区别</h4><ul><li>如果<code>find</code>找不到元素,会返回<code>-1</code></li><li>如果<code>index</code>找不到元素,会导致程序<code>报错</code></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding:utf-8</span><br><br>info = <span class="hljs-string">&#x27;python is a good code&#x27;</span><br><br>result = info.find(<span class="hljs-string">&#x27;a&#x27;</span>)<br><span class="hljs-built_in">print</span>(result)<br>result = info.find(<span class="hljs-string">&#x27;ok&#x27;</span>)<br><span class="hljs-built_in">print</span>(result)<br><br>result = info.index(<span class="hljs-string">&#x27;a&#x27;</span>)<br><span class="hljs-built_in">print</span>(result)<br>result = info.index(<span class="hljs-string">&#x27;o&#x27;</span>)<br><span class="hljs-built_in">print</span>(result)<br><br>str1 = <span class="hljs-string">&quot;tomorrow is sunny day&quot;</span><br><br><span class="hljs-built_in">print</span>(str1.find(<span class="hljs-string">&quot;is&quot;</span>, <span class="hljs-number">2</span>, <span class="hljs-number">10</span>))<br><span class="hljs-built_in">print</span>(str1.find(<span class="hljs-string">&quot;is&quot;</span>))<br><span class="hljs-built_in">print</span>(str1.find(<span class="hljs-string">&quot;is&quot;</span>, <span class="hljs-number">10</span>, <span class="hljs-number">15</span>))<br><span class="hljs-built_in">print</span>(str1.find(<span class="hljs-string">&quot;is&quot;</span>, <span class="hljs-number">9</span>))<span class="hljs-comment"># coding:utf-8</span><br><br>info = <span class="hljs-string">&#x27;python is a good code&#x27;</span><br><br>result = info.find(<span class="hljs-string">&#x27;a&#x27;</span>)<br><span class="hljs-built_in">print</span>(result)<br>result = info.find(<span class="hljs-string">&#x27;ok&#x27;</span>)<br><span class="hljs-built_in">print</span>(result)<br><br>result = info.index(<span class="hljs-string">&#x27;a&#x27;</span>)<br><span class="hljs-built_in">print</span>(result)<br>result = info.index(<span class="hljs-string">&#x27;ok&#x27;</span>)<br><span class="hljs-built_in">print</span>(result)<br><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 字符串的startswith和endswith函数</title>
      <link href="/2021/2cf50f833307/"/>
      <url>/2021/2cf50f833307/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="字符串的startswith和endswith函数"><a href="#字符串的startswith和endswith函数" class="headerlink" title="字符串的startswith和endswith函数"></a>字符串的startswith和endswith函数</h3><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ul><li><code>startswith</code>判断字符串<strong>开始位</strong>是否是某成员(元素)</li><li><code>endswith</code>判断字符串<strong>结尾</strong>是否是某成员(元素)</li></ul><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><ul><li><code>string.startswith(item)</code> -&gt; <code>item</code> : 你想查询匹配的元素,返回一个<strong>布尔值</strong></li><li><code>string.endswith(item) </code> -&gt; <code>item</code>: 你想查询匹配的元素,返回一个<strong>布尔值</strong></li></ul><h4 id="小发现"><a href="#小发现" class="headerlink" title="小发现"></a>小发现</h4><p>当<code>item</code>赋值为<code>&#39;&#39;</code>时,始终返回为<code>True</code></p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding:utf-8</span><br><br>info = <span class="hljs-string">&#x27;this is a string example!!&#x27;</span><br><br>result = info.startswith(<span class="hljs-string">&#x27;this&#x27;</span>)<br><span class="hljs-built_in">print</span>(result)<br><br>result = info.startswith(<span class="hljs-string">&#x27;this is a string example!!&#x27;</span>)<br><span class="hljs-built_in">print</span>(result)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">bool</span>(info == <span class="hljs-string">&#x27;this is a string example!!&#x27;</span>))<br><br>result = info.endswith(<span class="hljs-string">&#x27;!&#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;result:&#x27;</span>, result)<br><br>result = info.endswith(<span class="hljs-string">&#x27;this is a string example!!&#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;full?:&#x27;</span>, result)<br><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JAVA 标识符 和 类型转换</title>
      <link href="/2021/7f3ce7c21c70/"/>
      <url>/2021/7f3ce7c21c70/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="6-1-标识符（记忆、理解）"><a href="#6-1-标识符（记忆、理解）" class="headerlink" title="6.1 标识符（记忆、理解）"></a>6.1 标识符（记忆、理解）</h4><h6 id="标识符是用户编程时使用的名字，用于给类、方法、变量、常量等命名。"><a href="#标识符是用户编程时使用的名字，用于给类、方法、变量、常量等命名。" class="headerlink" title="标识符是用户编程时使用的名字，用于给类、方法、变量、常量等命名。"></a>标识符是用户编程时使用的名字，用于给类、方法、变量、常量等命名。</h6><h6 id="Java中标识符的组成规则："><a href="#Java中标识符的组成规则：" class="headerlink" title="Java中标识符的组成规则："></a>Java中标识符的组成规则：</h6><ul><li><p>​    由字母、数字、下划线“_”、美元符号“$”组成，第一个字符不能是数字。</p></li><li><p>​    不能使用java中的关键字作为标识符。    </p></li><li><p>​    标识符对大小写敏感（区分大小写）。</p></li></ul><h5 id="Java中标识符的命名约定："><a href="#Java中标识符的命名约定：" class="headerlink" title="Java中标识符的命名约定："></a>Java中标识符的命名约定：</h5><ul><li><p>​    小驼峰式命名：变量名、方法名</p><p>​            首字母小写，从第二个单词开始每个单词的首字母大写。</p></li><li><p>​    大驼峰式命名：类名</p><p>​            每个单词的首字母都大写。</p></li></ul><h5 id="另外，标识符的命名最好可以做到见名知意"><a href="#另外，标识符的命名最好可以做到见名知意" class="headerlink" title="另外，标识符的命名最好可以做到见名知意"></a>另外，标识符的命名最好可以做到见名知意</h5><ul><li>​        例如：username、studentNumber等。</li></ul><h4 id="7-1-类型转换（理解）"><a href="#7-1-类型转换（理解）" class="headerlink" title="7.1 类型转换（理解）"></a>7.1 类型转换（理解）</h4><h6 id="在Java中，一些数据类型之间是可以相互转换的。分为两种情况：自动类型转换和强制类型转换。"><a href="#在Java中，一些数据类型之间是可以相互转换的。分为两种情况：自动类型转换和强制类型转换。" class="headerlink" title="在Java中，一些数据类型之间是可以相互转换的。分为两种情况：自动类型转换和强制类型转换。"></a>在Java中，一些数据类型之间是可以相互转换的。分为两种情况：自动类型转换和强制类型转换。</h6><h5 id="自动类型转换："><a href="#自动类型转换：" class="headerlink" title="自动类型转换："></a>自动类型转换：</h5><p>​    把一个表示数据范围小的数值或者变量赋值给另一个表示数据范围大的变量。这种转换方式是自动的，直接书写即可。例如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">double</span> num = <span class="hljs-number">10</span>; <span class="hljs-comment">// 将int类型的10直接赋值给double类型</span><br>System.out.println(num); <span class="hljs-comment">// 输出10.0</span><br></code></pre></td></tr></table></figure><h5 id="强制类型转换：-不建议-因为会有数据丢失"><a href="#强制类型转换：-不建议-因为会有数据丢失" class="headerlink" title="强制类型转换：(不建议 因为会有数据丢失)"></a>强制类型转换：(不建议 因为会有数据丢失)</h5><h6 id="把一个表示数据范围大的数值或者变量赋值给另一个表示数据范围小的变量。"><a href="#把一个表示数据范围大的数值或者变量赋值给另一个表示数据范围小的变量。" class="headerlink" title="把一个表示数据范围大的数值或者变量赋值给另一个表示数据范围小的变量。"></a>把一个表示数据范围大的数值或者变量赋值给另一个表示数据范围小的变量。</h6><h6 id="强制类型转换格式：目标数据类型-变量名-目标数据类型-值或者变量"><a href="#强制类型转换格式：目标数据类型-变量名-目标数据类型-值或者变量" class="headerlink" title="强制类型转换格式：目标数据类型 变量名 = (目标数据类型)值或者变量;"></a>强制类型转换格式：目标数据类型 变量名 = (目标数据类型)值或者变量;</h6><h6 id="例如："><a href="#例如：" class="headerlink" title="例如："></a>例如：</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">double</span> num1 = <span class="hljs-number">5.5</span>;<br><span class="hljs-keyword">int</span> num2 = (<span class="hljs-keyword">int</span>) num1; <span class="hljs-comment">// 将double类型的num1强制转换为int类型</span><br>System.out.println(num2); <span class="hljs-comment">// 输出5（小数位直接舍弃）</span><br></code></pre></td></tr></table></figure><p><img src="https://learnonly-7.oss-cn-qingdao.aliyuncs.com/2021-9-23/2.png" alt="1543196882672"></p><h6 id="说明："><a href="#说明：" class="headerlink" title="说明："></a>说明：</h6><ol><li>char类型的数据转换为int类型是按照码表中对应的int值进行计算的。比如在ASCII码表中，’a’对应97。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">int</span> a = <span class="hljs-string">&#x27;a&#x27;</span>;<br>System.out.println(a); <span class="hljs-comment">// 将输出97</span><br></code></pre></td></tr></table></figure><ol start="2"><li>整数默认是int类型，byte、short和char类型数据参与运算均会自动转换为int类型。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">byte</span> b1 = <span class="hljs-number">10</span>;<br><span class="hljs-keyword">byte</span> b2 = <span class="hljs-number">20</span>;<br><span class="hljs-keyword">byte</span> b3 = b1 + b2; <br><span class="hljs-comment">// 第三行代码会报错，b1和b2会自动转换为int类型，计算结果为int，int赋值给byte需要强制类型转换。</span><br><span class="hljs-comment">// 修改为:</span><br><span class="hljs-keyword">int</span> num = b1 + b2;<br><span class="hljs-comment">// 或者：</span><br><span class="hljs-keyword">byte</span> b3 = (<span class="hljs-keyword">byte</span>) (b1 + b2);<br></code></pre></td></tr></table></figure><ul><li>boolean类型不能与其他基本数据类型相互转换。</li></ul><h5 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/*</span><br><span class="hljs-comment">类型转换</span><br><span class="hljs-comment">*/</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ConversionDemo</span> </span>&#123;<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>&#123;<br><span class="hljs-comment">//自动类型转换</span><br><span class="hljs-keyword">double</span> d = <span class="hljs-number">10</span>;<br>System.out.println(d);<br><br><span class="hljs-comment">//定义byte类型的变量</span><br><span class="hljs-keyword">byte</span> b = <span class="hljs-number">10</span>;<br><span class="hljs-keyword">short</span> s = b;<br><span class="hljs-keyword">int</span> i = b;<br><br><span class="hljs-comment">//这是不可以的，类型不兼容</span><br><span class="hljs-comment">//char c = b;</span><br><br><span class="hljs-comment">//强制类型转换</span><br><span class="hljs-keyword">int</span> k = (<span class="hljs-keyword">int</span>)<span class="hljs-number">88.88</span>;<br>System.out.println(k);<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JAVA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 常量变量 </tag>
            
            <tag> 数据类型 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JAVA 变量</title>
      <link href="/2021/d4c3b3d088a2/"/>
      <url>/2021/d4c3b3d088a2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><h4 id="5-1-变量概述"><a href="#5-1-变量概述" class="headerlink" title="5.1  变量概述"></a>5.1  变量概述</h4><ul><li>变量：在程序运行过程中，其值可以发生改变的量。</li></ul><p><code>从本质上讲，变量是内存中的一小块区域，其值可以在一定范围内变化。</code></p><ul><li>变量的定义格式：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java">数据类型 变量名 = 初始化值; <span class="hljs-comment">// 声明变量并赋值</span><br><span class="hljs-keyword">int</span> age = <span class="hljs-number">18</span>;<br>System.out.println(age);<br></code></pre></td></tr></table></figure><p>或者</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 先声明，后赋值（使用前赋值即可）</span><br>数据类型 变量名;<br>变量名 = 初始化值;<br><span class="hljs-keyword">double</span> money;<br>money = <span class="hljs-number">55.5</span>;<br>System.out.println(money);<br></code></pre></td></tr></table></figure><p>还可以在同一行定义多个同一种数据类型的变量，中间使用逗号隔开。但不建议使用这种方式，降低程序的可读性。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">int</span> a = <span class="hljs-number">10</span>, b = <span class="hljs-number">20</span>; <span class="hljs-comment">// 定义int类型的变量a和b，中间使用逗号隔开</span><br>System.out.println(a);<br>System.out.println(b);<br><br><span class="hljs-keyword">int</span> c,d; <span class="hljs-comment">// 声明int类型的变量c和d，中间使用逗号隔开</span><br>c = <span class="hljs-number">30</span>;<br>d = <span class="hljs-number">40</span>;<br>System.out.println(c);<br>System.out.println(d);<br></code></pre></td></tr></table></figure><p>变量的使用：通过变量名访问即可。</p><h4 id="5-2-使用变量时的注意事项"><a href="#5-2-使用变量时的注意事项" class="headerlink" title="5.2 使用变量时的注意事项"></a>5.2 使用变量时的注意事项</h4><ol><li>在同一对花括号中，变量名不能重复。</li><li>变量在使用之前，必须初始化（赋值）。</li><li>定义<code>long</code>类型的变量时，需要在整数的后面加<code>L</code>（大小写均可，建议大写）。因为整数默认是<code>int</code>类型，整数太大可能超出<code>int</code>范围。</li><li>定义<code>float</code>类型的变量时，需要在小数的后面加<code>F</code>（大小写均可，建议大写）。因为浮点数的默认类型是<code>double</code>， <code>double</code>的取值范围是大于`的，类型不兼容。</li></ol><h4 id="5-3代码"><a href="#5-3代码" class="headerlink" title="5.3代码"></a>5.3代码</h4><h6 id="案例一"><a href="#案例一" class="headerlink" title="案例一"></a>案例一</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/*</span><br><span class="hljs-comment">变量定义格式：</span><br><span class="hljs-comment">数据类型 变量名 = 变量值;</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">基本数据类型：</span><br><span class="hljs-comment">byte,short,int,long,float,double,char,boolean</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">变量的使用：</span><br><span class="hljs-comment">取值格式：变量名</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">修改值格式：变量名 = 变量值;</span><br><span class="hljs-comment">*/</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">VariableDemo01</span> </span>&#123;<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>&#123;<br><span class="hljs-comment">//定义变量</span><br><span class="hljs-keyword">int</span> a = <span class="hljs-number">10</span>;<br><br><span class="hljs-comment">//输出变量</span><br>System.out.println(a);<br><br><span class="hljs-comment">//修改变量</span><br>a = <span class="hljs-number">20</span>;<br>System.out.println(a);<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h6 id="案例二"><a href="#案例二" class="headerlink" title="案例二"></a>案例二</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/*</span><br><span class="hljs-comment">变量使用的注意事项：</span><br><span class="hljs-comment">名字不能重复</span><br><span class="hljs-comment">变量未赋值，不能使用</span><br><span class="hljs-comment">long类型的变量定义的时候，为了防止整数过大，后面要加L</span><br><span class="hljs-comment">float类型的变量定义的时候，为了防止类型不兼容，后面要加F</span><br><span class="hljs-comment">*/</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">VariableDemo02</span> </span>&#123;<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>&#123;<br><span class="hljs-comment">//定义byte类型的变量</span><br><span class="hljs-keyword">byte</span> b = <span class="hljs-number">10</span>;<br>System.out.println(b);<br><br><span class="hljs-comment">//定义short类型的变量</span><br><span class="hljs-keyword">short</span> s = <span class="hljs-number">100</span>;<br>System.out.println(s);<br><br><span class="hljs-comment">//定义int类型的变量</span><br><span class="hljs-keyword">int</span> i = <span class="hljs-number">10000</span>;<br>System.out.println(i);<br><br><span class="hljs-comment">//定义double类型的变量</span><br><span class="hljs-keyword">double</span> d = <span class="hljs-number">13.14</span>;<br>System.out.println(d);<br><br><span class="hljs-comment">//定义char类型的变量</span><br><span class="hljs-keyword">char</span> c = <span class="hljs-string">&#x27;a&#x27;</span>;<br>System.out.println(c);<br><br><span class="hljs-comment">//定义boolean类型的变量</span><br><span class="hljs-comment">//boolean b = true;</span><br><span class="hljs-comment">//System.out.println(b);</span><br><span class="hljs-keyword">boolean</span> bb = <span class="hljs-keyword">true</span>;<br>System.out.println(bb);<br>System.out.println(<span class="hljs-string">&quot;--------&quot;</span>);<br><br><span class="hljs-comment">//定义long类型的变量</span><br><span class="hljs-keyword">long</span> l = <span class="hljs-number">10000000000L</span>;<br>System.out.println(l);<br>System.out.println(<span class="hljs-string">&quot;--------&quot;</span>);<br><br><span class="hljs-comment">//定义float类型的变量</span><br><span class="hljs-keyword">float</span> f = <span class="hljs-number">13.14F</span>;<br>System.out.println(f);<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JAVA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 常量变量 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JAVA 数据类型</title>
      <link href="/2021/b49823c13707/"/>
      <url>/2021/b49823c13707/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><h4 id="4-1-计算机的存储单元"><a href="#4-1-计算机的存储单元" class="headerlink" title="4.1  计算机的存储单元"></a>4.1  计算机的存储单元</h4><blockquote><p>我们知道计算机是可以用来存储数据的，但是无论是内存还是硬盘，计算机存储设备的最小信息单元叫“位（bit）”，我们又称之为“比特位”，通常用小写的字母”b”表示。而计算机中最基本的存储单元叫“字节（byte）”，</p><p>通常用大写字母”B”表示，字节是由连续的8个位组成。</p><p>除了字节外还有一些常用的存储单位，其换算单位如下：</p><p>1B（字节） = 8bit</p><p>1KB = 1024B</p><p>1MB = 1024KB</p><p>1GB = 1024MB</p><p>1TB = 1024GB</p></blockquote><h4 id="4-2-数据类型"><a href="#4-2-数据类型" class="headerlink" title="4.2 数据类型"></a>4.2 数据类型</h4><blockquote><p>Java是一个强类型语言，Java中的数据必须明确数据类型。在Java中的数据类型包括基本数据类型和引用数据类型两种。</p></blockquote><h4 id="4-3-数据类型内存占用和取值范围"><a href="#4-3-数据类型内存占用和取值范围" class="headerlink" title="4.3 数据类型内存占用和取值范围"></a>4.3 数据类型内存占用和取值范围</h4><table><thead><tr><th align="left">数据类型</th><th>关键字</th><th>内存占用</th><th align="left">取值范围</th></tr></thead><tbody><tr><td align="left">整数类型</td><td>byte</td><td>1</td><td align="left">-128~127</td></tr><tr><td align="left"></td><td>short</td><td>2</td><td align="left">-32768~32767</td></tr><tr><td align="left"></td><td>int(默认)</td><td>4</td><td align="left">-2的31次方到2的31次方-1</td></tr><tr><td align="left"></td><td>long</td><td>8</td><td align="left">-2的63次方到2的63次方-1</td></tr><tr><td align="left">浮点类型</td><td>float</td><td>4</td><td align="left">负数：-3.402823E+38到-1.401298E-45                                                             正数：   1.401298E-45到3.402823E+38</td></tr><tr><td align="left"></td><td>double(默认)</td><td>8</td><td align="left">负数：-1.797693E+308到-4.9000000E-324                                              正数：4.9000000E-324   到1.797693E+308</td></tr><tr><td align="left">字符类型</td><td>char</td><td>2</td><td align="left">0-65535</td></tr><tr><td align="left">布尔类型</td><td>boolean</td><td>1</td><td align="left">true，false</td></tr></tbody></table><h4 id="4-4-说明："><a href="#4-4-说明：" class="headerlink" title="4.4 说明："></a>4.4 说明：</h4><ul><li><p>​    e+38表示是乘以10的38次方，同样，e-45表示乘以10的负45次方。</p></li><li><p>​    在java中整数默认是int类型，浮点数默认是double类型。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> JAVA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据类型 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JAVA 常量</title>
      <link href="/2021/49deee49638a/"/>
      <url>/2021/49deee49638a/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h3><h4 id="3-1-常量概述"><a href="#3-1-常量概述" class="headerlink" title="3.1 常量概述"></a>3.1 常量概述</h4><ul><li>常量 : 在程序运行过程中,其值不可发生改变的量</li></ul><h4 id="3-2-Java中的常量分类："><a href="#3-2-Java中的常量分类：" class="headerlink" title="3.2 Java中的常量分类："></a>3.2 Java中的常量分类：</h4><ul><li><p>​    <strong>字符串常量</strong>  用双引号括起来的多个字符（可以包含0个、一个或多个），例如”a”、”abc”、”中国”等</p></li><li><p>​    <strong>整数常量</strong>  整数，例如：-10、0、88等</p></li><li><p>​    <strong>小数常量</strong>  小数，例如：-5.5、1.0、88.88等</p></li><li><p>​    <strong>字符常量</strong>  用单引号括起来的一个字符，例如：’a’、’5’、’B’、’中’等</p></li><li><p>​    <strong>布尔常量</strong>  布尔值，表示真假，只有两个值true和false</p></li><li><p>​    <strong>空常量</strong>  一个特殊的值，空值，值为null</p></li><li><p>除空常量外，其他常量均可使用输出语句直接输出。</p></li></ul><h4 id="3-3-代码"><a href="#3-3-代码" class="headerlink" title="3.3 代码"></a>3.3 代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/*</span><br><span class="hljs-comment">常量：</span><br><span class="hljs-comment">在程序运行过程中，其值不可以发生改变的量。</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">常量分类：</span><br><span class="hljs-comment">字符串常量：用双引号括起来的内容。&quot;HelloWorld&quot;,&quot;黑马程序员&quot;</span><br><span class="hljs-comment">整数常量：不带小数的数字。666,-88</span><br><span class="hljs-comment">小数常量：带小数的数字。13.14,-5.21</span><br><span class="hljs-comment">字符常量：用单引号括起来的内容。&#x27;A&#x27;,&#x27;0&#x27;,&#x27;我&#x27;</span><br><span class="hljs-comment">布尔常量：布尔值，表示真假。true,false</span><br><span class="hljs-comment">空常量：一个特殊的值，空值。null</span><br><span class="hljs-comment">*/</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ConstantDemo</span> </span>&#123;<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>&#123;<br><span class="hljs-comment">//字符串常量</span><br>System.out.println(<span class="hljs-string">&quot;HelloWorld&quot;</span>);<br>System.out.println(<span class="hljs-string">&quot;黑马程序员&quot;</span>);<br>System.out.println(<span class="hljs-string">&quot;--------&quot;</span>);<br><br><br><span class="hljs-comment">//整数常量</span><br>System.out.println(<span class="hljs-number">666</span>);<br>System.out.println(-<span class="hljs-number">88</span>);<br>System.out.println(<span class="hljs-string">&quot;--------&quot;</span>);<br><br><span class="hljs-comment">//小数常量</span><br>System.out.println(<span class="hljs-number">13.14</span>);<br>System.out.println(-<span class="hljs-number">5.21</span>);<br>System.out.println(<span class="hljs-string">&quot;--------&quot;</span>);<br><br><span class="hljs-comment">//字符常量</span><br>System.out.println(<span class="hljs-string">&#x27;A&#x27;</span>);<br>System.out.println(<span class="hljs-string">&#x27;0&#x27;</span>);<br>System.out.println(<span class="hljs-string">&#x27;我&#x27;</span>);<br>System.out.println(<span class="hljs-string">&quot;--------&quot;</span>);<br><br><span class="hljs-comment">//布尔常量</span><br>System.out.println(<span class="hljs-keyword">true</span>);<br>System.out.println(<span class="hljs-keyword">false</span>);<br>System.out.println(<span class="hljs-string">&quot;--------&quot;</span>);<br><br><span class="hljs-comment">//空常量</span><br><span class="hljs-comment">//空常量是不能直接输出的</span><br><span class="hljs-comment">//System.out.println(null);</span><br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="3-4-注意事项"><a href="#3-4-注意事项" class="headerlink" title="3.4 注意事项"></a>3.4 注意事项</h4><ul><li>空常量是不能直接输出的</li></ul>]]></content>
      
      
      <categories>
          
          <category> JAVA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 常量变量 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JAVA 关键字</title>
      <link href="/2021/ccb596d37602/"/>
      <url>/2021/ccb596d37602/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="关键字"><a href="#关键字" class="headerlink" title="关键字"></a>关键字</h3><h4 id="2-1-关键字概述"><a href="#2-1-关键字概述" class="headerlink" title="2.1 关键字概述"></a>2.1 关键字概述</h4><ul><li><strong>关键字</strong>就是被Java语言赋予了<strong>特定含义的单词</strong></li></ul><h4 id="2-2-关键字特点"><a href="#2-2-关键字特点" class="headerlink" title="2.2 关键字特点"></a>2.2 关键字特点</h4><ul><li>关键字的字母<strong>全部小写</strong></li><li>常用的代码编辑器,针对关键字有特殊的颜色标记,非常直观.</li></ul><h4 id="本节课无代码"><a href="#本节课无代码" class="headerlink" title="本节课无代码"></a>本节课无代码</h4>]]></content>
      
      
      <categories>
          
          <category> JAVA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 常量变量 </tag>
            
            <tag> 数据类型 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JAVA 注释</title>
      <link href="/2021/213d12336f04/"/>
      <url>/2021/213d12336f04/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><h4 id="1-1-注释概述"><a href="#1-1-注释概述" class="headerlink" title="1.1 注释概述"></a>1.1 注释概述</h4><ul><li><p>注释是在程序指定位置添加的说明性信息</p></li><li><p>注释不参与程序运行,只起到说明作用</p></li></ul><h4 id="1-2-注释分类"><a href="#1-2-注释分类" class="headerlink" title="1.2 注释分类"></a>1.2 注释分类</h4><ul><li>单行注释:<ul><li>格式 :  <code>// 注释信息</code></li></ul></li><li>多行注释<ul><li>格式: <code>/* 注释信息*/</code></li></ul></li><li>文档注释<ul><li>格式: /** 注释信息 */</li><li>文档注释目前用不上,暂不讲解.</li></ul></li></ul><h4 id="1-3-注意事项"><a href="#1-3-注意事项" class="headerlink" title="1.3 注意事项"></a>1.3 注意事项</h4><ul><li>注意：多行注释不能嵌套使用。</li></ul><h4 id="1-4-代码"><a href="#1-4-代码" class="headerlink" title="1.4 代码"></a>1.4 代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/*</span><br><span class="hljs-comment">Java程序中最基本的组成单位是类。</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">类的定义格式：</span><br><span class="hljs-comment">public class 类名 &#123;</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">&#125;</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">这是我定义的HelloWorld类</span><br><span class="hljs-comment">*/</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">HelloWorld</span> </span>&#123;<br><span class="hljs-comment">/*</span><br><span class="hljs-comment">这是main方法</span><br><span class="hljs-comment">main方法是程序的入口方法，代码的执行是从main方法开始的</span><br><span class="hljs-comment">*/</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>&#123;<br><span class="hljs-comment">// 这是输出语句，&quot;&quot;里面的内容是可以改变的</span><br>System.out.println(<span class="hljs-string">&quot;itheima&quot;</span>);<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JAVA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 常量变量 </tag>
            
            <tag> 数据类型 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python字符串的填充和计数</title>
      <link href="/2021/6f6a7f54b4b5/"/>
      <url>/2021/6f6a7f54b4b5/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="zfill函数"><a href="#zfill函数" class="headerlink" title="zfill函数"></a>zfill函数</h2><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><p>为字符串定义长度, 如不满足,缺少的部分用0填充</p><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><p><code>newstr = string.zfill(width)</code></p><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><p><code>width</code>: 新字符串希望的宽度</p><h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><ul><li>与字符串的字符无关</li><li>如果定义长度小于当前字符串长度,则不发生变化</li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding:utf-8</span><br><br>heart = <span class="hljs-string">&#x27;love&#x27;</span><br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27; t  &#x27;</span> + heart)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;t    &#x27;</span> + heart)<br>        <span class="hljs-built_in">print</span>(heart.zfill(<span class="hljs-number">10</span>))<br>        <span class="hljs-built_in">print</span>(heart.zfill(<span class="hljs-number">9</span>))<br>        <span class="hljs-built_in">print</span>(heart.zfill(<span class="hljs-number">8</span>))<br>        <span class="hljs-built_in">print</span>(heart.zfill(<span class="hljs-number">6</span>))<br>        <span class="hljs-built_in">print</span>(heart.zfill(<span class="hljs-number">4</span>))<br><br></code></pre></td></tr></table></figure><hr><h2 id="字符串的count函数"><a href="#字符串的count函数" class="headerlink" title="字符串的count函数"></a>字符串的count函数</h2><h4 id="功能-1"><a href="#功能-1" class="headerlink" title="功能"></a>功能</h4><p>返回当前字符串中某个成员(元素)的个数</p><h4 id="用法-1"><a href="#用法-1" class="headerlink" title="用法"></a>用法</h4><p><code>inttpe = string.count(item)</code></p><h4 id="参数-1"><a href="#参数-1" class="headerlink" title="参数"></a>参数</h4><p><code>item</code>: 查询个数的元素</p><h4 id="注意事项-1"><a href="#注意事项-1" class="headerlink" title="注意事项"></a>注意事项</h4><ul><li>返回的是整形</li><li>如果查询的成员(元素)不存在,则返回0</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding:utf-8</span><br><br>info = <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">    The mission of the Python Software Foundation is to promote, </span><br><span class="hljs-string">    protect, and advance the Python programming language, </span><br><span class="hljs-string">    and to support and facilitate the growth of a diverse and </span><br><span class="hljs-string">    international community of Python programmers.</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><br>a = info.count(<span class="hljs-string">&#x27;a&#x27;</span>)<br>b = info.count(<span class="hljs-string">&#x27;b&#x27;</span>)<br>c = info.count(<span class="hljs-string">&#x27;c&#x27;</span>)<br>d = info.count(<span class="hljs-string">&#x27;d&#x27;</span>)<br>e = info.count(<span class="hljs-string">&#x27;e&#x27;</span>)<br>f = info.count(<span class="hljs-string">&#x27;f&#x27;</span>)<br><br><span class="hljs-built_in">print</span>(a, b, c, d, e, f)<br>number_list = [a, b, c, d, e, f]<br><span class="hljs-built_in">print</span>(number_list)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;在列表中最大的数值是&#x27;</span>, <span class="hljs-built_in">max</span>(number_list))<br><br>number_dict = &#123;<br>            <span class="hljs-string">&#x27;a&#x27;</span>: a,<br>            <span class="hljs-string">&#x27;b&#x27;</span>: b,<br>            <span class="hljs-string">&#x27;c&#x27;</span>: c,<br>            <span class="hljs-string">&#x27;d&#x27;</span>: d,<br>            <span class="hljs-string">&#x27;e&#x27;</span>: e,<br>            <span class="hljs-string">&#x27;f&#x27;</span>: f,<br>&#125;<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;每个成员对应的数值分别是&#x27;</span>, number_dict)<br><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python字符串的大小写(二)</title>
      <link href="/2021/78cdcf880aad/"/>
      <url>/2021/78cdcf880aad/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="字符串upper-大写方法"><a href="#字符串upper-大写方法" class="headerlink" title="字符串upper()大写方法"></a>字符串upper()大写方法</h3><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><p>将字符串全体大写</p><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><p><code>big_str = sring.upper()</code></p><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><p>函数括弧内什么都不用填写(不用传参数也没有参数)</p><h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><ul><li>只对字符串中的字母有效</li><li>已经是大写, 则无效</li><li>2$yes       2$YES</li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding:utf-8</span><br><br>info = <span class="hljs-string">&#x27;hello world! hello xiaomu&#x27;</span><br><br>big_info = info.upper()<br><br><span class="hljs-built_in">print</span>(big_info)<br><br></code></pre></td></tr></table></figure><h4 id="与上节课组合练习"><a href="#与上节课组合练习" class="headerlink" title="与上节课组合练习"></a>与上节课组合练习</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding:utf-8</span><br><br>info = <span class="hljs-string">&#x27;Hello World! Hello XiaoMu&#x27;</span><br><br>big_info = info.upper()<br>small_info = info.lower()<br><br><br><span class="hljs-built_in">print</span>(big_info)<br><span class="hljs-built_in">print</span>(small_info)<br><br></code></pre></td></tr></table></figure><hr><h3 id="字符串swapcase-字母大小写翻转方法"><a href="#字符串swapcase-字母大小写翻转方法" class="headerlink" title="字符串swapcase()字母大小写翻转方法"></a>字符串swapcase()字母大小写翻转方法</h3><h4 id="功能-1"><a href="#功能-1" class="headerlink" title="功能"></a>功能</h4><p>将字符串中的大小写翻转</p><h4 id="用法-1"><a href="#用法-1" class="headerlink" title="用法"></a>用法</h4><p><code>newstr = string.swapcase()</code></p><h4 id="参数-1"><a href="#参数-1" class="headerlink" title="参数"></a>参数</h4><p>函数括弧内什么都不用填写</p><h4 id="注意事项-1"><a href="#注意事项-1" class="headerlink" title="注意事项"></a>注意事项</h4><ul><li>只对字符串中的字母有效</li><li>number_message = ‘1@oK’    -&gt;   ‘1@Ok’</li></ul><h4 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding:utf-8</span><br><br>info_one = <span class="hljs-string">&#x27;Python Code Is Good&#x27;</span><br>info_two = <span class="hljs-string">&#x27;PYTHON DJANGO FLASK&#x27;</span><br>info_three = <span class="hljs-string">&#x27;python web so easy&#x27;</span><br><br>info_one_new = info_one.swapcase()<br>info_two_new = info_two.swapcase()<br>info_three_new = info_three.swapcase()<br><br><span class="hljs-built_in">print</span>(info_one_new)<br><span class="hljs-built_in">print</span>(info_two_new)<br><span class="hljs-built_in">print</span>(info_three_new)<br><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 字符串的大小写(一)</title>
      <link href="/2021/a2d71c23f77e/"/>
      <url>/2021/a2d71c23f77e/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="字符串capitalize用法"><a href="#字符串capitalize用法" class="headerlink" title="字符串capitalize用法"></a>字符串capitalize用法</h3><p><code>str.capitalize()</code></p><p>首字母大写 其余字母小写</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding:utf-8</span><br><br>name = <span class="hljs-string">&#x27;xiao mu&#x27;</span><br>info = <span class="hljs-string">&#x27;hello 小慕&#x27;</span><br>_info = <span class="hljs-string">&#x27;小慕 hello&#x27;</span><br>number_str = <span class="hljs-string">&#x27;1314&#x27;</span><br><br><br>new_info = info.capitalize()<br>_new_info = _info.capitalize()<br>new_number_str = number_str.capitalize()<br><br><br><span class="hljs-built_in">print</span>(name)<br><span class="hljs-built_in">print</span>(new_info)<br><span class="hljs-built_in">print</span>(_new_info)<br><span class="hljs-built_in">print</span>(new_number_str)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;abc&#x27;</span>.capitalize())<br><span class="hljs-built_in">print</span>(name.capitalize())<br><br></code></pre></td></tr></table></figure><hr><h3 id="字符串lower-amp-casefold用法"><a href="#字符串lower-amp-casefold用法" class="headerlink" title="字符串lower &amp;  casefold用法"></a>字符串lower &amp;  casefold用法</h3><p><code>str.lower()</code></p><p><code>str.casefold()</code></p><p>用法相同均为小写字符串中字母</p><p>注意:若字符串为空也不会报错</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding:utf-8</span><br><br>message_en = <span class="hljs-string">&#x27;How do you do? Xiaomu&#x27;</span><br>message_ch = <span class="hljs-string">&#x27;你好呀, XiaoMu&#x27;</span><br>message_mix = <span class="hljs-string">&#x27;你好呀, Xiaomu, 今天是星期三!&#x27;</span><br><br>message_en_lower = message_en.lower()<br>message_en_casefold = message_en.casefold()<br><br>message_ch_lower = message_ch.lower()<br>message_ch_casefold = message_ch.casefold()<br><br>message_mix_lower =message_mix.lower()<br>message_mix_casefold = message_mix.casefold()<br><br><span class="hljs-built_in">print</span>(message_en_lower, message_en_casefold)<br><span class="hljs-built_in">print</span>(message_ch_lower, message_ch_casefold)<br><span class="hljs-built_in">print</span>(message_mix_lower, message_mix_casefold)<br><br>empty = <span class="hljs-string">&#x27;&#x27;</span><br>empty_lower = empty.lower()<br>empty_casefold = empty.casefold()<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;.&#x27;</span> + empty_lower + <span class="hljs-string">&#x27;.&#x27;</span>, <span class="hljs-string">&#x27;.&#x27;</span> + empty_casefold + <span class="hljs-string">&#x27;.&#x27;</span>)<br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python字符串的应用</title>
      <link href="/2021/a3814e004f7f/"/>
      <url>/2021/a3814e004f7f/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="成员运算符-in的使用"><a href="#成员运算符-in的使用" class="headerlink" title="成员运算符 in的使用"></a>成员运算符 <code>in</code>的使用</h3><h5 id="判断数据中是否存在你想要的成员"><a href="#判断数据中是否存在你想要的成员" class="headerlink" title="判断数据中是否存在你想要的成员"></a>判断数据中是否存在你想要的成员</h5><p><code>A空格in空格B</code></p><p>判断是否a在b中</p><p>not空格in也一样</p><hr><h3 id="内置函数max"><a href="#内置函数max" class="headerlink" title="内置函数max"></a>内置函数max</h3><h5 id="返回数据中最大的成员"><a href="#返回数据中最大的成员" class="headerlink" title="返回数据中最大的成员"></a>返回数据中最大的成员</h5><p><code>max(数据)  返回成员值</code></p><p><code>print(max(&#39;今天是1月3日! &#39;))</code>                          月</p><p>中文符号   &gt;  字母  &gt; 数字   &gt;  英文符号  </p><p>中文按拼音的首字母计算</p><hr><h3 id="内置函数min"><a href="#内置函数min" class="headerlink" title="内置函数min"></a>内置函数min</h3><h5 id="返回数据中最小的成员"><a href="#返回数据中最小的成员" class="headerlink" title="返回数据中最小的成员"></a>返回数据中最小的成员</h5><p><code>min(数据)  返回成员值</code></p><p><code>print(max(&#39;今天是1月3日! &#39;))</code>                            !</p><p>中文符号   &gt;  字母  &gt; 数字   &gt;  英文符号  </p><p>中文按拼音的首字母计算</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding:utf-8</span><br><br>info = <span class="hljs-string">&#x27;python是一个非常有魅力的语言&#x27;</span><br><br>result = <span class="hljs-string">&#x27;魅力&#x27;</span> <span class="hljs-keyword">in</span> info<br><span class="hljs-built_in">print</span>(result)<br><br>result = <span class="hljs-string">&#x27;语言&#x27;</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> info<br><span class="hljs-built_in">print</span>(result)<br><br>info2 = <span class="hljs-string">&#x27;python is a good code&#x27;</span><br><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">max</span>(info2))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;.&#x27;</span>, <span class="hljs-built_in">min</span>(info2), <span class="hljs-string">&#x27;.&#x27;</span>)<br><br>info3 = <span class="hljs-string">&#x27;天气好 要多锻炼身体&#x27;</span><br>info4 = <span class="hljs-string">&#x27;多锻炼身体 身体会变得更好&#x27;</span><br><br><span class="hljs-built_in">print</span>(info3 + info4)<br><br>new_str = info3 + info4 + <span class="hljs-string">&#x27;!&#x27;</span><br><span class="hljs-built_in">print</span>(new_str)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">len</span>(new_str))<br>length = <span class="hljs-built_in">len</span>(new_str)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">type</span>(length))<br><br></code></pre></td></tr></table></figure><hr><h3 id="字符串的累加"><a href="#字符串的累加" class="headerlink" title="字符串的累加"></a>字符串的累加</h3><p>字符串不是数字不能做减法 , 乘除法</p><p>字符串的拼接 , 用  “＋”这个符号</p><p><code>a  =   &#39;123&#39;</code>                id(a)  等于107898032 </p><p><code>b = &#39;456&#39;</code></p><p><code>c  =  a  =  b</code></p><p><code>print(c)   123456</code></p><p>[若使用   a   =   a + b   </p><p>则之后id(a)       则输出为              80202416       ]</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding:utf-8</span><br><br>label = <span class="hljs-string">&#x27;欢迎来自远方的朋友&#x27;</span><br>name = <span class="hljs-string">&#x27;jone&#x27;</span><br><br>pr = label + name<br><br><span class="hljs-built_in">print</span>(pr)<br><br></code></pre></td></tr></table></figure><hr><h3 id="input-语法"><a href="#input-语法" class="headerlink" title="input 语法"></a>input 语法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding:utf-8</span><br><br>name = <span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;你的名字是:&#x27;</span>)<br>birthday = <span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;你的生日是:&#x27;</span>)<br>like_fruit = <span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;你喜欢的水果是:&#x27;</span>)<br>like_sport = <span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;你喜欢的运动是:&#x27;</span>)<br>like_animal = <span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;你喜欢的动物是:&#x27;</span>)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;你的名字叫做: %s,出生于: %s,你喜欢的水果是: %s,最喜欢的运动为: %s,以及最喜欢的小动物是: %s&#x27;</span> %<br>      (name, birthday, like_fruit, like_sport, like_animal))<br><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python数据类型</title>
      <link href="/2021/c6b9389e1528/"/>
      <url>/2021/c6b9389e1528/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="整形"><a href="#整形" class="headerlink" title="整形"></a>整形</h2><h4 id="int-定义整形-又是定义整形的-内置函数"><a href="#int-定义整形-又是定义整形的-内置函数" class="headerlink" title="int 定义整形 ,又是定义整形的 内置函数"></a><code>int</code> 定义整形 ,又是定义整形的 内置函数</h4><h4 id="定义一个整型-并不一定要使用int"><a href="#定义一个整型-并不一定要使用int" class="headerlink" title="定义一个整型,并不一定要使用int"></a>定义一个整型,并不一定要使用<code>int</code></h4><p><code>cout_100_01 = int(100)</code></p><p><code>cout_100_02 = 100</code></p><p>不要使用long</p><hr><h2 id="浮点型"><a href="#浮点型" class="headerlink" title="浮点型"></a>浮点型</h2><h4 id="凡是带有小数点的类型-都可以认为是浮点型"><a href="#凡是带有小数点的类型-都可以认为是浮点型" class="headerlink" title="凡是带有小数点的类型,都可以认为是浮点型"></a>凡是带有小数点的类型,都可以认为是浮点型</h4><p><code>pi_01 = float(3.14)</code></p><p><code>pi_02 =  3.14</code></p><p>定义一个浮点型,并不一定要使用<code>float</code></p><hr><h2 id="内置函数-type"><a href="#内置函数-type" class="headerlink" title="内置函数 type"></a>内置函数 <code>type</code></h2><hr><h2 id="字符串-类型"><a href="#字符串-类型" class="headerlink" title="字符串 类型"></a>字符串 类型</h2><h5 id="什么是字符串"><a href="#什么是字符串" class="headerlink" title="什么是字符串?"></a>什么是字符串?</h5><h5 id="用-‘-‘-或者-“”-包裹的信息-就是-字符串"><a href="#用-‘-‘-或者-“”-包裹的信息-就是-字符串" class="headerlink" title="用 ‘  ‘ 或者 “” 包裹的信息 就是 字符串"></a>用 ‘  ‘ 或者 “” 包裹的信息 就是 字符串</h5><h5 id="字符串中可以包括任意字符且没有先后顺序"><a href="#字符串中可以包括任意字符且没有先后顺序" class="headerlink" title="字符串中可以包括任意字符且没有先后顺序"></a>字符串中可以包括任意字符且没有先后顺序</h5><hr><h2 id="字符串定义方法"><a href="#字符串定义方法" class="headerlink" title="字符串定义方法"></a>字符串定义方法</h2><h3 id="使用str定义"><a href="#使用str定义" class="headerlink" title="使用str定义"></a>使用<code>str</code>定义</h3><h4 id="safe-str-39-健康的体温是36-5左右-39"><a href="#safe-str-39-健康的体温是36-5左右-39" class="headerlink" title="safe = str(&#39;健康的体温是36.5左右&#39;)"></a><code>safe = str(&#39;健康的体温是36.5左右&#39;)</code></h4><h3 id="字符串不可改变"><a href="#字符串不可改变" class="headerlink" title="字符串不可改变!!!"></a>字符串不可改变!!!</h3><h5 id="name-39-dewei-39"><a href="#name-39-dewei-39" class="headerlink" title="name = &#39;dewei&#39;"></a><code>name = &#39;dewei&#39;</code></h5><h3 id="内置函数-id"><a href="#内置函数-id" class="headerlink" title="内置函数 id"></a>内置函数 <code>id</code></h3><p>返回变量的内存地址</p><p><code>数值地址 = in(变量)</code></p><h3 id="内置函数len"><a href="#内置函数len" class="headerlink" title="内置函数len"></a>内置函数<code>len</code></h3><ul><li><p>返回 字符串的长度</p></li><li><p>无法返回数字类型的长度,因为数字类型没有长度</p></li><li><p><code>返回值 = len(字符串)</code></p><p><code>lenth = len(&#39;python是一门很好的语言&#39;)</code></p><p><code>print(length)14</code></p></li><li><p>count = len(3.14)直接报错!!!!!!</p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding:utf-8</span><br><br>title = <span class="hljs-string">&#x27;小慕学校的春游&#x27;</span><br><br>class_count = <span class="hljs-number">51</span><br>boys = <span class="hljs-number">28</span><br>girls = <span class="hljs-number">23</span><br><br>every_body_pay = <span class="hljs-number">35.5</span><br><br>start_time = <span class="hljs-number">8.00</span><br>bus_count = <span class="hljs-number">2</span><br>site_every_bus = <span class="hljs-number">30</span><br><br>come_part_time = <span class="hljs-number">10.33</span><br><br>lunch_time = <span class="hljs-number">12.0</span><br>lunch_pay = <span class="hljs-number">25.5</span><br><br>leave_park_time = <span class="hljs-number">3.05</span><br><br>bus_pay = <span class="hljs-number">5</span><br><br>come_back_school_time = <span class="hljs-number">5.00</span><br><br>back_pay = <span class="hljs-number">5</span><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    <span class="hljs-built_in">print</span>(title)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;小慕的班级有:&#x27;</span>, class_count)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;男生有:&#x27;</span>, boys)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;女生有:&#x27;</span>, girls)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;每人支付&#x27;</span>, every_body_pay, <span class="hljs-string">&#x27;元&#x27;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;出发的时间是早上&#x27;</span>, start_time, <span class="hljs-string">&#x27;点&#x27;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;出行需要&#x27;</span>, bus_count, <span class="hljs-string">&#x27; 辆公交大巴&#x27;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;我们到达公园的时间是:&#x27;</span>, come_part_time)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;吃午饭的时间是:&#x27;</span>, lunch_time)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;每人支付伙食费是:&#x27;</span>, lunch_pay)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;离开公园的时间是:&#x27;</span>, leave_park_time)<br><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;公交大巴来回的费用是每人&#x27;</span>, bus_pay)<br><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;下午&#x27;</span>, come_back_school_time, <span class="hljs-string">&#x27;到达学校&#x27;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;这一天小慕同学花费了&#x27;</span>, <span class="hljs-number">30.5</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;最后退回&#x27;</span>, back_pay, <span class="hljs-string">&#x27;元&#x27;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-built_in">type</span>(come_back_school_time))<br>    <span class="hljs-built_in">print</span>(<span class="hljs-built_in">type</span>(every_body_pay))<br>    <span class="hljs-built_in">print</span>(<span class="hljs-built_in">type</span>(site_every_bus))<br><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;数字编写测试&#x27;</span>)<br><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据类型 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
